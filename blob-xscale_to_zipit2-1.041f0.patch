Index: build_tree/bootLoader/INSTALL
diff -u /dev/null build_tree/bootLoader/INSTALL:1.1.1.2
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/INSTALL	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,229 @@
+Copyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002 Free Software
+Foundation, Inc.
+
+   This file is free documentation; the Free Software Foundation gives
+unlimited permission to copy, distribute and modify it.
+
+Basic Installation
+==================
+
+   These are generic installation instructions.
+
+   The `configure' shell script attempts to guess correct values for
+various system-dependent variables used during compilation.  It uses
+those values to create a `Makefile' in each directory of the package.
+It may also create one or more `.h' files containing system-dependent
+definitions.  Finally, it creates a shell script `config.status' that
+you can run in the future to recreate the current configuration, and a
+file `config.log' containing compiler output (useful mainly for
+debugging `configure').
+
+   It can also use an optional file (typically called `config.cache'
+and enabled with `--cache-file=config.cache' or simply `-C') that saves
+the results of its tests to speed up reconfiguring.  (Caching is
+disabled by default to prevent problems with accidental use of stale
+cache files.)
+
+   If you need to do unusual things to compile the package, please try
+to figure out how `configure' could check whether to do them, and mail
+diffs or instructions to the address given in the `README' so they can
+be considered for the next release.  If you are using the cache, and at
+some point `config.cache' contains results you don't want to keep, you
+may remove or edit it.
+
+   The file `configure.ac' (or `configure.in') is used to create
+`configure' by a program called `autoconf'.  You only need
+`configure.ac' if you want to change it or regenerate `configure' using
+a newer version of `autoconf'.
+
+The simplest way to compile this package is:
+
+  1. `cd' to the directory containing the package's source code and type
+     `./configure' to configure the package for your system.  If you're
+     using `csh' on an old version of System V, you might need to type
+     `sh ./configure' instead to prevent `csh' from trying to execute
+     `configure' itself.
+
+     Running `configure' takes awhile.  While running, it prints some
+     messages telling which features it is checking for.
+
+  2. Type `make' to compile the package.
+
+  3. Optionally, type `make check' to run any self-tests that come with
+     the package.
+
+  4. Type `make install' to install the programs and any data files and
+     documentation.
+
+  5. You can remove the program binaries and object files from the
+     source code directory by typing `make clean'.  To also remove the
+     files that `configure' created (so you can compile the package for
+     a different kind of computer), type `make distclean'.  There is
+     also a `make maintainer-clean' target, but that is intended mainly
+     for the package's developers.  If you use it, you may have to get
+     all sorts of other programs in order to regenerate files that came
+     with the distribution.
+
+Compilers and Options
+=====================
+
+   Some systems require unusual options for compilation or linking that
+the `configure' script does not know about.  Run `./configure --help'
+for details on some of the pertinent environment variables.
+
+   You can give `configure' initial values for configuration parameters
+by setting variables in the command line or in the environment.  Here
+is an example:
+
+     ./configure CC=c89 CFLAGS=-O2 LIBS=-lposix
+
+   *Note Defining Variables::, for more details.
+
+Compiling For Multiple Architectures
+====================================
+
+   You can compile the package for more than one kind of computer at the
+same time, by placing the object files for each architecture in their
+own directory.  To do this, you must use a version of `make' that
+supports the `VPATH' variable, such as GNU `make'.  `cd' to the
+directory where you want the object files and executables to go and run
+the `configure' script.  `configure' automatically checks for the
+source code in the directory that `configure' is in and in `..'.
+
+   If you have to use a `make' that does not support the `VPATH'
+variable, you have to compile the package for one architecture at a
+time in the source code directory.  After you have installed the
+package for one architecture, use `make distclean' before reconfiguring
+for another architecture.
+
+Installation Names
+==================
+
+   By default, `make install' will install the package's files in
+`/usr/local/bin', `/usr/local/man', etc.  You can specify an
+installation prefix other than `/usr/local' by giving `configure' the
+option `--prefix=PATH'.
+
+   You can specify separate installation prefixes for
+architecture-specific files and architecture-independent files.  If you
+give `configure' the option `--exec-prefix=PATH', the package will use
+PATH as the prefix for installing programs and libraries.
+Documentation and other data files will still use the regular prefix.
+
+   In addition, if you use an unusual directory layout you can give
+options like `--bindir=PATH' to specify different values for particular
+kinds of files.  Run `configure --help' for a list of the directories
+you can set and what kinds of files go in them.
+
+   If the package supports it, you can cause programs to be installed
+with an extra prefix or suffix on their names by giving `configure' the
+option `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.
+
+Optional Features
+=================
+
+   Some packages pay attention to `--enable-FEATURE' options to
+`configure', where FEATURE indicates an optional part of the package.
+They may also pay attention to `--with-PACKAGE' options, where PACKAGE
+is something like `gnu-as' or `x' (for the X Window System).  The
+`README' should mention any `--enable-' and `--with-' options that the
+package recognizes.
+
+   For packages that use the X Window System, `configure' can usually
+find the X include and library files automatically, but if it doesn't,
+you can use the `configure' options `--x-includes=DIR' and
+`--x-libraries=DIR' to specify their locations.
+
+Specifying the System Type
+==========================
+
+   There may be some features `configure' cannot figure out
+automatically, but needs to determine by the type of machine the package
+will run on.  Usually, assuming the package is built to be run on the
+_same_ architectures, `configure' can figure that out, but if it prints
+a message saying it cannot guess the machine type, give it the
+`--build=TYPE' option.  TYPE can either be a short name for the system
+type, such as `sun4', or a canonical name which has the form:
+
+     CPU-COMPANY-SYSTEM
+
+where SYSTEM can have one of these forms:
+
+     OS KERNEL-OS
+
+   See the file `config.sub' for the possible values of each field.  If
+`config.sub' isn't included in this package, then this package doesn't
+need to know the machine type.
+
+   If you are _building_ compiler tools for cross-compiling, you should
+use the `--target=TYPE' option to select the type of system they will
+produce code for.
+
+   If you want to _use_ a cross compiler, that generates code for a
+platform different from the build platform, you should specify the
+"host" platform (i.e., that on which the generated programs will
+eventually be run) with `--host=TYPE'.
+
+Sharing Defaults
+================
+
+   If you want to set default values for `configure' scripts to share,
+you can create a site shell script called `config.site' that gives
+default values for variables like `CC', `cache_file', and `prefix'.
+`configure' looks for `PREFIX/share/config.site' if it exists, then
+`PREFIX/etc/config.site' if it exists.  Or, you can set the
+`CONFIG_SITE' environment variable to the location of the site script.
+A warning: not all `configure' scripts look for a site script.
+
+Defining Variables
+==================
+
+   Variables not defined in a site shell script can be set in the
+environment passed to `configure'.  However, some packages may run
+configure again during the build, and the customized values of these
+variables may be lost.  In order to avoid this problem, you should set
+them in the `configure' command line, using `VAR=value'.  For example:
+
+     ./configure CC=/usr/local2/bin/gcc
+
+will cause the specified gcc to be used as the C compiler (unless it is
+overridden in the site shell script).
+
+`configure' Invocation
+======================
+
+   `configure' recognizes the following options to control how it
+operates.
+
+`--help'
+`-h'
+     Print a summary of the options to `configure', and exit.
+
+`--version'
+`-V'
+     Print the version of Autoconf used to generate the `configure'
+     script, and exit.
+
+`--cache-file=FILE'
+     Enable the cache: use and save the results of the tests in FILE,
+     traditionally `config.cache'.  FILE defaults to `/dev/null' to
+     disable caching.
+
+`--config-cache'
+`-C'
+     Alias for `--cache-file=config.cache'.
+
+`--quiet'
+`--silent'
+`-q'
+     Do not print messages saying which checks are being made.  To
+     suppress all normal output, redirect it to `/dev/null' (any error
+     messages will still be shown).
+
+`--srcdir=DIR'
+     Look for the package's source code in directory DIR.  Usually
+     `configure' can determine that directory automatically.
+
+`configure' also accepts some other, not widely useful, options.  Run
+`configure --help' for more details.
+
Index: build_tree/bootLoader/Makefile.in
diff -u /dev/null build_tree/bootLoader/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,594 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+###########################################################################
+###########################################################################
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = .
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = .
+DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in $(top_srcdir)/configure AUTHORS COPYING \
+	ChangeLog INSTALL NEWS
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
+ configure.lineno configure.status.lineno
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+distdir = $(PACKAGE)-$(VERSION)
+top_distdir = $(distdir)
+am__remove_distdir = \
+  { test ! -d $(distdir) \
+    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
+         && rm -fr $(distdir); }; }
+DIST_ARCHIVES = $(distdir).tar.gz
+GZIP_ENV = --best
+distuninstallcheck_listfiles = find . -type f -print
+distcleancheck_listfiles = find . -type f -print
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+SUBDIRS = \
+	doc \
+	tools \
+	utils \
+	include \
+	src
+
+EXTRA_DIST = \
+	README \
+	RELEASE-NOTES \
+	acconfig.h
+
+CLEANFILES = *~
+all: all-recursive
+
+.SUFFIXES:
+am--refresh:
+	@:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
+	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    echo ' $(SHELL) ./config.status'; \
+	    $(SHELL) ./config.status;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	$(SHELL) ./config.status --recheck
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(srcdir) && $(AUTOCONF)
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
+uninstall-info-am:
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if (etags --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	else \
+	  include_option=--include; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -f $$subdir/TAGS && \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	$(am__remove_distdir)
+	mkdir $(distdir)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || mkdir "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="../$(top_distdir)" \
+	        distdir="../$(distdir)/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
+	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
+	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
+	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
+	|| chmod -R a+r $(distdir)
+dist-gzip: distdir
+	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	$(am__remove_distdir)
+
+dist-bzip2: distdir
+	$(AMTAR) chof - $(distdir) | bzip2 -9 -c >$(distdir).tar.bz2
+	$(am__remove_distdir)
+
+dist-tarZ: distdir
+	$(AMTAR) chof - $(distdir) | compress -c >$(distdir).tar.Z
+	$(am__remove_distdir)
+
+dist-shar: distdir
+	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
+	$(am__remove_distdir)
+
+dist-zip: distdir
+	-rm -f $(distdir).zip
+	zip -rq $(distdir).zip $(distdir)
+	$(am__remove_distdir)
+
+dist dist-all: distdir
+	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	$(am__remove_distdir)
+
+# This target untars the dist file and tries a VPATH configuration.  Then
+# it guarantees that the distribution is self-contained by making another
+# tarfile.
+distcheck: dist
+	case '$(DIST_ARCHIVES)' in \
+	*.tar.gz*) \
+	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf - ;;\
+	*.tar.bz2*) \
+	  bunzip2 -c $(distdir).tar.bz2 | $(AMTAR) xf - ;;\
+	*.tar.Z*) \
+	  uncompress -c $(distdir).tar.Z | $(AMTAR) xf - ;;\
+	*.shar.gz*) \
+	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | unshar ;;\
+	*.zip*) \
+	  unzip $(distdir).zip ;;\
+	esac
+	chmod -R a-w $(distdir); chmod a+w $(distdir)
+	mkdir $(distdir)/_build
+	mkdir $(distdir)/_inst
+	chmod a-w $(distdir)
+	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
+	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
+	  && cd $(distdir)/_build \
+	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
+	    $(DISTCHECK_CONFIGURE_FLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) \
+	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
+	  && $(MAKE) $(AM_MAKEFLAGS) check \
+	  && $(MAKE) $(AM_MAKEFLAGS) install \
+	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
+	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
+	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
+	        distuninstallcheck \
+	  && chmod -R a-w "$$dc_install_base" \
+	  && ({ \
+	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
+	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
+	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
+	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
+	  && rm -rf "$$dc_destdir" \
+	  && $(MAKE) $(AM_MAKEFLAGS) dist \
+	  && rm -rf $(DIST_ARCHIVES) \
+	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
+	$(am__remove_distdir)
+	@(echo "$(distdir) archives ready for distribution: "; \
+	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
+	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
+distuninstallcheck:
+	@cd $(distuninstallcheck_dir) \
+	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
+	   || { echo "ERROR: files left after uninstall:" ; \
+	        if test -n "$(DESTDIR)"; then \
+	          echo "  (check DESTDIR support)"; \
+	        fi ; \
+	        $(distuninstallcheck_listfiles) ; \
+	        exit 1; } >&2
+distcleancheck: distclean
+	@if test '$(srcdir)' = . ; then \
+	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
+	  exit 1 ; \
+	fi
+	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
+	  || { echo "ERROR: files left in build directory after distclean:" ; \
+	       $(distcleancheck_listfiles) ; \
+	       exit 1; } >&2
+check-am: all-am
+check: check-recursive
+all-am: Makefile
+installdirs: installdirs-recursive
+installdirs-am:
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
+	-rm -rf $(top_srcdir)/autom4te.cache
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am am--refresh check \
+	check-am clean clean-generic clean-recursive ctags \
+	ctags-recursive dist dist-all dist-bzip2 dist-gzip dist-shar \
+	dist-tarZ dist-zip distcheck distclean distclean-generic \
+	distclean-recursive distclean-tags distcleancheck distdir \
+	distuninstallcheck dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
+	uninstall uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/configure
diff -u /dev/null build_tree/bootLoader/configure:1.2
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/configure	Mon Nov 12 16:14:46 2007
@@ -0,0 +1,6043 @@
+#! /bin/sh
+# From configure.in Id: configure.in,v 1.74 2003/09/04 18:10:39 russd Exp .
+# Guess values for system-dependent variables and create Makefiles.
+# Generated by GNU Autoconf 2.59.
+#
+# Copyright (C) 2003 Free Software Foundation, Inc.
+# This configure script is free software; the Free Software Foundation
+# gives unlimited permission to copy, distribute and modify it.
+## --------------------- ##
+## M4sh Initialization.  ##
+## --------------------- ##
+
+# Be Bourne compatible
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+  set -o posix
+fi
+DUALCASE=1; export DUALCASE # for MKS sh
+
+# Support unset when possible.
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  as_unset=unset
+else
+  as_unset=false
+fi
+
+
+# Work around bugs in pre-3.0 UWIN ksh.
+$as_unset ENV MAIL MAILPATH
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+for as_var in \
+  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
+  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
+  LC_TELEPHONE LC_TIME
+do
+  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
+    eval $as_var=C; export $as_var
+  else
+    $as_unset $as_var
+  fi
+done
+
+# Required to use basename.
+if expr a : '\(a\)' >/dev/null 2>&1; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+
+# Name of the executable.
+as_me=`$as_basename "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)$' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
+  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\/\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+
+
+# PATH needs CR, and LINENO needs CR and PATH.
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+
+  as_lineno_1=$LINENO
+  as_lineno_2=$LINENO
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  test "x$as_lineno_1" != "x$as_lineno_2" &&
+  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
+  # Find who we are.  Look in the path if we contain no path at all
+  # relative or not.
+  case $0 in
+    *[\\/]* ) as_myself=$0 ;;
+    *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+done
+
+       ;;
+  esac
+  # We did not find ourselves, most probably we were run as `sh COMMAND'
+  # in which case we are not to be found in the path.
+  if test "x$as_myself" = x; then
+    as_myself=$0
+  fi
+  if test ! -f "$as_myself"; then
+    { echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2
+   { (exit 1); exit 1; }; }
+  fi
+  case $CONFIG_SHELL in
+  '')
+    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for as_base in sh bash ksh sh5; do
+	 case $as_dir in
+	 /*)
+	   if ("$as_dir/$as_base" -c '
+  as_lineno_1=$LINENO
+  as_lineno_2=$LINENO
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  test "x$as_lineno_1" != "x$as_lineno_2" &&
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
+	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
+	     CONFIG_SHELL=$as_dir/$as_base
+	     export CONFIG_SHELL
+	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
+	   fi;;
+	 esac
+       done
+done
+;;
+  esac
+
+  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
+  # uniformly replaced by the line number.  The first 'sed' inserts a
+  # line-number line before each line; the second 'sed' does the real
+  # work.  The second script uses 'N' to pair each line-number line
+  # with the numbered line, and appends trailing '-' during
+  # substitution so that $LINENO is not a special case at line end.
+  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
+  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
+  sed '=' <$as_myself |
+    sed '
+      N
+      s,$,-,
+      : loop
+      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
+      t loop
+      s,-$,,
+      s,^['$as_cr_digits']*\n,,
+    ' >$as_me.lineno &&
+  chmod +x $as_me.lineno ||
+    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
+   { (exit 1); exit 1; }; }
+
+  # Don't try to exec as it changes $[0], causing all sort of problems
+  # (the dirname of $[0] is not the place where we might find the
+  # original and so on.  Autoconf is especially sensible to this).
+  . ./$as_me.lineno
+  # Exit status is that of the last command.
+  exit
+}
+
+
+case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
+  *c*,-n*) ECHO_N= ECHO_C='
+' ECHO_T='	' ;;
+  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
+  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
+esac
+
+if expr a : '\(a\)' >/dev/null 2>&1; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+rm -f conf$$ conf$$.exe conf$$.file
+echo >conf$$.file
+if ln -s conf$$.file conf$$ 2>/dev/null; then
+  # We could just check for DJGPP; but this test a) works b) is more generic
+  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
+  if test -f conf$$.exe; then
+    # Don't use ln at all; we don't have any links
+    as_ln_s='cp -p'
+  else
+    as_ln_s='ln -s'
+  fi
+elif ln conf$$.file conf$$ 2>/dev/null; then
+  as_ln_s=ln
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.file
+
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p=:
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+as_executable_p="test -f"
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.
+as_nl='
+'
+IFS=" 	$as_nl"
+
+# CDPATH.
+$as_unset CDPATH
+
+
+# Name of the host.
+# hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
+# so uname gets run too.
+ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`
+
+exec 6>&1
+
+#
+# Initializations.
+#
+ac_default_prefix=/usr/local
+ac_config_libobj_dir=.
+cross_compiling=no
+subdirs=
+MFLAGS=
+MAKEFLAGS=
+SHELL=${CONFIG_SHELL-/bin/sh}
+
+# Maximum number of lines to put in a shell here document.
+# This variable seems obsolete.  It should probably be removed, and
+# only ac_max_sed_lines should be used.
+: ${ac_max_here_lines=38}
+
+# Identity of this package.
+PACKAGE_NAME=
+PACKAGE_TARNAME=
+PACKAGE_VERSION=
+PACKAGE_STRING=
+PACKAGE_BUGREPORT=
+
+ac_unique_file="src/blob/start.S"
+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO AMTAR install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT build build_cpu build_vendor build_os host host_cpu host_vendor host_os CC OBJCOPY RANLIB AR LD CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE ac_ct_RANLIB LN_S CCAS CCASFLAGS BLOB_FLASH_OBJS BLOB_PLATFORM_OBJS DIAG_PLATFORM_OBJS BLOB_STARTCODE_OBJS BLOB_MEMSETUP_OBJS BLOB_REBOOT_DRIVER_OBJS BLOB_SERIAL_DRIVER_OBJS BLOB_TIMER_DRIVER_OBJS BLOB_LED_STARTCODE BLOB_LED_DRIVER_OBJS BLOB_NETWORK_DRIVER_OBJS BLOB_TARGET LINUX_INCLUDE BLOB_CLOCK_OBJS BLOB_CHKMEM_OBJS DIAG_LCD_OBJS BLOB_XMODEM_OBJS BLOB_USBSERIAL_OBJS BLOB_UUCODEC_OBJS BLOB_JFFS2_OBJS BLOB_CRAMFS_OBJS BLOB_ZIMAGE_OBJS BLOB_NETWORK_OBJS BLOB_GIO_OBJS BLOB_PCMCIA_OBJS BLOB_IDE_OBJS BLOB_CF_OBJS ALL_COMMANDS BLOB_COMMANDS OCFLAGS LIBOBJS LTLIBOBJS BLOB_SPI_OBJS BLOB_LCD_OBJS'
+ac_subst_files=''
+
+# Initialize some variables set by options.
+ac_init_help=
+ac_init_version=false
+# The variables have the same names as the options, with
+# dashes changed to underlines.
+cache_file=/dev/null
+exec_prefix=NONE
+no_create=
+no_recursion=
+prefix=NONE
+program_prefix=NONE
+program_suffix=NONE
+program_transform_name=s,x,x,
+silent=
+site=
+srcdir=
+verbose=
+x_includes=NONE
+x_libraries=NONE
+
+# Installation directory options.
+# These are left unexpanded so users can "make install exec_prefix=/foo"
+# and all the variables that are supposed to be based on exec_prefix
+# by default will actually change.
+# Use braces instead of parens because sh, perl, etc. also accept them.
+bindir='${exec_prefix}/bin'
+sbindir='${exec_prefix}/sbin'
+libexecdir='${exec_prefix}/libexec'
+datadir='${prefix}/share'
+sysconfdir='${prefix}/etc'
+sharedstatedir='${prefix}/com'
+localstatedir='${prefix}/var'
+libdir='${exec_prefix}/lib'
+includedir='${prefix}/include'
+oldincludedir='/usr/include'
+infodir='${prefix}/info'
+mandir='${prefix}/man'
+
+ac_prev=
+for ac_option
+do
+  # If the previous option needs an argument, assign it.
+  if test -n "$ac_prev"; then
+    eval "$ac_prev=\$ac_option"
+    ac_prev=
+    continue
+  fi
+
+  ac_optarg=`expr "x$ac_option" : 'x[^=]*=\(.*\)'`
+
+  # Accept the important Cygnus configure options, so we can diagnose typos.
+
+  case $ac_option in
+
+  -bindir | --bindir | --bindi | --bind | --bin | --bi)
+    ac_prev=bindir ;;
+  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
+    bindir=$ac_optarg ;;
+
+  -build | --build | --buil | --bui | --bu)
+    ac_prev=build_alias ;;
+  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
+    build_alias=$ac_optarg ;;
+
+  -cache-file | --cache-file | --cache-fil | --cache-fi \
+  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
+    ac_prev=cache_file ;;
+  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
+  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
+    cache_file=$ac_optarg ;;
+
+  --config-cache | -C)
+    cache_file=config.cache ;;
+
+  -datadir | --datadir | --datadi | --datad | --data | --dat | --da)
+    ac_prev=datadir ;;
+  -datadir=* | --datadir=* | --datadi=* | --datad=* | --data=* | --dat=* \
+  | --da=*)
+    datadir=$ac_optarg ;;
+
+  -disable-* | --disable-*)
+    ac_feature=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+      { echo "$as_me: error: invalid feature name: $ac_feature" >&2
+   { (exit 1); exit 1; }; }
+    ac_feature=`echo $ac_feature | sed 's/-/_/g'`
+    eval "enable_$ac_feature=no" ;;
+
+  -enable-* | --enable-*)
+    ac_feature=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+      { echo "$as_me: error: invalid feature name: $ac_feature" >&2
+   { (exit 1); exit 1; }; }
+    ac_feature=`echo $ac_feature | sed 's/-/_/g'`
+    case $ac_option in
+      *=*) ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`;;
+      *) ac_optarg=yes ;;
+    esac
+    eval "enable_$ac_feature='$ac_optarg'" ;;
+
+  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
+  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
+  | --exec | --exe | --ex)
+    ac_prev=exec_prefix ;;
+  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
+  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
+  | --exec=* | --exe=* | --ex=*)
+    exec_prefix=$ac_optarg ;;
+
+  -gas | --gas | --ga | --g)
+    # Obsolete; use --with-gas.
+    with_gas=yes ;;
+
+  -help | --help | --hel | --he | -h)
+    ac_init_help=long ;;
+  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
+    ac_init_help=recursive ;;
+  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
+    ac_init_help=short ;;
+
+  -host | --host | --hos | --ho)
+    ac_prev=host_alias ;;
+  -host=* | --host=* | --hos=* | --ho=*)
+    host_alias=$ac_optarg ;;
+
+  -includedir | --includedir | --includedi | --included | --include \
+  | --includ | --inclu | --incl | --inc)
+    ac_prev=includedir ;;
+  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
+  | --includ=* | --inclu=* | --incl=* | --inc=*)
+    includedir=$ac_optarg ;;
+
+  -infodir | --infodir | --infodi | --infod | --info | --inf)
+    ac_prev=infodir ;;
+  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
+    infodir=$ac_optarg ;;
+
+  -libdir | --libdir | --libdi | --libd)
+    ac_prev=libdir ;;
+  -libdir=* | --libdir=* | --libdi=* | --libd=*)
+    libdir=$ac_optarg ;;
+
+  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
+  | --libexe | --libex | --libe)
+    ac_prev=libexecdir ;;
+  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
+  | --libexe=* | --libex=* | --libe=*)
+    libexecdir=$ac_optarg ;;
+
+  -localstatedir | --localstatedir | --localstatedi | --localstated \
+  | --localstate | --localstat | --localsta | --localst \
+  | --locals | --local | --loca | --loc | --lo)
+    ac_prev=localstatedir ;;
+  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
+  | --localstate=* | --localstat=* | --localsta=* | --localst=* \
+  | --locals=* | --local=* | --loca=* | --loc=* | --lo=*)
+    localstatedir=$ac_optarg ;;
+
+  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
+    ac_prev=mandir ;;
+  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
+    mandir=$ac_optarg ;;
+
+  -nfp | --nfp | --nf)
+    # Obsolete; use --without-fp.
+    with_fp=no ;;
+
+  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
+  | --no-cr | --no-c | -n)
+    no_create=yes ;;
+
+  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
+  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
+    no_recursion=yes ;;
+
+  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
+  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
+  | --oldin | --oldi | --old | --ol | --o)
+    ac_prev=oldincludedir ;;
+  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
+  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
+  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
+    oldincludedir=$ac_optarg ;;
+
+  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
+    ac_prev=prefix ;;
+  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
+    prefix=$ac_optarg ;;
+
+  -program-prefix | --program-prefix | --program-prefi | --program-pref \
+  | --program-pre | --program-pr | --program-p)
+    ac_prev=program_prefix ;;
+  -program-prefix=* | --program-prefix=* | --program-prefi=* \
+  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
+    program_prefix=$ac_optarg ;;
+
+  -program-suffix | --program-suffix | --program-suffi | --program-suff \
+  | --program-suf | --program-su | --program-s)
+    ac_prev=program_suffix ;;
+  -program-suffix=* | --program-suffix=* | --program-suffi=* \
+  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
+    program_suffix=$ac_optarg ;;
+
+  -program-transform-name | --program-transform-name \
+  | --program-transform-nam | --program-transform-na \
+  | --program-transform-n | --program-transform- \
+  | --program-transform | --program-transfor \
+  | --program-transfo | --program-transf \
+  | --program-trans | --program-tran \
+  | --progr-tra | --program-tr | --program-t)
+    ac_prev=program_transform_name ;;
+  -program-transform-name=* | --program-transform-name=* \
+  | --program-transform-nam=* | --program-transform-na=* \
+  | --program-transform-n=* | --program-transform-=* \
+  | --program-transform=* | --program-transfor=* \
+  | --program-transfo=* | --program-transf=* \
+  | --program-trans=* | --program-tran=* \
+  | --progr-tra=* | --program-tr=* | --program-t=*)
+    program_transform_name=$ac_optarg ;;
+
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil)
+    silent=yes ;;
+
+  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
+    ac_prev=sbindir ;;
+  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
+  | --sbi=* | --sb=*)
+    sbindir=$ac_optarg ;;
+
+  -sharedstatedir | --sharedstatedir | --sharedstatedi \
+  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
+  | --sharedst | --shareds | --shared | --share | --shar \
+  | --sha | --sh)
+    ac_prev=sharedstatedir ;;
+  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
+  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
+  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
+  | --sha=* | --sh=*)
+    sharedstatedir=$ac_optarg ;;
+
+  -site | --site | --sit)
+    ac_prev=site ;;
+  -site=* | --site=* | --sit=*)
+    site=$ac_optarg ;;
+
+  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
+    ac_prev=srcdir ;;
+  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
+    srcdir=$ac_optarg ;;
+
+  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
+  | --syscon | --sysco | --sysc | --sys | --sy)
+    ac_prev=sysconfdir ;;
+  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
+  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
+    sysconfdir=$ac_optarg ;;
+
+  -target | --target | --targe | --targ | --tar | --ta | --t)
+    ac_prev=target_alias ;;
+  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
+    target_alias=$ac_optarg ;;
+
+  -v | -verbose | --verbose | --verbos | --verbo | --verb)
+    verbose=yes ;;
+
+  -version | --version | --versio | --versi | --vers | -V)
+    ac_init_version=: ;;
+
+  -with-* | --with-*)
+    ac_package=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+      { echo "$as_me: error: invalid package name: $ac_package" >&2
+   { (exit 1); exit 1; }; }
+    ac_package=`echo $ac_package| sed 's/-/_/g'`
+    case $ac_option in
+      *=*) ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`;;
+      *) ac_optarg=yes ;;
+    esac
+    eval "with_$ac_package='$ac_optarg'" ;;
+
+  -without-* | --without-*)
+    ac_package=`expr "x$ac_option" : 'x-*without-\(.*\)'`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
+      { echo "$as_me: error: invalid package name: $ac_package" >&2
+   { (exit 1); exit 1; }; }
+    ac_package=`echo $ac_package | sed 's/-/_/g'`
+    eval "with_$ac_package=no" ;;
+
+  --x)
+    # Obsolete; use --with-x.
+    with_x=yes ;;
+
+  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
+  | --x-incl | --x-inc | --x-in | --x-i)
+    ac_prev=x_includes ;;
+  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
+  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
+    x_includes=$ac_optarg ;;
+
+  -x-libraries | --x-libraries | --x-librarie | --x-librari \
+  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
+    ac_prev=x_libraries ;;
+  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
+  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
+    x_libraries=$ac_optarg ;;
+
+  -*) { echo "$as_me: error: unrecognized option: $ac_option
+Try \`$0 --help' for more information." >&2
+   { (exit 1); exit 1; }; }
+    ;;
+
+  *=*)
+    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
+    # Reject names that are not valid shell variable names.
+    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
+      { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
+   { (exit 1); exit 1; }; }
+    ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`
+    eval "$ac_envvar='$ac_optarg'"
+    export $ac_envvar ;;
+
+  *)
+    # FIXME: should be removed in autoconf 3.0.
+    echo "$as_me: WARNING: you should use --build, --host, --target" >&2
+    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
+      echo "$as_me: WARNING: invalid host type: $ac_option" >&2
+    : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
+    ;;
+
+  esac
+done
+
+if test -n "$ac_prev"; then
+  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
+  { echo "$as_me: error: missing argument to $ac_option" >&2
+   { (exit 1); exit 1; }; }
+fi
+
+# Be sure to have absolute paths.
+for ac_var in exec_prefix prefix
+do
+  eval ac_val=$`echo $ac_var`
+  case $ac_val in
+    [\\/$]* | ?:[\\/]* | NONE | '' ) ;;
+    *)  { echo "$as_me: error: expected an absolute directory name for --$ac_var: $ac_val" >&2
+   { (exit 1); exit 1; }; };;
+  esac
+done
+
+# Be sure to have absolute paths.
+for ac_var in bindir sbindir libexecdir datadir sysconfdir sharedstatedir \
+	      localstatedir libdir includedir oldincludedir infodir mandir
+do
+  eval ac_val=$`echo $ac_var`
+  case $ac_val in
+    [\\/$]* | ?:[\\/]* ) ;;
+    *)  { echo "$as_me: error: expected an absolute directory name for --$ac_var: $ac_val" >&2
+   { (exit 1); exit 1; }; };;
+  esac
+done
+
+# There might be people who depend on the old broken behavior: `$host'
+# used to hold the argument of --host etc.
+# FIXME: To remove some day.
+build=$build_alias
+host=$host_alias
+target=$target_alias
+
+# FIXME: To remove some day.
+if test "x$host_alias" != x; then
+  if test "x$build_alias" = x; then
+    cross_compiling=maybe
+    echo "$as_me: WARNING: If you wanted to set the --build type, don't use --host.
+    If a cross compiler is detected then cross compile mode will be used." >&2
+  elif test "x$build_alias" != "x$host_alias"; then
+    cross_compiling=yes
+  fi
+fi
+
+ac_tool_prefix=
+test -n "$host_alias" && ac_tool_prefix=$host_alias-
+
+test "$silent" = yes && exec 6>/dev/null
+
+
+# Find the source files, if location was not specified.
+if test -z "$srcdir"; then
+  ac_srcdir_defaulted=yes
+  # Try the directory containing this script, then its parent.
+  ac_confdir=`(dirname "$0") 2>/dev/null ||
+$as_expr X"$0" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$0" : 'X\(//\)[^/]' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X"$0" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+  srcdir=$ac_confdir
+  if test ! -r $srcdir/$ac_unique_file; then
+    srcdir=..
+  fi
+else
+  ac_srcdir_defaulted=no
+fi
+if test ! -r $srcdir/$ac_unique_file; then
+  if test "$ac_srcdir_defaulted" = yes; then
+    { echo "$as_me: error: cannot find sources ($ac_unique_file) in $ac_confdir or .." >&2
+   { (exit 1); exit 1; }; }
+  else
+    { echo "$as_me: error: cannot find sources ($ac_unique_file) in $srcdir" >&2
+   { (exit 1); exit 1; }; }
+  fi
+fi
+(cd $srcdir && test -r ./$ac_unique_file) 2>/dev/null ||
+  { echo "$as_me: error: sources are in $srcdir, but \`cd $srcdir' does not work" >&2
+   { (exit 1); exit 1; }; }
+srcdir=`echo "$srcdir" | sed 's%\([^\\/]\)[\\/]*$%\1%'`
+ac_env_build_alias_set=${build_alias+set}
+ac_env_build_alias_value=$build_alias
+ac_cv_env_build_alias_set=${build_alias+set}
+ac_cv_env_build_alias_value=$build_alias
+ac_env_host_alias_set=${host_alias+set}
+ac_env_host_alias_value=$host_alias
+ac_cv_env_host_alias_set=${host_alias+set}
+ac_cv_env_host_alias_value=$host_alias
+ac_env_target_alias_set=${target_alias+set}
+ac_env_target_alias_value=$target_alias
+ac_cv_env_target_alias_set=${target_alias+set}
+ac_cv_env_target_alias_value=$target_alias
+ac_env_CC_set=${CC+set}
+ac_env_CC_value=$CC
+ac_cv_env_CC_set=${CC+set}
+ac_cv_env_CC_value=$CC
+ac_env_CFLAGS_set=${CFLAGS+set}
+ac_env_CFLAGS_value=$CFLAGS
+ac_cv_env_CFLAGS_set=${CFLAGS+set}
+ac_cv_env_CFLAGS_value=$CFLAGS
+ac_env_LDFLAGS_set=${LDFLAGS+set}
+ac_env_LDFLAGS_value=$LDFLAGS
+ac_cv_env_LDFLAGS_set=${LDFLAGS+set}
+ac_cv_env_LDFLAGS_value=$LDFLAGS
+ac_env_CPPFLAGS_set=${CPPFLAGS+set}
+ac_env_CPPFLAGS_value=$CPPFLAGS
+ac_cv_env_CPPFLAGS_set=${CPPFLAGS+set}
+ac_cv_env_CPPFLAGS_value=$CPPFLAGS
+ac_env_CCAS_set=${CCAS+set}
+ac_env_CCAS_value=$CCAS
+ac_cv_env_CCAS_set=${CCAS+set}
+ac_cv_env_CCAS_value=$CCAS
+ac_env_CCASFLAGS_set=${CCASFLAGS+set}
+ac_env_CCASFLAGS_value=$CCASFLAGS
+ac_cv_env_CCASFLAGS_set=${CCASFLAGS+set}
+ac_cv_env_CCASFLAGS_value=$CCASFLAGS
+
+#
+# Report the --help message.
+#
+if test "$ac_init_help" = "long"; then
+  # Omit some internal or obsolete options to make the list less imposing.
+  # This message is too long to be a string in the A/UX 3.1 sh.
+  cat <<_ACEOF
+\`configure' configures this package to adapt to many kinds of systems.
+
+Usage: $0 [OPTION]... [VAR=VALUE]...
+
+To assign environment variables (e.g., CC, CFLAGS...), specify them as
+VAR=VALUE.  See below for descriptions of some of the useful variables.
+
+Defaults for the options are specified in brackets.
+
+Configuration:
+  -h, --help              display this help and exit
+      --help=short        display options specific to this package
+      --help=recursive    display the short help of all the included packages
+  -V, --version           display version information and exit
+  -q, --quiet, --silent   do not print \`checking...' messages
+      --cache-file=FILE   cache test results in FILE [disabled]
+  -C, --config-cache      alias for \`--cache-file=config.cache'
+  -n, --no-create         do not create output files
+      --srcdir=DIR        find the sources in DIR [configure dir or \`..']
+
+_ACEOF
+
+  cat <<_ACEOF
+Installation directories:
+  --prefix=PREFIX         install architecture-independent files in PREFIX
+			  [$ac_default_prefix]
+  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
+			  [PREFIX]
+
+By default, \`make install' will install all the files in
+\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
+an installation prefix other than \`$ac_default_prefix' using \`--prefix',
+for instance \`--prefix=\$HOME'.
+
+For better control, use the options below.
+
+Fine tuning of the installation directories:
+  --bindir=DIR           user executables [EPREFIX/bin]
+  --sbindir=DIR          system admin executables [EPREFIX/sbin]
+  --libexecdir=DIR       program executables [EPREFIX/libexec]
+  --datadir=DIR          read-only architecture-independent data [PREFIX/share]
+  --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
+  --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
+  --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
+  --libdir=DIR           object code libraries [EPREFIX/lib]
+  --includedir=DIR       C header files [PREFIX/include]
+  --oldincludedir=DIR    C header files for non-gcc [/usr/include]
+  --infodir=DIR          info documentation [PREFIX/info]
+  --mandir=DIR           man documentation [PREFIX/man]
+_ACEOF
+
+  cat <<\_ACEOF
+
+Program names:
+  --program-prefix=PREFIX            prepend PREFIX to installed program names
+  --program-suffix=SUFFIX            append SUFFIX to installed program names
+  --program-transform-name=PROGRAM   run sed PROGRAM on installed program names
+
+System types:
+  --build=BUILD     configure for building on BUILD [guessed]
+  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
+_ACEOF
+fi
+
+if test -n "$ac_init_help"; then
+
+  cat <<\_ACEOF
+
+Optional Features:
+  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
+  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
+  --enable-maintainer-mode  enable make rules and dependencies not useful
+			  (and sometimes confusing) to the casual installer
+  --disable-dependency-tracking  speeds up one-time build
+  --enable-dependency-tracking   do not reject slow dependency extractors
+  --enable-xlli  Use XLLI as start code
+  --enable-usbdnet  Use USBDNET as ethernet driver
+  --enable-clock-scaling  Enable support for clock scaling (SA1100 only)
+  --enable-memtest        Enable support for memory tests
+  --enable-lcd            Enable lcd support
+  --enable-md5            Enable md5 support
+  --enable-xmodem         Enable Xmodem support
+  --enable-usbserial      Enable serial over USB support
+  --enable-uucodec        Enable UU Codec support
+  --enable-jffs2          Enable support for loading kernel from jffs2
+  --enable-cramfs         Enable support for loading kernel from cramfs
+  --enable-zimage         Enable support for loading zImage directly from flash
+  --enable-network         Enable networking (bootp/tftp)
+  --enable-gio         Enable generic IO (sysupd command)
+  --enable-all-features   Enable all features
+  --enable-blob-debug     Enable run-time debug information
+
+Optional Packages:
+  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
+  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
+  --with-board=NAME       Name of the target board
+                          Valid names are:
+                            accelent_sa  Accelent IDP
+                            assabet      Intel Assabet
+                            badge4       HPL Badge 4
+                            brutus       Intel Brutus
+                            cep          Iskratel CEP
+                            creditlart   CreditLART
+                            csir_ims     CSIR Incident Management System
+                            dafit        Prueftechnik VibXpert
+                            frodo        2d3D, Inc. SA-1110 Development Board
+                            h3600        Compaq Ipaq H36x0
+                            hackkit      The Hack Kit base board
+                            idr          Vercel UD-1
+                            jornada720   HP Jornada 720 with Flash board
+                            lart         LART
+                            lubbock      Intel HCDDBCTA1 (Lubbock)
+                            mainstone    Intel HCDDBBVA0 (Mainstone)
+                            miniprint    FGAG Miniprint
+                            neponset     Intel Assabet with Neponset board
+                            nesa         NESA
+                            pleb         PLEB
+                            pxa_idp      Accelent PXA-based IDP
+                            ramses       M&N "MN-CI" Logistics Terminal
+                            shannon      TuxScreen (Shannon)
+                            smdk2500     Samsung s3c2500a Evaluation Board
+                            system3      Prueftechnik Digital Board
+                            trizeps      Keith & Koep Trizeps Board
+                          Default board is lart
+  --with-linux-prefix=PFX Prefix where the ARM Linux sources live
+  --with-commands=<list>  compile blob with commands in <list>
+                          commands may be separated with commas;
+                          'all' compiles all commands;
+                          Valid commands are:
+                           bogomips, call, chgbit, dummy, dump, md5chk, memcpy, poke, peek
+  --with-kernel-xip=Kernel XIP address
+
+Some influential environment variables:
+  CC          C compiler command
+  CFLAGS      C compiler flags
+  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
+              nonstandard directory <lib dir>
+  CPPFLAGS    C/C++ preprocessor flags, e.g. -I<include dir> if you have
+              headers in a nonstandard directory <include dir>
+  CCAS        assembler compiler command (defaults to CC)
+  CCASFLAGS   assembler compiler flags (defaults to CFLAGS)
+
+Use these variables to override the choices made by `configure' or to help
+it to find libraries and programs with nonstandard names/locations.
+
+_ACEOF
+fi
+
+if test "$ac_init_help" = "recursive"; then
+  # If there are subdirs, report their specific --help.
+  ac_popdir=`pwd`
+  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
+    test -d $ac_dir || continue
+    ac_builddir=.
+
+if test "$ac_dir" != .; then
+  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
+  # A "../" for each directory in $ac_dir_suffix.
+  ac_top_builddir=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,../,g'`
+else
+  ac_dir_suffix= ac_top_builddir=
+fi
+
+case $srcdir in
+  .)  # No --srcdir option.  We are building in place.
+    ac_srcdir=.
+    if test -z "$ac_top_builddir"; then
+       ac_top_srcdir=.
+    else
+       ac_top_srcdir=`echo $ac_top_builddir | sed 's,/$,,'`
+    fi ;;
+  [\\/]* | ?:[\\/]* )  # Absolute path.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir ;;
+  *) # Relative path.
+    ac_srcdir=$ac_top_builddir$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_builddir$srcdir ;;
+esac
+
+# Do not use `cd foo && pwd` to compute absolute paths, because
+# the directories may not exist.
+case `pwd` in
+.) ac_abs_builddir="$ac_dir";;
+*)
+  case "$ac_dir" in
+  .) ac_abs_builddir=`pwd`;;
+  [\\/]* | ?:[\\/]* ) ac_abs_builddir="$ac_dir";;
+  *) ac_abs_builddir=`pwd`/"$ac_dir";;
+  esac;;
+esac
+case $ac_abs_builddir in
+.) ac_abs_top_builddir=${ac_top_builddir}.;;
+*)
+  case ${ac_top_builddir}. in
+  .) ac_abs_top_builddir=$ac_abs_builddir;;
+  [\\/]* | ?:[\\/]* ) ac_abs_top_builddir=${ac_top_builddir}.;;
+  *) ac_abs_top_builddir=$ac_abs_builddir/${ac_top_builddir}.;;
+  esac;;
+esac
+case $ac_abs_builddir in
+.) ac_abs_srcdir=$ac_srcdir;;
+*)
+  case $ac_srcdir in
+  .) ac_abs_srcdir=$ac_abs_builddir;;
+  [\\/]* | ?:[\\/]* ) ac_abs_srcdir=$ac_srcdir;;
+  *) ac_abs_srcdir=$ac_abs_builddir/$ac_srcdir;;
+  esac;;
+esac
+case $ac_abs_builddir in
+.) ac_abs_top_srcdir=$ac_top_srcdir;;
+*)
+  case $ac_top_srcdir in
+  .) ac_abs_top_srcdir=$ac_abs_builddir;;
+  [\\/]* | ?:[\\/]* ) ac_abs_top_srcdir=$ac_top_srcdir;;
+  *) ac_abs_top_srcdir=$ac_abs_builddir/$ac_top_srcdir;;
+  esac;;
+esac
+
+    cd $ac_dir
+    # Check for guested configure; otherwise get Cygnus style configure.
+    if test -f $ac_srcdir/configure.gnu; then
+      echo
+      $SHELL $ac_srcdir/configure.gnu  --help=recursive
+    elif test -f $ac_srcdir/configure; then
+      echo
+      $SHELL $ac_srcdir/configure  --help=recursive
+    elif test -f $ac_srcdir/configure.ac ||
+	   test -f $ac_srcdir/configure.in; then
+      echo
+      $ac_configure --help
+    else
+      echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
+    fi
+    cd $ac_popdir
+  done
+fi
+
+test -n "$ac_init_help" && exit 0
+if $ac_init_version; then
+  cat <<\_ACEOF
+
+Copyright (C) 2003 Free Software Foundation, Inc.
+This configure script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it.
+_ACEOF
+  exit 0
+fi
+exec 5>config.log
+cat >&5 <<_ACEOF
+This file contains any messages produced by compilers while
+running configure, to aid debugging if configure makes a mistake.
+
+It was created by $as_me, which was
+generated by GNU Autoconf 2.59.  Invocation command line was
+
+  $ $0 $@
+
+_ACEOF
+{
+cat <<_ASUNAME
+## --------- ##
+## Platform. ##
+## --------- ##
+
+hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`
+
+/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
+hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
+/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
+/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`
+
+_ASUNAME
+
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  echo "PATH: $as_dir"
+done
+
+} >&5
+
+cat >&5 <<_ACEOF
+
+
+## ----------- ##
+## Core tests. ##
+## ----------- ##
+
+_ACEOF
+
+
+# Keep a trace of the command line.
+# Strip out --no-create and --no-recursion so they do not pile up.
+# Strip out --silent because we don't want to record it for future runs.
+# Also quote any args containing shell meta-characters.
+# Make two passes to allow for proper duplicate-argument suppression.
+ac_configure_args=
+ac_configure_args0=
+ac_configure_args1=
+ac_sep=
+ac_must_keep_next=false
+for ac_pass in 1 2
+do
+  for ac_arg
+  do
+    case $ac_arg in
+    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
+    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+    | -silent | --silent | --silen | --sile | --sil)
+      continue ;;
+    *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\"\']*)
+      ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
+    esac
+    case $ac_pass in
+    1) ac_configure_args0="$ac_configure_args0 '$ac_arg'" ;;
+    2)
+      ac_configure_args1="$ac_configure_args1 '$ac_arg'"
+      if test $ac_must_keep_next = true; then
+	ac_must_keep_next=false # Got value, back to normal.
+      else
+	case $ac_arg in
+	  *=* | --config-cache | -C | -disable-* | --disable-* \
+	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
+	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
+	  | -with-* | --with-* | -without-* | --without-* | --x)
+	    case "$ac_configure_args0 " in
+	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
+	    esac
+	    ;;
+	  -* ) ac_must_keep_next=true ;;
+	esac
+      fi
+      ac_configure_args="$ac_configure_args$ac_sep'$ac_arg'"
+      # Get rid of the leading space.
+      ac_sep=" "
+      ;;
+    esac
+  done
+done
+$as_unset ac_configure_args0 || test "${ac_configure_args0+set}" != set || { ac_configure_args0=; export ac_configure_args0; }
+$as_unset ac_configure_args1 || test "${ac_configure_args1+set}" != set || { ac_configure_args1=; export ac_configure_args1; }
+
+# When interrupted or exit'd, cleanup temporary files, and complete
+# config.log.  We remove comments because anyway the quotes in there
+# would cause problems or look ugly.
+# WARNING: Be sure not to use single quotes in there, as some shells,
+# such as our DU 5.0 friend, will then `close' the trap.
+trap 'exit_status=$?
+  # Save into config.log some information that might help in debugging.
+  {
+    echo
+
+    cat <<\_ASBOX
+## ---------------- ##
+## Cache variables. ##
+## ---------------- ##
+_ASBOX
+    echo
+    # The following way of writing the cache mishandles newlines in values,
+{
+  (set) 2>&1 |
+    case `(ac_space='"'"' '"'"'; set | grep ac_space) 2>&1` in
+    *ac_space=\ *)
+      sed -n \
+	"s/'"'"'/'"'"'\\\\'"'"''"'"'/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='"'"'\\2'"'"'/p"
+      ;;
+    *)
+      sed -n \
+	"s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1=\\2/p"
+      ;;
+    esac;
+}
+    echo
+
+    cat <<\_ASBOX
+## ----------------- ##
+## Output variables. ##
+## ----------------- ##
+_ASBOX
+    echo
+    for ac_var in $ac_subst_vars
+    do
+      eval ac_val=$`echo $ac_var`
+      echo "$ac_var='"'"'$ac_val'"'"'"
+    done | sort
+    echo
+
+    if test -n "$ac_subst_files"; then
+      cat <<\_ASBOX
+## ------------- ##
+## Output files. ##
+## ------------- ##
+_ASBOX
+      echo
+      for ac_var in $ac_subst_files
+      do
+	eval ac_val=$`echo $ac_var`
+	echo "$ac_var='"'"'$ac_val'"'"'"
+      done | sort
+      echo
+    fi
+
+    if test -s confdefs.h; then
+      cat <<\_ASBOX
+## ----------- ##
+## confdefs.h. ##
+## ----------- ##
+_ASBOX
+      echo
+      sed "/^$/d" confdefs.h | sort
+      echo
+    fi
+    test "$ac_signal" != 0 &&
+      echo "$as_me: caught signal $ac_signal"
+    echo "$as_me: exit $exit_status"
+  } >&5
+  rm -f core *.core &&
+  rm -rf conftest* confdefs* conf$$* $ac_clean_files &&
+    exit $exit_status
+     ' 0
+for ac_signal in 1 2 13 15; do
+  trap 'ac_signal='$ac_signal'; { (exit 1); exit 1; }' $ac_signal
+done
+ac_signal=0
+
+# confdefs.h avoids OS command line length limits that DEFS can exceed.
+rm -rf conftest* confdefs.h
+# AIX cpp loses on an empty file, so make sure it contains at least a newline.
+echo >confdefs.h
+
+# Predefined preprocessor variables.
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_NAME "$PACKAGE_NAME"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_TARNAME "$PACKAGE_TARNAME"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_VERSION "$PACKAGE_VERSION"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_STRING "$PACKAGE_STRING"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE_BUGREPORT "$PACKAGE_BUGREPORT"
+_ACEOF
+
+
+# Let the site file select an alternate cache file if it wants to.
+# Prefer explicitly selected file to automatically selected ones.
+if test -z "$CONFIG_SITE"; then
+  if test "x$prefix" != xNONE; then
+    CONFIG_SITE="$prefix/share/config.site $prefix/etc/config.site"
+  else
+    CONFIG_SITE="$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site"
+  fi
+fi
+for ac_site_file in $CONFIG_SITE; do
+  if test -r "$ac_site_file"; then
+    { echo "$as_me:$LINENO: loading site script $ac_site_file" >&5
+echo "$as_me: loading site script $ac_site_file" >&6;}
+    sed 's/^/| /' "$ac_site_file" >&5
+    . "$ac_site_file"
+  fi
+done
+
+if test -r "$cache_file"; then
+  # Some versions of bash will fail to source /dev/null (special
+  # files actually), so we avoid doing that.
+  if test -f "$cache_file"; then
+    { echo "$as_me:$LINENO: loading cache $cache_file" >&5
+echo "$as_me: loading cache $cache_file" >&6;}
+    case $cache_file in
+      [\\/]* | ?:[\\/]* ) . $cache_file;;
+      *)                      . ./$cache_file;;
+    esac
+  fi
+else
+  { echo "$as_me:$LINENO: creating cache $cache_file" >&5
+echo "$as_me: creating cache $cache_file" >&6;}
+  >$cache_file
+fi
+
+# Check that the precious variables saved in the cache have kept the same
+# value.
+ac_cache_corrupted=false
+for ac_var in `(set) 2>&1 |
+	       sed -n 's/^ac_env_\([a-zA-Z_0-9]*\)_set=.*/\1/p'`; do
+  eval ac_old_set=\$ac_cv_env_${ac_var}_set
+  eval ac_new_set=\$ac_env_${ac_var}_set
+  eval ac_old_val="\$ac_cv_env_${ac_var}_value"
+  eval ac_new_val="\$ac_env_${ac_var}_value"
+  case $ac_old_set,$ac_new_set in
+    set,)
+      { echo "$as_me:$LINENO: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
+echo "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,set)
+      { echo "$as_me:$LINENO: error: \`$ac_var' was not set in the previous run" >&5
+echo "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
+      ac_cache_corrupted=: ;;
+    ,);;
+    *)
+      if test "x$ac_old_val" != "x$ac_new_val"; then
+	{ echo "$as_me:$LINENO: error: \`$ac_var' has changed since the previous run:" >&5
+echo "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
+	{ echo "$as_me:$LINENO:   former value:  $ac_old_val" >&5
+echo "$as_me:   former value:  $ac_old_val" >&2;}
+	{ echo "$as_me:$LINENO:   current value: $ac_new_val" >&5
+echo "$as_me:   current value: $ac_new_val" >&2;}
+	ac_cache_corrupted=:
+      fi;;
+  esac
+  # Pass precious variables to config.status.
+  if test "$ac_new_set" = set; then
+    case $ac_new_val in
+    *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\"\']*)
+      ac_arg=$ac_var=`echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
+    *) ac_arg=$ac_var=$ac_new_val ;;
+    esac
+    case " $ac_configure_args " in
+      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
+      *) ac_configure_args="$ac_configure_args '$ac_arg'" ;;
+    esac
+  fi
+done
+if $ac_cache_corrupted; then
+  { echo "$as_me:$LINENO: error: changes in the environment can compromise the build" >&5
+echo "$as_me: error: changes in the environment can compromise the build" >&2;}
+  { { echo "$as_me:$LINENO: error: run \`make distclean' and/or \`rm $cache_file' and start over" >&5
+echo "$as_me: error: run \`make distclean' and/or \`rm $cache_file' and start over" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+ac_aux_dir=
+for ac_dir in tools $srcdir/tools; do
+  if test -f $ac_dir/install-sh; then
+    ac_aux_dir=$ac_dir
+    ac_install_sh="$ac_aux_dir/install-sh -c"
+    break
+  elif test -f $ac_dir/install.sh; then
+    ac_aux_dir=$ac_dir
+    ac_install_sh="$ac_aux_dir/install.sh -c"
+    break
+  elif test -f $ac_dir/shtool; then
+    ac_aux_dir=$ac_dir
+    ac_install_sh="$ac_aux_dir/shtool install -c"
+    break
+  fi
+done
+if test -z "$ac_aux_dir"; then
+  { { echo "$as_me:$LINENO: error: cannot find install-sh or install.sh in tools $srcdir/tools" >&5
+echo "$as_me: error: cannot find install-sh or install.sh in tools $srcdir/tools" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+ac_config_guess="$SHELL $ac_aux_dir/config.guess"
+ac_config_sub="$SHELL $ac_aux_dir/config.sub"
+ac_configure="$SHELL $ac_aux_dir/configure" # This should be Cygnus configure.
+
+
+
+
+
+PACKAGE=blob
+BLOB_MAJOR_VERSION=2
+BLOB_MINOR_VERSION=0
+BLOB_MICRO_VERSION=5-pre3
+BLOB_VERSION=$BLOB_MAJOR_VERSION.$BLOB_MINOR_VERSION.$BLOB_MICRO_VERSION
+VERSION=$BLOB_VERSION
+
+am__api_version="1.8"
+# Find a good install program.  We prefer a C program (faster),
+# so one script is as good as another.  But avoid the broken or
+# incompatible versions:
+# SysV /etc/install, /usr/sbin/install
+# SunOS /usr/etc/install
+# IRIX /sbin/install
+# AIX /bin/install
+# AmigaOS /C/install, which installs bootblocks on floppy discs
+# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
+# OS/2's system install, which has a completely different semantic
+# ./install, which can be erroneously created by make from ./install.sh.
+echo "$as_me:$LINENO: checking for a BSD-compatible install" >&5
+echo $ECHO_N "checking for a BSD-compatible install... $ECHO_C" >&6
+if test -z "$INSTALL"; then
+if test "${ac_cv_path_install+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  # Account for people who put trailing slashes in PATH elements.
+case $as_dir/ in
+  ./ | .// | /cC/* | \
+  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+  ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
+  /usr/ucb/* ) ;;
+  *)
+    # OSF1 and SCO ODT 3.0 have their own names for install.
+    # Don't use installbsd from OSF since it installs stuff as root
+    # by default.
+    for ac_prog in ginstall scoinst install; do
+      for ac_exec_ext in '' $ac_executable_extensions; do
+	if $as_executable_p "$as_dir/$ac_prog$ac_exec_ext"; then
+	  if test $ac_prog = install &&
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # AIX install.  It has an incompatible calling convention.
+	    :
+	  elif test $ac_prog = install &&
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # program-specific install script used by HP pwplus--don't use.
+	    :
+	  else
+	    ac_cv_path_install="$as_dir/$ac_prog$ac_exec_ext -c"
+	    break 3
+	  fi
+	fi
+      done
+    done
+    ;;
+esac
+done
+
+
+fi
+  if test "${ac_cv_path_install+set}" = set; then
+    INSTALL=$ac_cv_path_install
+  else
+    # As a last resort, use the slow shell script.  We don't cache a
+    # path for INSTALL within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the path is relative.
+    INSTALL=$ac_install_sh
+  fi
+fi
+echo "$as_me:$LINENO: result: $INSTALL" >&5
+echo "${ECHO_T}$INSTALL" >&6
+
+# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
+# It thinks the first close brace ends the variable substitution.
+test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'
+
+test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'
+
+test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'
+
+echo "$as_me:$LINENO: checking whether build environment is sane" >&5
+echo $ECHO_N "checking whether build environment is sane... $ECHO_C" >&6
+# Just in case
+sleep 1
+echo timestamp > conftest.file
+# Do `set' in a subshell so we don't clobber the current shell's
+# arguments.  Must try -L first in case configure is actually a
+# symlink; some systems play weird games with the mod time of symlinks
+# (eg FreeBSD returns the mod time of the symlink's containing
+# directory).
+if (
+   set X `ls -Lt $srcdir/configure conftest.file 2> /dev/null`
+   if test "$*" = "X"; then
+      # -L didn't work.
+      set X `ls -t $srcdir/configure conftest.file`
+   fi
+   rm -f conftest.file
+   if test "$*" != "X $srcdir/configure conftest.file" \
+      && test "$*" != "X conftest.file $srcdir/configure"; then
+
+      # If neither matched, then we have a broken ls.  This can happen
+      # if, for instance, CONFIG_SHELL is bash and it inherits a
+      # broken ls alias from the environment.  This has actually
+      # happened.  Such a system could not be considered "sane".
+      { { echo "$as_me:$LINENO: error: ls -t appears to fail.  Make sure there is not a broken
+alias in your environment" >&5
+echo "$as_me: error: ls -t appears to fail.  Make sure there is not a broken
+alias in your environment" >&2;}
+   { (exit 1); exit 1; }; }
+   fi
+
+   test "$2" = conftest.file
+   )
+then
+   # Ok.
+   :
+else
+   { { echo "$as_me:$LINENO: error: newly created file is older than distributed files!
+Check your system clock" >&5
+echo "$as_me: error: newly created file is older than distributed files!
+Check your system clock" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6
+test "$program_prefix" != NONE &&
+  program_transform_name="s,^,$program_prefix,;$program_transform_name"
+# Use a double $ so make ignores it.
+test "$program_suffix" != NONE &&
+  program_transform_name="s,\$,$program_suffix,;$program_transform_name"
+# Double any \ or $.  echo might interpret backslashes.
+# By default was `s,x,x', remove it if useless.
+cat <<\_ACEOF >conftest.sed
+s/[\\$]/&&/g;s/;s,x,x,$//
+_ACEOF
+program_transform_name=`echo $program_transform_name | sed -f conftest.sed`
+rm conftest.sed
+
+# expand $ac_aux_dir to an absolute path
+am_aux_dir=`cd $ac_aux_dir && pwd`
+
+test x"${MISSING+set}" = xset || MISSING="\${SHELL} $am_aux_dir/missing"
+# Use eval to expand $SHELL
+if eval "$MISSING --run true"; then
+  am_missing_run="$MISSING --run "
+else
+  am_missing_run=
+  { echo "$as_me:$LINENO: WARNING: \`missing' script is too old or missing" >&5
+echo "$as_me: WARNING: \`missing' script is too old or missing" >&2;}
+fi
+
+if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then
+  # Keeping the `.' argument allows $(mkdir_p) to be used without
+  # argument.  Indeed, we sometimes output rules like
+  #   $(mkdir_p) $(somedir)
+  # where $(somedir) is conditionally defined.
+  # (`test -n '$(somedir)' && $(mkdir_p) $(somedir)' is a more
+  # expensive solution, as it forces Make to start a sub-shell.)
+  mkdir_p='mkdir -p -- .'
+else
+  # On NextStep and OpenStep, the `mkdir' command does not
+  # recognize any option.  It will interpret all options as
+  # directories to create, and then abort because `.' already
+  # exists.
+  for d in ./-p ./--version;
+  do
+    test -d $d && rmdir $d
+  done
+  # $(mkinstalldirs) is defined by Automake if mkinstalldirs exists.
+  if test -f "$ac_aux_dir/mkinstalldirs"; then
+    mkdir_p='$(mkinstalldirs)'
+  else
+    mkdir_p='$(install_sh) -d'
+  fi
+fi
+
+for ac_prog in gawk mawk nawk awk
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_AWK+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$AWK"; then
+  ac_cv_prog_AWK="$AWK" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_AWK="$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+AWK=$ac_cv_prog_AWK
+if test -n "$AWK"; then
+  echo "$as_me:$LINENO: result: $AWK" >&5
+echo "${ECHO_T}$AWK" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  test -n "$AWK" && break
+done
+
+echo "$as_me:$LINENO: checking whether ${MAKE-make} sets \$(MAKE)" >&5
+echo $ECHO_N "checking whether ${MAKE-make} sets \$(MAKE)... $ECHO_C" >&6
+set dummy ${MAKE-make}; ac_make=`echo "$2" | sed 'y,:./+-,___p_,'`
+if eval "test \"\${ac_cv_prog_make_${ac_make}_set+set}\" = set"; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.make <<\_ACEOF
+all:
+	@echo 'ac_maketemp="$(MAKE)"'
+_ACEOF
+# GNU make sometimes prints "make[1]: Entering...", which would confuse us.
+eval `${MAKE-make} -f conftest.make 2>/dev/null | grep temp=`
+if test -n "$ac_maketemp"; then
+  eval ac_cv_prog_make_${ac_make}_set=yes
+else
+  eval ac_cv_prog_make_${ac_make}_set=no
+fi
+rm -f conftest.make
+fi
+if eval "test \"`echo '$ac_cv_prog_make_'${ac_make}_set`\" = yes"; then
+  echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6
+  SET_MAKE=
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+  SET_MAKE="MAKE=${MAKE-make}"
+fi
+
+rm -rf .tst 2>/dev/null
+mkdir .tst 2>/dev/null
+if test -d .tst; then
+  am__leading_dot=.
+else
+  am__leading_dot=_
+fi
+rmdir .tst 2>/dev/null
+
+# test to see if srcdir already configured
+if test "`cd $srcdir && pwd`" != "`pwd`" &&
+   test -f $srcdir/config.status; then
+  { { echo "$as_me:$LINENO: error: source directory already configured; run \"make distclean\" there first" >&5
+echo "$as_me: error: source directory already configured; run \"make distclean\" there first" >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+# test whether we have cygpath
+if test -z "$CYGPATH_W"; then
+  if (cygpath --version) >/dev/null 2>/dev/null; then
+    CYGPATH_W='cygpath -w'
+  else
+    CYGPATH_W=echo
+  fi
+fi
+
+
+# Define the identity of the package.
+ PACKAGE=$PACKAGE
+ VERSION=$VERSION
+
+
+cat >>confdefs.h <<_ACEOF
+#define PACKAGE "$PACKAGE"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define VERSION "$VERSION"
+_ACEOF
+
+# Some tools Automake needs.
+
+ACLOCAL=${ACLOCAL-"${am_missing_run}aclocal-${am__api_version}"}
+
+
+AUTOCONF=${AUTOCONF-"${am_missing_run}autoconf"}
+
+
+AUTOMAKE=${AUTOMAKE-"${am_missing_run}automake-${am__api_version}"}
+
+
+AUTOHEADER=${AUTOHEADER-"${am_missing_run}autoheader"}
+
+
+MAKEINFO=${MAKEINFO-"${am_missing_run}makeinfo"}
+
+
+AMTAR=${AMTAR-"${am_missing_run}tar"}
+
+install_sh=${install_sh-"$am_aux_dir/install-sh"}
+
+# Installed binaries are usually stripped using `strip' when the user
+# run `make install-strip'.  However `strip' might not be the right
+# tool to use in cross-compilation environments, therefore Automake
+# will honor the `STRIP' environment variable to overrule this program.
+if test "$cross_compiling" != no; then
+  if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}strip", so it can be a program name with args.
+set dummy ${ac_tool_prefix}strip; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_STRIP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$STRIP"; then
+  ac_cv_prog_STRIP="$STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_STRIP="${ac_tool_prefix}strip"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+STRIP=$ac_cv_prog_STRIP
+if test -n "$STRIP"; then
+  echo "$as_me:$LINENO: result: $STRIP" >&5
+echo "${ECHO_T}$STRIP" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+fi
+if test -z "$ac_cv_prog_STRIP"; then
+  ac_ct_STRIP=$STRIP
+  # Extract the first word of "strip", so it can be a program name with args.
+set dummy strip; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_ac_ct_STRIP+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_STRIP"; then
+  ac_cv_prog_ac_ct_STRIP="$ac_ct_STRIP" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_STRIP="strip"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+  test -z "$ac_cv_prog_ac_ct_STRIP" && ac_cv_prog_ac_ct_STRIP=":"
+fi
+fi
+ac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP
+if test -n "$ac_ct_STRIP"; then
+  echo "$as_me:$LINENO: result: $ac_ct_STRIP" >&5
+echo "${ECHO_T}$ac_ct_STRIP" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  STRIP=$ac_ct_STRIP
+else
+  STRIP="$ac_cv_prog_STRIP"
+fi
+
+fi
+INSTALL_STRIP_PROGRAM="\${SHELL} \$(install_sh) -c -s"
+
+# We need awk for the "check" target.  The system "awk" is bad on
+# some platforms.
+
+
+
+          ac_config_headers="$ac_config_headers include/blob/config.h"
+
+
+
+
+echo "$as_me:$LINENO: checking whether to enable maintainer-specific portions of Makefiles" >&5
+echo $ECHO_N "checking whether to enable maintainer-specific portions of Makefiles... $ECHO_C" >&6
+    # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.
+if test "${enable_maintainer_mode+set}" = set; then
+  enableval="$enable_maintainer_mode"
+  USE_MAINTAINER_MODE=$enableval
+else
+  USE_MAINTAINER_MODE=no
+fi;
+  echo "$as_me:$LINENO: result: $USE_MAINTAINER_MODE" >&5
+echo "${ECHO_T}$USE_MAINTAINER_MODE" >&6
+
+
+if test $USE_MAINTAINER_MODE = yes; then
+  MAINTAINER_MODE_TRUE=
+  MAINTAINER_MODE_FALSE='#'
+else
+  MAINTAINER_MODE_TRUE='#'
+  MAINTAINER_MODE_FALSE=
+fi
+
+  MAINT=$MAINTAINER_MODE_TRUE
+
+
+
+
+
+
+# Make sure we can run config.sub.
+$ac_config_sub sun4 >/dev/null 2>&1 ||
+  { { echo "$as_me:$LINENO: error: cannot run $ac_config_sub" >&5
+echo "$as_me: error: cannot run $ac_config_sub" >&2;}
+   { (exit 1); exit 1; }; }
+
+echo "$as_me:$LINENO: checking build system type" >&5
+echo $ECHO_N "checking build system type... $ECHO_C" >&6
+if test "${ac_cv_build+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_cv_build_alias=$build_alias
+test -z "$ac_cv_build_alias" &&
+  ac_cv_build_alias=`$ac_config_guess`
+test -z "$ac_cv_build_alias" &&
+  { { echo "$as_me:$LINENO: error: cannot guess build type; you must specify one" >&5
+echo "$as_me: error: cannot guess build type; you must specify one" >&2;}
+   { (exit 1); exit 1; }; }
+ac_cv_build=`$ac_config_sub $ac_cv_build_alias` ||
+  { { echo "$as_me:$LINENO: error: $ac_config_sub $ac_cv_build_alias failed" >&5
+echo "$as_me: error: $ac_config_sub $ac_cv_build_alias failed" >&2;}
+   { (exit 1); exit 1; }; }
+
+fi
+echo "$as_me:$LINENO: result: $ac_cv_build" >&5
+echo "${ECHO_T}$ac_cv_build" >&6
+build=$ac_cv_build
+build_cpu=`echo $ac_cv_build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
+build_vendor=`echo $ac_cv_build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
+build_os=`echo $ac_cv_build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
+
+
+echo "$as_me:$LINENO: checking host system type" >&5
+echo $ECHO_N "checking host system type... $ECHO_C" >&6
+if test "${ac_cv_host+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_cv_host_alias=$host_alias
+test -z "$ac_cv_host_alias" &&
+  ac_cv_host_alias=$ac_cv_build_alias
+ac_cv_host=`$ac_config_sub $ac_cv_host_alias` ||
+  { { echo "$as_me:$LINENO: error: $ac_config_sub $ac_cv_host_alias failed" >&5
+echo "$as_me: error: $ac_config_sub $ac_cv_host_alias failed" >&2;}
+   { (exit 1); exit 1; }; }
+
+fi
+echo "$as_me:$LINENO: result: $ac_cv_host" >&5
+echo "${ECHO_T}$ac_cv_host" >&6
+host=$ac_cv_host
+host_cpu=`echo $ac_cv_host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
+host_vendor=`echo $ac_cv_host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
+host_os=`echo $ac_cv_host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
+
+
+
+
+
+
+for ac_prog in armv5l-linux-gcc gcc
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_CC="$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  test -n "$CC" && break
+done
+test -n "$CC" || CC="echo"
+
+for ac_prog in armv5l-linux-objcopy objcopy
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_OBJCOPY+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$OBJCOPY"; then
+  ac_cv_prog_OBJCOPY="$OBJCOPY" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_OBJCOPY="$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+OBJCOPY=$ac_cv_prog_OBJCOPY
+if test -n "$OBJCOPY"; then
+  echo "$as_me:$LINENO: result: $OBJCOPY" >&5
+echo "${ECHO_T}$OBJCOPY" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  test -n "$OBJCOPY" && break
+done
+test -n "$OBJCOPY" || OBJCOPY="echo"
+
+for ac_prog in armv5l-linux-ranlib ranlib
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_RANLIB+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_RANLIB="$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  echo "$as_me:$LINENO: result: $RANLIB" >&5
+echo "${ECHO_T}$RANLIB" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  test -n "$RANLIB" && break
+done
+test -n "$RANLIB" || RANLIB="echo"
+
+for ac_prog in armv5l-linux-ar ar
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_AR+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_AR="$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  echo "$as_me:$LINENO: result: $AR" >&5
+echo "${ECHO_T}$AR" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  test -n "$AR" && break
+done
+test -n "$AR" || AR="echo"
+
+for ac_prog in armv5l-linux-ld ld
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_LD+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$LD"; then
+  ac_cv_prog_LD="$LD" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_LD="$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+LD=$ac_cv_prog_LD
+if test -n "$LD"; then
+  echo "$as_me:$LINENO: result: $LD" >&5
+echo "${ECHO_T}$LD" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  test -n "$LD" && break
+done
+test -n "$LD" || LD="echo"
+
+
+
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gcc; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_CC="${ac_tool_prefix}gcc"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+fi
+if test -z "$ac_cv_prog_CC"; then
+  ac_ct_CC=$CC
+  # Extract the first word of "gcc", so it can be a program name with args.
+set dummy gcc; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_CC="gcc"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
+echo "${ECHO_T}$ac_ct_CC" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  CC=$ac_ct_CC
+else
+  CC="$ac_cv_prog_CC"
+fi
+
+if test -z "$CC"; then
+  if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}cc; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_CC="${ac_tool_prefix}cc"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+fi
+if test -z "$ac_cv_prog_CC"; then
+  ac_ct_CC=$CC
+  # Extract the first word of "cc", so it can be a program name with args.
+set dummy cc; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_CC="cc"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
+echo "${ECHO_T}$ac_ct_CC" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  CC=$ac_ct_CC
+else
+  CC="$ac_cv_prog_CC"
+fi
+
+fi
+if test -z "$CC"; then
+  # Extract the first word of "cc", so it can be a program name with args.
+set dummy cc; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+  ac_prog_rejected=no
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
+       ac_prog_rejected=yes
+       continue
+     fi
+    ac_cv_prog_CC="cc"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+if test $ac_prog_rejected = yes; then
+  # We found a bogon in the path, so make sure we never use it.
+  set dummy $ac_cv_prog_CC
+  shift
+  if test $# != 0; then
+    # We chose a different compiler from the bogus one.
+    # However, it has the same basename, so the bogon will be chosen
+    # first if we set CC to just the basename; use the full file name.
+    shift
+    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
+  fi
+fi
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+fi
+if test -z "$CC"; then
+  if test -n "$ac_tool_prefix"; then
+  for ac_prog in cl
+  do
+    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
+set dummy $ac_tool_prefix$ac_prog; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  echo "$as_me:$LINENO: result: $CC" >&5
+echo "${ECHO_T}$CC" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+    test -n "$CC" && break
+  done
+fi
+if test -z "$CC"; then
+  ac_ct_CC=$CC
+  for ac_prog in cl
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_CC"; then
+  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_CC="$ac_prog"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+ac_ct_CC=$ac_cv_prog_ac_ct_CC
+if test -n "$ac_ct_CC"; then
+  echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
+echo "${ECHO_T}$ac_ct_CC" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  test -n "$ac_ct_CC" && break
+done
+
+  CC=$ac_ct_CC
+fi
+
+fi
+
+
+test -z "$CC" && { { echo "$as_me:$LINENO: error: no acceptable C compiler found in \$PATH
+See \`config.log' for more details." >&5
+echo "$as_me: error: no acceptable C compiler found in \$PATH
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+
+# Provide some information about the compiler.
+echo "$as_me:$LINENO:" \
+     "checking for C compiler version" >&5
+ac_compiler=`set X $ac_compile; echo $2`
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
+  (eval $ac_compiler --version </dev/null >&5) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
+  (eval $ac_compiler -v </dev/null >&5) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }
+{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
+  (eval $ac_compiler -V </dev/null >&5) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }
+
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files a.out a.exe b.out"
+# Try to create an executable without -o first, disregard a.out.
+# It will help us diagnose broken compilers, and finding out an intuition
+# of exeext.
+echo "$as_me:$LINENO: checking for C compiler default output file name" >&5
+echo $ECHO_N "checking for C compiler default output file name... $ECHO_C" >&6
+ac_link_default=`echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
+if { (eval echo "$as_me:$LINENO: \"$ac_link_default\"") >&5
+  (eval $ac_link_default) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  # Find the output, starting from the most likely.  This scheme is
+# not robust to junk in `.', hence go to wildcards (a.*) only as a last
+# resort.
+
+# Be careful to initialize this variable, since it used to be cached.
+# Otherwise an old cache value of `no' led to `EXEEXT = no' in a Makefile.
+ac_cv_exeext=
+# b.out is created by i960 compilers.
+for ac_file in a_out.exe a.exe conftest.exe a.out conftest a.* conftest.* b.out
+do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.o | *.obj )
+	;;
+    conftest.$ac_ext )
+	# This is the source file.
+	;;
+    [ab].out )
+	# We found the default executable, but exeext='' is most
+	# certainly right.
+	break;;
+    *.* )
+	ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	# FIXME: I believe we export ac_cv_exeext for Libtool,
+	# but it would be cool to find out if it's true.  Does anybody
+	# maintain Libtool? --akim.
+	export ac_cv_exeext
+	break;;
+    * )
+	break;;
+  esac
+done
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { echo "$as_me:$LINENO: error: C compiler cannot create executables
+See \`config.log' for more details." >&5
+echo "$as_me: error: C compiler cannot create executables
+See \`config.log' for more details." >&2;}
+   { (exit 77); exit 77; }; }
+fi
+
+ac_exeext=$ac_cv_exeext
+echo "$as_me:$LINENO: result: $ac_file" >&5
+echo "${ECHO_T}$ac_file" >&6
+
+# Check the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+echo "$as_me:$LINENO: checking whether the C compiler works" >&5
+echo $ECHO_N "checking whether the C compiler works... $ECHO_C" >&6
+# FIXME: These cross compiler hacks should be removed for Autoconf 3.0
+# If not cross compiling, check that we can run a simple program.
+if test "$cross_compiling" != yes; then
+  if { ac_try='./$ac_file'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+    cross_compiling=no
+  else
+    if test "$cross_compiling" = maybe; then
+	cross_compiling=yes
+    else
+	{ { echo "$as_me:$LINENO: error: cannot run C compiled programs.
+If you meant to cross compile, use \`--host'.
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot run C compiled programs.
+If you meant to cross compile, use \`--host'.
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+    fi
+  fi
+fi
+echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6
+
+rm -f a.out a.exe conftest$ac_cv_exeext b.out
+ac_clean_files=$ac_clean_files_save
+# Check the compiler produces executables we can run.  If not, either
+# the compiler is broken, or we cross compile.
+echo "$as_me:$LINENO: checking whether we are cross compiling" >&5
+echo $ECHO_N "checking whether we are cross compiling... $ECHO_C" >&6
+echo "$as_me:$LINENO: result: $cross_compiling" >&5
+echo "${ECHO_T}$cross_compiling" >&6
+
+echo "$as_me:$LINENO: checking for suffix of executables" >&5
+echo $ECHO_N "checking for suffix of executables... $ECHO_C" >&6
+if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
+  (eval $ac_link) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  # If both `conftest.exe' and `conftest' are `present' (well, observable)
+# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will
+# work properly (i.e., refer to `conftest.exe'), while it won't with
+# `rm'.
+for ac_file in conftest.exe conftest conftest.*; do
+  test -f "$ac_file" || continue
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.o | *.obj ) ;;
+    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
+	  export ac_cv_exeext
+	  break;;
+    * ) break;;
+  esac
+done
+else
+  { { echo "$as_me:$LINENO: error: cannot compute suffix of executables: cannot compile and link
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot compute suffix of executables: cannot compile and link
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+rm -f conftest$ac_cv_exeext
+echo "$as_me:$LINENO: result: $ac_cv_exeext" >&5
+echo "${ECHO_T}$ac_cv_exeext" >&6
+
+rm -f conftest.$ac_ext
+EXEEXT=$ac_cv_exeext
+ac_exeext=$EXEEXT
+echo "$as_me:$LINENO: checking for suffix of object files" >&5
+echo $ECHO_N "checking for suffix of object files... $ECHO_C" >&6
+if test "${ac_cv_objext+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.o conftest.obj
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; then
+  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/dev/null`; do
+  case $ac_file in
+    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg ) ;;
+    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
+       break;;
+  esac
+done
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+{ { echo "$as_me:$LINENO: error: cannot compute suffix of object files: cannot compile
+See \`config.log' for more details." >&5
+echo "$as_me: error: cannot compute suffix of object files: cannot compile
+See \`config.log' for more details." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+rm -f conftest.$ac_cv_objext conftest.$ac_ext
+fi
+echo "$as_me:$LINENO: result: $ac_cv_objext" >&5
+echo "${ECHO_T}$ac_cv_objext" >&6
+OBJEXT=$ac_cv_objext
+ac_objext=$OBJEXT
+echo "$as_me:$LINENO: checking whether we are using the GNU C compiler" >&5
+echo $ECHO_N "checking whether we are using the GNU C compiler... $ECHO_C" >&6
+if test "${ac_cv_c_compiler_gnu+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+#ifndef __GNUC__
+       choke me
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; } &&
+	 { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  ac_compiler_gnu=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+ac_compiler_gnu=no
+fi
+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+ac_cv_c_compiler_gnu=$ac_compiler_gnu
+
+fi
+echo "$as_me:$LINENO: result: $ac_cv_c_compiler_gnu" >&5
+echo "${ECHO_T}$ac_cv_c_compiler_gnu" >&6
+GCC=`test $ac_compiler_gnu = yes && echo yes`
+ac_test_CFLAGS=${CFLAGS+set}
+ac_save_CFLAGS=$CFLAGS
+CFLAGS="-g"
+echo "$as_me:$LINENO: checking whether $CC accepts -g" >&5
+echo $ECHO_N "checking whether $CC accepts -g... $ECHO_C" >&6
+if test "${ac_cv_prog_cc_g+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; } &&
+	 { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  ac_cv_prog_cc_g=yes
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+ac_cv_prog_cc_g=no
+fi
+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+echo "$as_me:$LINENO: result: $ac_cv_prog_cc_g" >&5
+echo "${ECHO_T}$ac_cv_prog_cc_g" >&6
+if test "$ac_test_CFLAGS" = set; then
+  CFLAGS=$ac_save_CFLAGS
+elif test $ac_cv_prog_cc_g = yes; then
+  if test "$GCC" = yes; then
+    CFLAGS="-g -O2"
+  else
+    CFLAGS="-g"
+  fi
+else
+  if test "$GCC" = yes; then
+    CFLAGS="-O2"
+  else
+    CFLAGS=
+  fi
+fi
+echo "$as_me:$LINENO: checking for $CC option to accept ANSI C" >&5
+echo $ECHO_N "checking for $CC option to accept ANSI C... $ECHO_C" >&6
+if test "${ac_cv_prog_cc_stdc+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_cv_prog_cc_stdc=no
+ac_save_CC=$CC
+cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdio.h>
+#include <sys/types.h>
+#include <sys/stat.h>
+/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
+struct buf { int x; };
+FILE * (*rcsopen) (struct buf *, struct stat *, int);
+static char *e (p, i)
+     char **p;
+     int i;
+{
+  return p[i];
+}
+static char *f (char * (*g) (char **, int), char **p, ...)
+{
+  char *s;
+  va_list v;
+  va_start (v,p);
+  s = g (p, va_arg (v,int));
+  va_end (v);
+  return s;
+}
+
+/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
+   function prototypes and stuff, but not '\xHH' hex character constants.
+   These don't provoke an error unfortunately, instead are silently treated
+   as 'x'.  The following induces an error, until -std1 is added to get
+   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
+   array size at least.  It's necessary to write '\x00'==0 to get something
+   that's true only with -std1.  */
+int osf4_cc_array ['\x00' == 0 ? 1 : -1];
+
+int test (int i, double x);
+struct s1 {int (*f) (int a);};
+struct s2 {int (*f) (double a);};
+int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
+int argc;
+char **argv;
+int
+main ()
+{
+return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
+  ;
+  return 0;
+}
+_ACEOF
+# Don't try gcc -ansi; that turns off useful extensions and
+# breaks some systems' header files.
+# AIX			-qlanglvl=ansi
+# Ultrix and OSF/1	-std1
+# HP-UX 10.20 and later	-Ae
+# HP-UX older versions	-Aa -D_HPUX_SOURCE
+# SVR4			-Xc -D__EXTENSIONS__
+for ac_arg in "" -qlanglvl=ansi -std1 -Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
+do
+  CC="$ac_save_CC $ac_arg"
+  rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; } &&
+	 { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  ac_cv_prog_cc_stdc=$ac_arg
+break
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+fi
+rm -f conftest.err conftest.$ac_objext
+done
+rm -f conftest.$ac_ext conftest.$ac_objext
+CC=$ac_save_CC
+
+fi
+
+case "x$ac_cv_prog_cc_stdc" in
+  x|xno)
+    echo "$as_me:$LINENO: result: none needed" >&5
+echo "${ECHO_T}none needed" >&6 ;;
+  *)
+    echo "$as_me:$LINENO: result: $ac_cv_prog_cc_stdc" >&5
+echo "${ECHO_T}$ac_cv_prog_cc_stdc" >&6
+    CC="$CC $ac_cv_prog_cc_stdc" ;;
+esac
+
+# Some people use a C++ compiler to compile C.  Since we use `exit',
+# in C++ we need to declare it.  In case someone uses the same compiler
+# for both compiling C and C++ we need to have the C++ compiler decide
+# the declaration of exit, since it's the most demanding environment.
+cat >conftest.$ac_ext <<_ACEOF
+#ifndef __cplusplus
+  choke me
+#endif
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; } &&
+	 { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  for ac_declaration in \
+   '' \
+   'extern "C" void std::exit (int) throw (); using std::exit;' \
+   'extern "C" void std::exit (int); using std::exit;' \
+   'extern "C" void exit (int) throw ();' \
+   'extern "C" void exit (int);' \
+   'void exit (int);'
+do
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_declaration
+#include <stdlib.h>
+int
+main ()
+{
+exit (42);
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; } &&
+	 { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  :
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+continue
+fi
+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+$ac_declaration
+int
+main ()
+{
+exit (42);
+  ;
+  return 0;
+}
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; } &&
+	 { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  break
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+fi
+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+done
+rm -f conftest*
+if test -n "$ac_declaration"; then
+  echo '#ifdef __cplusplus' >>confdefs.h
+  echo $ac_declaration      >>confdefs.h
+  echo '#endif'             >>confdefs.h
+fi
+
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+fi
+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+DEPDIR="${am__leading_dot}deps"
+
+          ac_config_commands="$ac_config_commands depfiles"
+
+
+am_make=${MAKE-make}
+cat > confinc << 'END'
+am__doit:
+	@echo done
+.PHONY: am__doit
+END
+# If we don't find an include directive, just comment out the code.
+echo "$as_me:$LINENO: checking for style of include used by $am_make" >&5
+echo $ECHO_N "checking for style of include used by $am_make... $ECHO_C" >&6
+am__include="#"
+am__quote=
+_am_result=none
+# First try GNU make style include.
+echo "include confinc" > confmf
+# We grep out `Entering directory' and `Leaving directory'
+# messages which can occur if `w' ends up in MAKEFLAGS.
+# In particular we don't look at `^make:' because GNU make might
+# be invoked under some other name (usually "gmake"), in which
+# case it prints its new name instead of `make'.
+if test "`$am_make -s -f confmf 2> /dev/null | grep -v 'ing directory'`" = "done"; then
+   am__include=include
+   am__quote=
+   _am_result=GNU
+fi
+# Now try BSD make style include.
+if test "$am__include" = "#"; then
+   echo '.include "confinc"' > confmf
+   if test "`$am_make -s -f confmf 2> /dev/null`" = "done"; then
+      am__include=.include
+      am__quote="\""
+      _am_result=BSD
+   fi
+fi
+
+
+echo "$as_me:$LINENO: result: $_am_result" >&5
+echo "${ECHO_T}$_am_result" >&6
+rm -f confinc confmf
+
+# Check whether --enable-dependency-tracking or --disable-dependency-tracking was given.
+if test "${enable_dependency_tracking+set}" = set; then
+  enableval="$enable_dependency_tracking"
+
+fi;
+if test "x$enable_dependency_tracking" != xno; then
+  am_depcomp="$ac_aux_dir/depcomp"
+  AMDEPBACKSLASH='\'
+fi
+
+
+if test "x$enable_dependency_tracking" != xno; then
+  AMDEP_TRUE=
+  AMDEP_FALSE='#'
+else
+  AMDEP_TRUE='#'
+  AMDEP_FALSE=
+fi
+
+
+
+
+depcc="$CC"   am_compiler_list=
+
+echo "$as_me:$LINENO: checking dependency style of $depcc" >&5
+echo $ECHO_N "checking dependency style of $depcc... $ECHO_C" >&6
+if test "${am_cv_CC_dependencies_compiler_type+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
+  # We make a subdir and do the tests there.  Otherwise we can end up
+  # making bogus files that we don't know about and never remove.  For
+  # instance it was reported that on HP-UX the gcc test will end up
+  # making a dummy file named `D' -- because `-MD' means `put the output
+  # in D'.
+  mkdir conftest.dir
+  # Copy depcomp to subdir because otherwise we won't find it if we're
+  # using a relative directory.
+  cp "$am_depcomp" conftest.dir
+  cd conftest.dir
+  # We will build objects and dependencies in a subdirectory because
+  # it helps to detect inapplicable dependency modes.  For instance
+  # both Tru64's cc and ICC support -MD to output dependencies as a
+  # side effect of compilation, but ICC will put the dependencies in
+  # the current directory while Tru64 will put them in the object
+  # directory.
+  mkdir sub
+
+  am_cv_CC_dependencies_compiler_type=none
+  if test "$am_compiler_list" = ""; then
+     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
+  fi
+  for depmode in $am_compiler_list; do
+    # Setup a source with many dependencies, because some compilers
+    # like to wrap large dependency lists on column 80 (with \), and
+    # we should not choose a depcomp mode which is confused by this.
+    #
+    # We need to recreate these files for each test, as the compiler may
+    # overwrite some of them when testing with obscure command lines.
+    # This happens at least with the AIX C compiler.
+    : > sub/conftest.c
+    for i in 1 2 3 4 5 6; do
+      echo '#include "conftst'$i'.h"' >> sub/conftest.c
+      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
+      # Solaris 8's {/usr,}/bin/sh.
+      touch sub/conftst$i.h
+    done
+    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
+
+    case $depmode in
+    nosideeffect)
+      # after this tag, mechanisms are not by side-effect, so they'll
+      # only be used when explicitly requested
+      if test "x$enable_dependency_tracking" = xyes; then
+	continue
+      else
+	break
+      fi
+      ;;
+    none) break ;;
+    esac
+    # We check with `-c' and `-o' for the sake of the "dashmstdout"
+    # mode.  It turns out that the SunPro C++ compiler does not properly
+    # handle `-M -o', and we need to detect this.
+    if depmode=$depmode \
+       source=sub/conftest.c object=sub/conftest.${OBJEXT-o} \
+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
+       $SHELL ./depcomp $depcc -c -o sub/conftest.${OBJEXT-o} sub/conftest.c \
+         >/dev/null 2>conftest.err &&
+       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep sub/conftest.${OBJEXT-o} sub/conftest.Po > /dev/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+      # icc doesn't choke on unknown options, it will just issue warnings
+      # (even with -Werror).  So we grep stderr for any message
+      # that says an option was ignored.
+      if grep 'ignoring option' conftest.err >/dev/null 2>&1; then :; else
+        am_cv_CC_dependencies_compiler_type=$depmode
+        break
+      fi
+    fi
+  done
+
+  cd ..
+  rm -rf conftest.dir
+else
+  am_cv_CC_dependencies_compiler_type=none
+fi
+
+fi
+echo "$as_me:$LINENO: result: $am_cv_CC_dependencies_compiler_type" >&5
+echo "${ECHO_T}$am_cv_CC_dependencies_compiler_type" >&6
+CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type
+
+
+
+if
+  test "x$enable_dependency_tracking" != xno \
+  && test "$am_cv_CC_dependencies_compiler_type" = gcc3; then
+  am__fastdepCC_TRUE=
+  am__fastdepCC_FALSE='#'
+else
+  am__fastdepCC_TRUE='#'
+  am__fastdepCC_FALSE=
+fi
+
+
+if test "x$ac_cv_c_compiler_gnu" != "xyes" ; then
+  { echo "$as_me:$LINENO: WARNING: \"C compiler is not gcc. This may lead to problems!\"" >&5
+echo "$as_me: WARNING: \"C compiler is not gcc. This may lead to problems!\"" >&2;};
+  { echo "$as_me:$LINENO: WARNING: \"Trying to continue with $CC ...\"" >&5
+echo "$as_me: WARNING: \"Trying to continue with $CC ...\"" >&2;};
+fi
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ranlib", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ranlib; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_RANLIB+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$RANLIB"; then
+  ac_cv_prog_RANLIB="$RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_RANLIB="${ac_tool_prefix}ranlib"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+fi
+fi
+RANLIB=$ac_cv_prog_RANLIB
+if test -n "$RANLIB"; then
+  echo "$as_me:$LINENO: result: $RANLIB" >&5
+echo "${ECHO_T}$RANLIB" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+fi
+if test -z "$ac_cv_prog_RANLIB"; then
+  ac_ct_RANLIB=$RANLIB
+  # Extract the first word of "ranlib", so it can be a program name with args.
+set dummy ranlib; ac_word=$2
+echo "$as_me:$LINENO: checking for $ac_word" >&5
+echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
+if test "${ac_cv_prog_ac_ct_RANLIB+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  if test -n "$ac_ct_RANLIB"; then
+  ac_cv_prog_ac_ct_RANLIB="$ac_ct_RANLIB" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_RANLIB="ranlib"
+    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+
+  test -z "$ac_cv_prog_ac_ct_RANLIB" && ac_cv_prog_ac_ct_RANLIB=":"
+fi
+fi
+ac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB
+if test -n "$ac_ct_RANLIB"; then
+  echo "$as_me:$LINENO: result: $ac_ct_RANLIB" >&5
+echo "${ECHO_T}$ac_ct_RANLIB" >&6
+else
+  echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+fi
+
+  RANLIB=$ac_ct_RANLIB
+else
+  RANLIB="$ac_cv_prog_RANLIB"
+fi
+
+# Find a good install program.  We prefer a C program (faster),
+# so one script is as good as another.  But avoid the broken or
+# incompatible versions:
+# SysV /etc/install, /usr/sbin/install
+# SunOS /usr/etc/install
+# IRIX /sbin/install
+# AIX /bin/install
+# AmigaOS /C/install, which installs bootblocks on floppy discs
+# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag
+# AFS /usr/afsws/bin/install, which mishandles nonexistent args
+# SVR4 /usr/ucb/install, which tries to use the nonexistent group "staff"
+# OS/2's system install, which has a completely different semantic
+# ./install, which can be erroneously created by make from ./install.sh.
+echo "$as_me:$LINENO: checking for a BSD-compatible install" >&5
+echo $ECHO_N "checking for a BSD-compatible install... $ECHO_C" >&6
+if test -z "$INSTALL"; then
+if test "${ac_cv_path_install+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  # Account for people who put trailing slashes in PATH elements.
+case $as_dir/ in
+  ./ | .// | /cC/* | \
+  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \
+  ?:\\/os2\\/install\\/* | ?:\\/OS2\\/INSTALL\\/* | \
+  /usr/ucb/* ) ;;
+  *)
+    # OSF1 and SCO ODT 3.0 have their own names for install.
+    # Don't use installbsd from OSF since it installs stuff as root
+    # by default.
+    for ac_prog in ginstall scoinst install; do
+      for ac_exec_ext in '' $ac_executable_extensions; do
+	if $as_executable_p "$as_dir/$ac_prog$ac_exec_ext"; then
+	  if test $ac_prog = install &&
+	    grep dspmsg "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # AIX install.  It has an incompatible calling convention.
+	    :
+	  elif test $ac_prog = install &&
+	    grep pwplus "$as_dir/$ac_prog$ac_exec_ext" >/dev/null 2>&1; then
+	    # program-specific install script used by HP pwplus--don't use.
+	    :
+	  else
+	    ac_cv_path_install="$as_dir/$ac_prog$ac_exec_ext -c"
+	    break 3
+	  fi
+	fi
+      done
+    done
+    ;;
+esac
+done
+
+
+fi
+  if test "${ac_cv_path_install+set}" = set; then
+    INSTALL=$ac_cv_path_install
+  else
+    # As a last resort, use the slow shell script.  We don't cache a
+    # path for INSTALL within a source directory, because that will
+    # break other packages using the cache if that directory is
+    # removed, or if the path is relative.
+    INSTALL=$ac_install_sh
+  fi
+fi
+echo "$as_me:$LINENO: result: $INSTALL" >&5
+echo "${ECHO_T}$INSTALL" >&6
+
+# Use test -z because SunOS4 sh mishandles braces in ${var-val}.
+# It thinks the first close brace ends the variable substitution.
+test -z "$INSTALL_PROGRAM" && INSTALL_PROGRAM='${INSTALL}'
+
+test -z "$INSTALL_SCRIPT" && INSTALL_SCRIPT='${INSTALL}'
+
+test -z "$INSTALL_DATA" && INSTALL_DATA='${INSTALL} -m 644'
+
+echo "$as_me:$LINENO: checking whether ln -s works" >&5
+echo $ECHO_N "checking whether ln -s works... $ECHO_C" >&6
+LN_S=$as_ln_s
+if test "$LN_S" = "ln -s"; then
+  echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6
+else
+  echo "$as_me:$LINENO: result: no, using $LN_S" >&5
+echo "${ECHO_T}no, using $LN_S" >&6
+fi
+
+# By default we simply use the C compiler to build assembly code.
+
+test "${CCAS+set}" = set || CCAS=$CC
+test "${CCASFLAGS+set}" = set || CCASFLAGS=$CFLAGS
+
+
+
+
+
+
+
+
+
+
+
+
+
+# Check whether --with-board or --without-board was given.
+if test "${with_board+set}" = set; then
+  withval="$with_board"
+  board_name="$withval"
+else
+  board_name="lart"
+fi;
+
+
+BLOB_TARGET="$board_name"
+
+echo "$as_me:$LINENO: checking target board" >&5
+echo $ECHO_N "checking target board... $ECHO_C" >&6
+case "$board_name" in
+    accelent_sa)
+	board_name="Accelent IDP"
+
+cat >>confdefs.h <<\_ACEOF
+#define ACCELENT_SA 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="accelent_sa.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="accelent_sa.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    assabet)
+	board_name="Intel Assabet"
+
+cat >>confdefs.h <<\_ACEOF
+#define ASSABET 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="assabet.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	{ echo "$as_me:$LINENO: WARNING: Please check assabet memory config in arch/assabet.h" >&5
+echo "$as_me: WARNING: Please check assabet memory config in arch/assabet.h" >&2;}
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="assabet.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    neponset)
+	board_name="Intel Assabet with Neponset Expansion Board"
+
+cat >>confdefs.h <<\_ACEOF
+#define ASSABET 1
+_ACEOF
+
+
+cat >>confdefs.h <<\_ACEOF
+#define NEPONSET 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="assabet.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	{ echo "$as_me:$LINENO: WARNING: Please check assabet memory config in arch/assabet.h" >&5
+echo "$as_me: WARNING: Please check assabet memory config in arch/assabet.h" >&2;}
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="assabet.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    badge4)
+	board_name="Hewlett-Packard Laboratories Badge-4"
+
+cat >>confdefs.h <<\_ACEOF
+#define BADGE4 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="badge4.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	BLOB_FLASH_OBJS="intel16.o"
+	DIAG_PLATFORM_OBJS="badge4.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    brutus)
+	board_name="Intel Brutus"
+
+cat >>confdefs.h <<\_ACEOF
+#define BRUTUS 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="brutus.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	{ echo "$as_me:$LINENO: WARNING: Please check Brutus flash" >&5
+echo "$as_me: WARNING: Please check Brutus flash" >&2;}
+	BLOB_FLASH_OBJS="nullflash.o"
+	DIAG_PLATFORM_OBJS="brutus.o"
+	use_cpu="sa1100"
+	use_lcd="no"
+	;;
+    cep)
+        board_name="Iskratel CEP"
+
+cat >>confdefs.h <<\_ACEOF
+#define CEP 1
+_ACEOF
+
+        BLOB_PLATFORM_OBJS="cep.o"
+        BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+        BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+        { echo "$as_me:$LINENO: WARNING: Please check configuration in arch/cep.h" >&5
+echo "$as_me: WARNING: Please check configuration in arch/cep.h" >&2;}
+        BLOB_FLASH_OBJS="intel32.o"
+        DIAG_PLATFORM_OBJS="cep.o"
+        use_cpu="sa1110"
+        use_lcd="no"
+        ;;
+    creditlart)
+	board_name="Delft University of Technology CreditLART"
+
+cat >>confdefs.h <<\_ACEOF
+#define CLART 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="clart.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	{ echo "$as_me:$LINENO: WARNING: Please check creditlart memory config in arch/clart.h" >&5
+echo "$as_me: WARNING: Please check creditlart memory config in arch/clart.h" >&2;}
+	BLOB_FLASH_OBJS="intel16.o"
+	DIAG_PLATFORM_OBJS="clart.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    dafit)
+	board_name="Prueftechnik VibXpert"
+
+cat >>confdefs.h <<\_ACEOF
+#define PT_DAFIT 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="dafit.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_NETWORK_DRIVER_OBJS="ether-smc9196.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="dafit.o"
+	use_cpu="sa1110"
+	use_lcd="yes"
+	;;
+    frodo)
+	board_name="2d3D, Inc. SA-1110 Development Board"
+
+cat >>confdefs.h <<\_ACEOF
+#define FRODO 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="frodo.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="frodo.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    h3600)
+	board_name="Compaq Ipaq H3600 series"
+
+cat >>confdefs.h <<\_ACEOF
+#define H3600 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="h3600.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	{ echo "$as_me:$LINENO: WARNING: Warning: untested platform!" >&5
+echo "$as_me: WARNING: Warning: untested platform!" >&2;}
+	{ echo "$as_me:$LINENO: WARNING: Please check h3600 memory config in arch/h3600.h" >&5
+echo "$as_me: WARNING: Please check h3600 memory config in arch/h3600.h" >&2;}
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="h3600.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    hackkit)
+	board_name="The Hack Kit base cpu board"
+
+cat >>confdefs.h <<\_ACEOF
+#define HKIT 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="hackkit.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="hackkit.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    idr)
+	board_name="Vercel UD-1 (IDR)"
+
+cat >>confdefs.h <<\_ACEOF
+#define IDR 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="idr.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	BLOB_FLASH_OBJS="intel16.o"
+	DIAG_PLATFORM_OBJS="idr.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    jornada720)
+	board_name="Hewlett-Packard Jornada 720 with flash daughter board"
+
+cat >>confdefs.h <<\_ACEOF
+#define JORNADA720 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="jornada720.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	{ echo "$as_me:$LINENO: WARNING: Warning: untested platform!" >&5
+echo "$as_me: WARNING: Warning: untested platform!" >&2;}
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="jornada720.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    lart)
+	board_name="Delft University of Technology LART"
+
+cat >>confdefs.h <<\_ACEOF
+#define LART 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="lart.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="lart.o"
+	use_cpu="sa1100"
+	use_lcd="no"
+	;;
+    lubbock)
+    	board_name="Intel HCDDBCTA1 (Lubbock)"
+
+cat >>confdefs.h <<\_ACEOF
+#define LUBBOCK 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="lubbock.o"
+	BLOB_LED_DRIVER_OBJS="led-mmap.o"
+	BLOB_LED_STARTCODE="ledasm-mmap.o"
+	BLOB_FLASH_OBJS="intel32.o"
+	BLOB_NETWORK_DRIVER_OBJS="ether-smc91x.o"
+	DIAG_PLATFORM_OBJS="lubbock.o"
+	use_cpu="pxa250"
+	use_lcd="no"
+	;;
+    mainstone)
+    	board_name="Intel HCDDBBVA0 (Mainstone)"
+
+cat >>confdefs.h <<\_ACEOF
+#define MAINSTONE 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="mainstone.o"
+	BLOB_LED_DRIVER_OBJS="led-mmap.o"
+	BLOB_LED_STARTCODE="ledasm-mmap.o"
+	BLOB_FLASH_OBJS="intel16.o"
+        BLOB_SPI_OBJS="pxa-bb-spi.o"
+		BLOB_LCD_OBJS="pxa-lcd.o"
+	BLOB_NETWORK_DRIVER_OBJS="ether-smc91x.o"
+	DIAG_PLATFORM_OBJS="mainstone.o"
+	use_cpu="pxa250"
+	use_lcd="yes"
+	;;
+    miniprint)
+        board_name="FGAG miniprint"
+
+cat >>confdefs.h <<\_ACEOF
+#define MINIPRINT 1
+_ACEOF
+
+        BLOB_PLATFORM_OBJS="miniprint.o"
+        BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+        BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+        BLOB_FLASH_OBJS="intel32.o"
+        DIAG_PLATFORM_OBJS="miniprint.o"
+        use_cpu="sa1110"
+        use_lcd="yes"
+        ;;
+    nesa)
+	board_name="NESA"
+
+cat >>confdefs.h <<\_ACEOF
+#define NESA 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="nesa.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	BLOB_FLASH_OBJS="amd32.o"
+	DIAG_PLATFORM_OBJS="nesa.o"
+	use_cpu="sa1100"
+	use_lcd="no"
+	;;
+    pleb)
+	board_name="University of New South Wales PLEB"
+
+cat >>confdefs.h <<\_ACEOF
+#define PLEB 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="pleb.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	{ echo "$as_me:$LINENO: WARNING: Please check PLEB flash" >&5
+echo "$as_me: WARNING: Please check PLEB flash" >&2;}
+	BLOB_FLASH_OBJS="nullflash.o"
+	DIAG_PLATFORM_OBJS="pleb.o"
+	use_cpu="sa1100"
+	use_lcd="no"
+	;;
+    pxa_idp)
+	board_name="Accelent PXA250 IDP"
+
+cat >>confdefs.h <<\_ACEOF
+#define PXA_IDP 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="pxa_idp.o"
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="pxa_idp.o"
+	use_cpu="pxa250"
+	use_lcd="no"
+	;;
+    ramses)
+	board_name="M&N MN-CI Logistic Terminal (ramses)"
+
+cat >>confdefs.h <<\_ACEOF
+#define RAMSES 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="ramses.o"
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="ramses.o"
+	use_cpu="pxa250"
+	use_lcd="no"
+	;;
+    shannon)
+	board_name="TuxScreen (Shannon)"
+
+cat >>confdefs.h <<\_ACEOF
+#define SHANNON 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="shannon.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	BLOB_FLASH_OBJS="amd32.o"
+	DIAG_PLATFORM_OBJS="shannon.o"
+	use_cpu="sa1100"
+	use_lcd="no"
+	;;
+    smdk2500)
+	board_name="SMDK2500 Evaluation Board"
+
+cat >>confdefs.h <<\_ACEOF
+#define SMDK2500 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="smdk2500.o"
+	BLOB_LED_DRIVER_OBJS="led-s3c2500.o"
+	BLOB_NETWORK_DRIVER_OBJS="ether-s3c2500.o"
+	BLOB_LED_STARTCODE="ledasm-s3c2500.o"
+	BLOB_FLASH_OBJS="amd16.o"
+	DIAG_PLATFORM_OBJS="smdk2500.o"
+	use_cpu="s3c2500"
+	use_lcd="no"
+	;;
+    system3)
+	board_name="Prueftechnik Digital Board REV 0802"
+
+cat >>confdefs.h <<\_ACEOF
+#define PT_SYSTEM3 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="system3.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_NETWORK_DRIVER_OBJS="ether-smc9196.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	BLOB_FLASH_OBJS="intel32.o"
+	DIAG_PLATFORM_OBJS="system3.o"
+	use_cpu="sa1110"
+	use_lcd="yes"
+	;;
+    trizeps)
+	board_name="Keith & Koep Trizeps Board"
+
+cat >>confdefs.h <<\_ACEOF
+#define TRIZEPS 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="trizeps.o"
+	BLOB_LED_DRIVER_OBJS="led-sa11x0.o"
+	BLOB_LED_STARTCODE="ledasm-sa11x0.o"
+	{ echo "$as_me:$LINENO: WARNING: Warning: untested platform!" >&5
+echo "$as_me: WARNING: Warning: untested platform!" >&2;}
+	{ echo "$as_me:$LINENO: WARNING: Please check trizeps memory config in arch/trizeps.h" >&5
+echo "$as_me: WARNING: Please check trizeps memory config in arch/trizeps.h" >&2;}
+	BLOB_FLASH_OBJS="intel16.o"
+	DIAG_PLATFORM_OBJS="trizeps.o"
+	use_cpu="sa1110"
+	use_lcd="no"
+	;;
+    csir_ims)
+	board_name="CSIR Incident Management System"
+
+cat >>confdefs.h <<\_ACEOF
+#define CSIR_IMS 1
+_ACEOF
+
+	BLOB_PLATFORM_OBJS="csir_ims.o"
+	BLOB_FLASH_OBJS="intel16.o"
+	DIAG_PLATFORM_OBJS="csir_ims.o"
+	use_cpu="pxa250"
+	use_lcd="no"
+	;;
+    *)
+	echo "$as_me:$LINENO: result: unknown" >&5
+echo "${ECHO_T}unknown" >&6
+	{ { echo "$as_me:$LINENO: error: Unknown board name \"$board_name\", bailing out" >&5
+echo "$as_me: error: Unknown board name \"$board_name\", bailing out" >&2;}
+   { (exit 1); exit 1; }; }
+	;;
+esac
+
+
+
+
+
+
+
+
+
+echo "$as_me:$LINENO: result: \"${board_name}\"" >&5
+echo "${ECHO_T}\"${board_name}\"" >&6
+
+cat >>confdefs.h <<_ACEOF
+#define BOARD_NAME "${board_name}"
+_ACEOF
+
+
+cat >>confdefs.h <<_ACEOF
+#define CPU "${use_cpu}"
+_ACEOF
+
+
+
+case "$use_cpu" in
+    s3c2500)
+
+cat >>confdefs.h <<\_ACEOF
+#define S3C2500 1
+_ACEOF
+
+	BLOB_STARTCODE_OBJS="start-s3c2500.o"
+	BLOB_MEMSETUP_OBJS="memsetup-s3c2500.o"
+	BLOB_REBOOT_DRIVER_OBJS="reboot-s3c2500.o"
+	BLOB_SERIAL_DRIVER_OBJS="serial-s3c2500.o"
+	BLOB_TIMER_DRIVER_OBJS="time-s3c2500.o"
+	;;
+    sa1100)
+
+cat >>confdefs.h <<\_ACEOF
+#define SA1100 1
+_ACEOF
+
+	BLOB_STARTCODE_OBJS="start-sa11x0.o"
+	BLOB_MEMSETUP_OBJS="memsetup-sa1100.o"
+	BLOB_REBOOT_DRIVER_OBJS="reboot-sa11x0.o"
+	BLOB_SERIAL_DRIVER_OBJS="serial-sa11x0.o"
+	BLOB_TIMER_DRIVER_OBJS="time-intelarm.o"
+	;;
+    sa1110)
+
+cat >>confdefs.h <<\_ACEOF
+#define SA1110 1
+_ACEOF
+
+	BLOB_STARTCODE_OBJS="start-sa11x0.o"
+	BLOB_MEMSETUP_OBJS="memsetup-sa1110.o"
+	BLOB_REBOOT_DRIVER_OBJS="reboot-sa11x0.o"
+	BLOB_SERIAL_DRIVER_OBJS="serial-sa11x0.o"
+	BLOB_TIMER_DRIVER_OBJS="time-intelarm.o"
+	;;
+    pxa250)
+
+cat >>confdefs.h <<\_ACEOF
+#define PXA250 1
+_ACEOF
+
+	BLOB_STARTCODE_OBJS="start-pxa.o gpio-pxa.o"
+	BLOB_MEMSETUP_OBJS="memsetup-pxa.o"
+	BLOB_REBOOT_DRIVER_OBJS="reboot-pxa.o"
+	BLOB_SERIAL_DRIVER_OBJS="serial-pxa.o"
+	BLOB_TIMER_DRIVER_OBJS="time-intelarm.o"
+	;;
+    *)
+	{ { echo "$as_me:$LINENO: error: Unknown CPU name \"$use_cpu\", bailing out" >&5
+echo "$as_me: error: Unknown CPU name \"$use_cpu\", bailing out" >&2;}
+   { (exit 1); exit 1; }; };
+	;;
+esac
+
+# Check whether --enable-xlli or --disable-xlli was given.
+if test "${enable_xlli+set}" = set; then
+  enableval="$enable_xlli"
+  use_xlli_flag=$enable_xlli
+else
+  use_xlli_flag=no
+fi;
+
+if test "x$use_xlli_flag" = "xyes" ; then
+	BLOB_STARTCODE_OBJS="xlli/$BLOB_TARGET/libxlli.a"
+	BLOB_MEMSETUP_OBJS=""
+else
+	BLOB_TARGET=""
+fi
+
+# Check whether --enable-usbdnet or --disable-usbdnet was given.
+if test "${enable_usbdnet+set}" = set; then
+  enableval="$enable_usbdnet"
+  usbdnet_flag=$enable_usbdnet
+else
+  usbdnet_flag=no
+fi;
+
+if test "x$usbdnet_flag" = "xyes" ; then
+	case "$BLOB_TARGET" in
+	     lubbock)
+		BLOB_NETWORK_DRIVER_OBJS="ether-pxausb.o pxa_usb_ctl.o pxa_usb_ep0.o pxa_usb_ep1.o pxa_usb_ep2.o"
+		;;
+	     mainstone)
+		BLOB_NETWORK_DRIVER_OBJS="ether-bvdusb.o bvd_usb_ctl.o bvd_usb_ep0.o bvd_usb_ep1.o bvd_usb_ep2.o"
+		;;
+	    *)
+		{ { echo "$as_me:$LINENO: error: No USBDNET support for Target Board \"$BLOB_TARGET\", bailing out" >&5
+echo "$as_me: error: No USBDNET support for Target Board \"$BLOB_TARGET\", bailing out" >&2;}
+   { (exit 1); exit 1; }; };
+		;;
+	esac
+
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_USBDNET_SUPPORT no
+_ACEOF
+
+fi
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+# Check whether --with-linux-prefix or --without-linux-prefix was given.
+if test "${with_linux_prefix+set}" = set; then
+  withval="$with_linux_prefix"
+  linux_prefix="$withval"
+else
+  linux_prefix="/usr/src/linux"
+fi;
+
+echo "$as_me:$LINENO: checking if the Linux source tree in $linux_prefix is sane" >&5
+echo $ECHO_N "checking if the Linux source tree in $linux_prefix is sane... $ECHO_C" >&6
+if test ! -d "$linux_prefix/include" ; then
+	echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+	{ { echo "$as_me:$LINENO: error: $linux_prefix doesn't look like a configured Linux source tree." >&5
+echo "$as_me: error: $linux_prefix doesn't look like a configured Linux source tree." >&2;}
+   { (exit 1); exit 1; }; }
+	{ { echo "$as_me:$LINENO: error: Please supply a proper prefix with the --with-linux-prefix flag" >&5
+echo "$as_me: error: Please supply a proper prefix with the --with-linux-prefix flag" >&2;}
+   { (exit 1); exit 1; }; }
+	exit -1
+fi
+if test ! -f "$linux_prefix/include/asm-arm/setup.h" ; then
+	echo "$as_me:$LINENO: result: no" >&5
+echo "${ECHO_T}no" >&6
+	{ { echo "$as_me:$LINENO: error: The Linux source tree in $linux_prefix is not configured." >&5
+echo "$as_me: error: The Linux source tree in $linux_prefix is not configured." >&2;}
+   { (exit 1); exit 1; }; }
+	{ { echo "$as_me:$LINENO: error: Please run \"make lart_config ; yes no | make old_config\" in the" >&5
+echo "$as_me: error: Please run \"make lart_config ; yes no | make old_config\" in the" >&2;}
+   { (exit 1); exit 1; }; }
+	{ { echo "$as_me:$LINENO: error: Linux source tree and retry." >&5
+echo "$as_me: error: Linux source tree and retry." >&2;}
+   { (exit 1); exit 1; }; }
+	exit -1
+fi
+echo "$as_me:$LINENO: result: yes" >&5
+echo "${ECHO_T}yes" >&6
+LINUX_INCLUDE=${linux_prefix}/include
+
+CFLAGS=`echo $AM_CFLAGS -I$LINUX_INCLUDE`
+
+
+
+
+
+# Check whether --with-commands or --without-commands was given.
+if test "${with_commands+set}" = set; then
+  withval="$with_commands"
+  blob_commands="$withval"
+else
+  blob_commands=""
+fi;
+
+default_commands="reset, reboot"
+all_commands="bogomips, call, chgbit, dummy, dump, md5chk, memcpy, poke, peek"
+
+if test "$blob_commands" = "all" ; then
+	blob_commands="$all_commands"
+fi
+
+
+
+# Check whether --with-kernel-xip or --without-kernel-xip was given.
+if test "${with_kernel_xip+set}" = set; then
+  withval="$with_kernel_xip"
+  kernel_xip=$withval
+else
+  kernel_xip="no"
+fi;
+
+if test "$kernel_xip" != "no" ; then
+
+cat >>confdefs.h <<_ACEOF
+#define KERNEL_XIP_BASE ${kernel_xip}
+_ACEOF
+
+fi
+
+# Check whether --enable-clock-scaling or --disable-clock-scaling was given.
+if test "${enable_clock_scaling+set}" = set; then
+  enableval="$enable_clock_scaling"
+  clock_scaling_flag=$enable_clock_scaling
+else
+  clock_scaling_flag=no
+fi;
+
+# Check whether --enable-memtest or --disable-memtest was given.
+if test "${enable_memtest+set}" = set; then
+  enableval="$enable_memtest"
+  chkmem_flag=$enable_memtest
+else
+  chkmem_flag=no
+fi;
+
+# Check whether --enable-lcd or --disable-lcd was given.
+if test "${enable_lcd+set}" = set; then
+  enableval="$enable_lcd"
+  lcd_flag=$enable_lcd
+else
+  lcd_flag=no
+fi;
+
+# Check whether --enable-md5 or --disable-md5 was given.
+if test "${enable_md5+set}" = set; then
+  enableval="$enable_md5"
+  md5_flag=$enable_md5
+else
+  md5_flag=no
+fi;
+
+# Check whether --enable-xmodem or --disable-xmodem was given.
+if test "${enable_xmodem+set}" = set; then
+  enableval="$enable_xmodem"
+  xmodem_flag=$enable_xmodem
+else
+  xmodem_flag=no
+fi;
+
+# Check whether --enable-usbserial or --disable-usbserial was given.
+if test "${enable_usbserial+set}" = set; then
+  enableval="$enable_usbserial"
+  usbserial_flag=$enable_usbserial
+else
+  usbserial_flag=no
+fi;
+
+# Check whether --enable-uucodec or --disable-uucodec was given.
+if test "${enable_uucodec+set}" = set; then
+  enableval="$enable_uucodec"
+  uucodec_flag=$enable_uucodec
+else
+  uucodec_flag=no
+fi;
+
+# Check whether --enable-jffs2 or --disable-jffs2 was given.
+if test "${enable_jffs2+set}" = set; then
+  enableval="$enable_jffs2"
+  jffs2_flag=$enable_jffs2
+else
+  jffs2_flag=no
+fi;
+
+# Check whether --enable-cramfs or --disable-cramfs was given.
+if test "${enable_cramfs+set}" = set; then
+  enableval="$enable_cramfs"
+  cramfs_flag=$enable_cramfs
+else
+  cramfs_flag=no
+fi;
+
+# Check whether --enable-zimage or --disable-zimage was given.
+if test "${enable_zimage+set}" = set; then
+  enableval="$enable_zimage"
+  zimage_flag=$enable_zimage
+else
+  zimage_flag=no
+fi;
+
+# Check whether --enable-network or --disable-network was given.
+if test "${enable_network+set}" = set; then
+  enableval="$enable_network"
+  network_flag=$enable_network
+else
+  network_flag=no
+fi;
+
+
+# Check whether --enable-gio or --disable-gio was given.
+if test "${enable_gio+set}" = set; then
+  enableval="$enable_gio"
+  gio_flag=$enable_gio
+else
+  gio_flag=no
+fi;
+
+
+
+# Check whether --enable-all-features or --disable-all-features was given.
+if test "${enable_all_features+set}" = set; then
+  enableval="$enable_all_features"
+  all_features_flag=$enable_all_features
+else
+  all_features_flag=no
+fi;
+
+if test "x$all_features_flag" = "xyes" ; then
+	clock_scaling_flag=yes
+	chkmem_flag=yes
+	lcd_flag=yes
+	md5_flag=yes
+	xmodem_flag=yes
+	usbserial_flag=yes
+	uucodec_flag=yes
+	jffs2_flag=yes
+	cramfs_flag=yes
+	zimage_flag=yes
+	network_flag=yes
+	network_flag=yes
+fi
+
+
+
+
+if test "x$clock_scaling_flag" = "xyes" ; then
+	if test "x$use_cpu" = "xsa1100"; then
+		BLOB_CLOCK_OBJS="clock.o"
+	else
+		{ echo "$as_me:$LINENO: WARNING: No clock scaling support for SA1110 CPUs, disabling" >&5
+echo "$as_me: WARNING: No clock scaling support for SA1110 CPUs, disabling" >&2;}
+		clock_scaling_flag=no
+		BLOB_CLOCK_OBJS=""
+	fi
+fi
+
+
+
+
+
+
+if test "x$chkmem_flag" = "xyes" ; then
+	BLOB_CHKMEM_OBJS="chkmem.o"
+fi
+
+
+
+
+
+
+if test "x$lcd_flag" = "xyes" ; then
+	if test "x$use_lcd" = "xyes" ; then
+		DIAG_LCD_OBJS="lcd.o"
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_LCD_SUPPORT no
+_ACEOF
+
+	else
+		{ echo "$as_me:$LINENO: WARNING: No LCD support for ${board_name}, disabling" >&5
+echo "$as_me: WARNING: No LCD support for ${board_name}, disabling" >&2;}
+		LCD=""
+		lcd_flag="no"
+	fi
+fi
+
+
+
+
+
+
+if test "x$md5_flag" = "xyes" ; then
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_MD5_SUPPORT no
+_ACEOF
+
+fi
+
+
+
+
+if test "x$xmodem_flag" = "xyes" ; then
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_XMODEM_SUPPORT no
+_ACEOF
+
+	BLOB_XMODEM_OBJS="xmodem.o"
+	blob_commands="$blob_commands, xdownload";
+fi
+
+
+
+if test "x$usbserial_flag" = "xyes" ; then
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_USBSERIAL_SUPPORT no
+_ACEOF
+
+	BLOB_USBSERIAL_OBJS="serial-bvdusb.o bvd_usb_ctl.o bvd_usb_ep0.o bvd_usb_ep1.o bvd_usb_ep2.o"
+	blob_commands="$blob_commands, udownload";
+fi
+
+
+
+
+if test "x$uucodec_flag" = "xyes"; then
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_UUCODEC_SUPPORT no
+_ACEOF
+
+	BLOB_UUCODEC_OBJS="uucodec.o"
+	blob_commands="$blob_commands, download";
+fi
+
+
+
+
+
+
+if test "x$jffs2_flag" = "xyes" ; then
+	BLOB_JFFS2_OBJS="compr_rtime.o compr_rubin.o jffs2.o"
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_JFFS2_SUPPORT no
+_ACEOF
+
+fi
+
+
+
+
+
+
+if test "x$cramfs_flag" = "xyes" ; then
+	BLOB_CRAMFS_OBJS="cramfs.o"
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_CRAMFS_SUPPORT no
+_ACEOF
+
+fi
+
+
+
+
+if test "x$zimage_flag" = "xyes" ; then
+	BLOB_ZIMAGE_OBJS="zImage.o"
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_ZIMAGE_SUPPORT no
+_ACEOF
+
+fi
+
+
+
+if test "x$network_flag" = "xyes" ; then
+	BLOB_NETWORK_OBJS="bootp.o arp.o tftp.o ip_bits.o"
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_NETWORK_SUPPORT no
+_ACEOF
+
+	blob_commands="$blob_commands, arp, autoip, setip, tdownload, tftp";
+
+fi
+
+
+
+if test "x$gio_flag" = "xyes" ; then
+	BLOB_GIO_OBJS="generic_io.o gio_flash.o gio_part_blob.o gio_ram.o tar.o"
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_GIO_SUPPORT no
+_ACEOF
+
+	pcmcia_flag="yes";
+	ide_flag="yes";
+	cf_flag="yes";
+
+	blob_commands="$blob_commands, sysupd";
+fi
+
+
+if test "x$pcmcia_flag" = "xyes" ; then
+	BLOB_PCMCIA_OBJS="pcmcia.o"
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_PCMCIA_SUPPORT no
+_ACEOF
+
+
+fi
+
+
+if test "x$ide_flag" = "xyes" ; then
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_IDE_SUPPORT no
+_ACEOF
+
+	BLOB_IDE_OBJS="ide.o"
+fi
+
+
+if test "x$cf_flag" = "xyes" ; then
+
+cat >>confdefs.h <<\_ACEOF
+#define CONFIG_CF_SUPPORT no
+_ACEOF
+
+	BLOB_CF_OBJS="cf.o"
+fi
+
+
+# Check whether --enable-blob-debug or --disable-blob-debug was given.
+if test "${enable_blob_debug+set}" = set; then
+  enableval="$enable_blob_debug"
+  blob_debug_flag=$enable_blob_debug
+else
+  blob_debug_flag=no
+fi;
+
+if test "x$blob_debug_flag" = "xyes" ; then
+
+cat >>confdefs.h <<\_ACEOF
+#define BLOB_DEBUG no
+_ACEOF
+
+fi
+
+
+ALL_COMMANDS=`echo $default_commands $all_commands | sed 's/,//g'`
+BLOB_COMMANDS=`echo $default_commands $blob_commands | sed 's/,//g'`
+
+
+
+
+
+echo "$as_me:$LINENO: checking for inline" >&5
+echo $ECHO_N "checking for inline... $ECHO_C" >&6
+if test "${ac_cv_c_inline+set}" = set; then
+  echo $ECHO_N "(cached) $ECHO_C" >&6
+else
+  ac_cv_c_inline=no
+for ac_kw in inline __inline__ __inline; do
+  cat >conftest.$ac_ext <<_ACEOF
+/* confdefs.h.  */
+_ACEOF
+cat confdefs.h >>conftest.$ac_ext
+cat >>conftest.$ac_ext <<_ACEOF
+/* end confdefs.h.  */
+#ifndef __cplusplus
+typedef int foo_t;
+static $ac_kw foo_t static_foo () {return 0; }
+$ac_kw foo_t foo () {return 0; }
+#endif
+
+_ACEOF
+rm -f conftest.$ac_objext
+if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
+  (eval $ac_compile) 2>conftest.er1
+  ac_status=$?
+  grep -v '^ *+' conftest.er1 >conftest.err
+  rm -f conftest.er1
+  cat conftest.err >&5
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); } &&
+	 { ac_try='test -z "$ac_c_werror_flag"
+			 || test ! -s conftest.err'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; } &&
+	 { ac_try='test -s conftest.$ac_objext'
+  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
+  (eval $ac_try) 2>&5
+  ac_status=$?
+  echo "$as_me:$LINENO: \$? = $ac_status" >&5
+  (exit $ac_status); }; }; then
+  ac_cv_c_inline=$ac_kw; break
+else
+  echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+fi
+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
+done
+
+fi
+echo "$as_me:$LINENO: result: $ac_cv_c_inline" >&5
+echo "${ECHO_T}$ac_cv_c_inline" >&6
+
+
+case $ac_cv_c_inline in
+  inline | yes) ;;
+  *)
+    case $ac_cv_c_inline in
+      no) ac_val=;;
+      *) ac_val=$ac_cv_c_inline;;
+    esac
+    cat >>confdefs.h <<_ACEOF
+#ifndef __cplusplus
+#define inline $ac_val
+#endif
+_ACEOF
+    ;;
+esac
+
+
+
+
+
+
+
+pcmcia_flag=${pcmcia_flag-no}
+cf_flag=${cf_flag-no}
+ide_flag=${ide_flag-no}
+
+echo "$as_me:$LINENO: checking for C flags to get more warnings" >&5
+echo $ECHO_N "checking for C flags to get more warnings... $ECHO_C" >&6
+ac_save_CFLAGS="$AM_CFLAGS"
+
+
+if test "x$ac_cv_c_compiler_gnu" = "xyes" ; then
+    warning_CFLAGS="-Wall"
+fi
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+AM_CFLAGS="$ac_save_CFLAGS"
+if test "$warning_CFLAGS" = "none" ; then
+  echo "$as_me:$LINENO: result: none" >&5
+echo "${ECHO_T}none" >&6
+else
+  AM_CFLAGS="$CFLAGS $warning_CFLAGS"
+  echo "$as_me:$LINENO: result: $warning_CFLAGS" >&5
+echo "${ECHO_T}$warning_CFLAGS" >&6
+fi
+
+AM_CFLAGS=`echo $AM_CFLAGS | sed 's/\ *-g\ */\ /'`
+AM_LDFLAGS=`echo $AM_LDFLAGS | sed 's/\ *-g\ */\ /'`
+
+AM_CFLAGS=`echo $AM_CFLAGS | sed 's/-O2/-Os/'`
+
+
+case "$use_cpu" in
+    s3c2500)
+	cpu_cflags="-march=armv4"
+	;;
+    sa11?0)
+	cpu_cflags="-march=armv4 -mtune=strongarm1100"
+	;;
+    pxa2?0)
+		cpu_cflags="-march=armv4"
+	;;
+    *)
+	cpu_cflags=""
+	;;
+esac
+
+
+AM_CFLAGS=`echo $AM_CFLAGS $cpu_cflags -mapcs-32 -fomit-frame-pointer -fno-builtin`
+AM_LDFLAGS=`echo $AM_LDFLAGS -static -nostdlib`
+OCFLAGS="-O binary -R .note -R .comment -S"
+
+
+
+                                                                                                                                                                                              ac_config_files="$ac_config_files Makefile
+ doc/Makefile
+ include/Makefile
+ include/blob/Makefile
+ include/blob/arch/Makefile
+ include/blob/proc/Makefile
+ include/net/Makefile
+ src/Makefile
+ src/blob/Makefile
+ src/blob/xlli/Makefile
+ src/blob/xlli/mainstone/Makefile
+ src/commands/Makefile
+ src/diag/Makefile
+ src/lib/Makefile
+ tools/Makefile
+ utils/Makefile
+ utils/build/Makefile
+ utils/mkparamblock/Makefile"
+cat >confcache <<\_ACEOF
+# This file is a shell script that caches the results of configure
+# tests run on this system so they can be shared between configure
+# scripts and configure runs, see configure's option --config-cache.
+# It is not useful on other systems.  If it contains results you don't
+# want to keep, you may remove or edit it.
+#
+# config.status only pays attention to the cache file if you give it
+# the --recheck option to rerun configure.
+#
+# `ac_cv_env_foo' variables (set or unset) will be overridden when
+# loading this file, other *unset* `ac_cv_foo' will be assigned the
+# following values.
+
+_ACEOF
+
+# The following way of writing the cache mishandles newlines in values,
+# but we know of no workaround that is simple, portable, and efficient.
+# So, don't put newlines in cache variables' values.
+# Ultrix sh set writes to stderr and can't be redirected directly,
+# and sets the high bit in the cache file unless we assign to the vars.
+{
+  (set) 2>&1 |
+    case `(ac_space=' '; set | grep ac_space) 2>&1` in
+    *ac_space=\ *)
+      # `set' does not quote correctly, so add quotes (double-quote
+      # substitution turns \\\\ into \\, and sed turns \\ into \).
+      sed -n \
+	"s/'/'\\\\''/g;
+	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
+      ;;
+    *)
+      # `set' quotes correctly as required by POSIX, so do not add quotes.
+      sed -n \
+	"s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1=\\2/p"
+      ;;
+    esac;
+} |
+  sed '
+     t clear
+     : clear
+     s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
+     t end
+     /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
+     : end' >>confcache
+if diff $cache_file confcache >/dev/null 2>&1; then :; else
+  if test -w $cache_file; then
+    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
+    cat confcache >$cache_file
+  else
+    echo "not updating unwritable cache $cache_file"
+  fi
+fi
+rm -f confcache
+
+test "x$prefix" = xNONE && prefix=$ac_default_prefix
+# Let make expand exec_prefix.
+test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'
+
+# VPATH may cause trouble with some makes, so we remove $(srcdir),
+# ${srcdir} and @srcdir@ from VPATH if srcdir is ".", strip leading and
+# trailing colons and then remove the whole line if VPATH becomes empty
+# (actually we leave an empty line to preserve line numbers).
+if test "x$srcdir" = x.; then
+  ac_vpsub='/^[	 ]*VPATH[	 ]*=/{
+s/:*\$(srcdir):*/:/;
+s/:*\${srcdir}:*/:/;
+s/:*@srcdir@:*/:/;
+s/^\([^=]*=[	 ]*\):*/\1/;
+s/:*$//;
+s/^[^=]*=[	 ]*$//;
+}'
+fi
+
+DEFS=-DHAVE_CONFIG_H
+
+ac_libobjs=
+ac_ltlibobjs=
+for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue
+  # 1. Remove the extension, and $U if already installed.
+  ac_i=`echo "$ac_i" |
+	 sed 's/\$U\././;s/\.o$//;s/\.obj$//'`
+  # 2. Add them.
+  ac_libobjs="$ac_libobjs $ac_i\$U.$ac_objext"
+  ac_ltlibobjs="$ac_ltlibobjs $ac_i"'$U.lo'
+done
+LIBOBJS=$ac_libobjs
+
+LTLIBOBJS=$ac_ltlibobjs
+
+
+if test -z "${MAINTAINER_MODE_TRUE}" && test -z "${MAINTAINER_MODE_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"MAINTAINER_MODE\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"MAINTAINER_MODE\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${AMDEP_TRUE}" && test -z "${AMDEP_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"AMDEP\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"AMDEP\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+if test -z "${am__fastdepCC_TRUE}" && test -z "${am__fastdepCC_FALSE}"; then
+  { { echo "$as_me:$LINENO: error: conditional \"am__fastdepCC\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+echo "$as_me: error: conditional \"am__fastdepCC\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
+
+: ${CONFIG_STATUS=./config.status}
+ac_clean_files_save=$ac_clean_files
+ac_clean_files="$ac_clean_files $CONFIG_STATUS"
+{ echo "$as_me:$LINENO: creating $CONFIG_STATUS" >&5
+echo "$as_me: creating $CONFIG_STATUS" >&6;}
+cat >$CONFIG_STATUS <<_ACEOF
+#! $SHELL
+# Generated by $as_me.
+# Run this file to recreate the current configuration.
+# Compiler output produced by configure, useful for debugging
+# configure, is in config.log if it exists.
+
+debug=false
+ac_cs_recheck=false
+ac_cs_silent=false
+SHELL=\${CONFIG_SHELL-$SHELL}
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+## --------------------- ##
+## M4sh Initialization.  ##
+## --------------------- ##
+
+# Be Bourne compatible
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+  emulate sh
+  NULLCMD=:
+  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # is contrary to our usage.  Disable this feature.
+  alias -g '${1+"$@"}'='"$@"'
+elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
+  set -o posix
+fi
+DUALCASE=1; export DUALCASE # for MKS sh
+
+# Support unset when possible.
+if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
+  as_unset=unset
+else
+  as_unset=false
+fi
+
+
+# Work around bugs in pre-3.0 UWIN ksh.
+$as_unset ENV MAIL MAILPATH
+PS1='$ '
+PS2='> '
+PS4='+ '
+
+# NLS nuisances.
+for as_var in \
+  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
+  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
+  LC_TELEPHONE LC_TIME
+do
+  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
+    eval $as_var=C; export $as_var
+  else
+    $as_unset $as_var
+  fi
+done
+
+# Required to use basename.
+if expr a : '\(a\)' >/dev/null 2>&1; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
+  as_basename=basename
+else
+  as_basename=false
+fi
+
+
+# Name of the executable.
+as_me=`$as_basename "$0" ||
+$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$0" : 'X\(//\)$' \| \
+	 X"$0" : 'X\(/\)$' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X/"$0" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
+  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\/\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+
+
+# PATH needs CR, and LINENO needs CR and PATH.
+# Avoid depending upon Character Ranges.
+as_cr_letters='abcdefghijklmnopqrstuvwxyz'
+as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
+as_cr_Letters=$as_cr_letters$as_cr_LETTERS
+as_cr_digits='0123456789'
+as_cr_alnum=$as_cr_Letters$as_cr_digits
+
+# The user is always right.
+if test "${PATH_SEPARATOR+set}" != set; then
+  echo "#! /bin/sh" >conf$$.sh
+  echo  "exit 0"   >>conf$$.sh
+  chmod +x conf$$.sh
+  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
+    PATH_SEPARATOR=';'
+  else
+    PATH_SEPARATOR=:
+  fi
+  rm -f conf$$.sh
+fi
+
+
+  as_lineno_1=$LINENO
+  as_lineno_2=$LINENO
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  test "x$as_lineno_1" != "x$as_lineno_2" &&
+  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
+  # Find who we are.  Look in the path if we contain no path at all
+  # relative or not.
+  case $0 in
+    *[\\/]* ) as_myself=$0 ;;
+    *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
+done
+
+       ;;
+  esac
+  # We did not find ourselves, most probably we were run as `sh COMMAND'
+  # in which case we are not to be found in the path.
+  if test "x$as_myself" = x; then
+    as_myself=$0
+  fi
+  if test ! -f "$as_myself"; then
+    { { echo "$as_me:$LINENO: error: cannot find myself; rerun with an absolute path" >&5
+echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2;}
+   { (exit 1); exit 1; }; }
+  fi
+  case $CONFIG_SHELL in
+  '')
+    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for as_base in sh bash ksh sh5; do
+	 case $as_dir in
+	 /*)
+	   if ("$as_dir/$as_base" -c '
+  as_lineno_1=$LINENO
+  as_lineno_2=$LINENO
+  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
+  test "x$as_lineno_1" != "x$as_lineno_2" &&
+  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
+	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
+	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
+	     CONFIG_SHELL=$as_dir/$as_base
+	     export CONFIG_SHELL
+	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
+	   fi;;
+	 esac
+       done
+done
+;;
+  esac
+
+  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
+  # uniformly replaced by the line number.  The first 'sed' inserts a
+  # line-number line before each line; the second 'sed' does the real
+  # work.  The second script uses 'N' to pair each line-number line
+  # with the numbered line, and appends trailing '-' during
+  # substitution so that $LINENO is not a special case at line end.
+  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
+  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
+  sed '=' <$as_myself |
+    sed '
+      N
+      s,$,-,
+      : loop
+      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
+      t loop
+      s,-$,,
+      s,^['$as_cr_digits']*\n,,
+    ' >$as_me.lineno &&
+  chmod +x $as_me.lineno ||
+    { { echo "$as_me:$LINENO: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&5
+echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2;}
+   { (exit 1); exit 1; }; }
+
+  # Don't try to exec as it changes $[0], causing all sort of problems
+  # (the dirname of $[0] is not the place where we might find the
+  # original and so on.  Autoconf is especially sensible to this).
+  . ./$as_me.lineno
+  # Exit status is that of the last command.
+  exit
+}
+
+
+case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
+  *c*,-n*) ECHO_N= ECHO_C='
+' ECHO_T='	' ;;
+  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
+  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
+esac
+
+if expr a : '\(a\)' >/dev/null 2>&1; then
+  as_expr=expr
+else
+  as_expr=false
+fi
+
+rm -f conf$$ conf$$.exe conf$$.file
+echo >conf$$.file
+if ln -s conf$$.file conf$$ 2>/dev/null; then
+  # We could just check for DJGPP; but this test a) works b) is more generic
+  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
+  if test -f conf$$.exe; then
+    # Don't use ln at all; we don't have any links
+    as_ln_s='cp -p'
+  else
+    as_ln_s='ln -s'
+  fi
+elif ln conf$$.file conf$$ 2>/dev/null; then
+  as_ln_s=ln
+else
+  as_ln_s='cp -p'
+fi
+rm -f conf$$ conf$$.exe conf$$.file
+
+if mkdir -p . 2>/dev/null; then
+  as_mkdir_p=:
+else
+  test -d ./-p && rmdir ./-p
+  as_mkdir_p=false
+fi
+
+as_executable_p="test -f"
+
+# Sed expression to map a string onto a valid CPP name.
+as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"
+
+# Sed expression to map a string onto a valid variable name.
+as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"
+
+
+# IFS
+# We need space, tab and new line, in precisely that order.
+as_nl='
+'
+IFS=" 	$as_nl"
+
+# CDPATH.
+$as_unset CDPATH
+
+exec 6>&1
+
+# Open the log real soon, to keep \$[0] and so on meaningful, and to
+# report actual input values of CONFIG_FILES etc. instead of their
+# values after options handling.  Logging --version etc. is OK.
+exec 5>>config.log
+{
+  echo
+  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
+## Running $as_me. ##
+_ASBOX
+} >&5
+cat >&5 <<_CSEOF
+
+This file was extended by $as_me, which was
+generated by GNU Autoconf 2.59.  Invocation command line was
+
+  CONFIG_FILES    = $CONFIG_FILES
+  CONFIG_HEADERS  = $CONFIG_HEADERS
+  CONFIG_LINKS    = $CONFIG_LINKS
+  CONFIG_COMMANDS = $CONFIG_COMMANDS
+  $ $0 $@
+
+_CSEOF
+echo "on `(hostname || uname -n) 2>/dev/null | sed 1q`" >&5
+echo >&5
+_ACEOF
+
+# Files that config.status was made for.
+if test -n "$ac_config_files"; then
+  echo "config_files=\"$ac_config_files\"" >>$CONFIG_STATUS
+fi
+
+if test -n "$ac_config_headers"; then
+  echo "config_headers=\"$ac_config_headers\"" >>$CONFIG_STATUS
+fi
+
+if test -n "$ac_config_links"; then
+  echo "config_links=\"$ac_config_links\"" >>$CONFIG_STATUS
+fi
+
+if test -n "$ac_config_commands"; then
+  echo "config_commands=\"$ac_config_commands\"" >>$CONFIG_STATUS
+fi
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+
+ac_cs_usage="\
+\`$as_me' instantiates files from templates according to the
+current configuration.
+
+Usage: $0 [OPTIONS] [FILE]...
+
+  -h, --help       print this help, then exit
+  -V, --version    print version number, then exit
+  -q, --quiet      do not print progress messages
+  -d, --debug      don't remove temporary files
+      --recheck    update $as_me by reconfiguring in the same conditions
+  --file=FILE[:TEMPLATE]
+		   instantiate the configuration file FILE
+  --header=FILE[:TEMPLATE]
+		   instantiate the configuration header FILE
+
+Configuration files:
+$config_files
+
+Configuration headers:
+$config_headers
+
+Configuration commands:
+$config_commands
+
+Report bugs to <bug-autoconf@gnu.org>."
+_ACEOF
+
+cat >>$CONFIG_STATUS <<_ACEOF
+ac_cs_version="\\
+config.status
+configured by $0, generated by GNU Autoconf 2.59,
+  with options \\"`echo "$ac_configure_args" | sed 's/[\\""\`\$]/\\\\&/g'`\\"
+
+Copyright (C) 2003 Free Software Foundation, Inc.
+This config.status script is free software; the Free Software Foundation
+gives unlimited permission to copy, distribute and modify it."
+srcdir=$srcdir
+INSTALL="$INSTALL"
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+# If no file are specified by the user, then we need to provide default
+# value.  By we need to know if files were specified by the user.
+ac_need_defaults=:
+while test $# != 0
+do
+  case $1 in
+  --*=*)
+    ac_option=`expr "x$1" : 'x\([^=]*\)='`
+    ac_optarg=`expr "x$1" : 'x[^=]*=\(.*\)'`
+    ac_shift=:
+    ;;
+  -*)
+    ac_option=$1
+    ac_optarg=$2
+    ac_shift=shift
+    ;;
+  *) # This is not an option, so the user has probably given explicit
+     # arguments.
+     ac_option=$1
+     ac_need_defaults=false;;
+  esac
+
+  case $ac_option in
+  # Handling of the options.
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF
+  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
+    ac_cs_recheck=: ;;
+  --version | --vers* | -V )
+    echo "$ac_cs_version"; exit 0 ;;
+  --he | --h)
+    # Conflict between --help and --header
+    { { echo "$as_me:$LINENO: error: ambiguous option: $1
+Try \`$0 --help' for more information." >&5
+echo "$as_me: error: ambiguous option: $1
+Try \`$0 --help' for more information." >&2;}
+   { (exit 1); exit 1; }; };;
+  --help | --hel | -h )
+    echo "$ac_cs_usage"; exit 0 ;;
+  --debug | --d* | -d )
+    debug=: ;;
+  --file | --fil | --fi | --f )
+    $ac_shift
+    CONFIG_FILES="$CONFIG_FILES $ac_optarg"
+    ac_need_defaults=false;;
+  --header | --heade | --head | --hea )
+    $ac_shift
+    CONFIG_HEADERS="$CONFIG_HEADERS $ac_optarg"
+    ac_need_defaults=false;;
+  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
+  | -silent | --silent | --silen | --sile | --sil | --si | --s)
+    ac_cs_silent=: ;;
+
+  # This is an error.
+  -*) { { echo "$as_me:$LINENO: error: unrecognized option: $1
+Try \`$0 --help' for more information." >&5
+echo "$as_me: error: unrecognized option: $1
+Try \`$0 --help' for more information." >&2;}
+   { (exit 1); exit 1; }; } ;;
+
+  *) ac_config_targets="$ac_config_targets $1" ;;
+
+  esac
+  shift
+done
+
+ac_configure_extra_args=
+
+if $ac_cs_silent; then
+  exec 6>/dev/null
+  ac_configure_extra_args="$ac_configure_extra_args --silent"
+fi
+
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF
+if \$ac_cs_recheck; then
+  echo "running $SHELL $0 " $ac_configure_args \$ac_configure_extra_args " --no-create --no-recursion" >&6
+  exec $SHELL $0 $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
+fi
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<_ACEOF
+#
+# INIT-COMMANDS section.
+#
+
+AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"
+
+_ACEOF
+
+
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+for ac_config_target in $ac_config_targets
+do
+  case "$ac_config_target" in
+  # Handling of arguments.
+  "Makefile
+" ) CONFIG_FILES="$CONFIG_FILES Makefile
+" ;;
+  "doc/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES doc/Makefile
+" ;;
+  "include/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES include/Makefile
+" ;;
+  "include/blob/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES include/blob/Makefile
+" ;;
+  "include/blob/arch/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES include/blob/arch/Makefile
+" ;;
+  "include/blob/proc/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES include/blob/proc/Makefile
+" ;;
+  "include/net/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES include/net/Makefile
+" ;;
+  "src/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES src/Makefile
+" ;;
+  "src/blob/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES src/blob/Makefile
+" ;;
+  "src/blob/xlli/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES src/blob/xlli/Makefile
+" ;;
+  "src/blob/xlli/mainstone/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES src/blob/xlli/mainstone/Makefile
+" ;;
+  "src/commands/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES src/commands/Makefile
+" ;;
+  "src/diag/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES src/diag/Makefile
+" ;;
+  "src/lib/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES src/lib/Makefile
+" ;;
+  "tools/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES tools/Makefile
+" ;;
+  "utils/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES utils/Makefile
+" ;;
+  "utils/build/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES utils/build/Makefile
+" ;;
+  "utils/mkparamblock/Makefile
+" ) CONFIG_FILES="$CONFIG_FILES utils/mkparamblock/Makefile
+" ;;
+  "utils/test/Makefile" ) CONFIG_FILES="$CONFIG_FILES utils/test/Makefile" ;;
+  "depfiles" ) CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
+  "include/blob/config.h" ) CONFIG_HEADERS="$CONFIG_HEADERS include/blob/config.h" ;;
+  *) { { echo "$as_me:$LINENO: error: invalid argument: $ac_config_target" >&5
+echo "$as_me: error: invalid argument: $ac_config_target" >&2;}
+   { (exit 1); exit 1; }; };;
+  esac
+done
+
+# If the user did not use the arguments to specify the items to instantiate,
+# then the envvar interface is used.  Set only those that are not.
+# We use the long form for the default assignment because of an extremely
+# bizarre bug on SunOS 4.1.3.
+if $ac_need_defaults; then
+  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
+  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
+  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
+fi
+
+# Have a temporary directory for convenience.  Make it in the build tree
+# simply because there is no reason to put it here, and in addition,
+# creating and moving files from /tmp can sometimes cause problems.
+# Create a temporary directory, and hook for its removal unless debugging.
+$debug ||
+{
+  trap 'exit_status=$?; rm -rf $tmp && exit $exit_status' 0
+  trap '{ (exit 1); exit 1; }' 1 2 13 15
+}
+
+# Create a (secure) tmp directory for tmp files.
+
+{
+  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/dev/null` &&
+  test -n "$tmp" && test -d "$tmp"
+}  ||
+{
+  tmp=./confstat$$-$RANDOM
+  (umask 077 && mkdir $tmp)
+} ||
+{
+   echo "$me: cannot create a temporary directory in ." >&2
+   { (exit 1); exit 1; }
+}
+
+_ACEOF
+
+cat >>$CONFIG_STATUS <<_ACEOF
+
+#
+# CONFIG_FILES section.
+#
+
+# No need to generate the scripts if there are no CONFIG_FILES.
+# This happens for instance when ./config.status config.h
+if test -n "\$CONFIG_FILES"; then
+  # Protect against being on the right side of a sed subst in config.status.
+  sed 's/,@/@@/; s/@,/@@/; s/,;t t\$/@;t t/; /@;t t\$/s/[\\\\&,]/\\\\&/g;
+   s/@@/,@/; s/@@/@,/; s/@;t t\$/,;t t/' >\$tmp/subs.sed <<\\CEOF
+s,@SHELL@,$SHELL,;t t
+s,@PATH_SEPARATOR@,$PATH_SEPARATOR,;t t
+s,@PACKAGE_NAME@,$PACKAGE_NAME,;t t
+s,@PACKAGE_TARNAME@,$PACKAGE_TARNAME,;t t
+s,@PACKAGE_VERSION@,$PACKAGE_VERSION,;t t
+s,@PACKAGE_STRING@,$PACKAGE_STRING,;t t
+s,@PACKAGE_BUGREPORT@,$PACKAGE_BUGREPORT,;t t
+s,@exec_prefix@,$exec_prefix,;t t
+s,@prefix@,$prefix,;t t
+s,@program_transform_name@,$program_transform_name,;t t
+s,@bindir@,$bindir,;t t
+s,@sbindir@,$sbindir,;t t
+s,@libexecdir@,$libexecdir,;t t
+s,@datadir@,$datadir,;t t
+s,@sysconfdir@,$sysconfdir,;t t
+s,@sharedstatedir@,$sharedstatedir,;t t
+s,@localstatedir@,$localstatedir,;t t
+s,@libdir@,$libdir,;t t
+s,@includedir@,$includedir,;t t
+s,@oldincludedir@,$oldincludedir,;t t
+s,@infodir@,$infodir,;t t
+s,@mandir@,$mandir,;t t
+s,@build_alias@,$build_alias,;t t
+s,@host_alias@,$host_alias,;t t
+s,@target_alias@,$target_alias,;t t
+s,@DEFS@,$DEFS,;t t
+s,@ECHO_C@,$ECHO_C,;t t
+s,@ECHO_N@,$ECHO_N,;t t
+s,@ECHO_T@,$ECHO_T,;t t
+s,@LIBS@,$LIBS,;t t
+s,@INSTALL_PROGRAM@,$INSTALL_PROGRAM,;t t
+s,@INSTALL_SCRIPT@,$INSTALL_SCRIPT,;t t
+s,@INSTALL_DATA@,$INSTALL_DATA,;t t
+s,@CYGPATH_W@,$CYGPATH_W,;t t
+s,@PACKAGE@,$PACKAGE,;t t
+s,@VERSION@,$VERSION,;t t
+s,@ACLOCAL@,$ACLOCAL,;t t
+s,@AUTOCONF@,$AUTOCONF,;t t
+s,@AUTOMAKE@,$AUTOMAKE,;t t
+s,@AUTOHEADER@,$AUTOHEADER,;t t
+s,@MAKEINFO@,$MAKEINFO,;t t
+s,@AMTAR@,$AMTAR,;t t
+s,@install_sh@,$install_sh,;t t
+s,@STRIP@,$STRIP,;t t
+s,@ac_ct_STRIP@,$ac_ct_STRIP,;t t
+s,@INSTALL_STRIP_PROGRAM@,$INSTALL_STRIP_PROGRAM,;t t
+s,@mkdir_p@,$mkdir_p,;t t
+s,@AWK@,$AWK,;t t
+s,@SET_MAKE@,$SET_MAKE,;t t
+s,@am__leading_dot@,$am__leading_dot,;t t
+s,@MAINTAINER_MODE_TRUE@,$MAINTAINER_MODE_TRUE,;t t
+s,@MAINTAINER_MODE_FALSE@,$MAINTAINER_MODE_FALSE,;t t
+s,@MAINT@,$MAINT,;t t
+s,@build@,$build,;t t
+s,@build_cpu@,$build_cpu,;t t
+s,@build_vendor@,$build_vendor,;t t
+s,@build_os@,$build_os,;t t
+s,@host@,$host,;t t
+s,@host_cpu@,$host_cpu,;t t
+s,@host_vendor@,$host_vendor,;t t
+s,@host_os@,$host_os,;t t
+s,@CC@,$CC,;t t
+s,@OBJCOPY@,$OBJCOPY,;t t
+s,@RANLIB@,$RANLIB,;t t
+s,@AR@,$AR,;t t
+s,@LD@,$LD,;t t
+s,@CFLAGS@,$CFLAGS,;t t
+s,@LDFLAGS@,$LDFLAGS,;t t
+s,@CPPFLAGS@,$CPPFLAGS,;t t
+s,@ac_ct_CC@,$ac_ct_CC,;t t
+s,@EXEEXT@,$EXEEXT,;t t
+s,@OBJEXT@,$OBJEXT,;t t
+s,@DEPDIR@,$DEPDIR,;t t
+s,@am__include@,$am__include,;t t
+s,@am__quote@,$am__quote,;t t
+s,@AMDEP_TRUE@,$AMDEP_TRUE,;t t
+s,@AMDEP_FALSE@,$AMDEP_FALSE,;t t
+s,@AMDEPBACKSLASH@,$AMDEPBACKSLASH,;t t
+s,@CCDEPMODE@,$CCDEPMODE,;t t
+s,@am__fastdepCC_TRUE@,$am__fastdepCC_TRUE,;t t
+s,@am__fastdepCC_FALSE@,$am__fastdepCC_FALSE,;t t
+s,@ac_ct_RANLIB@,$ac_ct_RANLIB,;t t
+s,@LN_S@,$LN_S,;t t
+s,@CCAS@,$CCAS,;t t
+s,@CCASFLAGS@,$CCASFLAGS,;t t
+s,@BLOB_FLASH_OBJS@,$BLOB_FLASH_OBJS,;t t
+s,@BLOB_PLATFORM_OBJS@,$BLOB_PLATFORM_OBJS,;t t
+s,@DIAG_PLATFORM_OBJS@,$DIAG_PLATFORM_OBJS,;t t
+s,@BLOB_STARTCODE_OBJS@,$BLOB_STARTCODE_OBJS,;t t
+s,@BLOB_MEMSETUP_OBJS@,$BLOB_MEMSETUP_OBJS,;t t
+s,@BLOB_REBOOT_DRIVER_OBJS@,$BLOB_REBOOT_DRIVER_OBJS,;t t
+s,@BLOB_SPI_OBJS@,$BLOB_SPI_OBJS,;t t
+s,@BLOB_LCD_OBJS@,$BLOB_LCD_OBJS,;t t
+s,@BLOB_SERIAL_DRIVER_OBJS@,$BLOB_SERIAL_DRIVER_OBJS,;t t
+s,@BLOB_TIMER_DRIVER_OBJS@,$BLOB_TIMER_DRIVER_OBJS,;t t
+s,@BLOB_LED_STARTCODE@,$BLOB_LED_STARTCODE,;t t
+s,@BLOB_LED_DRIVER_OBJS@,$BLOB_LED_DRIVER_OBJS,;t t
+s,@BLOB_NETWORK_DRIVER_OBJS@,$BLOB_NETWORK_DRIVER_OBJS,;t t
+s,@BLOB_TARGET@,$BLOB_TARGET,;t t
+s,@LINUX_INCLUDE@,$LINUX_INCLUDE,;t t
+s,@BLOB_CLOCK_OBJS@,$BLOB_CLOCK_OBJS,;t t
+s,@BLOB_CHKMEM_OBJS@,$BLOB_CHKMEM_OBJS,;t t
+s,@DIAG_LCD_OBJS@,$DIAG_LCD_OBJS,;t t
+s,@BLOB_XMODEM_OBJS@,$BLOB_XMODEM_OBJS,;t t
+s,@BLOB_USBSERIAL_OBJS@,$BLOB_USBSERIAL_OBJS,;t t
+s,@BLOB_UUCODEC_OBJS@,$BLOB_UUCODEC_OBJS,;t t
+s,@BLOB_JFFS2_OBJS@,$BLOB_JFFS2_OBJS,;t t
+s,@BLOB_CRAMFS_OBJS@,$BLOB_CRAMFS_OBJS,;t t
+s,@BLOB_ZIMAGE_OBJS@,$BLOB_ZIMAGE_OBJS,;t t
+s,@BLOB_NETWORK_OBJS@,$BLOB_NETWORK_OBJS,;t t
+s,@BLOB_GIO_OBJS@,$BLOB_GIO_OBJS,;t t
+s,@BLOB_PCMCIA_OBJS@,$BLOB_PCMCIA_OBJS,;t t
+s,@BLOB_IDE_OBJS@,$BLOB_IDE_OBJS,;t t
+s,@BLOB_CF_OBJS@,$BLOB_CF_OBJS,;t t
+s,@ALL_COMMANDS@,$ALL_COMMANDS,;t t
+s,@BLOB_COMMANDS@,$BLOB_COMMANDS,;t t
+s,@OCFLAGS@,$OCFLAGS,;t t
+s,@LIBOBJS@,$LIBOBJS,;t t
+s,@LTLIBOBJS@,$LTLIBOBJS,;t t
+CEOF
+
+_ACEOF
+
+  cat >>$CONFIG_STATUS <<\_ACEOF
+  # Split the substitutions into bite-sized pieces for seds with
+  # small command number limits, like on Digital OSF/1 and HP-UX.
+  ac_max_sed_lines=48
+  ac_sed_frag=1 # Number of current file.
+  ac_beg=1 # First line for current file.
+  ac_end=$ac_max_sed_lines # Line after last line for current file.
+  ac_more_lines=:
+  ac_sed_cmds=
+  while $ac_more_lines; do
+    if test $ac_beg -gt 1; then
+      sed "1,${ac_beg}d; ${ac_end}q" $tmp/subs.sed >$tmp/subs.frag
+    else
+      sed "${ac_end}q" $tmp/subs.sed >$tmp/subs.frag
+    fi
+    if test ! -s $tmp/subs.frag; then
+      ac_more_lines=false
+    else
+      # The purpose of the label and of the branching condition is to
+      # speed up the sed processing (if there are no `@' at all, there
+      # is no need to browse any of the substitutions).
+      # These are the two extra sed commands mentioned above.
+      (echo ':t
+  /@[a-zA-Z_][a-zA-Z_0-9]*@/!b' && cat $tmp/subs.frag) >$tmp/subs-$ac_sed_frag.sed
+      if test -z "$ac_sed_cmds"; then
+	ac_sed_cmds="sed -f $tmp/subs-$ac_sed_frag.sed"
+      else
+	ac_sed_cmds="$ac_sed_cmds | sed -f $tmp/subs-$ac_sed_frag.sed"
+      fi
+      ac_sed_frag=`expr $ac_sed_frag + 1`
+      ac_beg=$ac_end
+      ac_end=`expr $ac_end + $ac_max_sed_lines`
+    fi
+  done
+  if test -z "$ac_sed_cmds"; then
+    ac_sed_cmds=cat
+  fi
+fi # test -n "$CONFIG_FILES"
+
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF
+for ac_file in : $CONFIG_FILES; do test "x$ac_file" = x: && continue
+  # Support "outfile[:infile[:infile...]]", defaulting infile="outfile.in".
+  case $ac_file in
+  - | *:- | *:-:* ) # input from stdin
+	cat >$tmp/stdin
+	ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
+	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
+  *:* ) ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
+	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
+  * )   ac_file_in=$ac_file.in ;;
+  esac
+
+  # Compute @srcdir@, @top_srcdir@, and @INSTALL@ for subdirectories.
+  ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_file" : 'X\(//\)[^/]' \| \
+	 X"$ac_file" : 'X\(//\)$' \| \
+	 X"$ac_file" : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X"$ac_file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+  { if $as_mkdir_p; then
+    mkdir -p "$ac_dir"
+  else
+    as_dir="$ac_dir"
+    as_dirs=
+    while test ! -d "$as_dir"; do
+      as_dirs="$as_dir $as_dirs"
+      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+    done
+    test ! -n "$as_dirs" || mkdir $as_dirs
+  fi || { { echo "$as_me:$LINENO: error: cannot create directory \"$ac_dir\"" >&5
+echo "$as_me: error: cannot create directory \"$ac_dir\"" >&2;}
+   { (exit 1); exit 1; }; }; }
+
+  ac_builddir=.
+
+if test "$ac_dir" != .; then
+  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
+  # A "../" for each directory in $ac_dir_suffix.
+  ac_top_builddir=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,../,g'`
+else
+  ac_dir_suffix= ac_top_builddir=
+fi
+
+case $srcdir in
+  .)  # No --srcdir option.  We are building in place.
+    ac_srcdir=.
+    if test -z "$ac_top_builddir"; then
+       ac_top_srcdir=.
+    else
+       ac_top_srcdir=`echo $ac_top_builddir | sed 's,/$,,'`
+    fi ;;
+  [\\/]* | ?:[\\/]* )  # Absolute path.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir ;;
+  *) # Relative path.
+    ac_srcdir=$ac_top_builddir$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_builddir$srcdir ;;
+esac
+
+# Do not use `cd foo && pwd` to compute absolute paths, because
+# the directories may not exist.
+case `pwd` in
+.) ac_abs_builddir="$ac_dir";;
+*)
+  case "$ac_dir" in
+  .) ac_abs_builddir=`pwd`;;
+  [\\/]* | ?:[\\/]* ) ac_abs_builddir="$ac_dir";;
+  *) ac_abs_builddir=`pwd`/"$ac_dir";;
+  esac;;
+esac
+case $ac_abs_builddir in
+.) ac_abs_top_builddir=${ac_top_builddir}.;;
+*)
+  case ${ac_top_builddir}. in
+  .) ac_abs_top_builddir=$ac_abs_builddir;;
+  [\\/]* | ?:[\\/]* ) ac_abs_top_builddir=${ac_top_builddir}.;;
+  *) ac_abs_top_builddir=$ac_abs_builddir/${ac_top_builddir}.;;
+  esac;;
+esac
+case $ac_abs_builddir in
+.) ac_abs_srcdir=$ac_srcdir;;
+*)
+  case $ac_srcdir in
+  .) ac_abs_srcdir=$ac_abs_builddir;;
+  [\\/]* | ?:[\\/]* ) ac_abs_srcdir=$ac_srcdir;;
+  *) ac_abs_srcdir=$ac_abs_builddir/$ac_srcdir;;
+  esac;;
+esac
+case $ac_abs_builddir in
+.) ac_abs_top_srcdir=$ac_top_srcdir;;
+*)
+  case $ac_top_srcdir in
+  .) ac_abs_top_srcdir=$ac_abs_builddir;;
+  [\\/]* | ?:[\\/]* ) ac_abs_top_srcdir=$ac_top_srcdir;;
+  *) ac_abs_top_srcdir=$ac_abs_builddir/$ac_top_srcdir;;
+  esac;;
+esac
+
+
+  case $INSTALL in
+  [\\/$]* | ?:[\\/]* ) ac_INSTALL=$INSTALL ;;
+  *) ac_INSTALL=$ac_top_builddir$INSTALL ;;
+  esac
+
+  if test x"$ac_file" != x-; then
+    { echo "$as_me:$LINENO: creating $ac_file" >&5
+echo "$as_me: creating $ac_file" >&6;}
+    rm -f "$ac_file"
+  fi
+  # Let's still pretend it is `configure' which instantiates (i.e., don't
+  # use $as_me), people would be surprised to read:
+  #    /* config.h.  Generated by config.status.  */
+  if test x"$ac_file" = x-; then
+    configure_input=
+  else
+    configure_input="$ac_file.  "
+  fi
+  configure_input=$configure_input"Generated from `echo $ac_file_in |
+				     sed 's,.*/,,'` by configure."
+
+  # First look for the input files in the build tree, otherwise in the
+  # src tree.
+  ac_file_inputs=`IFS=:
+    for f in $ac_file_in; do
+      case $f in
+      -) echo $tmp/stdin ;;
+      [\\/$]*)
+	 # Absolute (can't be DOS-style, as IFS=:)
+	 test -f "$f" || { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
+echo "$as_me: error: cannot find input file: $f" >&2;}
+   { (exit 1); exit 1; }; }
+	 echo "$f";;
+      *) # Relative
+	 if test -f "$f"; then
+	   # Build tree
+	   echo "$f"
+	 elif test -f "$srcdir/$f"; then
+	   # Source tree
+	   echo "$srcdir/$f"
+	 else
+	   # /dev/null tree
+	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
+echo "$as_me: error: cannot find input file: $f" >&2;}
+   { (exit 1); exit 1; }; }
+	 fi;;
+      esac
+    done` || { (exit 1); exit 1; }
+_ACEOF
+cat >>$CONFIG_STATUS <<_ACEOF
+  sed "$ac_vpsub
+$extrasub
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF
+:t
+/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
+s,@configure_input@,$configure_input,;t t
+s,@srcdir@,$ac_srcdir,;t t
+s,@abs_srcdir@,$ac_abs_srcdir,;t t
+s,@top_srcdir@,$ac_top_srcdir,;t t
+s,@abs_top_srcdir@,$ac_abs_top_srcdir,;t t
+s,@builddir@,$ac_builddir,;t t
+s,@abs_builddir@,$ac_abs_builddir,;t t
+s,@top_builddir@,$ac_top_builddir,;t t
+s,@abs_top_builddir@,$ac_abs_top_builddir,;t t
+s,@INSTALL@,$ac_INSTALL,;t t
+" $ac_file_inputs | (eval "$ac_sed_cmds") >$tmp/out
+  rm -f $tmp/stdin
+  if test x"$ac_file" != x-; then
+    mv $tmp/out $ac_file
+  else
+    cat $tmp/out
+    rm -f $tmp/out
+  fi
+
+done
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF
+
+#
+# CONFIG_HEADER section.
+#
+
+# These sed commands are passed to sed as "A NAME B NAME C VALUE D", where
+# NAME is the cpp macro being defined and VALUE is the value it is being given.
+#
+# ac_d sets the value in "#define NAME VALUE" lines.
+ac_dA='s,^\([	 ]*\)#\([	 ]*define[	 ][	 ]*\)'
+ac_dB='[	 ].*$,\1#\2'
+ac_dC=' '
+ac_dD=',;t'
+# ac_u turns "#undef NAME" without trailing blanks into "#define NAME VALUE".
+ac_uA='s,^\([	 ]*\)#\([	 ]*\)undef\([	 ][	 ]*\)'
+ac_uB='$,\1#\2define\3'
+ac_uC=' '
+ac_uD=',;t'
+
+for ac_file in : $CONFIG_HEADERS; do test "x$ac_file" = x: && continue
+  # Support "outfile[:infile[:infile...]]", defaulting infile="outfile.in".
+  case $ac_file in
+  - | *:- | *:-:* ) # input from stdin
+	cat >$tmp/stdin
+	ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
+	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
+  *:* ) ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
+	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
+  * )   ac_file_in=$ac_file.in ;;
+  esac
+
+  test x"$ac_file" != x- && { echo "$as_me:$LINENO: creating $ac_file" >&5
+echo "$as_me: creating $ac_file" >&6;}
+
+  # First look for the input files in the build tree, otherwise in the
+  # src tree.
+  ac_file_inputs=`IFS=:
+    for f in $ac_file_in; do
+      case $f in
+      -) echo $tmp/stdin ;;
+      [\\/$]*)
+	 # Absolute (can't be DOS-style, as IFS=:)
+	 test -f "$f" || { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
+echo "$as_me: error: cannot find input file: $f" >&2;}
+   { (exit 1); exit 1; }; }
+	 # Do quote $f, to prevent DOS paths from being IFS'd.
+	 echo "$f";;
+      *) # Relative
+	 if test -f "$f"; then
+	   # Build tree
+	   echo "$f"
+	 elif test -f "$srcdir/$f"; then
+	   # Source tree
+	   echo "$srcdir/$f"
+	 else
+	   # /dev/null tree
+	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
+echo "$as_me: error: cannot find input file: $f" >&2;}
+   { (exit 1); exit 1; }; }
+	 fi;;
+      esac
+    done` || { (exit 1); exit 1; }
+  # Remove the trailing spaces.
+  sed 's/[	 ]*$//' $ac_file_inputs >$tmp/in
+
+_ACEOF
+
+# Transform confdefs.h into two sed scripts, `conftest.defines' and
+# `conftest.undefs', that substitutes the proper values into
+# config.h.in to produce config.h.  The first handles `#define'
+# templates, and the second `#undef' templates.
+# And first: Protect against being on the right side of a sed subst in
+# config.status.  Protect against being in an unquoted here document
+# in config.status.
+rm -f conftest.defines conftest.undefs
+# Using a here document instead of a string reduces the quoting nightmare.
+# Putting comments in sed scripts is not portable.
+#
+# `end' is used to avoid that the second main sed command (meant for
+# 0-ary CPP macros) applies to n-ary macro definitions.
+# See the Autoconf documentation for `clear'.
+cat >confdef2sed.sed <<\_ACEOF
+s/[\\&,]/\\&/g
+s,[\\$`],\\&,g
+t clear
+: clear
+s,^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 (][^	 (]*\)\(([^)]*)\)[	 ]*\(.*\)$,${ac_dA}\1${ac_dB}\1\2${ac_dC}\3${ac_dD},gp
+t end
+s,^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 ][^	 ]*\)[	 ]*\(.*\)$,${ac_dA}\1${ac_dB}\1${ac_dC}\2${ac_dD},gp
+: end
+_ACEOF
+# If some macros were called several times there might be several times
+# the same #defines, which is useless.  Nevertheless, we may not want to
+# sort them, since we want the *last* AC-DEFINE to be honored.
+uniq confdefs.h | sed -n -f confdef2sed.sed >conftest.defines
+sed 's/ac_d/ac_u/g' conftest.defines >conftest.undefs
+rm -f confdef2sed.sed
+
+# This sed command replaces #undef with comments.  This is necessary, for
+# example, in the case of _POSIX_SOURCE, which is predefined and required
+# on some systems where configure will not decide to define it.
+cat >>conftest.undefs <<\_ACEOF
+s,^[	 ]*#[	 ]*undef[	 ][	 ]*[a-zA-Z_][a-zA-Z_0-9]*,/* & */,
+_ACEOF
+
+# Break up conftest.defines because some shells have a limit on the size
+# of here documents, and old seds have small limits too (100 cmds).
+echo '  # Handle all the #define templates only if necessary.' >>$CONFIG_STATUS
+echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/dev/null; then' >>$CONFIG_STATUS
+echo '  # If there are no defines, we may have an empty if/fi' >>$CONFIG_STATUS
+echo '  :' >>$CONFIG_STATUS
+rm -f conftest.tail
+while grep . conftest.defines >/dev/null
+do
+  # Write a limited-size here document to $tmp/defines.sed.
+  echo '  cat >$tmp/defines.sed <<CEOF' >>$CONFIG_STATUS
+  # Speed up: don't consider the non `#define' lines.
+  echo '/^[	 ]*#[	 ]*define/!b' >>$CONFIG_STATUS
+  # Work around the forget-to-reset-the-flag bug.
+  echo 't clr' >>$CONFIG_STATUS
+  echo ': clr' >>$CONFIG_STATUS
+  sed ${ac_max_here_lines}q conftest.defines >>$CONFIG_STATUS
+  echo 'CEOF
+  sed -f $tmp/defines.sed $tmp/in >$tmp/out
+  rm -f $tmp/in
+  mv $tmp/out $tmp/in
+' >>$CONFIG_STATUS
+  sed 1,${ac_max_here_lines}d conftest.defines >conftest.tail
+  rm -f conftest.defines
+  mv conftest.tail conftest.defines
+done
+rm -f conftest.defines
+echo '  fi # grep' >>$CONFIG_STATUS
+echo >>$CONFIG_STATUS
+
+# Break up conftest.undefs because some shells have a limit on the size
+# of here documents, and old seds have small limits too (100 cmds).
+echo '  # Handle all the #undef templates' >>$CONFIG_STATUS
+rm -f conftest.tail
+while grep . conftest.undefs >/dev/null
+do
+  # Write a limited-size here document to $tmp/undefs.sed.
+  echo '  cat >$tmp/undefs.sed <<CEOF' >>$CONFIG_STATUS
+  # Speed up: don't consider the non `#undef'
+  echo '/^[	 ]*#[	 ]*undef/!b' >>$CONFIG_STATUS
+  # Work around the forget-to-reset-the-flag bug.
+  echo 't clr' >>$CONFIG_STATUS
+  echo ': clr' >>$CONFIG_STATUS
+  sed ${ac_max_here_lines}q conftest.undefs >>$CONFIG_STATUS
+  echo 'CEOF
+  sed -f $tmp/undefs.sed $tmp/in >$tmp/out
+  rm -f $tmp/in
+  mv $tmp/out $tmp/in
+' >>$CONFIG_STATUS
+  sed 1,${ac_max_here_lines}d conftest.undefs >conftest.tail
+  rm -f conftest.undefs
+  mv conftest.tail conftest.undefs
+done
+rm -f conftest.undefs
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+  # Let's still pretend it is `configure' which instantiates (i.e., don't
+  # use $as_me), people would be surprised to read:
+  #    /* config.h.  Generated by config.status.  */
+  if test x"$ac_file" = x-; then
+    echo "/* Generated by configure.  */" >$tmp/config.h
+  else
+    echo "/* $ac_file.  Generated by configure.  */" >$tmp/config.h
+  fi
+  cat $tmp/in >>$tmp/config.h
+  rm -f $tmp/in
+  if test x"$ac_file" != x-; then
+    if diff $ac_file $tmp/config.h >/dev/null 2>&1; then
+      { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
+echo "$as_me: $ac_file is unchanged" >&6;}
+    else
+      ac_dir=`(dirname "$ac_file") 2>/dev/null ||
+$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_file" : 'X\(//\)[^/]' \| \
+	 X"$ac_file" : 'X\(//\)$' \| \
+	 X"$ac_file" : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X"$ac_file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+      { if $as_mkdir_p; then
+    mkdir -p "$ac_dir"
+  else
+    as_dir="$ac_dir"
+    as_dirs=
+    while test ! -d "$as_dir"; do
+      as_dirs="$as_dir $as_dirs"
+      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+    done
+    test ! -n "$as_dirs" || mkdir $as_dirs
+  fi || { { echo "$as_me:$LINENO: error: cannot create directory \"$ac_dir\"" >&5
+echo "$as_me: error: cannot create directory \"$ac_dir\"" >&2;}
+   { (exit 1); exit 1; }; }; }
+
+      rm -f $ac_file
+      mv $tmp/config.h $ac_file
+    fi
+  else
+    cat $tmp/config.h
+    rm -f $tmp/config.h
+  fi
+# Compute $ac_file's index in $config_headers.
+_am_stamp_count=1
+for _am_header in $config_headers :; do
+  case $_am_header in
+    $ac_file | $ac_file:* )
+      break ;;
+    * )
+      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
+  esac
+done
+echo "timestamp for $ac_file" >`(dirname $ac_file) 2>/dev/null ||
+$as_expr X$ac_file : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X$ac_file : 'X\(//\)[^/]' \| \
+	 X$ac_file : 'X\(//\)$' \| \
+	 X$ac_file : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X$ac_file |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`/stamp-h$_am_stamp_count
+done
+_ACEOF
+cat >>$CONFIG_STATUS <<\_ACEOF
+
+#
+# CONFIG_COMMANDS section.
+#
+for ac_file in : $CONFIG_COMMANDS; do test "x$ac_file" = x: && continue
+  ac_dest=`echo "$ac_file" | sed 's,:.*,,'`
+  ac_source=`echo "$ac_file" | sed 's,[^:]*:,,'`
+  ac_dir=`(dirname "$ac_dest") 2>/dev/null ||
+$as_expr X"$ac_dest" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$ac_dest" : 'X\(//\)[^/]' \| \
+	 X"$ac_dest" : 'X\(//\)$' \| \
+	 X"$ac_dest" : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X"$ac_dest" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+  { if $as_mkdir_p; then
+    mkdir -p "$ac_dir"
+  else
+    as_dir="$ac_dir"
+    as_dirs=
+    while test ! -d "$as_dir"; do
+      as_dirs="$as_dir $as_dirs"
+      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+    done
+    test ! -n "$as_dirs" || mkdir $as_dirs
+  fi || { { echo "$as_me:$LINENO: error: cannot create directory \"$ac_dir\"" >&5
+echo "$as_me: error: cannot create directory \"$ac_dir\"" >&2;}
+   { (exit 1); exit 1; }; }; }
+
+  ac_builddir=.
+
+if test "$ac_dir" != .; then
+  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
+  # A "../" for each directory in $ac_dir_suffix.
+  ac_top_builddir=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,../,g'`
+else
+  ac_dir_suffix= ac_top_builddir=
+fi
+
+case $srcdir in
+  .)  # No --srcdir option.  We are building in place.
+    ac_srcdir=.
+    if test -z "$ac_top_builddir"; then
+       ac_top_srcdir=.
+    else
+       ac_top_srcdir=`echo $ac_top_builddir | sed 's,/$,,'`
+    fi ;;
+  [\\/]* | ?:[\\/]* )  # Absolute path.
+    ac_srcdir=$srcdir$ac_dir_suffix;
+    ac_top_srcdir=$srcdir ;;
+  *) # Relative path.
+    ac_srcdir=$ac_top_builddir$srcdir$ac_dir_suffix
+    ac_top_srcdir=$ac_top_builddir$srcdir ;;
+esac
+
+# Do not use `cd foo && pwd` to compute absolute paths, because
+# the directories may not exist.
+case `pwd` in
+.) ac_abs_builddir="$ac_dir";;
+*)
+  case "$ac_dir" in
+  .) ac_abs_builddir=`pwd`;;
+  [\\/]* | ?:[\\/]* ) ac_abs_builddir="$ac_dir";;
+  *) ac_abs_builddir=`pwd`/"$ac_dir";;
+  esac;;
+esac
+case $ac_abs_builddir in
+.) ac_abs_top_builddir=${ac_top_builddir}.;;
+*)
+  case ${ac_top_builddir}. in
+  .) ac_abs_top_builddir=$ac_abs_builddir;;
+  [\\/]* | ?:[\\/]* ) ac_abs_top_builddir=${ac_top_builddir}.;;
+  *) ac_abs_top_builddir=$ac_abs_builddir/${ac_top_builddir}.;;
+  esac;;
+esac
+case $ac_abs_builddir in
+.) ac_abs_srcdir=$ac_srcdir;;
+*)
+  case $ac_srcdir in
+  .) ac_abs_srcdir=$ac_abs_builddir;;
+  [\\/]* | ?:[\\/]* ) ac_abs_srcdir=$ac_srcdir;;
+  *) ac_abs_srcdir=$ac_abs_builddir/$ac_srcdir;;
+  esac;;
+esac
+case $ac_abs_builddir in
+.) ac_abs_top_srcdir=$ac_top_srcdir;;
+*)
+  case $ac_top_srcdir in
+  .) ac_abs_top_srcdir=$ac_abs_builddir;;
+  [\\/]* | ?:[\\/]* ) ac_abs_top_srcdir=$ac_top_srcdir;;
+  *) ac_abs_top_srcdir=$ac_abs_builddir/$ac_top_srcdir;;
+  esac;;
+esac
+
+
+  { echo "$as_me:$LINENO: executing $ac_dest commands" >&5
+echo "$as_me: executing $ac_dest commands" >&6;}
+  case $ac_dest in
+    depfiles ) test x"$AMDEP_TRUE" != x"" || for mf in $CONFIG_FILES; do
+  # Strip MF so we end up with the name of the file.
+  mf=`echo "$mf" | sed -e 's/:.*$//'`
+  # Check whether this is an Automake generated Makefile or not.
+  # We used to match only the files named `Makefile.in', but
+  # some people rename them; so instead we look at the file content.
+  # Grep'ing the first line is not enough: some people post-process
+  # each Makefile.in and add a new line on top of each file to say so.
+  # So let's grep whole file.
+  if grep '^#.*generated by automake' $mf > /dev/null 2>&1; then
+    dirpart=`(dirname "$mf") 2>/dev/null ||
+$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$mf" : 'X\(//\)[^/]' \| \
+	 X"$mf" : 'X\(//\)$' \| \
+	 X"$mf" : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X"$mf" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+  else
+    continue
+  fi
+  grep '^DEP_FILES *= *[^ #]' < "$mf" > /dev/null || continue
+  # Extract the definition of DEP_FILES from the Makefile without
+  # running `make'.
+  DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
+  test -z "$DEPDIR" && continue
+  # When using ansi2knr, U may be empty or an underscore; expand it
+  U=`sed -n 's/^U = //p' < "$mf"`
+  test -d "$dirpart/$DEPDIR" || mkdir "$dirpart/$DEPDIR"
+  # We invoke sed twice because it is the simplest approach to
+  # changing $(DEPDIR) to its actual value in the expansion.
+  for file in `sed -n '
+    /^DEP_FILES = .*\\\\$/ {
+      s/^DEP_FILES = //
+      :loop
+	s/\\\\$//
+	p
+	n
+	/\\\\$/ b loop
+      p
+    }
+    /^DEP_FILES = / s/^DEP_FILES = //p' < "$mf" | \
+       sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
+    # Make sure the directory exists.
+    test -f "$dirpart/$file" && continue
+    fdir=`(dirname "$file") 2>/dev/null ||
+$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$file" : 'X\(//\)[^/]' \| \
+	 X"$file" : 'X\(//\)$' \| \
+	 X"$file" : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X"$file" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+    { if $as_mkdir_p; then
+    mkdir -p $dirpart/$fdir
+  else
+    as_dir=$dirpart/$fdir
+    as_dirs=
+    while test ! -d "$as_dir"; do
+      as_dirs="$as_dir $as_dirs"
+      as_dir=`(dirname "$as_dir") 2>/dev/null ||
+$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$as_dir" : 'X\(//\)[^/]' \| \
+	 X"$as_dir" : 'X\(//\)$' \| \
+	 X"$as_dir" : 'X\(/\)' \| \
+	 .     : '\(.\)' 2>/dev/null ||
+echo X"$as_dir" |
+    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
+  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
+  	  /^X\(\/\/\)$/{ s//\1/; q; }
+  	  /^X\(\/\).*/{ s//\1/; q; }
+  	  s/.*/./; q'`
+    done
+    test ! -n "$as_dirs" || mkdir $as_dirs
+  fi || { { echo "$as_me:$LINENO: error: cannot create directory $dirpart/$fdir" >&5
+echo "$as_me: error: cannot create directory $dirpart/$fdir" >&2;}
+   { (exit 1); exit 1; }; }; }
+
+    # echo "creating $dirpart/$file"
+    echo '# dummy' > "$dirpart/$file"
+  done
+done
+ ;;
+  esac
+done
+_ACEOF
+
+cat >>$CONFIG_STATUS <<\_ACEOF
+
+{ (exit 0); exit 0; }
+_ACEOF
+chmod +x $CONFIG_STATUS
+ac_clean_files=$ac_clean_files_save
+
+
+# configure is writing to config.log, and then calls config.status.
+# config.status does its own redirection, appending to config.log.
+# Unfortunately, on DOS this fails, as config.log is still kept open
+# by configure, so config.status won't be able to write to it; its
+# output is simply discarded.  So we exec the FD to /dev/null,
+# effectively closing config.log, so it can be properly (re)opened and
+# appended to by config.status.  When coming back to configure, we
+# need to make the FD available again.
+if test "$no_create" != yes; then
+  ac_cs_success=:
+  ac_config_status_args=
+  test "$silent" = yes &&
+    ac_config_status_args="$ac_config_status_args --quiet"
+  exec 5>/dev/null
+  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
+  exec 5>>config.log
+  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
+  # would make configure fail if this is the last instruction.
+  $ac_cs_success || { (exit 1); exit 1; }
+fi
+
+
+
+echo ""
+echo "Configuration"
+echo "------------------------------------------------------------------------"
+echo "Target board                ${board_name}"
+echo "Target CPU                  ${use_cpu}"
+echo "C compiler                  ${CC}"
+echo "C flags                     ${AM_CFLAGS}"
+echo "Linker flags                ${AM_LDFLAGS}"
+echo "Objcopy tool                ${OBJCOPY}"
+echo "Objcopy flags               ${OCFLAGS}"
+echo "Clock scaling support       ${clock_scaling_flag}"
+echo "Memory test support         ${chkmem_flag}"
+echo "LCD support                 ${lcd_flag}"
+echo "MD5 support                 ${md5_flag}"
+echo "Xmodem support              ${xmodem_flag}"
+echo "UU Codec support            ${uucodec_flag}"
+echo "JFFS2 support               ${jffs2_flag}"
+echo "cramfs support              ${cramfs_flag}"
+echo "zImage support              ${zimage_flag}"
+echo "PCMCIA support              ${pcmcia_flag}"
+echo "CF support                  ${cf_flag}"
+echo "IDE support                 ${ide_flag}"
+echo "Generic IO support          ${gio_flag}"
+echo "Network support             ${network_flag}"
+echo "Blob commands:              ${BLOB_COMMANDS}"
+echo "Run-time debug information  ${blob_debug_flag}"
+echo "Serial over USB support     ${usbserial_flag}"
+echo ""
Index: build_tree/bootLoader/configure.in
diff -u build_tree/bootLoader/configure.in:1.1.1.2 build_tree/bootLoader/configure.in:1.1.1.3
--- build_tree/bootLoader/configure.in:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/configure.in	Fri Nov  9 10:37:08 2007
@@ -292,11 +292,13 @@
 	BLOB_PLATFORM_OBJS="mainstone.o"
 	BLOB_LED_DRIVER_OBJS="led-mmap.o"
 	BLOB_LED_STARTCODE="ledasm-mmap.o"
-	BLOB_FLASH_OBJS="strata.o"
+	BLOB_FLASH_OBJS="intel16.o"
 	BLOB_NETWORK_DRIVER_OBJS="ether-smc91x.o"
+        BLOB_SPI_OBJS="pxa-bb-spi.o"
+		BLOB_LCD_OBJS="pxa-lcd.o"
 	DIAG_PLATFORM_OBJS="mainstone.o"
 	use_cpu="pxa250"
-	use_lcd="no"
+	use_lcd="yes"
 	;;	
     miniprint)
         board_name="FGAG miniprint"
@@ -513,8 +515,8 @@
 AC_SUBST(BLOB_LED_DRIVER_OBJS)
 AC_SUBST(BLOB_NETWORK_DRIVER_OBJS)
 AC_SUBST(BLOB_TARGET)
-
-
+AC_SUBST(BLOB_SPI_OBJS)
+AC_SUBST(BLOB_LCD_OBJS)
 
 
 dnl Find out where the Linux headers are
@@ -914,8 +916,7 @@
 tools/Makefile
 utils/Makefile
 utils/build/Makefile
-utils/mkparamblock/Makefile
-utils/test/Makefile)
+utils/mkparamblock/Makefile)
 
 
 dnl Tell the user about the configuration
Index: build_tree/bootLoader/setup
diff -u /dev/null build_tree/bootLoader/setup:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/setup	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,2 @@
+./configure --host=arm-linux --with-board=mainstone --with-linux-prefix=/usr/src/linux-2.6.5-1.358 --enable-xlli --enable-memtest=set --enable-lcd=set --enable-jffs2=set --enable-jffs2=set --enable-blob-debug=set
+
Index: build_tree/bootLoader/z2config.sh
diff -u /dev/null build_tree/bootLoader/z2config.sh:1.3
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/z2config.sh	Fri Nov 16 15:36:46 2007
@@ -0,0 +1 @@
+./configure --with-linux-prefix=$TOP_DIR/linux --host=armv5l-linux --with-board=mainstone --enable-xmodem --enable-xlli host_alias=armv5l-linux --enable-lcd --with-commands="poke, peek"
Index: build_tree/bootLoader/doc/Makefile.in
diff -u /dev/null build_tree/bootLoader/doc/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/doc/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,330 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# Process this file with automake to produce Makefile.in -*- makefile -*-
+#
+# $Id: Makefile.am,v 1.4 2002/02/18 08:56:26 erikm Exp $
+# 
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = doc
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+CLEANFILES = *~
+EXTRA_DIST = \
+	commandlist.txt \
+	diag.txt \
+	motto.txt \
+	porting.txt
+
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  doc/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  doc/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: all all-am check check-am clean clean-generic distclean \
+	distclean-generic distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic pdf pdf-am ps ps-am uninstall uninstall-am \
+	uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/include/Makefile.in
diff -u /dev/null build_tree/bootLoader/include/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/include/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,465 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+###########################################################################
+###########################################################################
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = include
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+SUBDIRS = \
+		blob \
+		net
+
+CLEANFILES = *~
+all: all-recursive
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  include/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  include/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if (etags --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	else \
+	  include_option=--include; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -f $$subdir/TAGS && \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || mkdir "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="../$(top_distdir)" \
+	        distdir="../$(distdir)/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-recursive
+all-am: Makefile
+installdirs: installdirs-recursive
+installdirs-am:
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
+	clean clean-generic clean-recursive ctags ctags-recursive \
+	distclean distclean-generic distclean-recursive distclean-tags \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
+	uninstall uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/include/registers.h
diff -u build_tree/bootLoader/include/registers.h:1.1.1.1 build_tree/bootLoader/include/registers.h:removed
--- build_tree/bootLoader/include/registers.h:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/include/registers.h	Tue Jan  8 14:21:47 2008
@@ -1,42 +0,0 @@
-/*-------------------------------------------------------------------------
- * Filename:      registers.h
- * Version:       $Id: registers.h,v 1.1.1.1 2001/06/27 19:47:42 erikm Exp $
- * Copyright:     Copyright (C) 1999, 
- * Author:        Erik Mouw <J.A.K.Mouw@its.tudelft.nl>
- * Description:   Some register definitions for the blob
- * Created at:    Tue Sep 28 23:41:15 1999
- * Modified by:   Erik Mouw <J.A.K.Mouw@its.tudelft.nl>
- * Modified at:   Tue Sep 28 23:42:57 1999
- *-----------------------------------------------------------------------*/
-/*
- * registers.h: Some register definitions for blob
- *
- * Copyright (C) 1999  Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- */
-
-#ident "$Id: registers.h,v 1.1.1.1 2001/06/27 19:47:42 erikm Exp $"
-
-#ifndef BLOB_REGISTERS_H
-#define BLOB_REGISTERS_H
-
-#define CLOCK_REG_HIGH 0x90000000
-#define CLOCK_REG_LOW  0x00020000
-#define CLOCK_220MHZ   0x0000000B
-
-
-#endif
Index: build_tree/bootLoader/include/blob/Makefile.in
diff -u /dev/null build_tree/bootLoader/include/blob/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/include/blob/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,528 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+###########################################################################
+###########################################################################
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = include/blob
+DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in $(srcdir)/config.h.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+HEADERS = $(noinst_HEADERS)
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+SUBDIRS = \
+	arch \
+	proc
+
+noinst_HEADERS = \
+	arch.h \
+	cf.h \
+	command.h \
+	command_hist.h \
+	compr_rubin.h \
+	crc32.h \
+	debug.h \
+	download.h \
+	errno.h \
+	error.h \
+	flash.h \
+	generic_io.h \
+	gio_drivers.h \
+	i2c-gpio.h \
+	i2c.h \
+	icache.h \
+	ide.h \
+	init.h \
+	jffs2.h \
+	lcd.h \
+	led.h \
+	linux.h \
+	load_kernel.h \
+	main.h \
+	md5.h \
+	md5support.h \
+	memory.h \
+	memsetup.h \
+	mini_inflate.h \
+	param_block.h \
+	partition.h \
+	pcmcia.h \
+	reboot.h \
+	serial.h \
+	tar.h \
+	time.h \
+	types.h \
+	util.h \
+	uucodec.h \
+	xmodem.h
+
+CLEANFILES = ${srcdir}/*~
+all: config.h
+	$(MAKE) $(AM_MAKEFLAGS) all-recursive
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  include/blob/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  include/blob/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+config.h: stamp-h1
+	@if test ! -f $@; then \
+	  rm -f stamp-h1; \
+	  $(MAKE) stamp-h1; \
+	else :; fi
+
+stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
+	@rm -f stamp-h1
+	cd $(top_builddir) && $(SHELL) ./config.status include/blob/config.h
+$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
+	cd $(top_srcdir) && $(AUTOHEADER)
+	rm -f stamp-h1
+	touch $@
+
+distclean-hdr:
+	-rm -f config.h stamp-h1
+uninstall-info-am:
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if (etags --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	else \
+	  include_option=--include; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -f $$subdir/TAGS && \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || mkdir "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="../$(top_distdir)" \
+	        distdir="../$(distdir)/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-recursive
+all-am: Makefile $(HEADERS) config.h
+installdirs: installdirs-recursive
+installdirs-am:
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-hdr distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
+	clean clean-generic clean-recursive ctags ctags-recursive \
+	distclean distclean-generic distclean-hdr distclean-recursive \
+	distclean-tags distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
+	uninstall uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/include/blob/arch.h
diff -u build_tree/bootLoader/include/blob/arch.h:1.1.1.2 build_tree/bootLoader/include/blob/arch.h:1.1.1.3
--- build_tree/bootLoader/include/blob/arch.h:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/include/blob/arch.h	Fri Nov  9 10:37:08 2007
@@ -66,6 +66,7 @@
 #include <blob/arch/lubbock.h>
 #elif defined MAINSTONE
 #include <blob/arch/mainstone.h>
+#include <blob/arch/pxa-regs.h>
 #elif defined MINIPRINT
 # include <blob/arch/miniprint.h>
 #elif defined NESA
Index: build_tree/bootLoader/include/blob/config.h
diff -u /dev/null build_tree/bootLoader/include/blob/config.h:1.1
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/include/blob/config.h	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,173 @@
+/* include/blob/config.h.  Generated by configure.  */
+/* include/blob/config.h.in.  Generated from configure.in by autoheader.  */
+
+/* Accelent IDP */
+/* #undef ACCELENT_SA */
+
+/* Intel Assabet */
+/* #undef ASSABET */
+
+/* Hewlett-Packard Laboratories Badge-4 */
+/* #undef BADGE4 */
+
+/* "Debug code" */
+/* #undef BLOB_DEBUG */
+
+/* "Board name" */
+#define BOARD_NAME "Intel HCDDBBVA0 (Mainstone)"
+
+/* Intel Brutus */
+/* #undef BRUTUS */
+
+/* Iskratel CEP */
+/* #undef CEP */
+
+/* Delft University of Technology CreditLART */
+/* #undef CLART */
+
+/* "CF support" */
+/* #undef CONFIG_CF_SUPPORT */
+
+/* "CRAMFS support" */
+/* #undef CONFIG_CRAMFS_SUPPORT */
+
+/* "GIO support" */
+/* #undef CONFIG_GIO_SUPPORT */
+
+/* "IDE support" */
+/* #undef CONFIG_IDE_SUPPORT */
+
+/* "JFFS2 support" */
+/* #undef CONFIG_JFFS2_SUPPORT */
+
+/* "lcd support" */
+#define CONFIG_LCD_SUPPORT no
+
+/* "MD5 support" */
+/* #undef CONFIG_MD5_SUPPORT */
+
+/* "Network support" */
+/* #undef CONFIG_NETWORK_SUPPORT */
+
+/* "PCMCIA support" */
+/* #undef CONFIG_PCMCIA_SUPPORT */
+
+/* "USBDNET support" */
+/* #undef CONFIG_USBDNET_SUPPORT */
+
+/* "Serial Over USB support" */
+/* #undef CONFIG_USBSERIAL_SUPPORT */
+
+/* "UU Codec support" */
+/* #undef CONFIG_UUCODEC_SUPPORT */
+
+/* "Xmodem support" */
+#define CONFIG_XMODEM_SUPPORT no
+
+/* "zImage support" */
+/* #undef CONFIG_ZIMAGE_SUPPORT */
+
+/* "CPU type" */
+#define CPU "pxa250"
+
+/* CSIR Incident Management System */
+/* #undef CSIR_IMS */
+
+/* 2d3D, Inc. SA-1110 Development Board */
+/* #undef FRODO */
+
+/* Compaq Ipaq H3600 series */
+/* #undef H3600 */
+
+/* The Hack Kit base cpu board */
+/* #undef HKIT */
+
+/* Vercel UD-1 (IDR) */
+/* #undef IDR */
+
+/* Hewlett-Packard Jornada 720 with flash daughter board */
+/* #undef JORNADA720 */
+
+/* "Kernel XIP" */
+/* #undef KERNEL_XIP_BASE */
+
+/* Delft University of Technology LART */
+/* #undef LART */
+
+/* Intel HCDDBCTA1 (Lubbock) */
+/* #undef LUBBOCK */
+
+/* Intel HCDDBBVA0 (Mainstone) */
+#define MAINSTONE 1
+
+/* FGAG miniprint */
+/* #undef MINIPRINT */
+
+/* Neponset Expansion Board */
+/* #undef NEPONSET */
+
+/* NESA */
+/* #undef NESA */
+
+/* Name of package */
+#define PACKAGE "blob"
+
+/* Define to the address where bug reports for this package should be sent. */
+#define PACKAGE_BUGREPORT ""
+
+/* Define to the full name of this package. */
+#define PACKAGE_NAME ""
+
+/* Define to the full name and version of this package. */
+#define PACKAGE_STRING ""
+
+/* Define to the one symbol short name of this package. */
+#define PACKAGE_TARNAME ""
+
+/* Define to the version of this package. */
+#define PACKAGE_VERSION ""
+
+/* University of New South Wales PLEB */
+/* #undef PLEB */
+
+/* Prueftechnik VibXpert */
+/* #undef PT_DAFIT */
+
+/* Prueftechnik Digital Board REV 0802 */
+/* #undef PT_SYSTEM3 */
+
+/* Intel XScale PXA250 */
+#define PXA250 1
+
+/* Accelent PXA250 IDP */
+/* #undef PXA_IDP */
+
+/* M&N MN-CI Logistic Terminal (ramses) */
+/* #undef RAMSES */
+
+/* Samsung s3c2500a */
+/* #undef S3C2500 */
+
+/* Intel StrongARM SA1100 */
+/* #undef SA1100 */
+
+/* Intel StrongARM SA1110 */
+/* #undef SA1110 */
+
+/* TuxScreen (Shannon) */
+/* #undef SHANNON */
+
+/* SMDK2500 Evaluation Board */
+/* #undef SMDK2500 */
+
+/* Keith & Koep Trizeps Board */
+/* #undef TRIZEPS */
+
+/* Version number of package */
+#define VERSION "2.0.5-pre3"
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+/* #undef inline */
+#endif
Index: build_tree/bootLoader/include/blob/config.h.in
diff -u /dev/null build_tree/bootLoader/include/blob/config.h.in:1.2
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/include/blob/config.h.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,172 @@
+/* include/blob/config.h.in.  Generated from configure.in by autoheader.  */
+
+/* Accelent IDP */
+#undef ACCELENT_SA
+
+/* Intel Assabet */
+#undef ASSABET
+
+/* Hewlett-Packard Laboratories Badge-4 */
+#undef BADGE4
+
+/* "Debug code" */
+#undef BLOB_DEBUG
+
+/* "Board name" */
+#undef BOARD_NAME
+
+/* Intel Brutus */
+#undef BRUTUS
+
+/* Iskratel CEP */
+#undef CEP
+
+/* Delft University of Technology CreditLART */
+#undef CLART
+
+/* "CF support" */
+#undef CONFIG_CF_SUPPORT
+
+/* "CRAMFS support" */
+#undef CONFIG_CRAMFS_SUPPORT
+
+/* "GIO support" */
+#undef CONFIG_GIO_SUPPORT
+
+/* "IDE support" */
+#undef CONFIG_IDE_SUPPORT
+
+/* "JFFS2 support" */
+#undef CONFIG_JFFS2_SUPPORT
+
+/* "lcd support" */
+#undef CONFIG_LCD_SUPPORT
+
+/* "MD5 support" */
+#undef CONFIG_MD5_SUPPORT
+
+/* "Network support" */
+#undef CONFIG_NETWORK_SUPPORT
+
+/* "PCMCIA support" */
+#undef CONFIG_PCMCIA_SUPPORT
+
+/* "USBDNET support" */
+#undef CONFIG_USBDNET_SUPPORT
+
+/* "Serial Over USB support" */
+#undef CONFIG_USBSERIAL_SUPPORT
+
+/* "UU Codec support" */
+#undef CONFIG_UUCODEC_SUPPORT
+
+/* "Xmodem support" */
+#undef CONFIG_XMODEM_SUPPORT
+
+/* "zImage support" */
+#undef CONFIG_ZIMAGE_SUPPORT
+
+/* "CPU type" */
+#undef CPU
+
+/* CSIR Incident Management System */
+#undef CSIR_IMS
+
+/* 2d3D, Inc. SA-1110 Development Board */
+#undef FRODO
+
+/* Compaq Ipaq H3600 series */
+#undef H3600
+
+/* The Hack Kit base cpu board */
+#undef HKIT
+
+/* Vercel UD-1 (IDR) */
+#undef IDR
+
+/* Hewlett-Packard Jornada 720 with flash daughter board */
+#undef JORNADA720
+
+/* "Kernel XIP" */
+#undef KERNEL_XIP_BASE
+
+/* Delft University of Technology LART */
+#undef LART
+
+/* Intel HCDDBCTA1 (Lubbock) */
+#undef LUBBOCK
+
+/* Intel HCDDBBVA0 (Mainstone) */
+#undef MAINSTONE
+
+/* FGAG miniprint */
+#undef MINIPRINT
+
+/* Neponset Expansion Board */
+#undef NEPONSET
+
+/* NESA */
+#undef NESA
+
+/* Name of package */
+#undef PACKAGE
+
+/* Define to the address where bug reports for this package should be sent. */
+#undef PACKAGE_BUGREPORT
+
+/* Define to the full name of this package. */
+#undef PACKAGE_NAME
+
+/* Define to the full name and version of this package. */
+#undef PACKAGE_STRING
+
+/* Define to the one symbol short name of this package. */
+#undef PACKAGE_TARNAME
+
+/* Define to the version of this package. */
+#undef PACKAGE_VERSION
+
+/* University of New South Wales PLEB */
+#undef PLEB
+
+/* Prueftechnik VibXpert */
+#undef PT_DAFIT
+
+/* Prueftechnik Digital Board REV 0802 */
+#undef PT_SYSTEM3
+
+/* Intel XScale PXA250 */
+#undef PXA250
+
+/* Accelent PXA250 IDP */
+#undef PXA_IDP
+
+/* M&N MN-CI Logistic Terminal (ramses) */
+#undef RAMSES
+
+/* Samsung s3c2500a */
+#undef S3C2500
+
+/* Intel StrongARM SA1100 */
+#undef SA1100
+
+/* Intel StrongARM SA1110 */
+#undef SA1110
+
+/* TuxScreen (Shannon) */
+#undef SHANNON
+
+/* SMDK2500 Evaluation Board */
+#undef SMDK2500
+
+/* Keith & Koep Trizeps Board */
+#undef TRIZEPS
+
+/* Version number of package */
+#undef VERSION
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+#undef inline
+#endif
Index: build_tree/bootLoader/include/blob/lcd.h
diff -u build_tree/bootLoader/include/blob/lcd.h:1.1.1.2 build_tree/bootLoader/include/blob/lcd.h:1.1.1.3
--- build_tree/bootLoader/include/blob/lcd.h:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/include/blob/lcd.h	Fri Nov  9 10:37:08 2007
@@ -27,7 +27,6 @@
 #define BLOB_LCD_H
 
 #if defined(CONFIG_LCD_SUPPORT)
-
 #ifdef PT_SYSTEM3
 #	define	LCD_LCCR0	0x000AA03C
 #	define	LCD_LCCR1	0x01000270
@@ -88,6 +87,24 @@
 #       define  LCD_VIDEORAM_END        (LCD_VIDEORAM_START + LCD_VIDEORAM_SIZE)
 #       define  LCD_VIDEORAM_DMA_ADR    (LCD_PALETTE_DMA_ADR + LCD_PALETTE_SIZE + (LCD_VIDEORAM_SIZE>>1))
 # define  LCD_REVERSE
+#elif MAINSTONE
+
+#	define	LCD_LCCR0	0x000AA03C
+#	define	LCD_LCCR1	0x01000270
+#	define	LCD_LCCR2	0x000004EF
+#	define	LCD_LCCR3	0x0000FF16
+#	define	LCD_BPP			8
+#	define	LCD_COLS		640
+#	define	LCD_ROWS		480
+#	define	LCD_VIDEORAM_SIZE	((LCD_BPP*LCD_ROWS*LCD_COLS)>>3)
+#	define	LCD_PALETTE_ENTRIES	256
+#	define	LCD_PALETTE_SIZE	(LCD_PALETTE_ENTRIES * 2)
+#	define	LCD_RAM_BASE		0xd0000000
+#	define	LCD_PALETTE_DMA_ADR	(LCD_RAM_BASE + 0x0)
+#	define	LCD_VIDEORAM_START	(LCD_RAM_BASE + LCD_PALETTE_SIZE)
+#	define	LCD_VIDEORAM_END	(LCD_VIDEORAM_START + LCD_VIDEORAM_SIZE)
+#	define	LCD_VIDEORAM_DMA_ADR	(LCD_PALETTE_DMA_ADR + LCD_PALETTE_SIZE + (LCD_VIDEORAM_SIZE>>1))
+
 #else
 #	error "Cowardly refusing to break your LCD, please supply correct LCD parameters."
 #endif
Index: build_tree/bootLoader/include/blob/pxa-lcd.h
diff -u /dev/null build_tree/bootLoader/include/blob/pxa-lcd.h:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/include/blob/pxa-lcd.h	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,69 @@
+/**********************************************************************
+ * pxa-lcd.h
+ *
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+#ifndef BLOB_PXA_LCD_H
+#define BLOB_PXA_LCD_H
+
+#if defined(CONFIG_LCD_SUPPORT)
+#ifdef MAINSTONE
+
+#	define	LCD_LCCR0	0x000AA03C
+#	define	LCD_LCCR1	0x01000270
+#	define	LCD_LCCR2	0x000004EF
+#	define	LCD_LCCR3	0x0000FF16
+#	define	LCD_BPP			8
+#	define	LCD_COLS		640
+#	define	LCD_ROWS		480
+#	define	LCD_VIDEORAM_SIZE	((LCD_BPP*LCD_ROWS*LCD_COLS)>>3)
+#	define	LCD_PALETTE_ENTRIES	256
+#	define	LCD_PALETTE_SIZE	(LCD_PALETTE_ENTRIES * 2)
+#	define	LCD_RAM_BASE		0xd0000000
+#	define	LCD_PALETTE_DMA_ADR	(LCD_RAM_BASE + 0x0)
+#	define	LCD_VIDEORAM_START	(LCD_RAM_BASE + LCD_PALETTE_SIZE)
+#	define	LCD_VIDEORAM_END	(LCD_VIDEORAM_START + LCD_VIDEORAM_SIZE)
+#	define	LCD_VIDEORAM_DMA_ADR	(LCD_PALETTE_DMA_ADR + LCD_PALETTE_SIZE + (LCD_VIDEORAM_SIZE>>1))
+
+#else
+#	error "Cowardly refusing to break your LCD, please supply correct LCD parameters."
+#endif
+
+#endif
+
+int lcd_init(void);
+
+int lcd_power_up( void );
+int lcd_power_down( void );
+
+int lcd_gpio_setup( void );
+
+int lcd_controller_setup( void );
+int lcd_controller_enable( void );
+int lcd_controller_disable( void );
+
+int lcd_backlight_on( void );
+int lcd_backlight_off( void );
+
+int lcd_fill(int color);
+int lcd_set_pixel(unsigned int x, unsigned int y, unsigned int color);
+
+int lcd_palette_setup( void );
+
+int lcd_contrast( int );
+int lcd_brightness( int );
+
+#endif//BLOB_PXA_LCD_H
Index: build_tree/bootLoader/include/blob/arch/Makefile.in
diff -u /dev/null build_tree/bootLoader/include/blob/arch/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/include/blob/arch/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,393 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+###########################################################################
+###########################################################################
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = include/blob/arch
+DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+HEADERS = $(noinst_HEADERS)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+noinst_HEADERS = \
+	accelent_sa.h \
+	assabet.h \
+	badge4.h \
+	brutus.h \
+	cep.h \
+	clart.h \
+	frodo.h	\
+	hackkit.h \
+	h3600.h \
+	idr.h \
+	jornada720.h \
+	lart.h \
+	lubbock.h \
+	miniprint.h \
+	nesa.h \
+	pleb.h \
+	ramses.h \
+	shannon.h \
+	smdk2500.h \
+	system3.h \
+	trizeps.h \
+	pxa_idp.h \
+	csir_ims.h
+
+CLEANFILES = ${srcdir}/*~
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  include/blob/arch/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  include/blob/arch/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(HEADERS)
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	ctags distclean distclean-generic distclean-tags distdir dvi \
+	dvi-am html html-am info info-am install install-am \
+	install-data install-data-am install-exec install-exec-am \
+	install-info install-info-am install-man install-strip \
+	installcheck installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
+	pdf-am ps ps-am tags uninstall uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/include/blob/arch/Z2.h
diff -u /dev/null build_tree/bootLoader/include/blob/arch/Z2.h:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/include/blob/arch/Z2.h	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,139 @@
+/*
+ * mainstone.h: Mainstone specific defines
+ *
+ * Copyright (C) 2002 Intel Corporation (yu.tang@intel.com)
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ */
+
+#ifndef BLOB_ARCH_MAINSTONE_H
+#define BLOB_ARCH_MAINSTONE_H
+
+/* Use FFUART */
+#define USE_SERIAL1	1
+#define TERMINAL_SPEED	baud_115200
+
+/* the base address were BLOB is loaded by the first stage loader */
+#define BLOB_ABS_BASE_ADDR	(0xa0300400)
+
+
+/* where do various parts live in RAM */
+#define BLOB_RAM_BASE		(0xa0200000)
+#define KERNEL_RAM_BASE		(0xa0008000)
+#define PARAM_RAM_BASE		(0xa0210000)
+#define RAMDISK_RAM_BASE	(0xa0500000)
+
+
+/* and where do they live in flash */
+#define BLOB_FLASH_BASE		(0x00000000)
+#define BLOB_FLASH_LEN		(256 * 1024)
+#define PARAM_FLASH_BASE	(BLOB_FLASH_BASE + BLOB_FLASH_LEN)
+#define PARAM_FLASH_LEN		(0) /* no parameters */
+#define KERNEL_FLASH_BASE	(PARAM_FLASH_BASE + PARAM_FLASH_LEN)
+#define KERNEL_FLASH_LEN	(2 * 1024 * 1024)
+#define LOAD_RAMDISK		0 /* load ramdisk into ram */
+#define RAMDISK_FLASH_BASE	(KERNEL_FLASH_BASE + KERNEL_FLASH_LEN)
+#define RAMDISK_FLASH_LEN	(4 * 1024 * 1024)
+
+
+/* the position of the kernel boot parameters */
+#define BOOT_PARAMS		(0xa0000100)
+
+
+/* the size (in kbytes) to which the compressed ramdisk expands */
+#define RAMDISK_SIZE		(8 * 1024)
+
+
+/* GPIO settings */
+#undef GPSR0_VALUE
+#undef GPSR1_VALUE
+#undef GPSR2_VALUE
+#undef GPSR3_VALUE
+#undef GPDR0_VALUE
+#undef GPDR1_VALUE
+#undef GPDR2_VALUE
+#undef GPDR3_VALUE
+#undef GPCR0_VALUE
+#undef GPCR1_VALUE
+#undef GPCR2_VALUE
+#undef GPCR3_VALUE
+#undef GAFR0_L_VALUE
+#undef GAFR0_U_VALUE
+#undef GAFR1_L_VALUE
+#undef GAFR1_U_VALUE
+#undef GAFR2_L_VALUE
+#undef GAFR2_U_VALUE
+#undef GAFR3_L_VALUE
+#undef GAFR3_U_VALUE
+
+#define GPSR0_VALUE	0x00708800
+#define GPSR1_VALUE	0x03cf0002
+#define GPSR2_VALUE	0x0021FC00
+#define GPSR3_VALUE	0x00000000
+
+#define GPCR0_VALUE	0x00001000
+#define GPCR1_VALUE	0x00000000
+#define GPCR2_VALUE	0x00000000
+#define GPCR3_VALUE	0x00000000
+
+#define GPDR0_VALUE	0xC27B9C04
+#define GPDR1_VALUE	0x00EFAA83
+#define GPDR2_VALUE	0x0E23FC00
+#define GPDR3_VALUE	0x001E1F81
+
+#define GAFR0_L_VALUE	0x94F00000
+#define GAFR0_U_VALUE	0x015A859A
+#define GAFR1_L_VALUE	0x999A955A
+#define GAFR1_U_VALUE	0x0005A4AA
+#define GAFR2_L_VALUE	0x6AA00000
+#define GAFR2_U_VALUE	0x55A8041A
+#define GAFR3_L_VALUE	0x56AA955A
+#define GAFR3_U_VALUE	0x00000001
+
+/* Memory configuration */
+#define MDREFR_VALUE	0x00000018
+#define MDCNFG_VALUE	0x00000AC9
+#define MDMRS_VALUE	0x00000000
+
+/*
+ * #define MSC0_VALUE	0x39F2A7A3
+ */
+#define MSC1_VALUE	0x0000A691
+#define MSC2_VALUE	0x0000B884
+
+/* TFTP download RAM base */
+#define TFTP_RAM_START	0xa1000000
+
+/* FPGA */
+#define MST_FPGA_BASE	0x08000000
+#define MST_LEDDAT1	__REG(MST_FPGA_BASE + 0x10)
+#define MST_LEDCTL	__REG(MST_FPGA_BASE + 0x40)
+#define MST_GPSWR	__REG(MST_FPGA_BASE + 0x60)
+#define MST_MSCWR1	__REG(MST_FPGA_BASE + 0x80)
+#define MST_MSCWR2	__REG(MST_FPGA_BASE + 0x84)
+
+/* USB client Soft-connect bit */
+#define MST_USBC_SC     (0x1<<4)
+
+/* LED */
+#define LED_ADDR	(MST_FPGA_BASE + 0x40)
+#define LED_ON		(0x00FE)
+#define LED_OFF		(0x00FF)
+
+/* SMC91c111 */
+#define SMC_BASE	(0x10000300)
+
+#endif 
Index: build_tree/bootLoader/include/blob/arch/mainstone.h
diff -u build_tree/bootLoader/include/blob/arch/mainstone.h:1.1.1.1 build_tree/bootLoader/include/blob/arch/mainstone.h:1.1.1.2
--- build_tree/bootLoader/include/blob/arch/mainstone.h:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/include/blob/arch/mainstone.h	Fri Nov  9 10:37:08 2007
@@ -1,3 +1,4 @@
+/* Z2 */
 /*
  * mainstone.h: Mainstone specific defines
  *
@@ -22,14 +23,13 @@
 #ifndef BLOB_ARCH_MAINSTONE_H
 #define BLOB_ARCH_MAINSTONE_H
 
-/* Use FFUART */
-#define USE_SERIAL1	1
+/* Use SSUART */
+#define USE_SERIAL3	1
 #define TERMINAL_SPEED	baud_115200
 
 /* the base address were BLOB is loaded by the first stage loader */
 #define BLOB_ABS_BASE_ADDR	(0xa0300400)
 
-
 /* where do various parts live in RAM */
 #define BLOB_RAM_BASE		(0xa0200000)
 #define KERNEL_RAM_BASE		(0xa0008000)
@@ -38,26 +38,35 @@
 
 
 /* and where do they live in flash */
+// 
+// Phil 02-02-06
+// Increased ramdisk from 1MB to 4MB
+// JWK Fixed for Z2
+
 #define BLOB_FLASH_BASE		(0x00000000)
-#define BLOB_FLASH_LEN		(256 * 1024)
+#define BLOB_FLASH_LEN		(64 * 1024)
 #define PARAM_FLASH_BASE	(BLOB_FLASH_BASE + BLOB_FLASH_LEN)
 #define PARAM_FLASH_LEN		(0) /* no parameters */
 #define KERNEL_FLASH_BASE	(PARAM_FLASH_BASE + PARAM_FLASH_LEN)
-#define KERNEL_FLASH_LEN	(2 * 1024 * 1024)
+#define KERNEL_FLASH_LEN	(0x230000)
 #define LOAD_RAMDISK		0 /* load ramdisk into ram */
 #define RAMDISK_FLASH_BASE	(KERNEL_FLASH_BASE + KERNEL_FLASH_LEN)
-#define RAMDISK_FLASH_LEN	(4 * 1024 * 1024)
+#define RAMDISK_FLASH_LEN	(0x5C0000)
 
 
 /* the position of the kernel boot parameters */
 #define BOOT_PARAMS		(0xa0000100)
 
-
 /* the size (in kbytes) to which the compressed ramdisk expands */
-#define RAMDISK_SIZE		(8 * 1024)
+#define RAMDISK_SIZE		(10 * 1024)
 
 
 /* GPIO settings */
+
+//
+// Phil 02-02-06
+// Updated to reflect Orderite GPIO map
+//
 #undef GPSR0_VALUE
 #undef GPSR1_VALUE
 #undef GPSR2_VALUE
@@ -79,38 +88,52 @@
 #undef GAFR3_L_VALUE
 #undef GAFR3_U_VALUE
 
-#define GPSR0_VALUE	0x00708800
-#define GPSR1_VALUE	0x03cf0002
-#define GPSR2_VALUE	0x0021FC00
-#define GPSR3_VALUE	0x00000000
+#define GPSR0_VALUE	0x06088000
+#define GPSR1_VALUE	0x006F0000
+#define GPSR2_VALUE	0x00000000
+#define GPSR3_VALUE	0x00000388
 
-#define GPCR0_VALUE	0x00001000
-#define GPCR1_VALUE	0x00000000
+#define GPCR0_VALUE	0x00000000
+#define GPCR1_VALUE	0x00000380
 #define GPCR2_VALUE	0x00000000
 #define GPCR3_VALUE	0x00000000
 
-#define GPDR0_VALUE	0xC27B9C04
-#define GPDR1_VALUE	0x00EFAA83
-#define GPDR2_VALUE	0x0E23FC00
-#define GPDR3_VALUE	0x001E1F81
-
-#define GAFR0_L_VALUE	0x94F00000
-#define GAFR0_U_VALUE	0x015A859A
-#define GAFR1_L_VALUE	0x999A955A
-#define GAFR1_U_VALUE	0x0005A4AA
-#define GAFR2_L_VALUE	0x6AA00000
-#define GAFR2_U_VALUE	0x55A8041A
-#define GAFR3_L_VALUE	0x56AA955A
-#define GAFR3_U_VALUE	0x00000001
+#define GPDR0_VALUE	0xDBFBDE40
+#define GPDR1_VALUE	0xFCFF8AB3
+#define GPDR2_VALUE	0x6DE3FFFF
+#define GPDR3_VALUE	0x001F1FAE
+
+#define GAFR0_L_VALUE	0x84000141
+#define GAFR0_U_VALUE	0X591A8012
+#define GAFR1_L_VALUE	0X61988002
+#define GAFR1_U_VALUE	0XAAA580AA
+#define GAFR2_L_VALUE	0x0AA0000A
+#define GAFR2_U_VALUE	0X01004400
+#define GAFR3_L_VALUE	0X54013300
+#define GAFR3_U_VALUE	0X00001405
 
 /* Memory configuration */
 #define MDREFR_VALUE	0x00000018
-#define MDCNFG_VALUE	0x00000AC9
+// Was 1E
+#define MDCNFG_VALUE	0x00000AA9
+// Was AC9 then AA9
+/*
+1010 1010 1001
+7		1=4 internal SDRAM banks
+6:5		01 = 12 rows
+4:3		01 = 9 columns
+2		0 = bus width = 32
+1		0 = Enable for partition 1
+0		1 = Enable for partition 0
+*/
+
 #define MDMRS_VALUE	0x00000000
 
-/*
- * #define MSC0_VALUE	0x39F2A7A3
- */
+/* #define MSC0_MS_VALUE   (0x23F838F8)
+#define MSC0_VALUE	0x7FF07FFA
+*/
+
+#define MSC0_VALUE	0x7FF07FFA
 #define MSC1_VALUE	0x0000A691
 #define MSC2_VALUE	0x0000B884
 
@@ -118,22 +141,25 @@
 #define TFTP_RAM_START	0xa1000000
 
 /* FPGA */
+/*
 #define MST_FPGA_BASE	0x08000000
 #define MST_LEDDAT1	__REG(MST_FPGA_BASE + 0x10)
 #define MST_LEDCTL	__REG(MST_FPGA_BASE + 0x40)
 #define MST_GPSWR	__REG(MST_FPGA_BASE + 0x60)
 #define MST_MSCWR1	__REG(MST_FPGA_BASE + 0x80)
 #define MST_MSCWR2	__REG(MST_FPGA_BASE + 0x84)
+*/
 
 /* USB client Soft-connect bit */
 #define MST_USBC_SC     (0x1<<4)
 
 /* LED */
-#define LED_ADDR	(MST_FPGA_BASE + 0x40)
+/* #define LED_ADDR	(MST_FPGA_BASE + 0x40)
 #define LED_ON		(0x00FE)
 #define LED_OFF		(0x00FF)
+*/
 
 /* SMC91c111 */
-#define SMC_BASE	(0x10000300)
+#define SMC_BASE	(0xa10000300)
 
 #endif 
Index: build_tree/bootLoader/include/blob/proc/Makefile.in
diff -u /dev/null build_tree/bootLoader/include/blob/proc/Makefile.in:1.1
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/include/blob/proc/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,374 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+###########################################################################
+###########################################################################
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = include/blob/proc
+DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+HEADERS = $(noinst_HEADERS)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+noinst_HEADERS = \
+	pxa.h \
+	s3c2500.h \
+	sa1100.h \
+	sa1111.h
+
+CLEANFILES = ${srcdir}/*~
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  include/blob/proc/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  include/blob/proc/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(HEADERS)
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	ctags distclean distclean-generic distclean-tags distdir dvi \
+	dvi-am html html-am info info-am install install-am \
+	install-data install-data-am install-exec install-exec-am \
+	install-info install-info-am install-man install-strip \
+	installcheck installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
+	pdf-am ps ps-am tags uninstall uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/include/blob/proc/pxa.h
diff -u build_tree/bootLoader/include/blob/proc/pxa.h:1.1.1.1 build_tree/bootLoader/include/blob/proc/pxa.h:1.1.1.2
--- build_tree/bootLoader/include/blob/proc/pxa.h:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/include/blob/proc/pxa.h	Fri Nov  9 10:37:08 2007
@@ -54,7 +54,7 @@
 
 /* memory start and end */
 #define MEMORY_START		(0xa0000000)
-#define MEMORY_END			(0xb0000000)
+#define MEMORY_END			(0xa4000000)
 
 #define GPIO_OUT_LO_BIT 4
 #define GPIO_OUT_HI_BIT 5
Index: build_tree/bootLoader/include/net/Makefile.in
diff -u /dev/null build_tree/bootLoader/include/net/Makefile.in:1.1
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/include/net/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,376 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+###########################################################################
+###########################################################################
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = include/net
+DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
+	$(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+HEADERS = $(noinst_HEADERS)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+noinst_HEADERS = \
+	arp.h \
+	ether.h \
+	ip_bits.h \
+	net.h \
+	smc9196.h \
+	tftp.h
+
+CLEANFILES = ${srcdir}/*~
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  include/net/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  include/net/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(HEADERS)
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	ctags distclean distclean-generic distclean-tags distdir dvi \
+	dvi-am html html-am info info-am install install-am \
+	install-data install-data-am install-exec install-exec-am \
+	install-info install-info-am install-man install-strip \
+	installcheck installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
+	pdf-am ps ps-am tags uninstall uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/src/Makefile.in
diff -u /dev/null build_tree/bootLoader/src/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/src/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,466 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+###########################################################################
+###########################################################################
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = src
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+SUBDIRS = \
+	commands \
+	lib \
+	blob
+
+CLEANFILES = ${srcdir}/*~
+all: all-recursive
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  src/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if (etags --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	else \
+	  include_option=--include; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -f $$subdir/TAGS && \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || mkdir "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="../$(top_distdir)" \
+	        distdir="../$(distdir)/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-recursive
+all-am: Makefile
+installdirs: installdirs-recursive
+installdirs-am:
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
+	clean clean-generic clean-recursive ctags ctags-recursive \
+	distclean distclean-generic distclean-recursive distclean-tags \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
+	uninstall uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/src/blob/I2C_CS.s
diff -u /dev/null build_tree/bootLoader/src/blob/I2C_CS.s:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/src/blob/I2C_CS.s	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,541 @@
+;*********************************************************************************
+;
+;        COPYRIGHT (c) 2002 Intel Corporation
+;
+;   The information in this file is furnished for informational use only,
+;   is subject to change without notice, and should not be construed as
+;   a commitment by Intel Corporation. Intel Corporation assumes no
+;   responsibility or liability for any errors or inaccuracies that may appear
+;   in this document or any software that may be provided in association with
+;   this document.
+;
+;*********************************************************************************
+;
+;                                     I2C_CS.s
+;                    MainStone Platform Subroutines for the I2C bus
+;
+; Copyright (c) 2002 - 2003 by Intel Corp. Hudson MA
+;
+; All subroutines in this file are called with the branch with link (bl) instruction. These
+; subroutines provide an easy way to send data out to a selected UART without the need to have
+; system memory working (other than flash), or stack pointer. These routines also work by
+; polling the I2C bus to see if it is ready to accept more data rather than using interrupts.
+;
+; List of subroutines in this file:
+;
+;
+; xlli_I2C_corv   (Subroutine) updates processor core voltage DAC
+;
+;
+        INCLUDE xlli_Bulverde_defs.inc
+        INCLUDE xlli_Mainstone_defs.inc
+        INCLUDE bbu_Bulverde_defs.inc
+
+        GLOBAL  xlli_put_PI2C   ; (SPECIAL - To write to power management chip)
+        GLOBAL  xlli_putI2C
+        GLOBAL  xlli_getI2C
+        GLOBAL  bbu_putPI2C
+        GLOBAL  bbu_getPI2C
+
+        EXTERN  bbu_FONT_5X7
+
+        AREA  |text|,CODE,READONLY
+;
+;*********************************************************************************
+;
+;       *****************
+;       *               * 
+;       * xlli_put_PI2C * Subroutine
+;       *               *
+;       *****************
+;
+
+;
+; This subroutine is used to write data to the Power Manager on the Power I2C bus
+
+;
+; PARAMETER PASSING:
+;
+;       r7 = data to be sent to the core voltage DAC
+;
+; RETURNED PARAMETER:
+;
+;       r8 = non zero means no time out
+;       r8 = zero means I2C bus time out
+;
+; 
+;
+xlli_put_PI2C      FUNCTION
+;
+;       Make sure the clock to the I2C unit is enabled
+;
+        ldr    r3,  =xlli_CLKREGS_PHYSICAL_BASE     ; Base address of clock unit
+        ldr    r2,  [r3, #xlli_CKEN_offset]         ; Get current setting of clock enable register
+        orr    r2,  r2,  #0x8000                    ; Set bit 15 in the clcok enable word
+        str    r2,  [r3, #xlli_CKEN_offset]         ; Write the register back
+;
+;       Init the I2C controller for use
+;
+        ldr    r1,  =xlli_PMRCREGS_PHYSICAL_BASE    ; Load Power Manager controller base address
+        ldr    r3,  [r1, #xlli_PCFR_offset]         ; Get present Config register data
+        orr    r3,  r3,  #0x40                      ; Enable power manager I2C
+        str    r3,  [r1, #xlli_PCFR_offset]         ; Write Config register data back
+
+        mov    r2,  #0                              ; Set host controller slave address
+        str    r2,  [r1, #xlli_PI2SAR_offset]       ; Set slave address register
+        str    r2,  [r1, #xlli_PI2CR_offset]        ; Clear interrupts in ICR
+        mov    r3,  #(bbu_ICR_IUE | bbu_ICR_SCLE)   ; Set IUE and SCLE bits
+        str    r3,  [r1, #xlli_PI2CR_offset]        ; Enable the I2C in ICR
+;
+;       Set the slave's address
+;
+        mov    r2,  #0x40
+        str    r2,  [r1, #xlli_PI2DBR_offset]       ; Load Data Buffer Register (PMIC address = 0x40)
+;
+;       Send 1st byte
+;
+        orr    r3,  r3,  #(bbu_ICR_TB | bbu_ICR_START)
+        str    r3,  [r1, #xlli_PI2CR_offset]              ; Set TB and START bits (in addition to IUE & SCLE)
+
+1       ldr    r3,  [r1, #xlli_PI2SR_offset]              ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B1                                        ; No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 2nd byte (ADDRESS)
+;
+        mov    r4,  #0                                    ; Address of register in the slave device
+        str    r4,  [r1, #xlli_PI2DBR_offset]             ; Set register address in the IDBR
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE)
+        str    r3,  [r1, #xlli_PI2CR_offset]              ; Set TB bit to start transfer
+        mov    r8,  #0x80000                              ; set up time out value
+
+2       ldr    r3,  [r1, #xlli_PI2SR_offset]              ; Get status register contents
+        subs   r8,  r8,  #1                               ; Decrement time out counter
+        moveq  pc,  lr                                    ; Return if no ACK signal
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B2                                        ; No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 3rd byte (Low byte of data)
+;
+        and    r4,  r7, #0xFF                             ; Extract the lower 8 bits of the data
+        str    r4,  [r1, #xlli_PI2DBR_offset]             ; Set low data byte into the IDBR
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE)
+        str    r3,  [r1, #xlli_PI2CR_offset]              ; Set TB bit to start transfer
+
+3       ldr    r3,  [r1, #xlli_PI2SR_offset]              ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B3                                        ; No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 4th byte (High byte of data) and STOP signal
+;
+        and    r4,  r7, #0x300                            ; Extract the upper 2 bits of the data
+        mov    r4,  r4, LSR #8                            ; Shift the data right by 8 bits   
+        str    r4,  [r1, #xlli_PI2DBR_offset]             ; Set high data byte into the IDBR
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE | bbu_ICR_STOP)
+        str    r3,  [r1, #xlli_PI2CR_offset]              ; Set TB bit to start transfer
+
+4       ldr    r3,  [r1, #xlli_PI2SR_offset]              ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B4                                        ; No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              ; Write the ITE bit to clear it (sticky)
+
+        mov    pc,  lr                                    ; Return to caller
+
+        ENDFUNC
+
+;//AERONIX
+;
+;*********************************************************************************
+;
+;       ***************
+;       *             * 
+;       * xlli_getI2C * Subroutine
+;       *             *
+;       ***************
+;
+; This subroutine is used to read data from the I2C bus
+
+;
+; PARAMETER PASSING:
+;
+;       r4 = address in target device where data is to be read from
+;       r5 = data read from the register pointed to by r4
+;
+; RETURNED VALUE:
+;
+;       r8 = non zero if no I2C bus time out
+;       r8 = zero if I2C bus time out 
+;
+; REGISTERS USED:
+;
+;       r1, r2, r3, r4, r5, r6, r8 are used and not preserved 
+;
+xlli_getI2C       FUNCTION
+;
+;       Make sure the clock to the I2C unit is enabled
+;
+        ldr    r3,  =xlli_CLKREGS_PHYSICAL_BASE     ; Base address of clock unit
+        ldr    r2,  [r3, #xlli_CKEN_offset]         ; Get current setting of clock enable register
+        orr    r2,  r2,  #0x4000                    ; Set bit 14 in the clock enable word
+        str    r2,  [r3, #xlli_CKEN_offset]         ; Write the register back
+;
+;       Init the I2C controller for use
+;
+        ldr    r1,  =bbu_I2C_PHYSICAL_BASE          ; Load I2C controller base address
+        mov    r2,  #0                              ; Set host controller slave address
+        str    r2,  [r1, #bbu_I2C_ISAR_offset]      ; Set slave address register
+        str    r2,  [r1, #bbu_I2C_ICR_offset]       ; Clear interrupts in ICR
+        mov    r3,  #(bbu_ICR_IUE | bbu_ICR_SCLE)   ; Set IUE and SCLE bits
+        str    r3,  [r1, #bbu_I2C_ICR_offset]       ; Enable the I2C in ICR
+;
+;       Get the slave's address
+;
+        ldr    r6,  =bbu_FFUART_PHYSICAL_BASE       ; Fetch base address of the FFUART
+        ldr    r9,  [r6, #bbu_UASPR_offset]         ; Get contents of the scratch pad register
+        str    r9,  [r1, #bbu_I2C_IDBR_offset]      ; Load Data Buffer Register
+;
+;       Send 1st byte
+;
+        orr    r3,  r3,  #(bbu_ICR_TB | bbu_ICR_START)
+        str    r3,  [r1, #bbu_I2C_ICR_offset]             ; Set TB and START bits (in addition to IUE & SCLE)
+
+1       ldr    r3,  [r1, #bbu_I2C_ISR_offset]             ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B1                                        ; No - still being transmitted
+        str    r3,  [r1, #bbu_I2C_ISR_offset]             ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 2nd byte (ADDRESS)
+;
+        str    r4,  [r1, #bbu_I2C_IDBR_offset]            ; Set register address in the IDBR
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE | bbu_ICR_STOP)
+        str    r3,  [r1, #bbu_I2C_ICR_offset]             ; Set TB bit to start transfer
+        mov    r8,  #0x80000                              ; Set up time out value
+
+2       ldr    r3,  [r1, #bbu_I2C_ISR_offset]             ; Get status register contents
+        subs   r8,  r8,  #1                               ; Decrement time out value
+        moveq  pc,  lr                                    ; Return if timed out
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B2                                        ; No - still being transmitted
+        str    r3,  [r1, #bbu_I2C_ISR_offset]             ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 3rd byte - Slave read address
+;
+88      orr    r9,  r9,  #1                               ; Turn the address into a slave address
+        str    r9,  [r1, #bbu_I2C_IDBR_offset]            ; Load Data Buffer Register
+
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE | bbu_ICR_START)
+        str    r3,  [r1, #bbu_I2C_ICR_offset]             ; Set TB bit to start transfer
+
+3       ldr    r3,  [r1, #bbu_I2C_ISR_offset]             ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B3                                        ; No - still being transmitted
+        str    r3,  [r1, #bbu_I2C_ISR_offset]             ; Write the ITE & IRF bits to clear them (sticky)
+;
+;       Send STOP signal
+;
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE | bbu_ICR_STOP | bbu_ICR_ACKNAK)
+        str    r3,  [r1, #bbu_I2C_ICR_offset]             ; Set TB bit to start transfer
+;
+;       Set up and then receive data byte
+;
+5       ldr    r3,  [r1, #bbu_I2C_ISR_offset]       ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_IRF               ; Was the byte received yet?
+        beq    %B5                                  ; no - keep looping
+        str    r3,  [r1, #bbu_I2C_ISR_offset]       ; Write the IRF bit to clear it (sticky)
+
+        ldr    r5,  [r1, #bbu_I2C_IDBR_offset]      ; Fetch data byte from the IDBR
+        mov    pc,  lr                              ; Return to caller
+
+		ENDFUNC
+;
+;*********************************************************************************
+;
+;       ***************
+;       *             * 
+;       * xlli_putI2C * Subroutine
+;       *             *
+;       ***************
+;
+; This subroutine is used to write data to the I2C bus
+
+;
+; PARAMETER PASSING:
+;
+;       r4 = address in target device where data is to be sent
+;       r5 = data to be loaded into the register pointed to by r4
+;
+; RETURNED VALUE:
+;
+;       r8 = non zero if no I2C bus time out
+;       r8 = zero if I2C bus time out 
+;
+xlli_putI2C      FUNCTION
+;
+;       Make sure the clock to the I2C unit is enabled
+;
+        ldr    r3,  =xlli_CLKREGS_PHYSICAL_BASE     ; Base address of clock unit
+        ldr    r2,  [r3, #xlli_CKEN_offset]         ; Get current setting of clock enable register
+        orr    r2,  r2,  #0x4000                    ; Set bit 14 in the clcok enable word
+        str    r2,  [r3, #xlli_CKEN_offset]         ; Write the register back
+;
+;       Init the I2C controller for use
+;
+        ldr    r1,  =bbu_I2C_PHYSICAL_BASE          ; Load I2C controller base address
+        mov    r2,  #0                              ; Set host controller slave address
+        str    r2,  [r1, #bbu_I2C_ISAR_offset]      ; Set slave address register
+        str    r2,  [r1, #bbu_I2C_ICR_offset]       ; Clear interrupts in ICR
+        mov    r3,  #(bbu_ICR_IUE | bbu_ICR_SCLE)   ; Set IUE and SCLE bits
+        str    r3,  [r1, #bbu_I2C_ICR_offset]       ; Enable the I2C in ICR
+;
+;       Get the slaves address
+;
+        ldr    r8,  =bbu_FFUART_PHYSICAL_BASE       ; Fetch base address of FFUART
+        ldr    r9,  [r8, #bbu_UASPR_offset]         ; Get contents of the scratch pad register
+        str    r9,  [r1, #bbu_I2C_IDBR_offset]      ; Load Data Buffer Register
+;
+;       Send 1st byte
+;
+        orr    r3,  r3,  #(bbu_ICR_TB | bbu_ICR_START)
+        str    r3,  [r1, #bbu_I2C_ICR_offset]             ; Set TB and START bits (in addition to IUE & SCLE)
+
+1       ldr    r3,  [r1, #bbu_I2C_ISR_offset]             ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B1                                        ; No - still being transmitted
+        str    r3,  [r1, #bbu_I2C_ISR_offset]             ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 2nd byte (ADDRESS)
+;
+        str    r4,  [r1, #bbu_I2C_IDBR_offset]            ; Set register address in the IDBR
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE)
+        str    r3,  [r1, #bbu_I2C_ICR_offset]             ; Set TB bit to start transfer
+        mov    r8,  #0X80000                              ; Set up time out value
+
+2       ldr    r3,  [r1, #bbu_I2C_ISR_offset]             ; Get status register contents
+        subs   r8,  r8,  #1                               ; Decrement time out value
+        moveq  pc,  lr                                    ; Return if there was a time out
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B2                                        ; No - still being transmitted
+		str    r3,  [r1, #bbu_I2C_ISR_offset]             ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 3rd byte (DATA) and STOP signal
+;
+        str    r5,  [r1, #bbu_I2C_IDBR_offset]            ; Set data byte into the IDBR
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE | bbu_ICR_STOP)
+        str    r3,  [r1, #bbu_I2C_ICR_offset]             ; Set TB bit to start transfer
+
+3       ldr    r3,  [r1, #bbu_I2C_ISR_offset]             ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B3                                        ; No - still being transmitted
+        str    r3,  [r1, #bbu_I2C_ISR_offset]             ; Write the ITE bit to clear it (sticky)
+
+        mov    pc,  lr                              ; Return to caller
+
+        ENDFUNC
+; -------------------------------------------------------
+;
+;*********************************************************************************
+;
+;       ***************
+;       *             * 
+;       * bbu_getPI2C * Subroutine
+;       *             *
+;       ***************
+;
+; This subroutine is used to read data from the Power I2C bus
+
+;
+; PARAMETER PASSING:
+;
+;       r4 = address in target device where data is to be read from
+;       r5 = data read from the register pointed to by r4
+;
+; RETURNED VALUE:
+;
+;       r8 = non zero if no I2C bus time out
+;       r8 = zero if I2C bus time out 
+;
+; REGISTERS USED:
+;
+;       r1, r2, r3, r4, r5, r6, r8 are used and not preserved 
+;
+bbu_getPI2C     FUNCTION
+;
+;       Make sure the clock to the I2C unit is enabled
+;
+        ldr    r3,  =xlli_CLKREGS_PHYSICAL_BASE     ; Base address of clock unit
+        ldr    r2,  [r3, #xlli_CKEN_offset]         ; Get current setting of clock enable register
+        orr    r2,  r2,  #0x8000                    ; Set bit 15 in the clock enable word
+        str    r2,  [r3, #xlli_CKEN_offset]         ; Write the register back
+;
+;       Init the Power I2C controller for use
+;
+        ldr    r1,  =xlli_PMRCREGS_PHYSICAL_BASE    ; Load Power Manager controller base address
+        ldr    r3,  [r1, #xlli_PCFR_offset]         ; Get present Config register data
+        orr    r3,  r3,  #bbu_PI2C_EN               ; Enable power manager I2C bus
+        str    r3,  [r1, #xlli_PCFR_offset]         ; Write Config register data back
+
+        mov    r2,  #0                              ; Set host controller slave address
+        str    r2,  [r1, #xlli_PI2SAR_offset]       ; Set slave address register
+        str    r2,  [r1, #xlli_PI2CR_offset]        ; Clear interrupts in ICR
+        mov    r3,  #(bbu_ICR_IUE | bbu_ICR_SCLE)   ; Set IUE and SCLE bits
+        str    r3,  [r1, #xlli_PI2CR_offset]        ; Enable the I2C in ICR
+;
+;       Get the slave's address
+;
+        ldr    r6,  =bbu_FFUART_PHYSICAL_BASE       ; Fetch base address of the FFUART
+        ldr    r9,  [r6, #bbu_UASPR_offset]         ; Get contents of the scratch pad register
+        str    r9,  [r1, #xlli_PI2DBR_offset]       ; Load Data Buffer Register
+;
+;       Send 1st byte
+;
+        orr    r3,  r3,  #(bbu_ICR_TB | bbu_ICR_START)
+        str    r3,  [r1, #xlli_PI2CR_offset]              ; Set TB and START bits (in addition to IUE & SCLE)
+        mov    r8,  #0x80000                              ; Set up time out value
+
+1       ldr    r3,  [r1, #xlli_PI2SR_offset]              ; Get status register contents
+        subs   r8,  r8,  #1                               ; Decrement time out value
+        moveq  pc,  lr                                    ; Return if timed out
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B1                                        ; No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 2nd byte (ADDRESS)
+;
+        str    r4,  [r1, #xlli_PI2DBR_offset]             ; Set register address in the IDBR
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE | bbu_ICR_STOP)
+        str    r3,  [r1, #xlli_PI2CR_offset]              ; Set TB bit to start transfer
+        mov    r8,  #0x80000                              ; Set up time out value
+
+2       ldr    r3,  [r1, #xlli_PI2SR_offset]              ; Get status register contents
+        subs   r8,  r8,  #1                               ; Decrement time out value
+        moveq  pc,  lr                                    ; Return if timed out
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B2                                        ; No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 3rd byte - Slave read address
+;
+88      orr    r9,  r9,  #1                               ; Turn the address into a slave address
+        str    r9,  [r1, #xlli_PI2DBR_offset]             ; Load Data Buffer Register
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE | bbu_ICR_START)
+        str    r3,  [r1, #xlli_PI2CR_offset]              ; Set TB bit to start transfer
+
+3       ldr    r3,  [r1, #xlli_PI2SR_offset]              ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B3                                        ; No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              ; Write the ITE & IRF bits to clear them (sticky)
+;
+;       Send STOP signal
+;
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE | bbu_ICR_STOP | bbu_ICR_ACKNAK)
+        str    r3,  [r1, #xlli_PI2CR_offset]             ; Set TB bit to start transfer
+        mov    r8,  #0x80000                             ; Set up time out value
+;
+;       Set up and then receive data byte (seems to hang in the following loop * 24-Oct-03)
+;
+5       ldr    r3,  [r1, #xlli_PI2SR_offset]        ; Get status register contents
+        subs   r8,  r8,  #1                         ; Decrement time out counter
+        addeq  r8,  r8,  #1                         ; Increment back to 1 if timed out
+        moveq  pc,  lr                              ; and return to caller
+        ands   r3,  r3,  #bbu_ISR_IRF               ; Was the byte received yet?
+        beq    %B5                                  ; no - keep looping
+        str    r3,  [r1, #xlli_PI2SR_offset]        ; Write the IRF bit to clear it (sticky)
+
+        ldr    r5,  [r1, #xlli_PI2DBR_offset]       ; Fetch data byte from the IDBR
+        mov    pc,  lr                              ; Return to caller
+
+        ENDFUNC
+;
+;*********************************************************************************
+;
+;       ***************
+;       *             * 
+;       * bbu_putPI2C * Subroutine
+;       *             *
+;       ***************
+;
+; This subroutine is used to write data to the PI2C bus
+
+;
+; PARAMETER PASSING:
+;
+;       r4 = address in target device where data is to be sent
+;       r5 = data to be loaded into the register pointed to by r4
+;
+; RETURNED VALUE:
+;
+;       r8 = non zero if no I2C bus time out
+;       r8 = zero if I2C bus time out 
+;
+bbu_putPI2C      FUNCTION
+;
+;       Make sure the clock to the I2C unit is enabled
+;
+        ldr    r3,  =xlli_CLKREGS_PHYSICAL_BASE     ; Base address of clock unit
+        ldr    r2,  [r3, #xlli_CKEN_offset]         ; Get current setting of clock enable register
+        orr    r2,  r2,  #0x8000                    ; Set bit 15 in the clock enable word
+        str    r2,  [r3, #xlli_CKEN_offset]         ; Write the register back
+;
+;       Init the Power I2C controller for use
+;
+        ldr    r1,  =xlli_PMRCREGS_PHYSICAL_BASE    ; Load Power Manager controller base address
+        ldr    r3,  [r1, #xlli_PCFR_offset]         ; Get present Config register data
+        orr    r3,  r3,  #0x40                      ; Enable power manager I2C
+        str    r3,  [r1, #xlli_PCFR_offset]         ; Write Config register data back
+
+        mov    r2,  #0                              ; Set host controller slave address
+        str    r2,  [r1, #xlli_PI2SAR_offset]       ; Set slave address register
+        str    r2,  [r1, #xlli_PI2CR_offset]        ; Clear interrupts in ICR
+        mov    r3,  #(bbu_ICR_IUE | bbu_ICR_SCLE)   ; Set IUE and SCLE bits
+        str    r3,  [r1, #xlli_PI2CR_offset]        ; Enable the I2C in ICR
+;
+;       Get the slave's address
+;
+        ldr    r8,  =bbu_FFUART_PHYSICAL_BASE       ; Fetch base address of FFUART
+        ldr    r9,  [r8, #bbu_UASPR_offset]         ; Get contents of the scratch pad register
+        str    r9,  [r1, #xlli_PI2DBR_offset]       ; Load Data Buffer Register
+;
+;       Send 1st byte
+;
+        orr    r3,  r3,  #(bbu_ICR_TB | bbu_ICR_START)
+        str    r3,  [r1, #xlli_PI2CR_offset]              ; Set TB and START bits (in addition to IUE & SCLE)
+
+1       ldr    r3,  [r1, #xlli_PI2SR_offset]              ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B1                                        ; No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 2nd byte (ADDRESS)
+;
+        str    r4,  [r1, #xlli_PI2DBR_offset]             ; Set register address in the IDBR
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE)
+        str    r3,  [r1, #xlli_PI2CR_offset]              ; Set TB bit to start transfer
+        mov    r8,  #0X80000                              ; Set up time out value
+
+2       ldr    r3,  [r1, #xlli_PI2SR_offset]              ; Get status register contents
+        subs   r8,  r8,  #1                               ; Decrement time out value
+        moveq  pc,  lr                                    ; Return if there was a time out
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B2                                        ; No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              ; Write the ITE bit to clear it (sticky)
+;
+;       Set up and then send 3rd byte (DATA) and STOP signal
+;
+        str    r5,  [r1, #xlli_PI2DBR_offset]             ; Set data byte into the IDBR
+        mov    r3,  #(bbu_ICR_TB | bbu_ICR_IUE | bbu_ICR_SCLE | bbu_ICR_STOP)
+        str    r3,  [r1, #xlli_PI2CR_offset]              ; Set TB bit to start transfer
+
+3       ldr    r3,  [r1, #xlli_PI2SR_offset]              ; Get status register contents
+        ands   r3,  r3,  #bbu_ISR_ITE                     ; Was the byte sent yet?
+        beq    %B3                                        ; No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              ; Write the ITE bit to clear it (sticky)
+
+        mov    pc,  lr                              ; Return to caller
+
+        ENDFUNC
+
+        END
+
Index: build_tree/bootLoader/src/blob/Makefile.in
diff -u /dev/null build_tree/bootLoader/src/blob/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/src/blob/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,811 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+#
+# Makefile.am
+#
+# Copyright (C) 2001 Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
+#
+# $Id: Makefile.am,v 1.46 2003/09/04 18:10:42 russd Exp $
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+
+SOURCES = $(blob_SOURCES) $(blob_elf32_SOURCES) $(EXTRA_blob_elf32_SOURCES) $(blob_rest_SOURCES) $(blob_rest_elf32_SOURCES) $(EXTRA_blob_rest_elf32_SOURCES)
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+bin_PROGRAMS = blob-rest-elf32$(EXEEXT) blob-rest$(EXEEXT) \
+	blob-elf32$(EXEEXT) blob$(EXEEXT)
+subdir = src/blob
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+am__installdirs = "$(DESTDIR)$(bindir)"
+binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
+PROGRAMS = $(bin_PROGRAMS)
+am_blob_OBJECTS =
+blob_OBJECTS = $(am_blob_OBJECTS)
+blob_LDADD = $(LDADD)
+am_blob_elf32_OBJECTS = start.$(OBJEXT) testmem.$(OBJEXT)
+blob_elf32_OBJECTS = $(am_blob_elf32_OBJECTS)
+am_blob_rest_OBJECTS =
+blob_rest_OBJECTS = $(am_blob_rest_OBJECTS)
+blob_rest_LDADD = $(LDADD)
+am_blob_rest_elf32_OBJECTS = trampoline.$(OBJEXT) flashasm.$(OBJEXT) \
+	testmem2.$(OBJEXT) bootldrpart.$(OBJEXT) commands.$(OBJEXT) \
+	flash.$(OBJEXT) flash-commands.$(OBJEXT) initcalls.$(OBJEXT) \
+	linux.$(OBJEXT) main.$(OBJEXT) memory.$(OBJEXT) \
+	param_block.$(OBJEXT) partition.$(OBJEXT) reboot.$(OBJEXT) \
+	load_kernel.$(OBJEXT) zImage.$(OBJEXT)
+blob_rest_elf32_OBJECTS = $(am_blob_rest_elf32_OBJECTS)
+DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include/blob
+depcomp = $(SHELL) $(top_srcdir)/tools/depcomp
+am__depfiles_maybe = depfiles
+@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/accelent_sa.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/amd16.Po ./$(DEPDIR)/amd32.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/assabet.Po ./$(DEPDIR)/badge4.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/bootldrpart.Po ./$(DEPDIR)/brutus.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/cep.Po ./$(DEPDIR)/chkmem.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/clart.Po ./$(DEPDIR)/clock.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/commands.Po ./$(DEPDIR)/compr_rtime.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/compr_rubin.Po ./$(DEPDIR)/cramfs.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/csir_ims.Po ./$(DEPDIR)/dafit.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/flash-commands.Po ./$(DEPDIR)/flash.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/frodo.Po ./$(DEPDIR)/h3600.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/hackkit.Po ./$(DEPDIR)/idr.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/initcalls.Po ./$(DEPDIR)/intel16.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/intel32.Po ./$(DEPDIR)/jffs2.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/jornada720.Po ./$(DEPDIR)/lart.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/linux.Po ./$(DEPDIR)/load_kernel.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/main.Po ./$(DEPDIR)/memory.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/miniprint.Po ./$(DEPDIR)/nesa.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/nullflash.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/param_block.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/partition.Po ./$(DEPDIR)/pleb.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/pxa_idp.Po ./$(DEPDIR)/ramses.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/reboot.Po ./$(DEPDIR)/shannon.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/smdk2500.Po ./$(DEPDIR)/system3.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/trizeps.Po ./$(DEPDIR)/uucodec.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/xmodem.Po ./$(DEPDIR)/zImage.Po
+CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
+SOURCES = $(blob_SOURCES) $(blob_elf32_SOURCES) \
+	$(EXTRA_blob_elf32_SOURCES) $(blob_rest_SOURCES) \
+	$(blob_rest_elf32_SOURCES) $(EXTRA_blob_rest_elf32_SOURCES)
+DIST_SOURCES = $(blob_SOURCES) $(blob_elf32_SOURCES) \
+	$(EXTRA_blob_elf32_SOURCES) $(blob_rest_SOURCES) \
+	$(blob_rest_elf32_SOURCES) $(EXTRA_blob_rest_elf32_SOURCES)
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+SUBDIRS = xlli
+INCLUDES = \
+	-I${top_builddir}/include \
+	-I${top_srcdir}/include \
+	-I${LINUX_INCLUDE}
+
+
+# ---- Built sources -------------------------------------------------
+BUILT_SOURCES = \
+	rest-ld-script \
+	commands.c
+
+
+# ---- Blob second stage ---------------------------------------------
+
+# WARNING: trampoline.S *must* be the first file, otherwise the target
+# will be linked in the wrong order!
+blob_rest_elf32_SOURCES = \
+	trampoline.S \
+	flashasm.S \
+	testmem2.S \
+	bootldrpart.c \
+	commands.c \
+	flash.c \
+	flash-commands.c \
+	initcalls.c \
+	linux.c \
+	main.c \
+	memory.c \
+	param_block.c \
+	partition.c \
+	reboot.c \
+	load_kernel.c \
+	zImage.c
+
+
+# conditionally compiled sources
+EXTRA_blob_rest_elf32_SOURCES = \
+	chkmem.c \
+	clock.c \
+	amd16.c amd32.c intel16.c intel32.c nullflash.c \
+	cramfs.c \
+	compr_rtime.c compr_rubin.c jffs2.c \
+	uucodec.c \
+	xmodem.c \
+	accelent_sa.c assabet.c brutus.c badge4.c cep.c clart.c dafit.c frodo.c \
+	hackkit.c h3600.c idr.c jornada720.c lart.c miniprint.c nesa.c pleb.c \
+	ramses.c shannon.c smdk2500.c system3.c trizeps.c pxa_idp.c csir_ims.c
+
+blob_rest_elf32_DEPENDENCIES = \
+	@BLOB_CHKMEM_OBJS@ \
+	@BLOB_CLOCK_OBJS@ \
+	@BLOB_CRAMFS_OBJS@ \
+	@BLOB_ZIMAGE_OBJS@ \
+	@BLOB_FLASH_OBJS@ \
+	@BLOB_JFFS2_OBJS@ \
+	@BLOB_PLATFORM_OBJS@ \
+	@BLOB_UUCODEC_OBJS@ \
+	@BLOB_XMODEM_OBJS@ \
+	${top_builddir}/src/commands/libcommands.a \
+	${top_builddir}/src/lib/libblob.a \
+	rest-ld-script
+
+blob_rest_elf32_LDFLAGS = \
+	-static -nostdlib \
+	-Wl,-T,rest-ld-script \
+	-Wl,-Map,blob-rest-elf32.map
+
+blob_rest_elf32_LDADD = \
+	@BLOB_CHKMEM_OBJS@ \
+	@BLOB_CLOCK_OBJS@ \
+	@BLOB_CRAMFS_OBJS@ \
+	@BLOB_FLASH_OBJS@ \
+	@BLOB_JFFS2_OBJS@ \
+	@BLOB_PLATFORM_OBJS@ \
+	@BLOB_UUCODEC_OBJS@ \
+	@BLOB_XMODEM_OBJS@ \
+	-L${top_builddir}/src/commands -L${top_builddir}/src/lib \
+	-lcommands -lblob \
+	-lgcc
+
+blob_rest_SOURCES = 
+
+# ---- Blob first stage loader ---------------------------------------
+
+# WARNING: start.S *must* be the first file, otherwise the target will
+# be linked in the wrong order!
+blob_elf32_SOURCES = \
+	start.S \
+	testmem.S
+
+EXTRA_blob_elf32_SOURCES = \
+	ledasm-mmap.S \
+	ledasm-s3c2500.S \
+	ledasm-sa11x0.S \
+	memsetup-s3c2500.S \
+	memsetup-sa1100.S \
+	memsetup-sa1110.S \
+	start-s3c2500.S \
+	start-pxa.S \
+	gpio-pxa.S \
+	start-sa11x0.S
+
+blob_elf32_DEPENDENCIES = \
+	@BLOB_LED_STARTCODE@ \
+	@BLOB_MEMSETUP_OBJS@ \
+	@BLOB_STARTCODE_OBJS@ \
+	start-ld-script \
+	blob-rest-piggy.o
+
+blob_elf32_LDFLAGS = \
+	-static -nostdlib \
+	-Wl,-T,${srcdir}/start-ld-script \
+	-Wl,-Map,blob-start-elf32.map
+
+blob_elf32_LDADD = \
+	@BLOB_LED_STARTCODE@ \
+	@BLOB_MEMSETUP_OBJS@ \
+	@BLOB_STARTCODE_OBJS@ \
+	-lgcc
+
+blob_SOURCES = 
+
+# ---- Automake administrativia --------------------------------------
+EXTRA_DIST = \
+	start-ld-script \
+	rest-ld-script.in
+
+CLEANFILES = \
+	${srcdir}/*~ rest-ld-script \
+	commands.c *.map blob-rest-piggy.o
+
+DISTCLEANFILES = ${builddir}/.deps/*.P
+all: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) all-recursive
+
+.SUFFIXES:
+.SUFFIXES: .S .c .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/blob/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  src/blob/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+install-binPROGRAMS: $(bin_PROGRAMS)
+	@$(NORMAL_INSTALL)
+	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
+	@list='$(bin_PROGRAMS)'; for p in $$list; do \
+	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
+	  if test -f $$p \
+	  ; then \
+	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
+	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
+	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
+	  else :; fi; \
+	done
+
+uninstall-binPROGRAMS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(bin_PROGRAMS)'; for p in $$list; do \
+	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
+	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
+	done
+
+clean-binPROGRAMS:
+	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
+blob-elf32$(EXEEXT): $(blob_elf32_OBJECTS) $(blob_elf32_DEPENDENCIES) 
+	@rm -f blob-elf32$(EXEEXT)
+	$(LINK) $(blob_elf32_LDFLAGS) $(blob_elf32_OBJECTS) $(blob_elf32_LDADD) $(LIBS)
+blob-rest-elf32$(EXEEXT): $(blob_rest_elf32_OBJECTS) $(blob_rest_elf32_DEPENDENCIES) 
+	@rm -f blob-rest-elf32$(EXEEXT)
+	$(LINK) $(blob_rest_elf32_LDFLAGS) $(blob_rest_elf32_OBJECTS) $(blob_rest_elf32_LDADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/accelent_sa.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/amd16.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/amd32.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assabet.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/badge4.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bootldrpart.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brutus.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cep.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chkmem.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clart.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clock.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/commands.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compr_rtime.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/compr_rubin.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cramfs.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/csir_ims.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dafit.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flash-commands.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/flash.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frodo.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/h3600.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hackkit.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/idr.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/initcalls.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/intel16.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/intel32.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jffs2.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jornada720.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lart.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/linux.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memory.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/miniprint.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nesa.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nullflash.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/param_block.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/partition.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pleb.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pxa_idp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ramses.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reboot.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shannon.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smdk2500.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/system3.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trizeps.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/uucodec.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xmodem.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zImage.Po@am__quote@
+
+.S.obj:
+	$(CCASCOMPILE) -c `$(CYGPATH_W) '$<'`
+
+.c.o:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+uninstall-info-am:
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if (etags --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	else \
+	  include_option=--include; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -f $$subdir/TAGS && \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || mkdir "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="../$(top_distdir)" \
+	        distdir="../$(distdir)/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) check-recursive
+all-am: Makefile $(PROGRAMS)
+installdirs: installdirs-recursive
+installdirs-am:
+	for dir in "$(DESTDIR)$(bindir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
+clean: clean-recursive
+
+clean-am: clean-binPROGRAMS clean-generic mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am:
+
+install-exec-am: install-binPROGRAMS
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-binPROGRAMS uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
+	clean clean-binPROGRAMS clean-generic clean-recursive ctags \
+	ctags-recursive distclean distclean-compile distclean-generic \
+	distclean-recursive distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-binPROGRAMS \
+	install-data install-data-am install-exec install-exec-am \
+	install-info install-info-am install-man install-strip \
+	installcheck installcheck-am installdirs installdirs-am \
+	maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-compile \
+	mostlyclean-generic mostlyclean-recursive pdf pdf-am ps ps-am \
+	tags tags-recursive uninstall uninstall-am \
+	uninstall-binPROGRAMS uninstall-info-am
+
+
+rest-ld-script: rest-ld-script.in
+	$(CC) -x c-header -undef -nostdinc ${INCLUDES} -D__ASSEMBLY__ -E $< | sed 's/^#.*//' > $@
+
+commands.c:
+	${top_srcdir}/src/commands/make_commands.sh @BLOB_COMMANDS@ > $@
+
+.S.o:
+	$(COMPILE) -D__ASSEMBLY__ -c $<
+
+blob-rest$(EXEEXT): blob-rest-elf32
+	$(OBJCOPY) $(OCFLAGS) $< $@
+
+# create an object file from the binary so we can link it into the
+# first stage loaders
+blob-rest-piggy.o: blob-rest
+	$(LD) -r -o $@ -b binary $<
+
+blob$(EXEEXT): blob-elf32
+	$(OBJCOPY) $(OCFLAGS) $< $@
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/src/blob/commands.c
diff -u /dev/null build_tree/bootLoader/src/blob/commands.c:1.4
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/src/blob/commands.c	Wed Nov 14 17:02:19 2007
@@ -0,0 +1,34 @@
+/*
+ * WARNING:
+ * This file was generated by make_commands.sh. All changes to this file
+ * will be automatically overwritten once you rerun make_commands.sh. Do
+ * not try to check this file into CVS: generated files do not belong in
+ * CVS repositories.
+ */
+
+#ifdef HAVE_CONFIG_H
+# include <blob/config.h>
+#endif
+
+#include <blob/command.h>
+
+extern int reset_cmd(int argc, char *argv[]);
+extern char reset_help[];
+__commandlist(reset_cmd, "reset", reset_help);
+
+extern int reboot_cmd(int argc, char *argv[]);
+extern char reboot_help[];
+__commandlist(reboot_cmd, "reboot", reboot_help);
+
+extern int poke_cmd(int argc, char *argv[]);
+extern char poke_help[];
+__commandlist(poke_cmd, "poke", poke_help);
+
+extern int peek_cmd(int argc, char *argv[]);
+extern char peek_help[];
+__commandlist(peek_cmd, "peek", peek_help);
+
+extern int xdownload_cmd(int argc, char *argv[]);
+extern char xdownload_help[];
+__commandlist(xdownload_cmd, "xdownload", xdownload_help);
+
Index: build_tree/bootLoader/src/blob/flash.c
diff -u build_tree/bootLoader/src/blob/flash.c:1.1.1.2 build_tree/bootLoader/src/blob/flash.c:1.1.1.3
--- build_tree/bootLoader/src/blob/flash.c:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/flash.c	Fri Nov  9 10:37:08 2007
@@ -48,8 +48,8 @@
 #include <blob/command.h>
 
 
-/* this is enough for a 32MB flash with 128kB blocks */
-#define NUM_FLASH_BLOCKS	(256)
+/* this is enough for a 4MB flash with 32kB blocks */
+#define NUM_FLASH_BLOCKS	(128)
 
 
 typedef struct {
@@ -66,8 +66,6 @@
 flash_driver_t *flash_driver;
 
 
-
-
 /* dummy function for enable_vpp and disable_vpp */
 int flash_dummy_ok(void)
 {
@@ -82,47 +80,42 @@
  */
 static void print_flash_map(void)
 {
-#ifdef BLOB_DEBUG
 	int i;
 
-	printf("Flash map:\n");
-	for(i = 0; i < num_flash_blocks; i++) {
+		for(i = 0; i < num_flash_blocks; i++) {
 		u32 start = flash_blocks[i].start;
 
-		printf("%3i: 0x%08x @ 0x%08x (%i kb), ", 
+		deprintf("%3i: 0x%08x @ 0x%08x (%i kb), ", 
 		       i, flash_blocks[i].size, start,
 		       flash_blocks[i].size / 1024);
 
 		if(flash_blocks[i].lockable && 
 		   flash_driver->query_block_lock) {
 			if ((flash_driver->query_block_lock)((u32 *) start))
-				printf("locked\n");
+				deprintf("locked\n");
 			else
-				printf("unlocked\n");
+				deprintf("unlocked\n");
 		} else {
-			printf("not lockable\n");
+			deprintf("not lockable\n");
 		}
 	}
-#endif
 }
 
-
-
-
 /* initialise the flash blocks table */
 static void init_flash(void)
 {
+
 	int i = 0;
 	int j;
 	u32 start = 0;
 	
 	if(flash_descriptors == NULL) {
-		deprintf("undefined flash_descriptors\n");
+		printf("undefined flash_descriptors\n");
 		return;
 	}
 
 	if(flash_driver == NULL) {
-		deprintf("undefined flash_driver\n");
+		printf("undefined flash_driver\n");
 		return;
 	}
 
@@ -139,14 +132,14 @@
 		int rc;
 
 		if (flash_driver->query_descriptors == 0) {
-			deprintf("driver does not support query_descriptors\n");
+			printf("driver does not support query_descriptors\n");
 			flash_descriptors = 0;
 			return;
 		}
 
 		rc = flash_driver->query_descriptors(flashAddr, &d);
 		if (rc) {
-			deprintf("driver failed to query flash for descriptors\n");
+			printf("driver failed to query flash for descriptors\n");
 			flash_descriptors = 0;
 			return;
 		}
@@ -158,15 +151,12 @@
 	num_flash_blocks = 0;
 
 	while(flash_descriptors[i].size != 0) {
-		dprintf("%i x 0x%08x, ",
-			flash_descriptors[i].num,
-			flash_descriptors[i].size);
-
-		if(!flash_descriptors[i].lockable)
-			dprintf("not ");
 
-		dprintf("lockable\n");
+/*		if(!flash_descriptors[i].lockable)
+			printf("not ");
 
+		printf("lockable\n");
+*/
 		for(j = 0; j < flash_descriptors[i].num; j++) {
 			flash_blocks[num_flash_blocks].start = start;
 			flash_blocks[num_flash_blocks].size =
@@ -205,20 +195,25 @@
 	cur = start;
 	end = start + nwords;
 
-	dprintf("erasing 0x%08x (%d) words at 0x%08x\n",
+/* AERONIX */
+
+	printf("erasing 0x%08x (%d) words at 0x%08x\n",
 		nwords, nwords, (unsigned int)start);
 
 	flash_driver->enable_vpp();
 
+	printf("unlocking dirty block at 0x%08x\n", (u32)cur);
+			/* dirty block */
+			rv = flash_driver->unlock_block(cur);
+
 	while(cur < end) {
 		if(*cur != 0xffffffff) {
-			printf("erasing dirty block at 0x%08x\n", (u32)cur);
 
-			/* dirty block */
+			printf("erasing dirty block at 0x%08x\n", (u32)cur);
 			rv = flash_driver->erase(cur);
 
 			if(rv < 0) {
-				eprintf("flash erase error at 0x%08x\n",
+				printf("flash erase error at 0x%08x\n",
 					(u32)cur);
 				flash_driver->disable_vpp();
 				return rv;
@@ -247,6 +242,8 @@
 		size += flash_blocks[block].size;
 	}
 
+	printf("\n # Blocks found = %d\n",block);
+
 	return size;
 }
 
@@ -273,7 +270,7 @@
 	u32 nscandown = 0;
 	u32 nskip = 0;
 
-	dprintf("flashing 0x%08x (%d) words from 0x%08x to 0x%08x\n",
+	printf("flashing 0x%08x (%d) words from 0x%08x to 0x%08x\n",
 		nwords, nwords, (u32)src, (u32)dst);
 
 	flash_driver->enable_vpp();
@@ -283,7 +280,7 @@
 		{
 			char spinner[4] = { '/','-','\\','|' };
 			if ((i & 0x3ff) == 0) {
-				printf("%c\r", spinner[(i >> 10) & 0x3]);
+				dprintf("%c\r", spinner[(i >> 10) & 0x3]);
 			}
 		}
 		/* nothing to write */
@@ -294,6 +291,7 @@
 		}
 
 		/* different, so write to this location */
+		rv = flash_driver->unlock_block(&dst[i]);
 		rv = flash_driver->write(&dst[i], &src[i]);
 		nwrite++;
 		
@@ -304,7 +302,8 @@
 			
 			printf("erasing at 0x%08x...", (u32)&dst[i]);
 
-			/* erase block at current location */
+			/* unlock and erase block at current location */
+			rv = flash_driver->unlock_block(&dst[i]);
 			rv = flash_driver->erase(&dst[i]);
 			nerase++;
 			if(rv < 0) {
Index: build_tree/bootLoader/src/blob/in.c
diff -u /dev/null build_tree/bootLoader/src/blob/in.c:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/src/blob/in.c	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,329 @@
+/*-------------------------------------------------------------------------
+ * Filename:      main.c
+ * Version:       $Id: main.c,v 1.54 2003/09/04 17:46:59 russd Exp $
+ * Copyright:     Copyright (C) 1999, Jan-Derk Bakker
+ * Author:        Jan-Derk Bakker <J.D.Bakker@its.tudelft.nl>
+ * Description:   Main file for the trivially simple bootloader for the 
+ *                LART boards
+ * Created at:    Mon Aug 23 20:00:00 1999
+ * Modified by:   Erik Mouw <J.A.K.Mouw@its.tudelft.nl>
+ * Modified at:   Sat Mar 25 14:31:16 2000
+ *-----------------------------------------------------------------------*/
+/*
+ * main.c: main file for the blob bootloader
+ *
+ * Copyright (C) 1999 2000 2001
+ *   Jan-Derk Bakker (J.D.Bakker@its.tudelft.nl) and
+ *   Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ */
+
+#ident "$Id: main.c,v 1.54 2003/09/04 17:46:59 russd Exp $"
+
+#ifdef HAVE_CONFIG_H
+# include <blob/config.h>
+#endif
+
+#include <blob/arch.h>
+#include <blob/debug.h>
+#include <blob/command.h>
+#include <blob/errno.h>
+#include <blob/error.h>
+#include <blob/init.h>
+#include <blob/main.h>
+#include <blob/md5.h>
+#include <blob/md5support.h>
+#include <blob/memory.h>
+#include <blob/param_block.h>
+#include <blob/serial.h>
+#include <blob/time.h>
+#include <blob/util.h>
+#include <blob/load_kernel.h>
+#include <blob/partition.h>
+#include <blob/download.h>
+
+
+static void print_elf_sections(void);
+static void *find_parameters(void);
+
+
+blob_status_t blob_status;
+static char *version_str = PACKAGE " version " VERSION " for " BOARD_NAME "\n";
+
+int main(void)
+{
+	
+	int numRead = 0;
+	char commandline[MAX_COMMANDLINE_LENGTH];
+	u32 conf = 0;
+	void *params;
+
+	/* initialise status */
+	blob_status.paramType = fromFlash;
+	blob_status.kernelType = fromFlash;
+	blob_status.ramdiskType = fromFlash;
+	blob_status.downloadSpeed = baud_115200;
+	blob_status.terminalSpeed = TERMINAL_SPEED;
+	blob_status.load_ramdisk = LOAD_RAMDISK;
+	blob_status.cmdline[0] = '\0';
+	blob_status.boot_delay = 4;
+
+	/* call subsystems (blob_status.* may change) */
+	init_subsystems();
+
+	/* find parameter partition, if it exists */
+	params = find_parameters();
+
+	/* parse the core tag, for critical things like terminal speed */
+	if (params)
+		parse_ptag(params, &conf);
+
+/* call serial_init() because the default 9k6 speed might not
+           be what the user requested */
+
+	serial_init(blob_status.terminalSpeed);
+	serial_write(0x47);
+	serial_write(0x48);
+
+
+	printf("\nConsider yourself BLOBed!\n\n");
+
+	/* Print the required GPL string */
+	printf("\nConsider yourself BLOBed!\n\n");
+	printf("%sCopyright (C) 1999 2000 2001 2002 2003 "
+	       "Jan-Derk Bakker and Erik Mouw\n", version_str);
+	printf(PACKAGE " comes with ABSOLUTELY NO WARRANTY; "
+	       "read the GNU GPL for details.\n");
+	printf("This is free software, and you are welcome "
+	       "to redistribute it\n");
+	printf("under certain conditions; read the GNU GPL for details.\n");
+
+	/* get the amount of memory */
+	/* FIXME : get_memory_map doesn't work always */
+	/* get_memory_map(); */
+
+	print_elf_sections();
+
+#ifdef BLOB_DEBUG
+	{
+		register unsigned int stackptr;
+		asm("mov %0, sp": "=r" (stackptr));
+		printf("Current stack pointer: 0x%08x\n", stackptr);
+	}
+#endif
+
+	/* Load remaining parameters */
+	if (params)
+		parse_ptags(params, &conf);
+
+	/* Load kernel and ramdisk from flash to RAM */
+	do_reload("blob");
+	do_reload("kernel");
+	if(blob_status.load_ramdisk)
+		do_reload("ramdisk");
+
+	if (blob_status.boot_delay > -1) {
+		int i;
+		int retval = 0;
+
+		/* wait boot_delay seconds before starting autoboot */
+		printf("Autoboot (%i seconds) in progress, press any key to stop ",
+		       blob_status.boot_delay);
+
+
+		if (blob_status.boot_delay == 0) {
+			retval = SerialInputBlock(commandline, 1, 0); 
+		} else {
+			for(i = 0; i < blob_status.boot_delay; i++) {
+				serial_write('.');
+
+				retval = SerialInputBlock(commandline, 1, 1); 
+
+				if(retval > 0)
+					break;
+			}
+		}
+
+		/* no key was pressed, so proceed booting the kernel */
+		if(retval == 0) {
+			commandline[0] = '\0';
+			parse_command("boot");
+		}
+
+		printf("\nAutoboot aborted\n");
+		printf("Type \"help\" to get a list of commands\n");
+	}
+
+	/* the command loop. endless, of course */
+	for(;;) {
+		DisplayPrompt(NULL);
+
+		/* wait 10 minutes for a command */
+		numRead = GetCommand(commandline, MAX_COMMANDLINE_LENGTH, 600);
+
+		if(numRead > 0) {
+			int retval;
+
+			if((retval = parse_command(commandline)) < 0 )
+				printerror(retval, NULL);
+		}
+	}
+
+	return 0;
+} /* main */
+
+
+
+static int PrintStatus(int argc, char *argv[])
+{
+	printf(version_str);
+
+	printf("Download speed      : ");
+	PrintSerialSpeed(blob_status.downloadSpeed);
+	printf(" baud\n");
+
+	printf("Terminal speed      : ");
+	PrintSerialSpeed(blob_status.terminalSpeed);
+	printf(" baud\n");
+
+	printf("blob    (0x%08x): ", BLOB_FLASH_BASE);
+	if(blob_status.blobType == fromFlash) {
+		printf("from flash\n");
+	} else {
+		printf("downloaded at 0x%08x, %i bytes\n",
+		       BLOB_RAM_BASE, blob_status.blobSize);
+#ifdef CONFIG_MD5_SUPPORT
+		printf("                      MD5: ");
+		print_md5_digest(blob_status.blob_md5_digest);
+		printf("\n");
+#endif
+	}
+
+#ifdef PARAM_FLASH_BASE
+	printf("param  (0x%08x): ", PARAM_FLASH_BASE);
+	if(blob_status.paramType == fromFlash) {
+		printf("from flash\n");
+	} else {
+		printf("downloaded at 0x%08x, %i bytes\n",
+		       PARAM_RAM_BASE, blob_status.paramSize);
+#ifdef CONFIG_MD5_SUPPORT
+		printf("                      MD5: ");
+		print_md5_digest(blob_status.param_md5_digest);
+		printf("\n");
+#endif
+	}
+#else
+	printf("param               : Not available\n");
+#endif
+
+#ifdef KERNEL_FLASH_BASE
+	printf("kernel  (0x%08x): ", KERNEL_FLASH_BASE);
+	if(blob_status.kernelType == fromFlash) {
+		printf("from flash\n");
+	} else {
+		printf("downloaded at 0x%08x, %i bytes\n",
+		       KERNEL_RAM_BASE, blob_status.kernelSize);
+#ifdef CONFIG_MD5_SUPPORT
+		printf("                      MD5: ");
+		print_md5_digest(blob_status.kernel_md5_digest);
+		printf("\n");
+#endif
+	}
+#endif
+
+#ifdef RAMDISK_FLASH_BASE
+	printf("ramdisk (0x%08x): ", RAMDISK_FLASH_BASE);
+	if(blob_status.ramdiskType == fromFlash) {
+		printf("from flash\n");
+	} else {
+		printf("downloaded at 0x%08x, %i bytes\n",
+		       RAMDISK_RAM_BASE, blob_status.ramdiskSize);
+#ifdef CONFIG_MD5_SUPPORT
+		printf("                      MD5: ");
+		print_md5_digest(blob_status.ramdisk_md5_digest);
+		printf("\n");
+#endif
+	}
+#endif
+	
+	return 0;
+}
+
+static char statushelp[] = "status\n"
+"Display current status\n";
+
+__commandlist(PrintStatus, "status", statushelp);
+
+
+
+
+static int Reload(int argc, char *argv[])
+{
+	if(argc < 2)
+		return -ENOPARAMS;
+
+	return do_reload(argv[1]);
+}
+
+static char reloadhelp[] = "reload {blob|param|kernel|ramdisk}\n"
+"Reload <argument> from flash to RAM\n";
+
+__commandlist(Reload, "reload", reloadhelp);
+
+
+
+static void print_elf_sections(void)
+{
+#ifdef BLOB_DEBUG
+	extern u32 __text_start, __text_end;
+	extern u32 __rodata_start, __rodata_end;
+	extern u32 __data_start, __data_end;
+	extern u32 __got_start, __got_end;
+	extern u32 __commandlist_start, __commandlist_end;
+	extern u32 __initlist_start, __initlist_end;
+	extern u32 __exitlist_start, __exitlist_end;
+	extern u32 __ptagtable_begin, __ptagtable_end;
+	extern u32 __bss_start, __bss_end;
+	extern u32 __stack_start, __stack_end;
+
+	printf("ELF sections layout:\n");
+
+#define PRINT_ELF_SECTION(from, to, name) \
+	printf("  0x%08x - 0x%08x  %s\n", \
+	       (unsigned int)&(from), \
+	       (unsigned int)&(to), \
+	       name);
+
+	PRINT_ELF_SECTION(__text_start, __text_end, ".text");
+	PRINT_ELF_SECTION(__rodata_start, __rodata_end, ".rodata");
+	PRINT_ELF_SECTION(__data_start, __data_end, ".data");
+	PRINT_ELF_SECTION(__got_start, __got_end, ".got");
+	PRINT_ELF_SECTION(__commandlist_start, __commandlist_end, ".commandlist");
+	PRINT_ELF_SECTION(__initlist_start, __initlist_end, ".initlist");
+	PRINT_ELF_SECTION(__exitlist_start, __exitlist_end, ".exitlist");
+	PRINT_ELF_SECTION(__ptagtable_begin, __ptagtable_end, ".ptaglist");
+	PRINT_ELF_SECTION(__bss_start, __bss_end, ".bss");
+	PRINT_ELF_SECTION(__stack_start, __stack_end, ".stack (in .bss)");
+#endif
+}
+
+static void *find_parameters(void) 
+{
+	const blob_partition_t *p = pt_find_by_name("param");
+
+	return p ? pt_flash_start(p) : NULL;
+}
Index: build_tree/bootLoader/src/blob/initcalls.c
diff -u build_tree/bootLoader/src/blob/initcalls.c:1.1.1.2 build_tree/bootLoader/src/blob/initcalls.c:1.1.1.3
--- build_tree/bootLoader/src/blob/initcalls.c:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/initcalls.c	Fri Nov  9 10:37:08 2007
@@ -44,7 +44,7 @@
 /* init calls */
 __initlist(serial_default_init,	INIT_LEVEL_INITIAL_HARDWARE);
 __initlist(enable_icache,	INIT_LEVEL_INITIAL_HARDWARE);
-__initlist(led_init,		INIT_LEVEL_INITIAL_HARDWARE);
+// __initlist(led_init,		INIT_LEVEL_INITIAL_HARDWARE);
 __initlist(timer_init,		INIT_LEVEL_OTHER_HARDWARE);
 
 #if defined( CONFIG_GIO_SUPPORT )
Index: build_tree/bootLoader/src/blob/intel16.c
diff -u build_tree/bootLoader/src/blob/intel16.c:1.1.1.2 build_tree/bootLoader/src/blob/intel16.c:1.1.1.3
--- build_tree/bootLoader/src/blob/intel16.c:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/intel16.c	Fri Nov  9 10:37:08 2007
@@ -1,4 +1,4 @@
-/*
+ /*
  * intel16: Intel 16 bit flash driver
  *
  * Copyright (C) 2001  Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
Index: build_tree/bootLoader/src/blob/ledasm-mmap.S
diff -u build_tree/bootLoader/src/blob/ledasm-mmap.S:1.1.1.1 build_tree/bootLoader/src/blob/ledasm-mmap.S:1.1.1.2
--- build_tree/bootLoader/src/blob/ledasm-mmap.S:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/ledasm-mmap.S	Fri Nov  9 10:37:08 2007
@@ -23,42 +23,3 @@
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  *
  */
-
-.ident "$Id: ledasm-mmap.S,v 1.1 2003/02/13 01:10:53 erikm Exp $"
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-
-#include <blob/arch.h>
-
-.globl ledinit
-ledinit:
-	
-	mov	pc, lr
-
-.globl led_on
-	/* turn LED on. clobbers r0 and r1 */
-led_on:
-
-	ldr	r0, =LED_ADDR
-	ldr	r1, =LED_ON
-	str	r1, [r0]
-	ldr r1, [r0]
-	mov	pc, lr
-
-
-.globl led_off
-	/* turn LED off. clobbers r0 - r1 */
-led_off:
-
-	ldr	r0, =LED_ADDR
-	ldr	r1, =LED_OFF
-	str	r1, [r0]
-	ldr r1, [r0]
-	mov	pc, lr
-
-.globl led_blink
-led_blink:
-
-	mov	pc, lr
Index: build_tree/bootLoader/src/blob/linux.c
diff -u build_tree/bootLoader/src/blob/linux.c:1.1.1.2 build_tree/bootLoader/src/blob/linux.c:1.1.1.3
--- build_tree/bootLoader/src/blob/linux.c:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/linux.c	Fri Nov  9 10:37:08 2007
@@ -61,6 +61,10 @@
 
 static int boot_linux(int argc, char *argv[])
 {
+	// For some reason if the printf below is commented out the
+	// kernel does not boot
+
+	printf("\nStarting kernel ...\n\n");
 
 	setup_start_tag();
 	setup_memory_tags();
@@ -71,14 +75,18 @@
 	}
 	setup_end_tag();
 
+	printf("\nStarting kernel (really, I mean it)...\n\n");
+
 	/* we assume that the kernel is in place */
-	printf("\nStarting kernel ...\n\n");
+
 	serial_flush_output();
 
 	/* disable subsystems that want to be disabled before kernel boot */
 	exit_subsystems();
 
-	/* start kernel */
+	printf("\nNext step is to start the kernel\n");
+
+/* start kernel */
 	theKernel(0, ARCH_NUMBER, BOOT_PARAMS);
 
 	printf("Hey, the kernel returned! This should not happen.\n");
@@ -142,7 +150,6 @@
 
 			params->u.mem.start = memory_map[i].start;
 			params->u.mem.size = memory_map[i].len;
-
 			params = tag_next(params);
 		}
 #if defined( NEPONSET )
Index: build_tree/bootLoader/src/blob/load_kernel.c
diff -u build_tree/bootLoader/src/blob/load_kernel.c:1.1.1.1 build_tree/bootLoader/src/blob/load_kernel.c:1.1.1.2
--- build_tree/bootLoader/src/blob/load_kernel.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/load_kernel.c	Fri Nov  9 10:37:08 2007
@@ -95,7 +95,7 @@
 		else 
 #endif
 #ifdef CONFIG_ZIMAGE_SUPPORT
-		if (p->flags & BLOB_PART_FLAG_EXEC) /* ?? */
+		if (p->flags & BLOB_PART_FLAG_EXEC)
 			loader = &zImage_load;
 		else
 #endif
@@ -113,7 +113,7 @@
 		eprintf("Unable to find kernel\n");
 		return EINVAL;
 	}
-
+	
 
 	printf("Loading kernel from partition %s (%s) ...",
 	       p->name, loader->name);
Index: build_tree/bootLoader/src/blob/main.c
diff -u build_tree/bootLoader/src/blob/main.c:1.1.1.2 build_tree/bootLoader/src/blob/main.c:1.1.1.3
--- build_tree/bootLoader/src/blob/main.c:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/main.c	Fri Nov  9 10:37:08 2007
@@ -56,6 +56,9 @@
 #include <blob/partition.h>
 #include <blob/download.h>
 
+#if defined(CONFIG_LCD_SUPPORT)
+#include <blob/pxa-lcd.h>
+#endif
 
 static void print_elf_sections(void);
 static void *find_parameters(void);
@@ -66,6 +69,7 @@
 
 int main(void)
 {
+	
 	int numRead = 0;
 	char commandline[MAX_COMMANDLINE_LENGTH];
 	u32 conf = 0;
@@ -79,13 +83,13 @@
 	blob_status.terminalSpeed = TERMINAL_SPEED;
 	blob_status.load_ramdisk = LOAD_RAMDISK;
 	blob_status.cmdline[0] = '\0';
-	blob_status.boot_delay = 10;
+	blob_status.boot_delay = 0;
 
 	/* call subsystems (blob_status.* may change) */
 	init_subsystems();
 
 	/* find parameter partition, if it exists */
-	params = find_parameters();
+//	params = find_parameters();
 
 	/* call serial_init() because the default 9k6 speed might not
            be what the user requested */
@@ -96,8 +100,9 @@
 		parse_ptag(params, &conf);
 
 	/* Print the required GPL string */
-	printf("\nConsider yourself BLOBed!\n\n");
-	printf("%sCopyright (C) 1999 2000 2001 2002 2003 "
+	printf("\nAeronix Zipit2 Version 1.00 7-10-2007\n\n");
+
+	printf("%sCopyright (C) 2007 "
 	       "Jan-Derk Bakker and Erik Mouw\n", version_str);
 	printf(PACKAGE " comes with ABSOLUTELY NO WARRANTY; "
 	       "read the GNU GPL for details.\n");
@@ -105,11 +110,18 @@
 	       "to redistribute it\n");
 	printf("under certain conditions; read the GNU GPL for details.\n");
 
-	/* get the amount of memory */
-	/* FIXME : get_memory_map doesn't work always */
-	/* get_memory_map(); */
+	printf("\nRTC Clock Enabled.\n");
+
+	OSCC |= 0x02;
 
-	print_elf_sections();
+
+
+	/* get the amount of memory */
+	/* FIXME : get_memory_map doesn't work always 
+	 * AERONIX: FIXED - top of memory was set to 256MB which caused redefined Chip Selects
+	 * to go active */
+	get_memory_map();
+//	print_elf_sections();
 
 #ifdef BLOB_DEBUG
 	{
@@ -119,6 +131,9 @@
 	}
 #endif
 
+#if defined(CONFIG_LCD_SUPPORT)
+	lcd_init();
+#endif
 	/* Load remaining parameters */
 	if (params)
 		parse_ptags(params, &conf);
Index: build_tree/bootLoader/src/blob/mainstone.c
diff -u build_tree/bootLoader/src/blob/mainstone.c:1.1.1.1 build_tree/bootLoader/src/blob/mainstone.c:1.1.1.2
--- build_tree/bootLoader/src/blob/mainstone.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/mainstone.c	Fri Nov  9 10:37:08 2007
@@ -31,329 +31,161 @@
 #include <blob/serial_usb.h>
 #include <blob/led.h>
 #include <blob/time.h>
+#include <blob/partition.h>
 #include <net/ether.h>
 #include <net/net.h>
-#include <blob/strata.h>
 #include <blob/command.h>
 
+// Aeronix: Intel 28F320C3 Top Boot, 31 32KW blocks followed by 8 4KW blocks
+// NULL block is required -- don't know why yet.....
 
+// Phil: 2-2-06
+// Added support for Intel JS28F640P30T part
 
 
-static struct flash_chip flash_chips[2];
-  
-
-#undef  FLASH_SYNC_MODE_SUPPORT
-//#define  FLASH_SYNC_MODE_SUPPORT 1
-
-/* Flash sync-mode enabling */
-#ifdef FLASH_SYNC_MODE_SUPPORT
+/* Phil -- Commented out Z2 flash for now
 
-#undef  SXCNFG_VAL
-
-#define SXCNFG_VAL  	0x00006001  	/* Synch. Static Mem. Config. Reg. (Burst-of-8 reads, CL=4, SDCLK return latching) */
-#define RCR_VAL		0x000000c2
-
-static void flash_sync_mode(struct flash_chip *chip)
+  static const flash_descriptor_t mainstone_flash_descriptors[] =
 {
-	u32 L= CCCR & 0x1f;
-	u32 rcr_val;
-	u8 lc;
-	volatile u16 *rcr16;//, *base16;
-	volatile u32 *rcr32;//, *base32;
-	unsigned long  msc0_val, memclk, clkcfg_val, M, mdrefr_val;
-	unsigned long sxcnfg_val = SXCNFG_VAL;
-	float memclk_period;
-	int we_clk_pulse;
-	u8 rrr_val;
-
-	u8 LC_vals[]={
-		0,	// L=0x0 ; placeholder
-		0,	// L=0x1 ; placeholder
-		1,	// L=0x2 ; * close
-		2,	// L=0x3 
-		3,	// L=0x4
-		2,	// L=0x5
-		2,	// L=0x6
-		3,	// L=0x7
-		3,      // L=0x8 ; * close
-		2,	// L=0x9
-		2,	// L=0xA 10
-		2,	// L=0xB 11
-		2,	// L=0xC 12
-		3,      // L=0xD 13* close
-		3,	// L=0xE 14
-		3,	// L=0xF 15
-		3,      // L=0x10 16 close
-		/* 0x11-0x1C - de-featured */
-		0,	//L=0x11 
-		0,	//L=0x12
-		0,	//L=0x13
-		0,	//L=0x14
-		0,	//L=0x15
-		0,	//L=0x16
-		0,	//L=0x17
-		0,	//L=0x18
-		0,	//L=0x19
-		0,	//L=0x1A
-		0,	//L=0x1B
-		0,	//L=0x1C
-
-		3,	//L=0x1D 29
-		3,	//L=0x1E 30
-		3,	//L=0x1F 31
-	};
-	
-	u8 rdf_converter[31] = {  //incompatible with bulverde A0
-		0, //invalid can't do zero clks
-		0,
-		1,
-		2,
-		3,
-		4,
-		5,
-		6,
-		7,
-		8,
-		9,
-		10,
-		11, //12 clks for we_ low
-		15, //13 clks rounds to 
-		15, //14 clk rounds to
-		15, // 15 clks = 15 clks
-		20, // 16 clks rounds to 20
-		20, // 17 clks rounds to 20
-		20, // 18 clks rounds to 20
-		20, // 19 clks rounds to 20
-		20, // 20 clks = 20 clks
-		26, //21
-		26, //22
-		26, //23
-		26, //24
-		26, //25
-		26, //26 = 26
-		30, //27
-		30, //28
-		30, //29
-		30  //30
-	};  
-
-	msc0_val 	= MSC0;
-	
-	/*Retrive the clkcfg_val from coprocessor*/
-	asm volatile ("mrc p14, 0, %0, c6, c0, 0":"=r"(clkcfg_val)); 
-	
-	/*calculate L and M (bulverde clock values)*/
-	if ( CCCR_A & CCCR )  {
-		/* MEM clock frequency = System Bus Frequence */
-		if (CLKCFG_B & clkcfg_val) memclk = (L*13);
-		else memclk = (L*13)/2;
-	}
-	else {
-		if (L<=10) M = 1;
-		else if (L<=20) M = 2;
-		else M = 4;
-
-		memclk = (L*13)/M;
-	}
+	{
+		size: 1 * 32 * 1024,
+		num: 31,
+        lockable: 1
+	},
+	{ 
+		size: 1 * 4 * 1024,
+		num: 8,
+        lockable: 1
+	},
+	{
+		// NULL block 
+	},
+};
+*/
+
+//
+// P30 structure (ID 0x8817)
+// 
 
-
-	/*Set SDCLK0 (flash clock) for tyax*/
-	if ( (chip->type ==STRATA_L3) || (chip->type == STRATA_L18) ) {		
-		
-		/*Fetch MDREFR*/
-		mdrefr_val	= MDREFR;
-	
-		if (memclk <= 52) {
-			/* SDCLK0 = MEMCLK */
-			mdrefr_val &= ~(MDREFR_K0DB2 | MDREFR_K0DB4);
-		}
-		else if (memclk <= 104) {
-			/* SDCLK0 = MEMCLK/2 */
-			mdrefr_val &= ~MDREFR_K0DB4;
-			mdrefr_val |= MDREFR_K0DB2;
-		}else{
-			/* SDCLK0 = MEMCLK/4 */
-			mdrefr_val |= MDREFR_K0DB4;
-		}
-		MDREFR = mdrefr_val;
-		__asm__ ( "ldr r0, [%0]" ::"r"(&MDREFR):"r0");
-	}	
-
-
-	/*Only proceed if we know what kind of flash this is*/
-	if ( (chip->type != STRATA_K3) && (chip->type != STRATA_K18) && (chip->type != STRATA_L3) && (chip->type != STRATA_L18) ) return;
-
- 	/*Look to see if we know how to translate the L to an LC count*/
-	if( L >= sizeof(LC_vals) ) return; /* leave in asyn mode */
-	
-	/* Look up lc count for from the LC_vals table*/	
-	lc = LC_vals[L];
-
-	/* Adjust RCR for optimal timing - Mainstone */
-	rcr_val = (RCR_VAL & 0x87ff) | (lc << 11);
-	chip->rcr = rcr_val;
-
-	switch(chip->buswidth){
-	case 2:
-		rcr_val |= 0x3; /* Turning on burst of 16 */
-		
-		rcr16 = (volatile u16*) (chip->base + (rcr_val << 1));
-		
-		*rcr16 = 0x00ff;
-
-		*rcr16 = 0x0060;
-
-		*rcr16 = 0x0003;
-
-		*rcr16 = 0x00ff;
-		
-		sxcnfg_val |= 0x3000; //forcing burst of 16 to the SXCNFG register
-		break;
-	case 4:
-		/* 32 bit, reflecting << 2 */
-		rcr32  = (volatile u32*) (chip->base + (rcr_val << 2));
-		
-		/* read-mode */
-		*rcr32 = 0x00ff00ff;
-
-		*rcr32 = 0x00600060;
- 
-		*rcr32 = 0x00030003;
-
-		/* read-mode */
-		*rcr32 = 0x00ff00ff;
-
-		break;
-	default:
-		/* won't sync */
-		return;
+  static const flash_descriptor_t mainstone_flash_descriptors[] =
+{
+	{
+		size: 1 * 64 * 1024,
+		num: 63,
+        lockable: 1
+	},
+	{ 
+		size: 1 * 8 * 1024,
+		num: 8,
+        lockable: 1
+	},
+	{
+		/* NULL block */
+	},
+};
+
+
+
+
+/* default partition table for Z2 */
+
+//
+// Phil: 2-2-06 Updated to reflect P30 Flash (4MB total)
+// Also added ramdisk back in
+//
+static const blob_partition_t Mainstone_default_partition_table[] = {
+	{
+		/* start of table */
+		magic:	BLOB_DEFAULT_PART_TABLE_MAGIC,
+		next:	sizeof(blob_partition_t),
+		offset:	0x00000000,	/* absolute base address */
+		size:	4 * 1024 * 1024 /* Phil 02-02-06 total size of the flash */
+	},
+	{
+		/* blob itself */
+		magic:		BLOB_PART_VALID_MAGIC,
+		next:		sizeof(blob_partition_t),
+		offset:		BLOB_FLASH_BASE,
+		size:		BLOB_FLASH_LEN,
+		name:		"blob",
+		mem_base:	BLOB_RAM_BASE
+	},
+	{
+		/* parameter block */
+		magic:	BLOB_PART_VALID_MAGIC,
+		next:	sizeof(blob_partition_t),
+		offset:	PARAM_FLASH_BASE,
+		size:	PARAM_FLASH_LEN,
+		name:	"param",
+		flags:	BLOB_PART_FLAG_PTABLE
+	},
+	{
+		/* kernel */
+		magic:		BLOB_PART_VALID_MAGIC,
+		next:		sizeof(blob_partition_t),
+		offset: 	KERNEL_FLASH_BASE,
+		size:		KERNEL_FLASH_LEN,
+		name:		"kernel",
+		flags:		BLOB_PART_FLAG_LOAD | 
+				BLOB_PART_FLAG_CRAMFS,
+		mem_base:	KERNEL_RAM_BASE,
+		entry_point:	KERNEL_RAM_BASE
+	},
+	{
+		/* ramdisk */
+		magic:		BLOB_PART_VALID_MAGIC,
+		next:		sizeof(blob_partition_t),
+		offset:		RAMDISK_FLASH_BASE,
+		size:		RAMDISK_FLASH_LEN,
+		name:		"ramdisk",
+		flags:		BLOB_PART_FLAG_LOAD,
+		mem_base:	RAMDISK_RAM_BASE
+	},
+	{
+		/* last entry */
+		magic:	BLOB_PART_LAST_MAGIC
 	}
+};
 
- 	/* Adjust and set SXCNFG */
-	SXCNFG = (sxcnfg_val & (~0x801C)) | ((lc & 0x7) << 2 ) | ((lc & 0x8) << 12 );
-	__asm__ ("ldr r0, [%0]"::"r"(&SXCNFG):"r0");
-	
-	/*Calculate the memclk period*/
-	memclk_period = (float) (1000 / memclk); //period is nanoseconds memclk is mhz
-	
-	#define L_WE_CLK 50 /* 48 +2 nanoseconds */
-	#define L_RRR_CLK 20 /* 20 nanoseconds */
-	
-	/*If we have tyax we can tune the we# clock pulse length to speed up write cycles*/
-	if ( (chip->type ==STRATA_L3) || (chip->type == STRATA_L18) ) {
-		we_clk_pulse = (int) ((L_WE_CLK)/ memclk_period); 
-		/*If there is a remainder above round up*/
-		if( (float)(L_WE_CLK)!=(((float)we_clk_pulse)*memclk_period) ) we_clk_pulse++;
-		/*Change the RDF value in the MSCO value*/
-		msc0_val = ( (msc0_val & (~0x00f000f0)) | ((rdf_converter[we_clk_pulse] << 4)|(rdf_converter[we_clk_pulse] << 20)) );
-		
-		/*calculate rrr_val*/
-		rrr_val = (u8) ((float)(L_RRR_CLK)/ memclk_period); 
-		/*If there is a remainder above round up*/
-		if( (float)(L_RRR_CLK)!=(((float)rrr_val)*memclk_period) ) rrr_val++;
-		
-		/* rrr = 2*X+1 memclks */
-		if( (float)(L_RRR_CLK) != (float)((rrr_val-1)/2)*memclk_period )
-		{
-			rrr_val=(rrr_val-1)/2;
-			rrr_val++;
-		}
-		else
-		{
-			rrr_val=(rrr_val-1)/2;
-			rrr_val++;
-		}
-		
-		
-		/*update the msc0 value with our new rrr*/
-		msc0_val = ( (msc0_val & (~0x70007000)) | ((rrr_val << 12)|(rrr_val << 28)) );
 
-		/*write the value out the register then read it back because thats what everybody else does*/
-		MSC0 = msc0_val;
-		__asm__ ("ldr r0, [%0]"::"r"(&MSC0):"r0");
-		 
-	}
-	
+/* static void init_mainstone_flash_driver(void)
+{
+	flash_descriptors = mainstone_flash_descriptors;
+	flash_driver = &intel16_flash_driver;
 }
 
-#endif
+__initlist(init_mainstone_flash_driver, INIT_LEVEL_DRIVER_SELECTION);
+*/
 
-static void init_mainstone_flash_driver(void)
+static void mainstone_init_hardware(void)
 {
-	int i = 0;
-	flash_descriptors = NULL;
- 	flash_driver = NULL;
- 
- 	/* Two banks */
- 	for (i=0; i<2; i++) {
- 		struct flash_chip *chip = flash_chips + i;
-
- 		chip->base = i * 0x04000000;
- 
- 		if (BOOT_DEF & 0x1) chip->buswidth = 2;
- 		else chip->buswidth = 4;
-
-		flash_probe(chip);
-	}
+	/* Setup Flash Stuff */
+	flash_descriptors = mainstone_flash_descriptors;
+	flash_driver = &intel16_flash_driver;
 
-#ifdef FLASH_SYNC_MODE_SUPPORT
-	/* BOOT ROM sync-mode */
-	flash_sync_mode(&flash_chips[0]);
-#endif
-}
-  
-__initlist(init_mainstone_flash_driver, INIT_LEVEL_DRIVER_SELECTION);
+	/* the default partition table */
+	default_partition_table = Mainstone_default_partition_table;
+	
+	/* we don't know where the flash partition table will live, so
+	 * put the pointer at 0x0000000 and let the partition table
+	 * parser figure out.
+	 */
+	flash_partition_table = (blob_partition_t*)0x00000000;
 
+/* Required for Network Support
 
-static void mainstone_init_hardware(void)
-{
-#ifdef CONFIG_NETWORK_SUPPORT
 	unsigned char serverip[4]={192,168,1,100};
 	unsigned char clientip[4]={192,168,1,101};
 
-	/* set default ip */
+	* set default ip *
 	memcpy(serveripaddress, serverip, sizeof(serverip));
 	memcpy(clientipaddress, clientip, sizeof(clientip));
-#endif
-	/* light HEX Led */
-	MST_LEDDAT1 = 0xb10bb10b;
-
-#ifdef USE_SERIAL2
-	/* enable BTUART */
-	MST_MSCWR1 |= (0x3<<7);
-	
-	/* setup BTUART GPIOs (BTRXD, BTTXD, BTCTS, BTRTS) */
-	GPDR1 &= ~0x00003A00;
-	GPDR1 |= 0x00002800;
-	GAFR1_L &= ~0x0FF00000;
-	GAFR1_L |= 0x09900000;
-#endif
+/*
 
 	/* select drivers */
 	reboot_driver = &pxa_reboot_driver;
 	serial_driver = &pxa_serial_driver;
-
-#ifdef CONFIG_USBSERIAL_SUPPORT	
-	/* This is USB client softconnect control bit 
-	   in Mainstone II board register MST_MSCWR2.
-	*/
-	MST_MSCWR2 &= ~MST_USBC_SC;
-	usb_serial_driver= &bvd_usb_serial_driver;
-
-#endif 
-
-	led_driver = &mmap_led_driver;
 	timer_driver = &intelarm_timer_driver;
-#ifdef CONFIG_USBDNET_SUPPORT
-	/* This is USB client softconnect control bit 
-	   in Mainstone II board register MST_MSCWR2.
-	*/
-	MST_MSCWR2 &= ~MST_USBC_SC;
-
-	ether_driver = &bvdusb_ether_driver;
-#else
-	ether_driver = &smc91x_ether_driver;
-#endif
 }
 
 
@@ -374,7 +206,6 @@
 	u32	src	= 0L;
 	u32	dest	= 0L;
 	u32	len	= 0L;
-	struct flash_chip *chip=NULL;
 
 	if ( argc < 4 ) {
 		ret = -1;
@@ -399,10 +230,7 @@
 		goto DONE;
 	}
 
-	if (dest<0x04000000) chip = &flash_chips[0];
-	else chip = &flash_chips[1];
-
-	ret = flash_write( chip, dest, (u8*) src, len); 
+	ret = flash_write_region( (u32 *)dest, (u32*)src, len); 
 
 DONE:
 	return ret;
@@ -427,7 +255,6 @@
 	int ret = 0;
 	u32	dest	= 0L;
 	u32	len	= 0L;
-	struct flash_chip *chip=NULL;
 
 	if ( argc < 3 ) {
 		ret = -1;
@@ -446,10 +273,7 @@
 		goto DONE;
 	}
 
-	if(dest < 0x04000000) chip = &flash_chips[0];
-	else chip = &flash_chips[1];
-
-	ret = flash_erase(chip, dest, len);
+	ret = flash_erase_region((u32 *)dest, len);
 
 DONE:
 	return ret;
@@ -525,12 +349,6 @@
 	printf("System bus clock: %d.%02dMHz \n",
 		s_clk / 1000000, (s_clk % 1000000) / 10000 );
 
-#ifdef FLASH_SYNC_MODE_SUPPORT
-	printf("----------\n");
-	printf("MEMC_CTL : MDREFR  = 0x%08X, MSC0 = 0x%08X, SXCNFG = 0x%08X\n", MDREFR, MSC0, SXCNFG);
-	printf("BOOT_ROM : RCR_VAL = 0x%08X, LC   = 0x%08x\n",  flash_chips[0].rcr, (flash_chips[0].rcr >> 11) & 0x7 ); 
-	printf("----------\n");
-#endif
 }
 
 static char clockinfohelp[] = "clockinfo\n"
@@ -567,3 +385,79 @@
 static char gohelp[] = "go address\n"
 "Start execution at $address\n";
 __commandlist(cmd_go, "go", gohelp);
+
+/*********************************************************************
+ * cmd_coprocessor_access
+ *
+ * AUTOR:	yu tang, rusty geldmacher
+ * REVISED:
+ *
+ * prints out clock information. taken from Yu's kernel patch
+ *
+ */
+static char coprocessor_access_help[] = "coproc {CLKCFG | PWRMODE} [value] \n"
+"get/set coprocessor register info\n";
+
+static int cmd_coprocessor_access(int argc, char *argv[])
+{
+	unsigned long reg_val;
+
+	if(argc == 1)
+	{
+		printf(coprocessor_access_help);
+	}
+	else
+	{
+		int nReg = 0;
+		if(memcmp(argv[1], "CLKCFG", sizeof("CLKCFG")) == 0)
+		{
+			nReg = 1;
+		}
+		else
+		if(memcmp(argv[1], "PWRMODE", sizeof("PWRMODE")) == 0)
+		{
+			nReg = 2;
+		}
+		else
+		{
+			printf(coprocessor_access_help);
+		}
+		
+		if(nReg > 0)
+		{
+			if(argc == 2)
+			{
+				switch(nReg)
+				{
+					case 1:
+						asm( "mrc p14, 0, %0, c6, c0, 0" : "=r" (reg_val) );
+						break;
+
+					case 2:
+						asm( "mrc p14, 0, %0, c7, c0, 0" : "=r" (reg_val) );
+						break;
+				}
+			}
+			else
+			{
+				strtou32( argv[2], &reg_val );
+
+				switch(nReg)
+				{
+					case 1:
+						asm( "mcr p14, 0, %0, c6, c0, 0" :: "r" (reg_val) );
+						break;
+
+					case 2:
+						asm( "mcr p14, 0, %0, c7, c0, 0" :: "r" (reg_val) );
+						break;
+				}
+			}
+
+			printf("%s: 0x%08lX\n", argv[1], reg_val);
+		}
+	}
+}
+
+__commandlist(cmd_coprocessor_access, "coproc", coprocessor_access_help);
+
Index: build_tree/bootLoader/src/blob/memory.c
diff -u build_tree/bootLoader/src/blob/memory.c:1.1.1.2 build_tree/bootLoader/src/blob/memory.c:1.1.1.3
--- build_tree/bootLoader/src/blob/memory.c:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/memory.c	Fri Nov  9 10:37:08 2007
@@ -33,20 +33,11 @@
 /* test in 1MB chunks */
 #define TEST_BLOCK_SIZE (1024 * 1024)
 
-
-
-
 /* from testmem2.S */
 extern int testram(u32 addr);
 
-
-
-
 memory_area_t memory_map[NUM_MEM_AREAS];
 
-
-
-
 void get_memory_map(void)
 {
 	u32 addr;
@@ -66,20 +57,16 @@
 		if(testram(addr) == 0) {
 			/* yes, memory */
 			if(* (u32 *)addr != 0) { /* alias? */
-				dprintf("detected alias at 0x%08x, "
-					"aliased from 0x%08x\n",
-				        addr, * (u32 *)addr);
-
+//				printf("\n detected alias");
 				if(memory_map[i].used)
 					i++;
-
 				continue;
 			}
 
 			/* not an alias, write the current address */
 			* (u32 *)addr = addr;
 
-			dprintf("detected memory at 0x%08x\n", addr);
+//			printf("detected memory at 0x%08x\n", addr);
 
 			/* does this start a new block? */
 			if(memory_map[i].used == 0) {
Index: build_tree/bootLoader/src/blob/memsetup-pxa.S
diff -u build_tree/bootLoader/src/blob/memsetup-pxa.S:1.1.1.1 build_tree/bootLoader/src/blob/memsetup-pxa.S:1.1.1.2
--- build_tree/bootLoader/src/blob/memsetup-pxa.S:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/memsetup-pxa.S	Fri Nov  9 10:37:08 2007
@@ -70,6 +70,8 @@
 
 	ldr		r1, =0x48000000
 
+	error
+
 	/* write MSC0, read back to ensure data latches */
 #ifdef MSC0_VALUE
 	ldr		r0, =MSC0_VALUE
Index: build_tree/bootLoader/src/blob/partition.c
diff -u build_tree/bootLoader/src/blob/partition.c:1.1.1.2 build_tree/bootLoader/src/blob/partition.c:1.1.1.3
--- build_tree/bootLoader/src/blob/partition.c:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/partition.c	Fri Nov  9 10:37:08 2007
@@ -79,7 +79,7 @@
 	 * the flash_partition_table pointer to something valid
 	 */
 	if(flash_partition_table->magic == BLOB_FLASH_PART_TABLE_MAGIC) {
-		dprintf("Immediately found flash partition table at 0x%08x\n",
+		printf("Immediately found flash partition table at 0x%08x\n",
 		       (unsigned int)flash_partition_table);
 		return;
 	}
@@ -89,15 +89,13 @@
 	 * the start of the flash, so we start scanning the start of
 	 * all flash blocks until we find a partition table.
 	 */
-	dprintf("Searching flash partition table... \n");
+//	printf("Searching flash partition table... \n");
 	rv = flash_get_first_block_address(&a);
 	if(rv < 0) {
-		dprintf("first block not found\n");
+		printf("first block not found\n");
 		return;
 	}
 
-	dprintf("  block at 0x%08x...\n", a);
-
 	while(((blob_partition_t *)a)->magic != BLOB_FLASH_PART_TABLE_MAGIC) {
 		old_a = a;
 		rv = flash_get_next_block_address(&a, old_a);
@@ -107,7 +105,6 @@
 			return;
 		}
 
-		dprintf("  block at 0x%08x...\n", a);
 	}
 
 	dprintf("found at 0x%08x\n",
@@ -264,8 +261,6 @@
 	int no_more_parts_allowed = 0;
 	blob_partition_t *t = ptable;
 	
-	dprintf("ptable->offset = 0x%08X\n", ptable->offset);
-	dprintf("ptable->size = 0x%08X\n", ptable->size);
 	if (ptable->size == BLOB_PART_SIZ_FULL) {
 		ptable->size = size = flash_get_size();
 		dprintf("ptable->size => 0x%08X\n", ptable->size);
@@ -324,8 +319,6 @@
 
 	if(rv == 0) {
 		ptable->magic = BLOB_COPY_PART_TABLE_MAGIC;
-		dprintf("found default partition table at 0x%08x\n",
-			(unsigned int)default_partition_table);
 	}
 
 	/* try to find the flash partition table and try to copy it.
@@ -337,7 +330,7 @@
 	
 	if(rv == 0) {
 		ptable->magic = BLOB_COPY_PART_TABLE_MAGIC;
-		dprintf("found flash partition table at 0x%08x\n",
+		printf("found flash partition table at 0x%08x\n",
 			(unsigned int)flash_partition_table);
 	}
 
@@ -345,12 +338,12 @@
 	 * could check for a bootldr partition table over here */
 	
 	if (check_ptable_magic(ptable, BLOB_COPY_PART_TABLE_MAGIC) != 0)  {
-		dprintf("invalid partition table magic\n");
+		printf("invalid partition table magic\n");
 		goto invalid_part;
 	}
 
 	if (fixup_ptable(ptable) != 0) {
-		dprintf("could not fix up partition table\n");
+		printf("could not fix up partition table\n");
 		goto invalid_part;
 	}
 
Index: build_tree/bootLoader/src/blob/rest.h
diff -u /dev/null build_tree/bootLoader/src/blob/rest.h:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:47 2008
+++ build_tree/bootLoader/src/blob/rest.h	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,14592 @@
+
+blob-rest-elf32:     file format elf32-littlearm
+
+Disassembly of section .text:
+
+a0300400 <__text_start>:
+a0300400:	e59f1040 	ldr	r1, [pc, #64]	; a0300448 <bss_start>
+a0300404:	e59f0040 	ldr	r0, [pc, #64]	; a030044c <bss_end>
+a0300408:	e0400001 	sub	r0, r0, r1
+a030040c:	e3a02000 	mov	r2, #0	; 0x0
+
+a0300410 <clear_bss>:
+a0300410:	e8a10004 	stmia	r1!, {r2}
+a0300414:	e2500004 	subs	r0, r0, #4	; 0x4
+a0300418:	1afffffc 	bne	a0300410 <clear_bss>
+a030041c:	e59f002c 	ldr	r0, [pc, #44]	; a0300450 <stack_end>
+a0300420:	e240d004 	sub	sp, r0, #4	; 0x4
+
+a0300424 <go_main>:
+a0300424:	e59f0028 	ldr	r0, [pc, #40]	; a0300454 <stack_end+0x4>
+a0300428:	e3a02046 	mov	r2, #70	; 0x46
+a030042c:	eb000000 	bl	a0300434 <go_char>
+a0300430:	ea0007b1 	b	a03022fc <main>
+
+a0300434 <go_char>:
+a0300434:	e5901014 	ldr	r1, [r0, #20]
+a0300438:	e2111020 	ands	r1, r1, #32	; 0x20
+a030043c:	0afffffc 	beq	a0300434 <go_char>
+a0300440:	e5c02000 	strb	r2, [r0]
+a0300444:	e1a0f00e 	mov	pc, lr
+
+a0300448 <bss_start>:
+a0300448:	a030df80 	eorges	sp, r0, r0, lsl #31
+
+a030044c <bss_end>:
+a030044c:	a0312404 	eorges	r2, r1, r4, lsl #8
+
+a0300450 <stack_end>:
+a0300450:	a0312404 	eorges	r2, r1, r4, lsl #8
+a0300454:	40700000 	rsbmis	r0, r0, r0
+
+a0300458 <data_to_flash>:
+a0300458:	e1a0f00e 	mov	pc, lr
+
+a030045c <data_from_flash>:
+a030045c:	e1a0f00e 	mov	pc, lr
+
+a0300460 <testram>:
+a0300460:	e92d401e 	stmdb	sp!, {r1, r2, r3, r4, lr}
+a0300464:	e8900006 	ldmia	r0, {r1, r2}
+a0300468:	e3a03055 	mov	r3, #85	; 0x55
+a030046c:	e3a040aa 	mov	r4, #170	; 0xaa
+a0300470:	e8800018 	stmia	r0, {r3, r4}
+a0300474:	e8900018 	ldmia	r0, {r3, r4}
+a0300478:	e3330055 	teq	r3, #85	; 0x55
+a030047c:	033400aa 	teqeq	r4, #170	; 0xaa
+a0300480:	1a000005 	bne	a030049c <bad>
+a0300484:	e3a030aa 	mov	r3, #170	; 0xaa
+a0300488:	e3a04055 	mov	r4, #85	; 0x55
+a030048c:	e8800018 	stmia	r0, {r3, r4}
+a0300490:	e8900018 	ldmia	r0, {r3, r4}
+a0300494:	e33300aa 	teq	r3, #170	; 0xaa
+a0300498:	03340055 	teqeq	r4, #85	; 0x55
+
+a030049c <bad>:
+a030049c:	e8800006 	stmia	r0, {r1, r2}
+a03004a0:	03a00000 	moveq	r0, #0	; 0x0
+a03004a4:	13a00001 	movne	r0, #1	; 0x1
+a03004a8:	e8bd801e 	ldmia	sp!, {r1, r2, r3, r4, pc}
+
+a03004ac <flash_dummy_ok>:
+a03004ac:	e1a0c00d 	mov	ip, sp
+a03004b0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03004b4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03004b8:	e3a03000 	mov	r3, #0	; 0x0
+a03004bc:	e1a00003 	mov	r0, r3
+a03004c0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03004c4 <print_flash_map>:
+a03004c4:	e1a0c00d 	mov	ip, sp
+a03004c8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03004cc:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03004d0:	e24dd008 	sub	sp, sp, #8	; 0x8
+a03004d4:	e59f00c4 	ldr	r0, [pc, #196]	; a03005a0 <print_flash_map+0xdc>
+a03004d8:	eb002970 	bl	a030aaa0 <printf>
+a03004dc:	e59f30c0 	ldr	r3, [pc, #192]	; a03005a4 <print_flash_map+0xe0>
+a03004e0:	e59f00c0 	ldr	r0, [pc, #192]	; a03005a8 <print_flash_map+0xe4>
+a03004e4:	e5931000 	ldr	r1, [r3]
+a03004e8:	eb00296c 	bl	a030aaa0 <printf>
+a03004ec:	e3a03000 	mov	r3, #0	; 0x0
+a03004f0:	e50b3010 	str	r3, [fp, -#16]
+a03004f4:	e59f30a8 	ldr	r3, [pc, #168]	; a03005a4 <print_flash_map+0xe0>
+a03004f8:	e51b2010 	ldr	r2, [fp, -#16]
+a03004fc:	e5933000 	ldr	r3, [r3]
+a0300500:	e1520003 	cmp	r2, r3
+a0300504:	ba000000 	blt	a030050c <print_flash_map+0x48>
+a0300508:	ea000023 	b	a030059c <print_flash_map+0xd8>
+a030050c:	e59f1098 	ldr	r1, [pc, #152]	; a03005ac <print_flash_map+0xe8>
+a0300510:	e51b2010 	ldr	r2, [fp, -#16]
+a0300514:	e1a03002 	mov	r3, r2
+a0300518:	e1a03083 	mov	r3, r3, lsl #1
+a030051c:	e0833002 	add	r3, r3, r2
+a0300520:	e1a03103 	mov	r3, r3, lsl #2
+a0300524:	e0833001 	add	r3, r3, r1
+a0300528:	e5933000 	ldr	r3, [r3]
+a030052c:	e50b3014 	str	r3, [fp, -#20]
+a0300530:	e59f0074 	ldr	r0, [pc, #116]	; a03005ac <print_flash_map+0xe8>
+a0300534:	e51b2010 	ldr	r2, [fp, -#16]
+a0300538:	e3a01008 	mov	r1, #8	; 0x8
+a030053c:	e1a03002 	mov	r3, r2
+a0300540:	e1a03083 	mov	r3, r3, lsl #1
+a0300544:	e0833002 	add	r3, r3, r2
+a0300548:	e1a03103 	mov	r3, r3, lsl #2
+a030054c:	e0833000 	add	r3, r3, r0
+a0300550:	e0833001 	add	r3, r3, r1
+a0300554:	e5933000 	ldr	r3, [r3]
+a0300558:	e3530000 	cmp	r3, #0	; 0x0
+a030055c:	0a00000a 	beq	a030058c <print_flash_map+0xc8>
+a0300560:	e59f3048 	ldr	r3, [pc, #72]	; a03005b0 <print_flash_map+0xec>
+a0300564:	e5933000 	ldr	r3, [r3]
+a0300568:	e5933010 	ldr	r3, [r3, #16]
+a030056c:	e3530000 	cmp	r3, #0	; 0x0
+a0300570:	0a000005 	beq	a030058c <print_flash_map+0xc8>
+a0300574:	e59f3034 	ldr	r3, [pc, #52]	; a03005b0 <print_flash_map+0xec>
+a0300578:	e5933000 	ldr	r3, [r3]
+a030057c:	e5933010 	ldr	r3, [r3, #16]
+a0300580:	e51b0014 	ldr	r0, [fp, -#20]
+a0300584:	e1a0e00f 	mov	lr, pc
+a0300588:	e1a0f003 	mov	pc, r3
+a030058c:	e51b3010 	ldr	r3, [fp, -#16]
+a0300590:	e2833001 	add	r3, r3, #1	; 0x1
+a0300594:	e50b3010 	str	r3, [fp, -#16]
+a0300598:	eaffffd5 	b	a03004f4 <print_flash_map+0x30>
+a030059c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03005a0:	a030c110 	eorges	ip, r0, r0, lsl r1
+a03005a4:	a030e580 	eorges	lr, r0, r0, lsl #11
+a03005a8:	a030c11c 	eorges	ip, r0, ip, lsl r1
+a03005ac:	a030df80 	eorges	sp, r0, r0, lsl #31
+a03005b0:	a030fd00 	eorges	pc, r0, r0, lsl #26
+
+a03005b4 <init_flash>:
+a03005b4:	e1a0c00d 	mov	ip, sp
+a03005b8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03005bc:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03005c0:	e24dd018 	sub	sp, sp, #24	; 0x18
+a03005c4:	e59f0390 	ldr	r0, [pc, #912]	; a030095c <init_flash+0x3a8>
+a03005c8:	eb002934 	bl	a030aaa0 <printf>
+a03005cc:	e3a03000 	mov	r3, #0	; 0x0
+a03005d0:	e50b3010 	str	r3, [fp, -#16]
+a03005d4:	e3a03000 	mov	r3, #0	; 0x0
+a03005d8:	e50b3018 	str	r3, [fp, -#24]
+a03005dc:	e59f337c 	ldr	r3, [pc, #892]	; a0300960 <init_flash+0x3ac>
+a03005e0:	e5933000 	ldr	r3, [r3]
+a03005e4:	e3530000 	cmp	r3, #0	; 0x0
+a03005e8:	1a000002 	bne	a03005f8 <init_flash+0x44>
+a03005ec:	e59f0370 	ldr	r0, [pc, #880]	; a0300964 <init_flash+0x3b0>
+a03005f0:	eb00292a 	bl	a030aaa0 <printf>
+a03005f4:	ea0000d7 	b	a0300958 <init_flash+0x3a4>
+a03005f8:	e59f3368 	ldr	r3, [pc, #872]	; a0300968 <init_flash+0x3b4>
+a03005fc:	e5933000 	ldr	r3, [r3]
+a0300600:	e3530000 	cmp	r3, #0	; 0x0
+a0300604:	1a000002 	bne	a0300614 <init_flash+0x60>
+a0300608:	e59f035c 	ldr	r0, [pc, #860]	; a030096c <init_flash+0x3b8>
+a030060c:	eb002923 	bl	a030aaa0 <printf>
+a0300610:	ea0000d0 	b	a0300958 <init_flash+0x3a4>
+a0300614:	e59f334c 	ldr	r3, [pc, #844]	; a0300968 <init_flash+0x3b4>
+a0300618:	e5933000 	ldr	r3, [r3]
+a030061c:	e5933014 	ldr	r3, [r3, #20]
+a0300620:	e3530000 	cmp	r3, #0	; 0x0
+a0300624:	1a000003 	bne	a0300638 <init_flash+0x84>
+a0300628:	e59f3338 	ldr	r3, [pc, #824]	; a0300968 <init_flash+0x3b4>
+a030062c:	e5932000 	ldr	r2, [r3]
+a0300630:	e59f3338 	ldr	r3, [pc, #824]	; a0300970 <init_flash+0x3bc>
+a0300634:	e5823014 	str	r3, [r2, #20]
+a0300638:	e59f3328 	ldr	r3, [pc, #808]	; a0300968 <init_flash+0x3b4>
+a030063c:	e5933000 	ldr	r3, [r3]
+a0300640:	e5933018 	ldr	r3, [r3, #24]
+a0300644:	e3530000 	cmp	r3, #0	; 0x0
+a0300648:	1a000003 	bne	a030065c <init_flash+0xa8>
+a030064c:	e59f3314 	ldr	r3, [pc, #788]	; a0300968 <init_flash+0x3b4>
+a0300650:	e5932000 	ldr	r2, [r3]
+a0300654:	e59f3314 	ldr	r3, [pc, #788]	; a0300970 <init_flash+0x3bc>
+a0300658:	e5823018 	str	r3, [r2, #24]
+a030065c:	e59f32fc 	ldr	r3, [pc, #764]	; a0300960 <init_flash+0x3ac>
+a0300660:	e5933000 	ldr	r3, [r3]
+a0300664:	e5933004 	ldr	r3, [r3, #4]
+a0300668:	e3730001 	cmn	r3, #1	; 0x1
+a030066c:	1a000024 	bne	a0300704 <init_flash+0x150>
+a0300670:	e59f32e8 	ldr	r3, [pc, #744]	; a0300960 <init_flash+0x3ac>
+a0300674:	e5933000 	ldr	r3, [r3]
+a0300678:	e5933000 	ldr	r3, [r3]
+a030067c:	e50b301c 	str	r3, [fp, -#28]
+a0300680:	e59f32e0 	ldr	r3, [pc, #736]	; a0300968 <init_flash+0x3b4>
+a0300684:	e5933000 	ldr	r3, [r3]
+a0300688:	e593301c 	ldr	r3, [r3, #28]
+a030068c:	e3530000 	cmp	r3, #0	; 0x0
+a0300690:	1a000005 	bne	a03006ac <init_flash+0xf8>
+a0300694:	e59f02d8 	ldr	r0, [pc, #728]	; a0300974 <init_flash+0x3c0>
+a0300698:	eb002900 	bl	a030aaa0 <printf>
+a030069c:	e59f22bc 	ldr	r2, [pc, #700]	; a0300960 <init_flash+0x3ac>
+a03006a0:	e3a03000 	mov	r3, #0	; 0x0
+a03006a4:	e5823000 	str	r3, [r2]
+a03006a8:	ea0000aa 	b	a0300958 <init_flash+0x3a4>
+a03006ac:	e59f32b4 	ldr	r3, [pc, #692]	; a0300968 <init_flash+0x3b4>
+a03006b0:	e5933000 	ldr	r3, [r3]
+a03006b4:	e24b2020 	sub	r2, fp, #32	; 0x20
+a03006b8:	e593301c 	ldr	r3, [r3, #28]
+a03006bc:	e51b001c 	ldr	r0, [fp, -#28]
+a03006c0:	e1a01002 	mov	r1, r2
+a03006c4:	e1a0e00f 	mov	lr, pc
+a03006c8:	e1a0f003 	mov	pc, r3
+a03006cc:	e1a03000 	mov	r3, r0
+a03006d0:	e50b3024 	str	r3, [fp, -#36]
+a03006d4:	e51b3024 	ldr	r3, [fp, -#36]
+a03006d8:	e3530000 	cmp	r3, #0	; 0x0
+a03006dc:	0a000005 	beq	a03006f8 <init_flash+0x144>
+a03006e0:	e59f0290 	ldr	r0, [pc, #656]	; a0300978 <init_flash+0x3c4>
+a03006e4:	eb0028ed 	bl	a030aaa0 <printf>
+a03006e8:	e59f2270 	ldr	r2, [pc, #624]	; a0300960 <init_flash+0x3ac>
+a03006ec:	e3a03000 	mov	r3, #0	; 0x0
+a03006f0:	e5823000 	str	r3, [r2]
+a03006f4:	ea000097 	b	a0300958 <init_flash+0x3a4>
+a03006f8:	e59f2260 	ldr	r2, [pc, #608]	; a0300960 <init_flash+0x3ac>
+a03006fc:	e51b3020 	ldr	r3, [fp, -#32]
+a0300700:	e5823000 	str	r3, [r2]
+a0300704:	e59f2270 	ldr	r2, [pc, #624]	; a030097c <init_flash+0x3c8>
+a0300708:	e3a03000 	mov	r3, #0	; 0x0
+a030070c:	e5823000 	str	r3, [r2]
+a0300710:	e51b2010 	ldr	r2, [fp, -#16]
+a0300714:	e1a03002 	mov	r3, r2
+a0300718:	e1a03083 	mov	r3, r3, lsl #1
+a030071c:	e0833002 	add	r3, r3, r2
+a0300720:	e1a02103 	mov	r2, r3, lsl #2
+a0300724:	e59f3234 	ldr	r3, [pc, #564]	; a0300960 <init_flash+0x3ac>
+a0300728:	e5933000 	ldr	r3, [r3]
+a030072c:	e0823003 	add	r3, r2, r3
+a0300730:	e5933000 	ldr	r3, [r3]
+a0300734:	e3530000 	cmp	r3, #0	; 0x0
+a0300738:	1a000000 	bne	a0300740 <init_flash+0x18c>
+a030073c:	ea000084 	b	a0300954 <init_flash+0x3a0>
+a0300740:	e51b2010 	ldr	r2, [fp, -#16]
+a0300744:	e1a03002 	mov	r3, r2
+a0300748:	e1a03083 	mov	r3, r3, lsl #1
+a030074c:	e0833002 	add	r3, r3, r2
+a0300750:	e1a02103 	mov	r2, r3, lsl #2
+a0300754:	e59f3204 	ldr	r3, [pc, #516]	; a0300960 <init_flash+0x3ac>
+a0300758:	e5933000 	ldr	r3, [r3]
+a030075c:	e0821003 	add	r1, r2, r3
+a0300760:	e51b2010 	ldr	r2, [fp, -#16]
+a0300764:	e1a03002 	mov	r3, r2
+a0300768:	e1a03083 	mov	r3, r3, lsl #1
+a030076c:	e0833002 	add	r3, r3, r2
+a0300770:	e1a02103 	mov	r2, r3, lsl #2
+a0300774:	e59f31e4 	ldr	r3, [pc, #484]	; a0300960 <init_flash+0x3ac>
+a0300778:	e5933000 	ldr	r3, [r3]
+a030077c:	e0823003 	add	r3, r2, r3
+a0300780:	e59f01f8 	ldr	r0, [pc, #504]	; a0300980 <init_flash+0x3cc>
+a0300784:	e5911004 	ldr	r1, [r1, #4]
+a0300788:	e5932000 	ldr	r2, [r3]
+a030078c:	eb0028c3 	bl	a030aaa0 <printf>
+a0300790:	e51b2010 	ldr	r2, [fp, -#16]
+a0300794:	e1a03002 	mov	r3, r2
+a0300798:	e1a03083 	mov	r3, r3, lsl #1
+a030079c:	e0833002 	add	r3, r3, r2
+a03007a0:	e1a02103 	mov	r2, r3, lsl #2
+a03007a4:	e59f31b4 	ldr	r3, [pc, #436]	; a0300960 <init_flash+0x3ac>
+a03007a8:	e5933000 	ldr	r3, [r3]
+a03007ac:	e0823003 	add	r3, r2, r3
+a03007b0:	e5933008 	ldr	r3, [r3, #8]
+a03007b4:	e3530000 	cmp	r3, #0	; 0x0
+a03007b8:	1a000001 	bne	a03007c4 <init_flash+0x210>
+a03007bc:	e59f01c0 	ldr	r0, [pc, #448]	; a0300984 <init_flash+0x3d0>
+a03007c0:	eb0028b6 	bl	a030aaa0 <printf>
+a03007c4:	e59f01bc 	ldr	r0, [pc, #444]	; a0300988 <init_flash+0x3d4>
+a03007c8:	eb0028b4 	bl	a030aaa0 <printf>
+a03007cc:	e3a03000 	mov	r3, #0	; 0x0
+a03007d0:	e50b3014 	str	r3, [fp, -#20]
+a03007d4:	e51b2010 	ldr	r2, [fp, -#16]
+a03007d8:	e1a03002 	mov	r3, r2
+a03007dc:	e1a03083 	mov	r3, r3, lsl #1
+a03007e0:	e0833002 	add	r3, r3, r2
+a03007e4:	e1a02103 	mov	r2, r3, lsl #2
+a03007e8:	e59f3170 	ldr	r3, [pc, #368]	; a0300960 <init_flash+0x3ac>
+a03007ec:	e5933000 	ldr	r3, [r3]
+a03007f0:	e0823003 	add	r3, r2, r3
+a03007f4:	e51b2014 	ldr	r2, [fp, -#20]
+a03007f8:	e5933004 	ldr	r3, [r3, #4]
+a03007fc:	e1520003 	cmp	r2, r3
+a0300800:	3a000000 	bcc	a0300808 <init_flash+0x254>
+a0300804:	ea00004e 	b	a0300944 <init_flash+0x390>
+a0300808:	e59f117c 	ldr	r1, [pc, #380]	; a030098c <init_flash+0x3d8>
+a030080c:	e59f3168 	ldr	r3, [pc, #360]	; a030097c <init_flash+0x3c8>
+a0300810:	e5932000 	ldr	r2, [r3]
+a0300814:	e1a03002 	mov	r3, r2
+a0300818:	e1a03083 	mov	r3, r3, lsl #1
+a030081c:	e0833002 	add	r3, r3, r2
+a0300820:	e1a03103 	mov	r3, r3, lsl #2
+a0300824:	e0832001 	add	r2, r3, r1
+a0300828:	e51b3018 	ldr	r3, [fp, -#24]
+a030082c:	e5823000 	str	r3, [r2]
+a0300830:	e59f0154 	ldr	r0, [pc, #340]	; a030098c <init_flash+0x3d8>
+a0300834:	e59f3140 	ldr	r3, [pc, #320]	; a030097c <init_flash+0x3c8>
+a0300838:	e5932000 	ldr	r2, [r3]
+a030083c:	e3a01004 	mov	r1, #4	; 0x4
+a0300840:	e1a03002 	mov	r3, r2
+a0300844:	e1a03083 	mov	r3, r3, lsl #1
+a0300848:	e0833002 	add	r3, r3, r2
+a030084c:	e1a03103 	mov	r3, r3, lsl #2
+a0300850:	e0833000 	add	r3, r3, r0
+a0300854:	e0831001 	add	r1, r3, r1
+a0300858:	e51b2010 	ldr	r2, [fp, -#16]
+a030085c:	e1a03002 	mov	r3, r2
+a0300860:	e1a03083 	mov	r3, r3, lsl #1
+a0300864:	e0833002 	add	r3, r3, r2
+a0300868:	e1a02103 	mov	r2, r3, lsl #2
+a030086c:	e59f30ec 	ldr	r3, [pc, #236]	; a0300960 <init_flash+0x3ac>
+a0300870:	e5933000 	ldr	r3, [r3]
+a0300874:	e0823003 	add	r3, r2, r3
+a0300878:	e5933000 	ldr	r3, [r3]
+a030087c:	e5813000 	str	r3, [r1]
+a0300880:	e59f0104 	ldr	r0, [pc, #260]	; a030098c <init_flash+0x3d8>
+a0300884:	e59f30f0 	ldr	r3, [pc, #240]	; a030097c <init_flash+0x3c8>
+a0300888:	e5932000 	ldr	r2, [r3]
+a030088c:	e3a01008 	mov	r1, #8	; 0x8
+a0300890:	e1a03002 	mov	r3, r2
+a0300894:	e1a03083 	mov	r3, r3, lsl #1
+a0300898:	e0833002 	add	r3, r3, r2
+a030089c:	e1a03103 	mov	r3, r3, lsl #2
+a03008a0:	e0833000 	add	r3, r3, r0
+a03008a4:	e0831001 	add	r1, r3, r1
+a03008a8:	e51b2010 	ldr	r2, [fp, -#16]
+a03008ac:	e1a03002 	mov	r3, r2
+a03008b0:	e1a03083 	mov	r3, r3, lsl #1
+a03008b4:	e0833002 	add	r3, r3, r2
+a03008b8:	e1a02103 	mov	r2, r3, lsl #2
+a03008bc:	e59f309c 	ldr	r3, [pc, #156]	; a0300960 <init_flash+0x3ac>
+a03008c0:	e5933000 	ldr	r3, [r3]
+a03008c4:	e0823003 	add	r3, r2, r3
+a03008c8:	e5933008 	ldr	r3, [r3, #8]
+a03008cc:	e5813000 	str	r3, [r1]
+a03008d0:	e51b2010 	ldr	r2, [fp, -#16]
+a03008d4:	e1a03002 	mov	r3, r2
+a03008d8:	e1a03083 	mov	r3, r3, lsl #1
+a03008dc:	e0833002 	add	r3, r3, r2
+a03008e0:	e1a02103 	mov	r2, r3, lsl #2
+a03008e4:	e59f3074 	ldr	r3, [pc, #116]	; a0300960 <init_flash+0x3ac>
+a03008e8:	e5933000 	ldr	r3, [r3]
+a03008ec:	e0823003 	add	r3, r2, r3
+a03008f0:	e51b2018 	ldr	r2, [fp, -#24]
+a03008f4:	e5933000 	ldr	r3, [r3]
+a03008f8:	e0823003 	add	r3, r2, r3
+a03008fc:	e50b3018 	str	r3, [fp, -#24]
+a0300900:	e59f2074 	ldr	r2, [pc, #116]	; a030097c <init_flash+0x3c8>
+a0300904:	e59f3070 	ldr	r3, [pc, #112]	; a030097c <init_flash+0x3c8>
+a0300908:	e5933000 	ldr	r3, [r3]
+a030090c:	e2833001 	add	r3, r3, #1	; 0x1
+a0300910:	e5823000 	str	r3, [r2]
+a0300914:	e59f3060 	ldr	r3, [pc, #96]	; a030097c <init_flash+0x3c8>
+a0300918:	e5933000 	ldr	r3, [r3]
+a030091c:	e353007f 	cmp	r3, #127	; 0x7f
+a0300920:	da000003 	ble	a0300934 <init_flash+0x380>
+a0300924:	eb001ab4 	bl	a03073fc <printerrprefix>
+a0300928:	e59f0060 	ldr	r0, [pc, #96]	; a0300990 <init_flash+0x3dc>
+a030092c:	eb00285b 	bl	a030aaa0 <printf>
+a0300930:	ea000003 	b	a0300944 <init_flash+0x390>
+a0300934:	e51b3014 	ldr	r3, [fp, -#20]
+a0300938:	e2833001 	add	r3, r3, #1	; 0x1
+a030093c:	e50b3014 	str	r3, [fp, -#20]
+a0300940:	eaffffa3 	b	a03007d4 <init_flash+0x220>
+a0300944:	e51b3010 	ldr	r3, [fp, -#16]
+a0300948:	e2833001 	add	r3, r3, #1	; 0x1
+a030094c:	e50b3010 	str	r3, [fp, -#16]
+a0300950:	eaffff6e 	b	a0300710 <init_flash+0x15c>
+a0300954:	ebfffeda 	bl	a03004c4 <print_flash_map>
+a0300958:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030095c:	a030c120 	eorges	ip, r0, r0, lsr #2
+a0300960:	a030fce0 	eorges	pc, r0, r0, ror #25
+a0300964:	a030c138 	eorges	ip, r0, r8, lsr r1
+a0300968:	a030fd00 	eorges	pc, r0, r0, lsl #26
+a030096c:	a030c158 	eorges	ip, r0, r8, asr r1
+a0300970:	a03004ac 	eorges	r0, r0, ip, lsr #9
+a0300974:	a030c170 	eorges	ip, r0, r0, ror r1
+a0300978:	a030c19c 	mlages	r0, ip, r1, ip
+a030097c:	a030e580 	eorges	lr, r0, r0, lsl #11
+a0300980:	a030c1cc 	eorges	ip, r0, ip, asr #3
+a0300984:	a030c1dc 	ldrgesb	ip, [r0], -ip
+a0300988:	a030c1e4 	eorges	ip, r0, r4, ror #3
+a030098c:	a030df80 	eorges	sp, r0, r0, lsl #31
+a0300990:	a030c1f0 	ldrgesh	ip, [r0], -r0
+
+a0300994 <flash_erase_region>:
+a0300994:	e1a0c00d 	mov	ip, sp
+a0300998:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030099c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03009a0:	e24dd018 	sub	sp, sp, #24	; 0x18
+a03009a4:	e50b0010 	str	r0, [fp, -#16]
+a03009a8:	e50b1014 	str	r1, [fp, -#20]
+a03009ac:	e51b3010 	ldr	r3, [fp, -#16]
+a03009b0:	e50b3018 	str	r3, [fp, -#24]
+a03009b4:	e51b3014 	ldr	r3, [fp, -#20]
+a03009b8:	e1a02103 	mov	r2, r3, lsl #2
+a03009bc:	e51b3010 	ldr	r3, [fp, -#16]
+a03009c0:	e0833002 	add	r3, r3, r2
+a03009c4:	e50b301c 	str	r3, [fp, -#28]
+a03009c8:	e59f0108 	ldr	r0, [pc, #264]	; a0300ad8 <flash_erase_region+0x144>
+a03009cc:	e51b1014 	ldr	r1, [fp, -#20]
+a03009d0:	e51b2014 	ldr	r2, [fp, -#20]
+a03009d4:	e51b3010 	ldr	r3, [fp, -#16]
+a03009d8:	eb002830 	bl	a030aaa0 <printf>
+a03009dc:	e59f30f8 	ldr	r3, [pc, #248]	; a0300adc <flash_erase_region+0x148>
+a03009e0:	e5933000 	ldr	r3, [r3]
+a03009e4:	e5933014 	ldr	r3, [r3, #20]
+a03009e8:	e1a0e00f 	mov	lr, pc
+a03009ec:	e1a0f003 	mov	pc, r3
+a03009f0:	e59f00e8 	ldr	r0, [pc, #232]	; a0300ae0 <flash_erase_region+0x14c>
+a03009f4:	e51b1018 	ldr	r1, [fp, -#24]
+a03009f8:	eb002828 	bl	a030aaa0 <printf>
+a03009fc:	e59f30d8 	ldr	r3, [pc, #216]	; a0300adc <flash_erase_region+0x148>
+a0300a00:	e5933000 	ldr	r3, [r3]
+a0300a04:	e593300c 	ldr	r3, [r3, #12]
+a0300a08:	e51b0018 	ldr	r0, [fp, -#24]
+a0300a0c:	e1a0e00f 	mov	lr, pc
+a0300a10:	e1a0f003 	mov	pc, r3
+a0300a14:	e1a03000 	mov	r3, r0
+a0300a18:	e50b3020 	str	r3, [fp, -#32]
+a0300a1c:	e51b2018 	ldr	r2, [fp, -#24]
+a0300a20:	e51b301c 	ldr	r3, [fp, -#28]
+a0300a24:	e1520003 	cmp	r2, r3
+a0300a28:	3a000000 	bcc	a0300a30 <flash_erase_region+0x9c>
+a0300a2c:	ea000020 	b	a0300ab4 <flash_erase_region+0x120>
+a0300a30:	e51b3018 	ldr	r3, [fp, -#24]
+a0300a34:	e5933000 	ldr	r3, [r3]
+a0300a38:	e3730001 	cmn	r3, #1	; 0x1
+a0300a3c:	0a000018 	beq	a0300aa4 <flash_erase_region+0x110>
+a0300a40:	e59f009c 	ldr	r0, [pc, #156]	; a0300ae4 <flash_erase_region+0x150>
+a0300a44:	e51b1018 	ldr	r1, [fp, -#24]
+a0300a48:	eb002814 	bl	a030aaa0 <printf>
+a0300a4c:	e59f3088 	ldr	r3, [pc, #136]	; a0300adc <flash_erase_region+0x148>
+a0300a50:	e5933000 	ldr	r3, [r3]
+a0300a54:	e5933000 	ldr	r3, [r3]
+a0300a58:	e51b0018 	ldr	r0, [fp, -#24]
+a0300a5c:	e1a0e00f 	mov	lr, pc
+a0300a60:	e1a0f003 	mov	pc, r3
+a0300a64:	e1a03000 	mov	r3, r0
+a0300a68:	e50b3020 	str	r3, [fp, -#32]
+a0300a6c:	e51b3020 	ldr	r3, [fp, -#32]
+a0300a70:	e3530000 	cmp	r3, #0	; 0x0
+a0300a74:	aaffffe8 	bge	a0300a1c <flash_erase_region+0x88>
+a0300a78:	e59f0068 	ldr	r0, [pc, #104]	; a0300ae8 <flash_erase_region+0x154>
+a0300a7c:	e51b1018 	ldr	r1, [fp, -#24]
+a0300a80:	eb002806 	bl	a030aaa0 <printf>
+a0300a84:	e59f3050 	ldr	r3, [pc, #80]	; a0300adc <flash_erase_region+0x148>
+a0300a88:	e5933000 	ldr	r3, [r3]
+a0300a8c:	e5933018 	ldr	r3, [r3, #24]
+a0300a90:	e1a0e00f 	mov	lr, pc
+a0300a94:	e1a0f003 	mov	pc, r3
+a0300a98:	e51b3020 	ldr	r3, [fp, -#32]
+a0300a9c:	e50b3024 	str	r3, [fp, -#36]
+a0300aa0:	ea00000a 	b	a0300ad0 <flash_erase_region+0x13c>
+a0300aa4:	e51b3018 	ldr	r3, [fp, -#24]
+a0300aa8:	e2833004 	add	r3, r3, #4	; 0x4
+a0300aac:	e50b3018 	str	r3, [fp, -#24]
+a0300ab0:	eaffffd9 	b	a0300a1c <flash_erase_region+0x88>
+a0300ab4:	e59f3020 	ldr	r3, [pc, #32]	; a0300adc <flash_erase_region+0x148>
+a0300ab8:	e5933000 	ldr	r3, [r3]
+a0300abc:	e5933018 	ldr	r3, [r3, #24]
+a0300ac0:	e1a0e00f 	mov	lr, pc
+a0300ac4:	e1a0f003 	mov	pc, r3
+a0300ac8:	e3a03000 	mov	r3, #0	; 0x0
+a0300acc:	e50b3024 	str	r3, [fp, -#36]
+a0300ad0:	e51b0024 	ldr	r0, [fp, -#36]
+a0300ad4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0300ad8:	a030c20c 	eorges	ip, r0, ip, lsl #4
+a0300adc:	a030fd00 	eorges	pc, r0, r0, lsl #26
+a0300ae0:	a030c234 	eorges	ip, r0, r4, lsr r2
+a0300ae4:	a030c258 	eorges	ip, r0, r8, asr r2
+a0300ae8:	a030c278 	eorges	ip, r0, r8, ror r2
+
+a0300aec <flash_get_size>:
+a0300aec:	e1a0c00d 	mov	ip, sp
+a0300af0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0300af4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0300af8:	e24dd008 	sub	sp, sp, #8	; 0x8
+a0300afc:	e3a03000 	mov	r3, #0	; 0x0
+a0300b00:	e50b3014 	str	r3, [fp, -#20]
+a0300b04:	e3a03000 	mov	r3, #0	; 0x0
+a0300b08:	e50b3010 	str	r3, [fp, -#16]
+a0300b0c:	e59f306c 	ldr	r3, [pc, #108]	; a0300b80 <flash_get_size+0x94>
+a0300b10:	e51b2010 	ldr	r2, [fp, -#16]
+a0300b14:	e5933000 	ldr	r3, [r3]
+a0300b18:	e1520003 	cmp	r2, r3
+a0300b1c:	ba000000 	blt	a0300b24 <flash_get_size+0x38>
+a0300b20:	ea000010 	b	a0300b68 <flash_get_size+0x7c>
+a0300b24:	e59f0058 	ldr	r0, [pc, #88]	; a0300b84 <flash_get_size+0x98>
+a0300b28:	e51b2010 	ldr	r2, [fp, -#16]
+a0300b2c:	e3a01004 	mov	r1, #4	; 0x4
+a0300b30:	e1a03002 	mov	r3, r2
+a0300b34:	e1a03083 	mov	r3, r3, lsl #1
+a0300b38:	e0833002 	add	r3, r3, r2
+a0300b3c:	e1a03103 	mov	r3, r3, lsl #2
+a0300b40:	e0833000 	add	r3, r3, r0
+a0300b44:	e0833001 	add	r3, r3, r1
+a0300b48:	e51b2014 	ldr	r2, [fp, -#20]
+a0300b4c:	e5933000 	ldr	r3, [r3]
+a0300b50:	e0823003 	add	r3, r2, r3
+a0300b54:	e50b3014 	str	r3, [fp, -#20]
+a0300b58:	e51b3010 	ldr	r3, [fp, -#16]
+a0300b5c:	e2833001 	add	r3, r3, #1	; 0x1
+a0300b60:	e50b3010 	str	r3, [fp, -#16]
+a0300b64:	eaffffe8 	b	a0300b0c <flash_get_size+0x20>
+a0300b68:	e59f0018 	ldr	r0, [pc, #24]	; a0300b88 <flash_get_size+0x9c>
+a0300b6c:	e51b1010 	ldr	r1, [fp, -#16]
+a0300b70:	eb0027ca 	bl	a030aaa0 <printf>
+a0300b74:	e51b3014 	ldr	r3, [fp, -#20]
+a0300b78:	e1a00003 	mov	r0, r3
+a0300b7c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0300b80:	a030e580 	eorges	lr, r0, r0, lsl #11
+a0300b84:	a030df80 	eorges	sp, r0, r0, lsl #31
+a0300b88:	a030c298 	mlages	r0, r8, r2, ip
+
+a0300b8c <flash_write_region>:
+a0300b8c:	e1a0c00d 	mov	ip, sp
+a0300b90:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0300b94:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0300b98:	e24dd034 	sub	sp, sp, #52	; 0x34
+a0300b9c:	e50b0010 	str	r0, [fp, -#16]
+a0300ba0:	e50b1014 	str	r1, [fp, -#20]
+a0300ba4:	e50b2018 	str	r2, [fp, -#24]
+a0300ba8:	e3a03000 	mov	r3, #0	; 0x0
+a0300bac:	e50b3020 	str	r3, [fp, -#32]
+a0300bb0:	e3a03000 	mov	r3, #0	; 0x0
+a0300bb4:	e50b3024 	str	r3, [fp, -#36]
+a0300bb8:	e3a03000 	mov	r3, #0	; 0x0
+a0300bbc:	e50b3028 	str	r3, [fp, -#40]
+a0300bc0:	e3a03000 	mov	r3, #0	; 0x0
+a0300bc4:	e50b302c 	str	r3, [fp, -#44]
+a0300bc8:	e3a03000 	mov	r3, #0	; 0x0
+a0300bcc:	e50b3030 	str	r3, [fp, -#48]
+a0300bd0:	e3a03000 	mov	r3, #0	; 0x0
+a0300bd4:	e50b3034 	str	r3, [fp, -#52]
+a0300bd8:	e51b3010 	ldr	r3, [fp, -#16]
+a0300bdc:	e58d3000 	str	r3, [sp]
+a0300be0:	e59f0300 	ldr	r0, [pc, #768]	; a0300ee8 <flash_write_region+0x35c>
+a0300be4:	e51b1018 	ldr	r1, [fp, -#24]
+a0300be8:	e51b2018 	ldr	r2, [fp, -#24]
+a0300bec:	e51b3014 	ldr	r3, [fp, -#20]
+a0300bf0:	eb0027aa 	bl	a030aaa0 <printf>
+a0300bf4:	e59f32f0 	ldr	r3, [pc, #752]	; a0300eec <flash_write_region+0x360>
+a0300bf8:	e5933000 	ldr	r3, [r3]
+a0300bfc:	e5933014 	ldr	r3, [r3, #20]
+a0300c00:	e1a0e00f 	mov	lr, pc
+a0300c04:	e1a0f003 	mov	pc, r3
+a0300c08:	e51b2024 	ldr	r2, [fp, -#36]
+a0300c0c:	e51b3018 	ldr	r3, [fp, -#24]
+a0300c10:	e1520003 	cmp	r2, r3
+a0300c14:	3a000000 	bcc	a0300c1c <flash_write_region+0x90>
+a0300c18:	ea0000a9 	b	a0300ec4 <flash_write_region+0x338>
+a0300c1c:	e59f32cc 	ldr	r3, [pc, #716]	; a0300ef0 <flash_write_region+0x364>
+a0300c20:	e24b2038 	sub	r2, fp, #56	; 0x38
+a0300c24:	e3a0c004 	mov	ip, #4	; 0x4
+a0300c28:	e1a00002 	mov	r0, r2
+a0300c2c:	e1a01003 	mov	r1, r3
+a0300c30:	e1a0200c 	mov	r2, ip
+a0300c34:	eb0022e3 	bl	a03097c8 <memcpy>
+a0300c38:	e51b3024 	ldr	r3, [fp, -#36]
+a0300c3c:	e1a02103 	mov	r2, r3, lsl #2
+a0300c40:	e51b3010 	ldr	r3, [fp, -#16]
+a0300c44:	e0821003 	add	r1, r2, r3
+a0300c48:	e51b3024 	ldr	r3, [fp, -#36]
+a0300c4c:	e1a02103 	mov	r2, r3, lsl #2
+a0300c50:	e51b3014 	ldr	r3, [fp, -#20]
+a0300c54:	e0823003 	add	r3, r2, r3
+a0300c58:	e5912000 	ldr	r2, [r1]
+a0300c5c:	e5933000 	ldr	r3, [r3]
+a0300c60:	e1520003 	cmp	r2, r3
+a0300c64:	1a000006 	bne	a0300c84 <flash_write_region+0xf8>
+a0300c68:	e51b3024 	ldr	r3, [fp, -#36]
+a0300c6c:	e2833001 	add	r3, r3, #1	; 0x1
+a0300c70:	e50b3024 	str	r3, [fp, -#36]
+a0300c74:	e51b3034 	ldr	r3, [fp, -#52]
+a0300c78:	e2833001 	add	r3, r3, #1	; 0x1
+a0300c7c:	e50b3034 	str	r3, [fp, -#52]
+a0300c80:	eaffffe0 	b	a0300c08 <flash_write_region+0x7c>
+a0300c84:	e59f3260 	ldr	r3, [pc, #608]	; a0300eec <flash_write_region+0x360>
+a0300c88:	e5931000 	ldr	r1, [r3]
+a0300c8c:	e51b3024 	ldr	r3, [fp, -#36]
+a0300c90:	e1a02103 	mov	r2, r3, lsl #2
+a0300c94:	e51b3010 	ldr	r3, [fp, -#16]
+a0300c98:	e0823003 	add	r3, r2, r3
+a0300c9c:	e591200c 	ldr	r2, [r1, #12]
+a0300ca0:	e1a00003 	mov	r0, r3
+a0300ca4:	e1a0e00f 	mov	lr, pc
+a0300ca8:	e1a0f002 	mov	pc, r2
+a0300cac:	e1a03000 	mov	r3, r0
+a0300cb0:	e50b301c 	str	r3, [fp, -#28]
+a0300cb4:	e59f3230 	ldr	r3, [pc, #560]	; a0300eec <flash_write_region+0x360>
+a0300cb8:	e5930000 	ldr	r0, [r3]
+a0300cbc:	e51b3024 	ldr	r3, [fp, -#36]
+a0300cc0:	e1a02103 	mov	r2, r3, lsl #2
+a0300cc4:	e51b3010 	ldr	r3, [fp, -#16]
+a0300cc8:	e0821003 	add	r1, r2, r3
+a0300ccc:	e51b3024 	ldr	r3, [fp, -#36]
+a0300cd0:	e1a02103 	mov	r2, r3, lsl #2
+a0300cd4:	e51b3014 	ldr	r3, [fp, -#20]
+a0300cd8:	e0823003 	add	r3, r2, r3
+a0300cdc:	e5902004 	ldr	r2, [r0, #4]
+a0300ce0:	e1a00001 	mov	r0, r1
+a0300ce4:	e1a01003 	mov	r1, r3
+a0300ce8:	e1a0e00f 	mov	lr, pc
+a0300cec:	e1a0f002 	mov	pc, r2
+a0300cf0:	e1a03000 	mov	r3, r0
+a0300cf4:	e50b301c 	str	r3, [fp, -#28]
+a0300cf8:	e51b302c 	ldr	r3, [fp, -#44]
+a0300cfc:	e2833001 	add	r3, r3, #1	; 0x1
+a0300d00:	e50b302c 	str	r3, [fp, -#44]
+a0300d04:	e51b301c 	ldr	r3, [fp, -#28]
+a0300d08:	e3530000 	cmp	r3, #0	; 0x0
+a0300d0c:	1a000003 	bne	a0300d20 <flash_write_region+0x194>
+a0300d10:	e51b3024 	ldr	r3, [fp, -#36]
+a0300d14:	e2833001 	add	r3, r3, #1	; 0x1
+a0300d18:	e50b3024 	str	r3, [fp, -#36]
+a0300d1c:	ea000058 	b	a0300e84 <flash_write_region+0x2f8>
+a0300d20:	e51b3020 	ldr	r3, [fp, -#32]
+a0300d24:	e2833001 	add	r3, r3, #1	; 0x1
+a0300d28:	e50b3020 	str	r3, [fp, -#32]
+a0300d2c:	e51b3024 	ldr	r3, [fp, -#36]
+a0300d30:	e1a02103 	mov	r2, r3, lsl #2
+a0300d34:	e51b3010 	ldr	r3, [fp, -#16]
+a0300d38:	e0823003 	add	r3, r2, r3
+a0300d3c:	e59f01b0 	ldr	r0, [pc, #432]	; a0300ef4 <flash_write_region+0x368>
+a0300d40:	e1a01003 	mov	r1, r3
+a0300d44:	eb002755 	bl	a030aaa0 <printf>
+a0300d48:	e59f319c 	ldr	r3, [pc, #412]	; a0300eec <flash_write_region+0x360>
+a0300d4c:	e5931000 	ldr	r1, [r3]
+a0300d50:	e51b3024 	ldr	r3, [fp, -#36]
+a0300d54:	e1a02103 	mov	r2, r3, lsl #2
+a0300d58:	e51b3010 	ldr	r3, [fp, -#16]
+a0300d5c:	e0823003 	add	r3, r2, r3
+a0300d60:	e591200c 	ldr	r2, [r1, #12]
+a0300d64:	e1a00003 	mov	r0, r3
+a0300d68:	e1a0e00f 	mov	lr, pc
+a0300d6c:	e1a0f002 	mov	pc, r2
+a0300d70:	e1a03000 	mov	r3, r0
+a0300d74:	e50b301c 	str	r3, [fp, -#28]
+a0300d78:	e59f316c 	ldr	r3, [pc, #364]	; a0300eec <flash_write_region+0x360>
+a0300d7c:	e5931000 	ldr	r1, [r3]
+a0300d80:	e51b3024 	ldr	r3, [fp, -#36]
+a0300d84:	e1a02103 	mov	r2, r3, lsl #2
+a0300d88:	e51b3010 	ldr	r3, [fp, -#16]
+a0300d8c:	e0823003 	add	r3, r2, r3
+a0300d90:	e5912000 	ldr	r2, [r1]
+a0300d94:	e1a00003 	mov	r0, r3
+a0300d98:	e1a0e00f 	mov	lr, pc
+a0300d9c:	e1a0f002 	mov	pc, r2
+a0300da0:	e1a03000 	mov	r3, r0
+a0300da4:	e50b301c 	str	r3, [fp, -#28]
+a0300da8:	e51b3028 	ldr	r3, [fp, -#40]
+a0300dac:	e2833001 	add	r3, r3, #1	; 0x1
+a0300db0:	e50b3028 	str	r3, [fp, -#40]
+a0300db4:	e51b301c 	ldr	r3, [fp, -#28]
+a0300db8:	e3530000 	cmp	r3, #0	; 0x0
+a0300dbc:	aa000009 	bge	a0300de8 <flash_write_region+0x25c>
+a0300dc0:	e59f0130 	ldr	r0, [pc, #304]	; a0300ef8 <flash_write_region+0x36c>
+a0300dc4:	eb002735 	bl	a030aaa0 <printf>
+a0300dc8:	e59f311c 	ldr	r3, [pc, #284]	; a0300eec <flash_write_region+0x360>
+a0300dcc:	e5933000 	ldr	r3, [r3]
+a0300dd0:	e5933018 	ldr	r3, [r3, #24]
+a0300dd4:	e1a0e00f 	mov	lr, pc
+a0300dd8:	e1a0f003 	mov	pc, r3
+a0300ddc:	e51b301c 	ldr	r3, [fp, -#28]
+a0300de0:	e50b303c 	str	r3, [fp, -#60]
+a0300de4:	ea00003d 	b	a0300ee0 <flash_write_region+0x354>
+a0300de8:	e59f010c 	ldr	r0, [pc, #268]	; a0300efc <flash_write_region+0x370>
+a0300dec:	eb00272b 	bl	a030aaa0 <printf>
+a0300df0:	e51b3024 	ldr	r3, [fp, -#36]
+a0300df4:	e3530000 	cmp	r3, #0	; 0x0
+a0300df8:	0a00001a 	beq	a0300e68 <flash_write_region+0x2dc>
+a0300dfc:	e51b3024 	ldr	r3, [fp, -#36]
+a0300e00:	e1a02103 	mov	r2, r3, lsl #2
+a0300e04:	e51b3010 	ldr	r3, [fp, -#16]
+a0300e08:	e0821003 	add	r1, r2, r3
+a0300e0c:	e51b3024 	ldr	r3, [fp, -#36]
+a0300e10:	e1a02103 	mov	r2, r3, lsl #2
+a0300e14:	e51b3014 	ldr	r3, [fp, -#20]
+a0300e18:	e0823003 	add	r3, r2, r3
+a0300e1c:	e5912000 	ldr	r2, [r1]
+a0300e20:	e5933000 	ldr	r3, [r3]
+a0300e24:	e1520003 	cmp	r2, r3
+a0300e28:	1a000007 	bne	a0300e4c <flash_write_region+0x2c0>
+a0300e2c:	e51b3024 	ldr	r3, [fp, -#36]
+a0300e30:	e1a02103 	mov	r2, r3, lsl #2
+a0300e34:	e51b3010 	ldr	r3, [fp, -#16]
+a0300e38:	e0823003 	add	r3, r2, r3
+a0300e3c:	e5933000 	ldr	r3, [r3]
+a0300e40:	e3730001 	cmn	r3, #1	; 0x1
+a0300e44:	0a000000 	beq	a0300e4c <flash_write_region+0x2c0>
+a0300e48:	ea000006 	b	a0300e68 <flash_write_region+0x2dc>
+a0300e4c:	e51b3024 	ldr	r3, [fp, -#36]
+a0300e50:	e2433001 	sub	r3, r3, #1	; 0x1
+a0300e54:	e50b3024 	str	r3, [fp, -#36]
+a0300e58:	e51b3030 	ldr	r3, [fp, -#48]
+a0300e5c:	e2833001 	add	r3, r3, #1	; 0x1
+a0300e60:	e50b3030 	str	r3, [fp, -#48]
+a0300e64:	eaffffe1 	b	a0300df0 <flash_write_region+0x264>
+a0300e68:	e51b3024 	ldr	r3, [fp, -#36]
+a0300e6c:	e1a02103 	mov	r2, r3, lsl #2
+a0300e70:	e51b3010 	ldr	r3, [fp, -#16]
+a0300e74:	e0823003 	add	r3, r2, r3
+a0300e78:	e59f0080 	ldr	r0, [pc, #128]	; a0300f00 <flash_write_region+0x374>
+a0300e7c:	e1a01003 	mov	r1, r3
+a0300e80:	eb002706 	bl	a030aaa0 <printf>
+a0300e84:	e51b3018 	ldr	r3, [fp, -#24]
+a0300e88:	e1a02083 	mov	r2, r3, lsl #1
+a0300e8c:	e51b3020 	ldr	r3, [fp, -#32]
+a0300e90:	e1530002 	cmp	r3, r2
+a0300e94:	9affff5b 	bls	a0300c08 <flash_write_region+0x7c>
+a0300e98:	eb001957 	bl	a03073fc <printerrprefix>
+a0300e9c:	e59f0060 	ldr	r0, [pc, #96]	; a0300f04 <flash_write_region+0x378>
+a0300ea0:	eb0026fe 	bl	a030aaa0 <printf>
+a0300ea4:	e59f3040 	ldr	r3, [pc, #64]	; a0300eec <flash_write_region+0x360>
+a0300ea8:	e5933000 	ldr	r3, [r3]
+a0300eac:	e5933018 	ldr	r3, [r3, #24]
+a0300eb0:	e1a0e00f 	mov	lr, pc
+a0300eb4:	e1a0f003 	mov	pc, r3
+a0300eb8:	e3e0300c 	mvn	r3, #12	; 0xc
+a0300ebc:	e50b303c 	str	r3, [fp, -#60]
+a0300ec0:	ea000006 	b	a0300ee0 <flash_write_region+0x354>
+a0300ec4:	e59f3020 	ldr	r3, [pc, #32]	; a0300eec <flash_write_region+0x360>
+a0300ec8:	e5933000 	ldr	r3, [r3]
+a0300ecc:	e5933018 	ldr	r3, [r3, #24]
+a0300ed0:	e1a0e00f 	mov	lr, pc
+a0300ed4:	e1a0f003 	mov	pc, r3
+a0300ed8:	e3a03000 	mov	r3, #0	; 0x0
+a0300edc:	e50b303c 	str	r3, [fp, -#60]
+a0300ee0:	e51b003c 	ldr	r0, [fp, -#60]
+a0300ee4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0300ee8:	a030c2b4 	ldrgeh	ip, [r0], -r4
+a0300eec:	a030fd00 	eorges	pc, r0, r0, lsl #26
+a0300ef0:	a030c2af 	eorges	ip, r0, pc, lsr #5
+a0300ef4:	a030c2e8 	eorges	ip, r0, r8, ror #5
+a0300ef8:	a030c300 	eorges	ip, r0, r0, lsl #6
+a0300efc:	a030c308 	eorges	ip, r0, r8, lsl #6
+a0300f00:	a030c31c 	eorges	ip, r0, ip, lsl r3
+a0300f04:	a030c338 	eorges	ip, r0, r8, lsr r3
+
+a0300f08 <find_block>:
+a0300f08:	e1a0c00d 	mov	ip, sp
+a0300f0c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0300f10:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0300f14:	e24dd018 	sub	sp, sp, #24	; 0x18
+a0300f18:	e50b0010 	str	r0, [fp, -#16]
+a0300f1c:	e3a03000 	mov	r3, #0	; 0x0
+a0300f20:	e50b3014 	str	r3, [fp, -#20]
+a0300f24:	e59f30c0 	ldr	r3, [pc, #192]	; a0300fec <find_block+0xe4>
+a0300f28:	e51b2014 	ldr	r2, [fp, -#20]
+a0300f2c:	e5933000 	ldr	r3, [r3]
+a0300f30:	e1520003 	cmp	r2, r3
+a0300f34:	ba000000 	blt	a0300f3c <find_block+0x34>
+a0300f38:	ea000027 	b	a0300fdc <find_block+0xd4>
+a0300f3c:	e59f10ac 	ldr	r1, [pc, #172]	; a0300ff0 <find_block+0xe8>
+a0300f40:	e51b2014 	ldr	r2, [fp, -#20]
+a0300f44:	e1a03002 	mov	r3, r2
+a0300f48:	e1a03083 	mov	r3, r3, lsl #1
+a0300f4c:	e0833002 	add	r3, r3, r2
+a0300f50:	e1a03103 	mov	r3, r3, lsl #2
+a0300f54:	e0833001 	add	r3, r3, r1
+a0300f58:	e5933000 	ldr	r3, [r3]
+a0300f5c:	e50b3018 	str	r3, [fp, -#24]
+a0300f60:	e59f0088 	ldr	r0, [pc, #136]	; a0300ff0 <find_block+0xe8>
+a0300f64:	e51b2014 	ldr	r2, [fp, -#20]
+a0300f68:	e3a01004 	mov	r1, #4	; 0x4
+a0300f6c:	e1a03002 	mov	r3, r2
+a0300f70:	e1a03083 	mov	r3, r3, lsl #1
+a0300f74:	e0833002 	add	r3, r3, r2
+a0300f78:	e1a03103 	mov	r3, r3, lsl #2
+a0300f7c:	e0833000 	add	r3, r3, r0
+a0300f80:	e0833001 	add	r3, r3, r1
+a0300f84:	e5933000 	ldr	r3, [r3]
+a0300f88:	e50b301c 	str	r3, [fp, -#28]
+a0300f8c:	e51b2018 	ldr	r2, [fp, -#24]
+a0300f90:	e51b301c 	ldr	r3, [fp, -#28]
+a0300f94:	e0823003 	add	r3, r2, r3
+a0300f98:	e2433001 	sub	r3, r3, #1	; 0x1
+a0300f9c:	e50b3020 	str	r3, [fp, -#32]
+a0300fa0:	e51b2010 	ldr	r2, [fp, -#16]
+a0300fa4:	e51b3018 	ldr	r3, [fp, -#24]
+a0300fa8:	e1520003 	cmp	r2, r3
+a0300fac:	3a000006 	bcc	a0300fcc <find_block+0xc4>
+a0300fb0:	e51b2010 	ldr	r2, [fp, -#16]
+a0300fb4:	e51b3020 	ldr	r3, [fp, -#32]
+a0300fb8:	e1520003 	cmp	r2, r3
+a0300fbc:	8a000002 	bhi	a0300fcc <find_block+0xc4>
+a0300fc0:	e51b3014 	ldr	r3, [fp, -#20]
+a0300fc4:	e50b3024 	str	r3, [fp, -#36]
+a0300fc8:	ea000005 	b	a0300fe4 <find_block+0xdc>
+a0300fcc:	e51b3014 	ldr	r3, [fp, -#20]
+a0300fd0:	e2833001 	add	r3, r3, #1	; 0x1
+a0300fd4:	e50b3014 	str	r3, [fp, -#20]
+a0300fd8:	eaffffd1 	b	a0300f24 <find_block+0x1c>
+a0300fdc:	e3e03006 	mvn	r3, #6	; 0x6
+a0300fe0:	e50b3024 	str	r3, [fp, -#36]
+a0300fe4:	e51b0024 	ldr	r0, [fp, -#36]
+a0300fe8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0300fec:	a030e580 	eorges	lr, r0, r0, lsl #11
+a0300ff0:	a030df80 	eorges	sp, r0, r0, lsl #31
+
+a0300ff4 <flash_get_block_size>:
+a0300ff4:	e1a0c00d 	mov	ip, sp
+a0300ff8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0300ffc:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301000:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0301004:	e50b0010 	str	r0, [fp, -#16]
+a0301008:	e51b0010 	ldr	r0, [fp, -#16]
+a030100c:	ebffffbd 	bl	a0300f08 <find_block>
+a0301010:	e1a03000 	mov	r3, r0
+a0301014:	e50b3014 	str	r3, [fp, -#20]
+a0301018:	e51b3014 	ldr	r3, [fp, -#20]
+a030101c:	e3730007 	cmn	r3, #7	; 0x7
+a0301020:	1a000002 	bne	a0301030 <flash_get_block_size+0x3c>
+a0301024:	e3a03000 	mov	r3, #0	; 0x0
+a0301028:	e50b3018 	str	r3, [fp, -#24]
+a030102c:	ea00000a 	b	a030105c <flash_get_block_size+0x68>
+a0301030:	e59f002c 	ldr	r0, [pc, #44]	; a0301064 <flash_get_block_size+0x70>
+a0301034:	e51b2014 	ldr	r2, [fp, -#20]
+a0301038:	e3a01004 	mov	r1, #4	; 0x4
+a030103c:	e1a03002 	mov	r3, r2
+a0301040:	e1a03083 	mov	r3, r3, lsl #1
+a0301044:	e0833002 	add	r3, r3, r2
+a0301048:	e1a03103 	mov	r3, r3, lsl #2
+a030104c:	e0833000 	add	r3, r3, r0
+a0301050:	e0833001 	add	r3, r3, r1
+a0301054:	e5933000 	ldr	r3, [r3]
+a0301058:	e50b3018 	str	r3, [fp, -#24]
+a030105c:	e51b0018 	ldr	r0, [fp, -#24]
+a0301060:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0301064:	a030df80 	eorges	sp, r0, r0, lsl #31
+
+a0301068 <address_range_to_block_range>:
+a0301068:	e1a0c00d 	mov	ip, sp
+a030106c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0301070:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301074:	e24dd01c 	sub	sp, sp, #28	; 0x1c
+a0301078:	e50b0010 	str	r0, [fp, -#16]
+a030107c:	e50b1014 	str	r1, [fp, -#20]
+a0301080:	e50b2018 	str	r2, [fp, -#24]
+a0301084:	e50b301c 	str	r3, [fp, -#28]
+a0301088:	e51b0010 	ldr	r0, [fp, -#16]
+a030108c:	ebffff9d 	bl	a0300f08 <find_block>
+a0301090:	e1a03000 	mov	r3, r0
+a0301094:	e50b3020 	str	r3, [fp, -#32]
+a0301098:	e51b2010 	ldr	r2, [fp, -#16]
+a030109c:	e51b3014 	ldr	r3, [fp, -#20]
+a03010a0:	e0823003 	add	r3, r2, r3
+a03010a4:	e2433001 	sub	r3, r3, #1	; 0x1
+a03010a8:	e1a00003 	mov	r0, r3
+a03010ac:	ebffff95 	bl	a0300f08 <find_block>
+a03010b0:	e1a03000 	mov	r3, r0
+a03010b4:	e50b3024 	str	r3, [fp, -#36]
+a03010b8:	e51b3020 	ldr	r3, [fp, -#32]
+a03010bc:	e3530000 	cmp	r3, #0	; 0x0
+a03010c0:	aa000002 	bge	a03010d0 <address_range_to_block_range+0x68>
+a03010c4:	e51b3020 	ldr	r3, [fp, -#32]
+a03010c8:	e50b3028 	str	r3, [fp, -#40]
+a03010cc:	ea00000d 	b	a0301108 <address_range_to_block_range+0xa0>
+a03010d0:	e51b3024 	ldr	r3, [fp, -#36]
+a03010d4:	e3530000 	cmp	r3, #0	; 0x0
+a03010d8:	aa000002 	bge	a03010e8 <address_range_to_block_range+0x80>
+a03010dc:	e51b3024 	ldr	r3, [fp, -#36]
+a03010e0:	e50b3028 	str	r3, [fp, -#40]
+a03010e4:	ea000007 	b	a0301108 <address_range_to_block_range+0xa0>
+a03010e8:	e51b2018 	ldr	r2, [fp, -#24]
+a03010ec:	e51b3020 	ldr	r3, [fp, -#32]
+a03010f0:	e5823000 	str	r3, [r2]
+a03010f4:	e51b201c 	ldr	r2, [fp, -#28]
+a03010f8:	e51b3024 	ldr	r3, [fp, -#36]
+a03010fc:	e5823000 	str	r3, [r2]
+a0301100:	e3a03000 	mov	r3, #0	; 0x0
+a0301104:	e50b3028 	str	r3, [fp, -#40]
+a0301108:	e51b0028 	ldr	r0, [fp, -#40]
+a030110c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0301110 <do_flash_lock>:
+a0301110:	e1a0c00d 	mov	ip, sp
+a0301114:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0301118:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030111c:	e24dd024 	sub	sp, sp, #36	; 0x24
+a0301120:	e50b0010 	str	r0, [fp, -#16]
+a0301124:	e50b1014 	str	r1, [fp, -#20]
+a0301128:	e50b2018 	str	r2, [fp, -#24]
+a030112c:	e51b3014 	ldr	r3, [fp, -#20]
+a0301130:	e1a03103 	mov	r3, r3, lsl #2
+a0301134:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0301138:	e24bc020 	sub	ip, fp, #32	; 0x20
+a030113c:	e51b0010 	ldr	r0, [fp, -#16]
+a0301140:	e1a01003 	mov	r1, r3
+a0301144:	e1a0300c 	mov	r3, ip
+a0301148:	ebffffc6 	bl	a0301068 <address_range_to_block_range>
+a030114c:	e1a03000 	mov	r3, r0
+a0301150:	e50b3024 	str	r3, [fp, -#36]
+a0301154:	e51b3024 	ldr	r3, [fp, -#36]
+a0301158:	e3530000 	cmp	r3, #0	; 0x0
+a030115c:	aa000002 	bge	a030116c <do_flash_lock+0x5c>
+a0301160:	e51b3024 	ldr	r3, [fp, -#36]
+a0301164:	e50b3030 	str	r3, [fp, -#48]
+a0301168:	ea000058 	b	a03012d0 <do_flash_lock+0x1c0>
+a030116c:	e51b301c 	ldr	r3, [fp, -#28]
+a0301170:	e50b3028 	str	r3, [fp, -#40]
+a0301174:	e51b2028 	ldr	r2, [fp, -#40]
+a0301178:	e51b3020 	ldr	r3, [fp, -#32]
+a030117c:	e1520003 	cmp	r2, r3
+a0301180:	da000000 	ble	a0301188 <do_flash_lock+0x78>
+a0301184:	ea000012 	b	a03011d4 <do_flash_lock+0xc4>
+a0301188:	e59f0148 	ldr	r0, [pc, #328]	; a03012d8 <do_flash_lock+0x1c8>
+a030118c:	e51b2028 	ldr	r2, [fp, -#40]
+a0301190:	e3a01008 	mov	r1, #8	; 0x8
+a0301194:	e1a03002 	mov	r3, r2
+a0301198:	e1a03083 	mov	r3, r3, lsl #1
+a030119c:	e0833002 	add	r3, r3, r2
+a03011a0:	e1a03103 	mov	r3, r3, lsl #2
+a03011a4:	e0833000 	add	r3, r3, r0
+a03011a8:	e0833001 	add	r3, r3, r1
+a03011ac:	e5933000 	ldr	r3, [r3]
+a03011b0:	e3530000 	cmp	r3, #0	; 0x0
+a03011b4:	1a000002 	bne	a03011c4 <do_flash_lock+0xb4>
+a03011b8:	e3e0300c 	mvn	r3, #12	; 0xc
+a03011bc:	e50b3030 	str	r3, [fp, -#48]
+a03011c0:	ea000042 	b	a03012d0 <do_flash_lock+0x1c0>
+a03011c4:	e51b3028 	ldr	r3, [fp, -#40]
+a03011c8:	e2833001 	add	r3, r3, #1	; 0x1
+a03011cc:	e50b3028 	str	r3, [fp, -#40]
+a03011d0:	eaffffe7 	b	a0301174 <do_flash_lock+0x64>
+a03011d4:	e59f3100 	ldr	r3, [pc, #256]	; a03012dc <do_flash_lock+0x1cc>
+a03011d8:	e5933000 	ldr	r3, [r3]
+a03011dc:	e5933014 	ldr	r3, [r3, #20]
+a03011e0:	e1a0e00f 	mov	lr, pc
+a03011e4:	e1a0f003 	mov	pc, r3
+a03011e8:	e51b301c 	ldr	r3, [fp, -#28]
+a03011ec:	e50b3028 	str	r3, [fp, -#40]
+a03011f0:	e51b2028 	ldr	r2, [fp, -#40]
+a03011f4:	e51b3020 	ldr	r3, [fp, -#32]
+a03011f8:	e1520003 	cmp	r2, r3
+a03011fc:	da000000 	ble	a0301204 <do_flash_lock+0xf4>
+a0301200:	ea00002b 	b	a03012b4 <do_flash_lock+0x1a4>
+a0301204:	e59f10cc 	ldr	r1, [pc, #204]	; a03012d8 <do_flash_lock+0x1c8>
+a0301208:	e51b2028 	ldr	r2, [fp, -#40]
+a030120c:	e1a03002 	mov	r3, r2
+a0301210:	e1a03083 	mov	r3, r3, lsl #1
+a0301214:	e0833002 	add	r3, r3, r2
+a0301218:	e1a03103 	mov	r3, r3, lsl #2
+a030121c:	e0833001 	add	r3, r3, r1
+a0301220:	e5933000 	ldr	r3, [r3]
+a0301224:	e50b302c 	str	r3, [fp, -#44]
+a0301228:	e51b3018 	ldr	r3, [fp, -#24]
+a030122c:	e3530000 	cmp	r3, #0	; 0x0
+a0301230:	0a000008 	beq	a0301258 <do_flash_lock+0x148>
+a0301234:	e59f30a0 	ldr	r3, [pc, #160]	; a03012dc <do_flash_lock+0x1cc>
+a0301238:	e5933000 	ldr	r3, [r3]
+a030123c:	e5933008 	ldr	r3, [r3, #8]
+a0301240:	e51b002c 	ldr	r0, [fp, -#44]
+a0301244:	e1a0e00f 	mov	lr, pc
+a0301248:	e1a0f003 	mov	pc, r3
+a030124c:	e1a03000 	mov	r3, r0
+a0301250:	e50b3024 	str	r3, [fp, -#36]
+a0301254:	ea000007 	b	a0301278 <do_flash_lock+0x168>
+a0301258:	e59f307c 	ldr	r3, [pc, #124]	; a03012dc <do_flash_lock+0x1cc>
+a030125c:	e5933000 	ldr	r3, [r3]
+a0301260:	e593300c 	ldr	r3, [r3, #12]
+a0301264:	e51b002c 	ldr	r0, [fp, -#44]
+a0301268:	e1a0e00f 	mov	lr, pc
+a030126c:	e1a0f003 	mov	pc, r3
+a0301270:	e1a03000 	mov	r3, r0
+a0301274:	e50b3024 	str	r3, [fp, -#36]
+a0301278:	e51b3024 	ldr	r3, [fp, -#36]
+a030127c:	e3530000 	cmp	r3, #0	; 0x0
+a0301280:	aa000007 	bge	a03012a4 <do_flash_lock+0x194>
+a0301284:	e59f3050 	ldr	r3, [pc, #80]	; a03012dc <do_flash_lock+0x1cc>
+a0301288:	e5933000 	ldr	r3, [r3]
+a030128c:	e5933018 	ldr	r3, [r3, #24]
+a0301290:	e1a0e00f 	mov	lr, pc
+a0301294:	e1a0f003 	mov	pc, r3
+a0301298:	e51b3024 	ldr	r3, [fp, -#36]
+a030129c:	e50b3030 	str	r3, [fp, -#48]
+a03012a0:	ea00000a 	b	a03012d0 <do_flash_lock+0x1c0>
+a03012a4:	e51b3028 	ldr	r3, [fp, -#40]
+a03012a8:	e2833001 	add	r3, r3, #1	; 0x1
+a03012ac:	e50b3028 	str	r3, [fp, -#40]
+a03012b0:	eaffffce 	b	a03011f0 <do_flash_lock+0xe0>
+a03012b4:	e59f3020 	ldr	r3, [pc, #32]	; a03012dc <do_flash_lock+0x1cc>
+a03012b8:	e5933000 	ldr	r3, [r3]
+a03012bc:	e5933018 	ldr	r3, [r3, #24]
+a03012c0:	e1a0e00f 	mov	lr, pc
+a03012c4:	e1a0f003 	mov	pc, r3
+a03012c8:	e3a03000 	mov	r3, #0	; 0x0
+a03012cc:	e50b3030 	str	r3, [fp, -#48]
+a03012d0:	e51b0030 	ldr	r0, [fp, -#48]
+a03012d4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03012d8:	a030df80 	eorges	sp, r0, r0, lsl #31
+a03012dc:	a030fd00 	eorges	pc, r0, r0, lsl #26
+
+a03012e0 <flash_lock_region>:
+a03012e0:	e1a0c00d 	mov	ip, sp
+a03012e4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03012e8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03012ec:	e24dd008 	sub	sp, sp, #8	; 0x8
+a03012f0:	e50b0010 	str	r0, [fp, -#16]
+a03012f4:	e50b1014 	str	r1, [fp, -#20]
+a03012f8:	e51b0010 	ldr	r0, [fp, -#16]
+a03012fc:	e51b1014 	ldr	r1, [fp, -#20]
+a0301300:	e3a02001 	mov	r2, #1	; 0x1
+a0301304:	ebffff81 	bl	a0301110 <do_flash_lock>
+a0301308:	e1a03000 	mov	r3, r0
+a030130c:	e1a00003 	mov	r0, r3
+a0301310:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0301314 <flash_unlock_region>:
+a0301314:	e1a0c00d 	mov	ip, sp
+a0301318:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030131c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301320:	e24dd008 	sub	sp, sp, #8	; 0x8
+a0301324:	e50b0010 	str	r0, [fp, -#16]
+a0301328:	e50b1014 	str	r1, [fp, -#20]
+a030132c:	e51b0010 	ldr	r0, [fp, -#16]
+a0301330:	e51b1014 	ldr	r1, [fp, -#20]
+a0301334:	e3a02000 	mov	r2, #0	; 0x0
+a0301338:	ebffff74 	bl	a0301110 <do_flash_lock>
+a030133c:	e1a03000 	mov	r3, r0
+a0301340:	e1a00003 	mov	r0, r3
+a0301344:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0301348 <flash_query_region>:
+a0301348:	e1a0c00d 	mov	ip, sp
+a030134c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0301350:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301354:	e24dd024 	sub	sp, sp, #36	; 0x24
+a0301358:	e50b0010 	str	r0, [fp, -#16]
+a030135c:	e50b1014 	str	r1, [fp, -#20]
+a0301360:	e3a03000 	mov	r3, #0	; 0x0
+a0301364:	e50b3028 	str	r3, [fp, -#40]
+a0301368:	e51b3014 	ldr	r3, [fp, -#20]
+a030136c:	e1a03103 	mov	r3, r3, lsl #2
+a0301370:	e24b2018 	sub	r2, fp, #24	; 0x18
+a0301374:	e24bc01c 	sub	ip, fp, #28	; 0x1c
+a0301378:	e51b0010 	ldr	r0, [fp, -#16]
+a030137c:	e1a01003 	mov	r1, r3
+a0301380:	e1a0300c 	mov	r3, ip
+a0301384:	ebffff37 	bl	a0301068 <address_range_to_block_range>
+a0301388:	e1a03000 	mov	r3, r0
+a030138c:	e50b3020 	str	r3, [fp, -#32]
+a0301390:	e51b3020 	ldr	r3, [fp, -#32]
+a0301394:	e3530000 	cmp	r3, #0	; 0x0
+a0301398:	aa000002 	bge	a03013a8 <flash_query_region+0x60>
+a030139c:	e51b3020 	ldr	r3, [fp, -#32]
+a03013a0:	e50b3030 	str	r3, [fp, -#48]
+a03013a4:	ea000035 	b	a0301480 <flash_query_region+0x138>
+a03013a8:	e51b3018 	ldr	r3, [fp, -#24]
+a03013ac:	e50b3024 	str	r3, [fp, -#36]
+a03013b0:	e51b2024 	ldr	r2, [fp, -#36]
+a03013b4:	e51b301c 	ldr	r3, [fp, -#28]
+a03013b8:	e1520003 	cmp	r2, r3
+a03013bc:	da000000 	ble	a03013c4 <flash_query_region+0x7c>
+a03013c0:	ea00002c 	b	a0301478 <flash_query_region+0x130>
+a03013c4:	e59f10bc 	ldr	r1, [pc, #188]	; a0301488 <flash_query_region+0x140>
+a03013c8:	e51b2024 	ldr	r2, [fp, -#36]
+a03013cc:	e1a03002 	mov	r3, r2
+a03013d0:	e1a03083 	mov	r3, r3, lsl #1
+a03013d4:	e0833002 	add	r3, r3, r2
+a03013d8:	e1a03103 	mov	r3, r3, lsl #2
+a03013dc:	e0833001 	add	r3, r3, r1
+a03013e0:	e5933000 	ldr	r3, [r3]
+a03013e4:	e50b302c 	str	r3, [fp, -#44]
+a03013e8:	e59f0098 	ldr	r0, [pc, #152]	; a0301488 <flash_query_region+0x140>
+a03013ec:	e51b2024 	ldr	r2, [fp, -#36]
+a03013f0:	e3a01008 	mov	r1, #8	; 0x8
+a03013f4:	e1a03002 	mov	r3, r2
+a03013f8:	e1a03083 	mov	r3, r3, lsl #1
+a03013fc:	e0833002 	add	r3, r3, r2
+a0301400:	e1a03103 	mov	r3, r3, lsl #2
+a0301404:	e0833000 	add	r3, r3, r0
+a0301408:	e0833001 	add	r3, r3, r1
+a030140c:	e5933000 	ldr	r3, [r3]
+a0301410:	e3530000 	cmp	r3, #0	; 0x0
+a0301414:	0a000013 	beq	a0301468 <flash_query_region+0x120>
+a0301418:	e59f306c 	ldr	r3, [pc, #108]	; a030148c <flash_query_region+0x144>
+a030141c:	e5933000 	ldr	r3, [r3]
+a0301420:	e5933010 	ldr	r3, [r3, #16]
+a0301424:	e51b002c 	ldr	r0, [fp, -#44]
+a0301428:	e1a0e00f 	mov	lr, pc
+a030142c:	e1a0f003 	mov	pc, r3
+a0301430:	e1a03000 	mov	r3, r0
+a0301434:	e50b3020 	str	r3, [fp, -#32]
+a0301438:	e51b3020 	ldr	r3, [fp, -#32]
+a030143c:	e3530000 	cmp	r3, #0	; 0x0
+a0301440:	aa000002 	bge	a0301450 <flash_query_region+0x108>
+a0301444:	e51b3020 	ldr	r3, [fp, -#32]
+a0301448:	e50b3030 	str	r3, [fp, -#48]
+a030144c:	ea00000b 	b	a0301480 <flash_query_region+0x138>
+a0301450:	e51b3020 	ldr	r3, [fp, -#32]
+a0301454:	e3530000 	cmp	r3, #0	; 0x0
+a0301458:	da000002 	ble	a0301468 <flash_query_region+0x120>
+a030145c:	e51b3028 	ldr	r3, [fp, -#40]
+a0301460:	e2833001 	add	r3, r3, #1	; 0x1
+a0301464:	e50b3028 	str	r3, [fp, -#40]
+a0301468:	e51b3024 	ldr	r3, [fp, -#36]
+a030146c:	e2833001 	add	r3, r3, #1	; 0x1
+a0301470:	e50b3024 	str	r3, [fp, -#36]
+a0301474:	eaffffcd 	b	a03013b0 <flash_query_region+0x68>
+a0301478:	e51b3028 	ldr	r3, [fp, -#40]
+a030147c:	e50b3030 	str	r3, [fp, -#48]
+a0301480:	e51b0030 	ldr	r0, [fp, -#48]
+a0301484:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0301488:	a030df80 	eorges	sp, r0, r0, lsl #31
+a030148c:	a030fd00 	eorges	pc, r0, r0, lsl #26
+
+a0301490 <flash_get_first_block_address>:
+a0301490:	e1a0c00d 	mov	ip, sp
+a0301494:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0301498:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030149c:	e24dd008 	sub	sp, sp, #8	; 0x8
+a03014a0:	e50b0010 	str	r0, [fp, -#16]
+a03014a4:	e59f3034 	ldr	r3, [pc, #52]	; a03014e0 <flash_get_first_block_address+0x50>
+a03014a8:	e5933000 	ldr	r3, [r3]
+a03014ac:	e3530000 	cmp	r3, #0	; 0x0
+a03014b0:	0a000006 	beq	a03014d0 <flash_get_first_block_address+0x40>
+a03014b4:	e51b3010 	ldr	r3, [fp, -#16]
+a03014b8:	e59f2024 	ldr	r2, [pc, #36]	; a03014e4 <flash_get_first_block_address+0x54>
+a03014bc:	e5922000 	ldr	r2, [r2]
+a03014c0:	e5832000 	str	r2, [r3]
+a03014c4:	e3a03000 	mov	r3, #0	; 0x0
+a03014c8:	e50b3014 	str	r3, [fp, -#20]
+a03014cc:	ea000001 	b	a03014d8 <flash_get_first_block_address+0x48>
+a03014d0:	e3e03006 	mvn	r3, #6	; 0x6
+a03014d4:	e50b3014 	str	r3, [fp, -#20]
+a03014d8:	e51b0014 	ldr	r0, [fp, -#20]
+a03014dc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03014e0:	a030e580 	eorges	lr, r0, r0, lsl #11
+a03014e4:	a030df80 	eorges	sp, r0, r0, lsl #31
+
+a03014e8 <flash_get_next_block_address>:
+a03014e8:	e1a0c00d 	mov	ip, sp
+a03014ec:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03014f0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03014f4:	e24dd014 	sub	sp, sp, #20	; 0x14
+a03014f8:	e50b0010 	str	r0, [fp, -#16]
+a03014fc:	e50b1014 	str	r1, [fp, -#20]
+a0301500:	e51b0014 	ldr	r0, [fp, -#20]
+a0301504:	ebfffe7f 	bl	a0300f08 <find_block>
+a0301508:	e1a03000 	mov	r3, r0
+a030150c:	e50b3018 	str	r3, [fp, -#24]
+a0301510:	e51b3018 	ldr	r3, [fp, -#24]
+a0301514:	e3530000 	cmp	r3, #0	; 0x0
+a0301518:	aa000002 	bge	a0301528 <flash_get_next_block_address+0x40>
+a030151c:	e51b3018 	ldr	r3, [fp, -#24]
+a0301520:	e50b3020 	str	r3, [fp, -#32]
+a0301524:	ea000022 	b	a03015b4 <flash_get_next_block_address+0xcc>
+a0301528:	e59f108c 	ldr	r1, [pc, #140]	; a03015bc <flash_get_next_block_address+0xd4>
+a030152c:	e51b2018 	ldr	r2, [fp, -#24]
+a0301530:	e1a03002 	mov	r3, r2
+a0301534:	e1a03083 	mov	r3, r3, lsl #1
+a0301538:	e0833002 	add	r3, r3, r2
+a030153c:	e1a03103 	mov	r3, r3, lsl #2
+a0301540:	e0830001 	add	r0, r3, r1
+a0301544:	e59fc070 	ldr	ip, [pc, #112]	; a03015bc <flash_get_next_block_address+0xd4>
+a0301548:	e51b2018 	ldr	r2, [fp, -#24]
+a030154c:	e3a01004 	mov	r1, #4	; 0x4
+a0301550:	e1a03002 	mov	r3, r2
+a0301554:	e1a03083 	mov	r3, r3, lsl #1
+a0301558:	e0833002 	add	r3, r3, r2
+a030155c:	e1a03103 	mov	r3, r3, lsl #2
+a0301560:	e083300c 	add	r3, r3, ip
+a0301564:	e0833001 	add	r3, r3, r1
+a0301568:	e5902000 	ldr	r2, [r0]
+a030156c:	e5933000 	ldr	r3, [r3]
+a0301570:	e0823003 	add	r3, r2, r3
+a0301574:	e50b301c 	str	r3, [fp, -#28]
+a0301578:	e51b001c 	ldr	r0, [fp, -#28]
+a030157c:	ebfffe61 	bl	a0300f08 <find_block>
+a0301580:	e1a03000 	mov	r3, r0
+a0301584:	e50b3018 	str	r3, [fp, -#24]
+a0301588:	e51b3018 	ldr	r3, [fp, -#24]
+a030158c:	e3530000 	cmp	r3, #0	; 0x0
+a0301590:	aa000002 	bge	a03015a0 <flash_get_next_block_address+0xb8>
+a0301594:	e51b3018 	ldr	r3, [fp, -#24]
+a0301598:	e50b3020 	str	r3, [fp, -#32]
+a030159c:	ea000004 	b	a03015b4 <flash_get_next_block_address+0xcc>
+a03015a0:	e51b2010 	ldr	r2, [fp, -#16]
+a03015a4:	e51b301c 	ldr	r3, [fp, -#28]
+a03015a8:	e5823000 	str	r3, [r2]
+a03015ac:	e3a03000 	mov	r3, #0	; 0x0
+a03015b0:	e50b3020 	str	r3, [fp, -#32]
+a03015b4:	e51b0020 	ldr	r0, [fp, -#32]
+a03015b8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03015bc:	a030df80 	eorges	sp, r0, r0, lsl #31
+
+a03015c0 <parse_partition>:
+a03015c0:	e1a0c00d 	mov	ip, sp
+a03015c4:	e92dd810 	stmdb	sp!, {r4, fp, ip, lr, pc}
+a03015c8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03015cc:	e24dd014 	sub	sp, sp, #20	; 0x14
+a03015d0:	e50b0014 	str	r0, [fp, -#20]
+a03015d4:	e50b1018 	str	r1, [fp, -#24]
+a03015d8:	e50b201c 	str	r2, [fp, -#28]
+a03015dc:	e51b0014 	ldr	r0, [fp, -#20]
+a03015e0:	eb000852 	bl	a0303730 <pt_find_by_name>
+a03015e4:	e1a03000 	mov	r3, r0
+a03015e8:	e50b3020 	str	r3, [fp, -#32]
+a03015ec:	e51b3020 	ldr	r3, [fp, -#32]
+a03015f0:	e3530000 	cmp	r3, #0	; 0x0
+a03015f4:	1a000002 	bne	a0301604 <parse_partition+0x44>
+a03015f8:	e3e03000 	mvn	r3, #0	; 0x0
+a03015fc:	e50b3024 	str	r3, [fp, -#36]
+a0301600:	ea000009 	b	a030162c <parse_partition+0x6c>
+a0301604:	e51b4018 	ldr	r4, [fp, -#24]
+a0301608:	e51b0020 	ldr	r0, [fp, -#32]
+a030160c:	eb0008cd 	bl	a0303948 <pt_flash_start>
+a0301610:	e5840000 	str	r0, [r4]
+a0301614:	e51b201c 	ldr	r2, [fp, -#28]
+a0301618:	e51b3020 	ldr	r3, [fp, -#32]
+a030161c:	e593300c 	ldr	r3, [r3, #12]
+a0301620:	e5823000 	str	r3, [r2]
+a0301624:	e3a03000 	mov	r3, #0	; 0x0
+a0301628:	e50b3024 	str	r3, [fp, -#36]
+a030162c:	e51b0024 	ldr	r0, [fp, -#36]
+a0301630:	e91ba810 	ldmdb	fp, {r4, fp, sp, pc}
+
+a0301634 <Flash>:
+a0301634:	e1a0c00d 	mov	ip, sp
+a0301638:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030163c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301640:	e24dd02c 	sub	sp, sp, #44	; 0x2c
+a0301644:	e50b0010 	str	r0, [fp, -#16]
+a0301648:	e50b1014 	str	r1, [fp, -#20]
+a030164c:	e3a03000 	mov	r3, #0	; 0x0
+a0301650:	e50b3024 	str	r3, [fp, -#36]
+a0301654:	e3a03000 	mov	r3, #0	; 0x0
+a0301658:	e50b3028 	str	r3, [fp, -#40]
+a030165c:	e3a03000 	mov	r3, #0	; 0x0
+a0301660:	e50b3034 	str	r3, [fp, -#52]
+a0301664:	e51b3010 	ldr	r3, [fp, -#16]
+a0301668:	e3530001 	cmp	r3, #1	; 0x1
+a030166c:	ca000002 	bgt	a030167c <Flash+0x48>
+a0301670:	e3e03001 	mvn	r3, #1	; 0x1
+a0301674:	e50b3038 	str	r3, [fp, -#56]
+a0301678:	ea00009f 	b	a03018fc <Flash+0x2c8>
+a030167c:	e51b3010 	ldr	r3, [fp, -#16]
+a0301680:	e3530002 	cmp	r3, #2	; 0x2
+a0301684:	da000005 	ble	a03016a0 <Flash+0x6c>
+a0301688:	e3a02008 	mov	r2, #8	; 0x8
+a030168c:	e51b3014 	ldr	r3, [fp, -#20]
+a0301690:	e0823003 	add	r3, r2, r3
+a0301694:	e5933000 	ldr	r3, [r3]
+a0301698:	e50b3030 	str	r3, [fp, -#48]
+a030169c:	ea000004 	b	a03016b4 <Flash+0x80>
+a03016a0:	e3a02004 	mov	r2, #4	; 0x4
+a03016a4:	e51b3014 	ldr	r3, [fp, -#20]
+a03016a8:	e0823003 	add	r3, r2, r3
+a03016ac:	e5933000 	ldr	r3, [r3]
+a03016b0:	e50b3030 	str	r3, [fp, -#48]
+a03016b4:	e24b3020 	sub	r3, fp, #32	; 0x20
+a03016b8:	e24b2028 	sub	r2, fp, #40	; 0x28
+a03016bc:	e51b0030 	ldr	r0, [fp, -#48]
+a03016c0:	e1a01003 	mov	r1, r3
+a03016c4:	ebffffbd 	bl	a03015c0 <parse_partition>
+a03016c8:	e1a03000 	mov	r3, r0
+a03016cc:	e50b3018 	str	r3, [fp, -#24]
+a03016d0:	e51b3018 	ldr	r3, [fp, -#24]
+a03016d4:	e3530000 	cmp	r3, #0	; 0x0
+a03016d8:	aa000005 	bge	a03016f4 <Flash+0xc0>
+a03016dc:	e51b0018 	ldr	r0, [fp, -#24]
+a03016e0:	e51b1030 	ldr	r1, [fp, -#48]
+a03016e4:	eb00174e 	bl	a0307424 <printerror>
+a03016e8:	e3a03000 	mov	r3, #0	; 0x0
+a03016ec:	e50b3038 	str	r3, [fp, -#56]
+a03016f0:	ea000081 	b	a03018fc <Flash+0x2c8>
+a03016f4:	e3a02004 	mov	r2, #4	; 0x4
+a03016f8:	e51b3014 	ldr	r3, [fp, -#20]
+a03016fc:	e0823003 	add	r3, r2, r3
+a0301700:	e5930000 	ldr	r0, [r3]
+a0301704:	e59f11f8 	ldr	r1, [pc, #504]	; a0301904 <Flash+0x2d0>
+a0301708:	e3a02005 	mov	r2, #5	; 0x5
+a030170c:	eb0026f9 	bl	a030b2f8 <strncmp>
+a0301710:	e1a03000 	mov	r3, r0
+a0301714:	e3530000 	cmp	r3, #0	; 0x0
+a0301718:	1a000009 	bne	a0301744 <Flash+0x110>
+a030171c:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0301720:	e2833602 	add	r3, r3, #2097152	; 0x200000
+a0301724:	e50b301c 	str	r3, [fp, -#28]
+a0301728:	e59f31d8 	ldr	r3, [pc, #472]	; a0301908 <Flash+0x2d4>
+a030172c:	e5933048 	ldr	r3, [r3, #72]
+a0301730:	e50b3024 	str	r3, [fp, -#36]
+a0301734:	e59f31cc 	ldr	r3, [pc, #460]	; a0301908 <Flash+0x2d4>
+a0301738:	e593304c 	ldr	r3, [r3, #76]
+a030173c:	e50b3034 	str	r3, [fp, -#52]
+a0301740:	ea000044 	b	a0301858 <Flash+0x224>
+a0301744:	e3a02004 	mov	r2, #4	; 0x4
+a0301748:	e51b3014 	ldr	r3, [fp, -#20]
+a030174c:	e0823003 	add	r3, r2, r3
+a0301750:	e5930000 	ldr	r0, [r3]
+a0301754:	e59f11b0 	ldr	r1, [pc, #432]	; a030190c <Flash+0x2d8>
+a0301758:	e3a02006 	mov	r2, #6	; 0x6
+a030175c:	eb0026e5 	bl	a030b2f8 <strncmp>
+a0301760:	e1a03000 	mov	r3, r0
+a0301764:	e3530000 	cmp	r3, #0	; 0x0
+a0301768:	1a000009 	bne	a0301794 <Flash+0x160>
+a030176c:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0301770:	e2833821 	add	r3, r3, #2162688	; 0x210000
+a0301774:	e50b301c 	str	r3, [fp, -#28]
+a0301778:	e59f3188 	ldr	r3, [pc, #392]	; a0301908 <Flash+0x2d4>
+a030177c:	e5933018 	ldr	r3, [r3, #24]
+a0301780:	e50b3024 	str	r3, [fp, -#36]
+a0301784:	e59f317c 	ldr	r3, [pc, #380]	; a0301908 <Flash+0x2d4>
+a0301788:	e593301c 	ldr	r3, [r3, #28]
+a030178c:	e50b3034 	str	r3, [fp, -#52]
+a0301790:	ea000030 	b	a0301858 <Flash+0x224>
+a0301794:	e3a02004 	mov	r2, #4	; 0x4
+a0301798:	e51b3014 	ldr	r3, [fp, -#20]
+a030179c:	e0823003 	add	r3, r2, r3
+a03017a0:	e5930000 	ldr	r0, [r3]
+a03017a4:	e59f1164 	ldr	r1, [pc, #356]	; a0301910 <Flash+0x2dc>
+a03017a8:	e3a02007 	mov	r2, #7	; 0x7
+a03017ac:	eb0026d1 	bl	a030b2f8 <strncmp>
+a03017b0:	e1a03000 	mov	r3, r0
+a03017b4:	e3530000 	cmp	r3, #0	; 0x0
+a03017b8:	1a000009 	bne	a03017e4 <Flash+0x1b0>
+a03017bc:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a03017c0:	e2833902 	add	r3, r3, #32768	; 0x8000
+a03017c4:	e50b301c 	str	r3, [fp, -#28]
+a03017c8:	e59f3138 	ldr	r3, [pc, #312]	; a0301908 <Flash+0x2d4>
+a03017cc:	e5933000 	ldr	r3, [r3]
+a03017d0:	e50b3024 	str	r3, [fp, -#36]
+a03017d4:	e59f312c 	ldr	r3, [pc, #300]	; a0301908 <Flash+0x2d4>
+a03017d8:	e5933004 	ldr	r3, [r3, #4]
+a03017dc:	e50b3034 	str	r3, [fp, -#52]
+a03017e0:	ea00001c 	b	a0301858 <Flash+0x224>
+a03017e4:	e3a02004 	mov	r2, #4	; 0x4
+a03017e8:	e51b3014 	ldr	r3, [fp, -#20]
+a03017ec:	e0823003 	add	r3, r2, r3
+a03017f0:	e5930000 	ldr	r0, [r3]
+a03017f4:	e59f1118 	ldr	r1, [pc, #280]	; a0301914 <Flash+0x2e0>
+a03017f8:	e3a02008 	mov	r2, #8	; 0x8
+a03017fc:	eb0026bd 	bl	a030b2f8 <strncmp>
+a0301800:	e1a03000 	mov	r3, r0
+a0301804:	e3530000 	cmp	r3, #0	; 0x0
+a0301808:	1a000009 	bne	a0301834 <Flash+0x200>
+a030180c:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0301810:	e2833605 	add	r3, r3, #5242880	; 0x500000
+a0301814:	e50b301c 	str	r3, [fp, -#28]
+a0301818:	e59f30e8 	ldr	r3, [pc, #232]	; a0301908 <Flash+0x2d4>
+a030181c:	e5933030 	ldr	r3, [r3, #48]
+a0301820:	e50b3024 	str	r3, [fp, -#36]
+a0301824:	e59f30dc 	ldr	r3, [pc, #220]	; a0301908 <Flash+0x2d4>
+a0301828:	e5933034 	ldr	r3, [r3, #52]
+a030182c:	e50b3034 	str	r3, [fp, -#52]
+a0301830:	ea000008 	b	a0301858 <Flash+0x224>
+a0301834:	e3a03004 	mov	r3, #4	; 0x4
+a0301838:	e51b2014 	ldr	r2, [fp, -#20]
+a030183c:	e0833002 	add	r3, r3, r2
+a0301840:	e3a00001 	mov	r0, #1	; 0x1
+a0301844:	e5931000 	ldr	r1, [r3]
+a0301848:	eb0016f5 	bl	a0307424 <printerror>
+a030184c:	e3a03000 	mov	r3, #0	; 0x0
+a0301850:	e50b3038 	str	r3, [fp, -#56]
+a0301854:	ea000028 	b	a03018fc <Flash+0x2c8>
+a0301858:	e51b3034 	ldr	r3, [fp, -#52]
+a030185c:	e3530000 	cmp	r3, #0	; 0x0
+a0301860:	1a000009 	bne	a030188c <Flash+0x258>
+a0301864:	eb0016e4 	bl	a03073fc <printerrprefix>
+a0301868:	e3a03004 	mov	r3, #4	; 0x4
+a030186c:	e51b2014 	ldr	r2, [fp, -#20]
+a0301870:	e0833002 	add	r3, r3, r2
+a0301874:	e59f009c 	ldr	r0, [pc, #156]	; a0301918 <Flash+0x2e4>
+a0301878:	e5931000 	ldr	r1, [r3]
+a030187c:	eb002487 	bl	a030aaa0 <printf>
+a0301880:	e3e03000 	mvn	r3, #0	; 0x0
+a0301884:	e50b3038 	str	r3, [fp, -#56]
+a0301888:	ea00001b 	b	a03018fc <Flash+0x2c8>
+a030188c:	e51b2024 	ldr	r2, [fp, -#36]
+a0301890:	e51b3028 	ldr	r3, [fp, -#40]
+a0301894:	e1520003 	cmp	r2, r3
+a0301898:	9a000007 	bls	a03018bc <Flash+0x288>
+a030189c:	eb0016d6 	bl	a03073fc <printerrprefix>
+a03018a0:	e59f0074 	ldr	r0, [pc, #116]	; a030191c <Flash+0x2e8>
+a03018a4:	e51b1024 	ldr	r1, [fp, -#36]
+a03018a8:	e51b2028 	ldr	r2, [fp, -#40]
+a03018ac:	eb00247b 	bl	a030aaa0 <printf>
+a03018b0:	e3e03009 	mvn	r3, #9	; 0x9
+a03018b4:	e50b3038 	str	r3, [fp, -#56]
+a03018b8:	ea00000f 	b	a03018fc <Flash+0x2c8>
+a03018bc:	e51b3024 	ldr	r3, [fp, -#36]
+a03018c0:	e2833003 	add	r3, r3, #3	; 0x3
+a03018c4:	e1a03123 	mov	r3, r3, lsr #2
+a03018c8:	e50b302c 	str	r3, [fp, -#44]
+a03018cc:	e3a02004 	mov	r2, #4	; 0x4
+a03018d0:	e51b3014 	ldr	r3, [fp, -#20]
+a03018d4:	e0823003 	add	r3, r2, r3
+a03018d8:	e59f0040 	ldr	r0, [pc, #64]	; a0301920 <Flash+0x2ec>
+a03018dc:	e5931000 	ldr	r1, [r3]
+a03018e0:	eb00246e 	bl	a030aaa0 <printf>
+a03018e4:	e51b0020 	ldr	r0, [fp, -#32]
+a03018e8:	e51b101c 	ldr	r1, [fp, -#28]
+a03018ec:	e51b202c 	ldr	r2, [fp, -#44]
+a03018f0:	ebfffca5 	bl	a0300b8c <flash_write_region>
+a03018f4:	e3a03000 	mov	r3, #0	; 0x0
+a03018f8:	e50b3038 	str	r3, [fp, -#56]
+a03018fc:	e51b0038 	ldr	r0, [fp, -#56]
+a0301900:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0301904:	a030c368 	eorges	ip, r0, r8, ror #6
+a0301908:	a030fd20 	eorges	pc, r0, r0, lsr #26
+a030190c:	a030c370 	eorges	ip, r0, r0, ror r3
+a0301910:	a030c378 	eorges	ip, r0, r8, ror r3
+a0301914:	a030c380 	eorges	ip, r0, r0, lsl #7
+a0301918:	a030c388 	eorges	ip, r0, r8, lsl #7
+a030191c:	a030c39c 	mlages	r0, ip, r3, ip
+a0301920:	a030c3c8 	eorges	ip, r0, r8, asr #7
+
+a0301924 <Lock>:
+a0301924:	e1a0c00d 	mov	ip, sp
+a0301928:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030192c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301930:	e24dd018 	sub	sp, sp, #24	; 0x18
+a0301934:	e50b0010 	str	r0, [fp, -#16]
+a0301938:	e50b1014 	str	r1, [fp, -#20]
+a030193c:	e51b3010 	ldr	r3, [fp, -#16]
+a0301940:	e3530002 	cmp	r3, #2	; 0x2
+a0301944:	0a000002 	beq	a0301954 <Lock+0x30>
+a0301948:	e3e03001 	mvn	r3, #1	; 0x1
+a030194c:	e50b3024 	str	r3, [fp, -#36]
+a0301950:	ea000039 	b	a0301a3c <Lock+0x118>
+a0301954:	e59f30e8 	ldr	r3, [pc, #232]	; a0301a44 <Lock+0x120>
+a0301958:	e5933000 	ldr	r3, [r3]
+a030195c:	e5933008 	ldr	r3, [r3, #8]
+a0301960:	e3530000 	cmp	r3, #0	; 0x0
+a0301964:	1a000008 	bne	a030198c <Lock+0x68>
+a0301968:	e3a03004 	mov	r3, #4	; 0x4
+a030196c:	e51b2014 	ldr	r2, [fp, -#20]
+a0301970:	e0833002 	add	r3, r3, r2
+a0301974:	e3a00001 	mov	r0, #1	; 0x1
+a0301978:	e5931000 	ldr	r1, [r3]
+a030197c:	eb0016a8 	bl	a0307424 <printerror>
+a0301980:	e3a03000 	mov	r3, #0	; 0x0
+a0301984:	e50b3024 	str	r3, [fp, -#36]
+a0301988:	ea00002b 	b	a0301a3c <Lock+0x118>
+a030198c:	e3a02004 	mov	r2, #4	; 0x4
+a0301990:	e51b3014 	ldr	r3, [fp, -#20]
+a0301994:	e0823003 	add	r3, r2, r3
+a0301998:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a030199c:	e24bc020 	sub	ip, fp, #32	; 0x20
+a03019a0:	e5930000 	ldr	r0, [r3]
+a03019a4:	e1a01002 	mov	r1, r2
+a03019a8:	e1a0200c 	mov	r2, ip
+a03019ac:	ebffff03 	bl	a03015c0 <parse_partition>
+a03019b0:	e1a03000 	mov	r3, r0
+a03019b4:	e50b3018 	str	r3, [fp, -#24]
+a03019b8:	e51b3018 	ldr	r3, [fp, -#24]
+a03019bc:	e3530000 	cmp	r3, #0	; 0x0
+a03019c0:	aa000008 	bge	a03019e8 <Lock+0xc4>
+a03019c4:	e3a03004 	mov	r3, #4	; 0x4
+a03019c8:	e51b2014 	ldr	r2, [fp, -#20]
+a03019cc:	e0833002 	add	r3, r3, r2
+a03019d0:	e51b0018 	ldr	r0, [fp, -#24]
+a03019d4:	e5931000 	ldr	r1, [r3]
+a03019d8:	eb001691 	bl	a0307424 <printerror>
+a03019dc:	e3a03000 	mov	r3, #0	; 0x0
+a03019e0:	e50b3024 	str	r3, [fp, -#36]
+a03019e4:	ea000014 	b	a0301a3c <Lock+0x118>
+a03019e8:	e51b3020 	ldr	r3, [fp, -#32]
+a03019ec:	e1a03123 	mov	r3, r3, lsr #2
+a03019f0:	e51b001c 	ldr	r0, [fp, -#28]
+a03019f4:	e1a01003 	mov	r1, r3
+a03019f8:	ebfffe38 	bl	a03012e0 <flash_lock_region>
+a03019fc:	e1a03000 	mov	r3, r0
+a0301a00:	e50b3018 	str	r3, [fp, -#24]
+a0301a04:	e51b3018 	ldr	r3, [fp, -#24]
+a0301a08:	e3530000 	cmp	r3, #0	; 0x0
+a0301a0c:	aa000008 	bge	a0301a34 <Lock+0x110>
+a0301a10:	e3a03004 	mov	r3, #4	; 0x4
+a0301a14:	e51b2014 	ldr	r2, [fp, -#20]
+a0301a18:	e0833002 	add	r3, r3, r2
+a0301a1c:	e51b0018 	ldr	r0, [fp, -#24]
+a0301a20:	e5931000 	ldr	r1, [r3]
+a0301a24:	eb00167e 	bl	a0307424 <printerror>
+a0301a28:	e3a03000 	mov	r3, #0	; 0x0
+a0301a2c:	e50b3024 	str	r3, [fp, -#36]
+a0301a30:	ea000001 	b	a0301a3c <Lock+0x118>
+a0301a34:	e3a03000 	mov	r3, #0	; 0x0
+a0301a38:	e50b3024 	str	r3, [fp, -#36]
+a0301a3c:	e51b0024 	ldr	r0, [fp, -#36]
+a0301a40:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0301a44:	a030fd00 	eorges	pc, r0, r0, lsl #26
+
+a0301a48 <Unlock>:
+a0301a48:	e1a0c00d 	mov	ip, sp
+a0301a4c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0301a50:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301a54:	e24dd018 	sub	sp, sp, #24	; 0x18
+a0301a58:	e50b0010 	str	r0, [fp, -#16]
+a0301a5c:	e50b1014 	str	r1, [fp, -#20]
+a0301a60:	e51b3010 	ldr	r3, [fp, -#16]
+a0301a64:	e3530002 	cmp	r3, #2	; 0x2
+a0301a68:	0a000002 	beq	a0301a78 <Unlock+0x30>
+a0301a6c:	e3e03001 	mvn	r3, #1	; 0x1
+a0301a70:	e50b3024 	str	r3, [fp, -#36]
+a0301a74:	ea000039 	b	a0301b60 <Unlock+0x118>
+a0301a78:	e59f30e8 	ldr	r3, [pc, #232]	; a0301b68 <Unlock+0x120>
+a0301a7c:	e5933000 	ldr	r3, [r3]
+a0301a80:	e593300c 	ldr	r3, [r3, #12]
+a0301a84:	e3530000 	cmp	r3, #0	; 0x0
+a0301a88:	1a000008 	bne	a0301ab0 <Unlock+0x68>
+a0301a8c:	e3a03004 	mov	r3, #4	; 0x4
+a0301a90:	e51b2014 	ldr	r2, [fp, -#20]
+a0301a94:	e0833002 	add	r3, r3, r2
+a0301a98:	e3a00001 	mov	r0, #1	; 0x1
+a0301a9c:	e5931000 	ldr	r1, [r3]
+a0301aa0:	eb00165f 	bl	a0307424 <printerror>
+a0301aa4:	e3a03000 	mov	r3, #0	; 0x0
+a0301aa8:	e50b3024 	str	r3, [fp, -#36]
+a0301aac:	ea00002b 	b	a0301b60 <Unlock+0x118>
+a0301ab0:	e3a02004 	mov	r2, #4	; 0x4
+a0301ab4:	e51b3014 	ldr	r3, [fp, -#20]
+a0301ab8:	e0823003 	add	r3, r2, r3
+a0301abc:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0301ac0:	e24bc020 	sub	ip, fp, #32	; 0x20
+a0301ac4:	e5930000 	ldr	r0, [r3]
+a0301ac8:	e1a01002 	mov	r1, r2
+a0301acc:	e1a0200c 	mov	r2, ip
+a0301ad0:	ebfffeba 	bl	a03015c0 <parse_partition>
+a0301ad4:	e1a03000 	mov	r3, r0
+a0301ad8:	e50b3018 	str	r3, [fp, -#24]
+a0301adc:	e51b3018 	ldr	r3, [fp, -#24]
+a0301ae0:	e3530000 	cmp	r3, #0	; 0x0
+a0301ae4:	aa000008 	bge	a0301b0c <Unlock+0xc4>
+a0301ae8:	e3a03004 	mov	r3, #4	; 0x4
+a0301aec:	e51b2014 	ldr	r2, [fp, -#20]
+a0301af0:	e0833002 	add	r3, r3, r2
+a0301af4:	e51b0018 	ldr	r0, [fp, -#24]
+a0301af8:	e5931000 	ldr	r1, [r3]
+a0301afc:	eb001648 	bl	a0307424 <printerror>
+a0301b00:	e3a03000 	mov	r3, #0	; 0x0
+a0301b04:	e50b3024 	str	r3, [fp, -#36]
+a0301b08:	ea000014 	b	a0301b60 <Unlock+0x118>
+a0301b0c:	e51b3020 	ldr	r3, [fp, -#32]
+a0301b10:	e1a03123 	mov	r3, r3, lsr #2
+a0301b14:	e51b001c 	ldr	r0, [fp, -#28]
+a0301b18:	e1a01003 	mov	r1, r3
+a0301b1c:	ebfffdfc 	bl	a0301314 <flash_unlock_region>
+a0301b20:	e1a03000 	mov	r3, r0
+a0301b24:	e50b3018 	str	r3, [fp, -#24]
+a0301b28:	e51b3018 	ldr	r3, [fp, -#24]
+a0301b2c:	e3530000 	cmp	r3, #0	; 0x0
+a0301b30:	aa000008 	bge	a0301b58 <Unlock+0x110>
+a0301b34:	e3a03004 	mov	r3, #4	; 0x4
+a0301b38:	e51b2014 	ldr	r2, [fp, -#20]
+a0301b3c:	e0833002 	add	r3, r3, r2
+a0301b40:	e51b0018 	ldr	r0, [fp, -#24]
+a0301b44:	e5931000 	ldr	r1, [r3]
+a0301b48:	eb001635 	bl	a0307424 <printerror>
+a0301b4c:	e3a03000 	mov	r3, #0	; 0x0
+a0301b50:	e50b3024 	str	r3, [fp, -#36]
+a0301b54:	ea000001 	b	a0301b60 <Unlock+0x118>
+a0301b58:	e3a03000 	mov	r3, #0	; 0x0
+a0301b5c:	e50b3024 	str	r3, [fp, -#36]
+a0301b60:	e51b0024 	ldr	r0, [fp, -#36]
+a0301b64:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0301b68:	a030fd00 	eorges	pc, r0, r0, lsl #26
+
+a0301b6c <Erase>:
+a0301b6c:	e1a0c00d 	mov	ip, sp
+a0301b70:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0301b74:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301b78:	e24dd018 	sub	sp, sp, #24	; 0x18
+a0301b7c:	e50b0010 	str	r0, [fp, -#16]
+a0301b80:	e50b1014 	str	r1, [fp, -#20]
+a0301b84:	e51b3010 	ldr	r3, [fp, -#16]
+a0301b88:	e3530002 	cmp	r3, #2	; 0x2
+a0301b8c:	0a000002 	beq	a0301b9c <Erase+0x30>
+a0301b90:	e3e03001 	mvn	r3, #1	; 0x1
+a0301b94:	e50b3024 	str	r3, [fp, -#36]
+a0301b98:	ea000039 	b	a0301c84 <Erase+0x118>
+a0301b9c:	e59f30e8 	ldr	r3, [pc, #232]	; a0301c8c <Erase+0x120>
+a0301ba0:	e5933000 	ldr	r3, [r3]
+a0301ba4:	e5933000 	ldr	r3, [r3]
+a0301ba8:	e3530000 	cmp	r3, #0	; 0x0
+a0301bac:	1a000008 	bne	a0301bd4 <Erase+0x68>
+a0301bb0:	e3a03004 	mov	r3, #4	; 0x4
+a0301bb4:	e51b2014 	ldr	r2, [fp, -#20]
+a0301bb8:	e0833002 	add	r3, r3, r2
+a0301bbc:	e3a00001 	mov	r0, #1	; 0x1
+a0301bc0:	e5931000 	ldr	r1, [r3]
+a0301bc4:	eb001616 	bl	a0307424 <printerror>
+a0301bc8:	e3a03000 	mov	r3, #0	; 0x0
+a0301bcc:	e50b3024 	str	r3, [fp, -#36]
+a0301bd0:	ea00002b 	b	a0301c84 <Erase+0x118>
+a0301bd4:	e3a02004 	mov	r2, #4	; 0x4
+a0301bd8:	e51b3014 	ldr	r3, [fp, -#20]
+a0301bdc:	e0823003 	add	r3, r2, r3
+a0301be0:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0301be4:	e24bc020 	sub	ip, fp, #32	; 0x20
+a0301be8:	e5930000 	ldr	r0, [r3]
+a0301bec:	e1a01002 	mov	r1, r2
+a0301bf0:	e1a0200c 	mov	r2, ip
+a0301bf4:	ebfffe71 	bl	a03015c0 <parse_partition>
+a0301bf8:	e1a03000 	mov	r3, r0
+a0301bfc:	e50b3018 	str	r3, [fp, -#24]
+a0301c00:	e51b3018 	ldr	r3, [fp, -#24]
+a0301c04:	e3530000 	cmp	r3, #0	; 0x0
+a0301c08:	aa000008 	bge	a0301c30 <Erase+0xc4>
+a0301c0c:	e3a03004 	mov	r3, #4	; 0x4
+a0301c10:	e51b2014 	ldr	r2, [fp, -#20]
+a0301c14:	e0833002 	add	r3, r3, r2
+a0301c18:	e51b0018 	ldr	r0, [fp, -#24]
+a0301c1c:	e5931000 	ldr	r1, [r3]
+a0301c20:	eb0015ff 	bl	a0307424 <printerror>
+a0301c24:	e3a03000 	mov	r3, #0	; 0x0
+a0301c28:	e50b3024 	str	r3, [fp, -#36]
+a0301c2c:	ea000014 	b	a0301c84 <Erase+0x118>
+a0301c30:	e51b3020 	ldr	r3, [fp, -#32]
+a0301c34:	e1a03123 	mov	r3, r3, lsr #2
+a0301c38:	e51b001c 	ldr	r0, [fp, -#28]
+a0301c3c:	e1a01003 	mov	r1, r3
+a0301c40:	ebfffb53 	bl	a0300994 <flash_erase_region>
+a0301c44:	e1a03000 	mov	r3, r0
+a0301c48:	e50b3018 	str	r3, [fp, -#24]
+a0301c4c:	e51b3018 	ldr	r3, [fp, -#24]
+a0301c50:	e3530000 	cmp	r3, #0	; 0x0
+a0301c54:	aa000008 	bge	a0301c7c <Erase+0x110>
+a0301c58:	e3a03004 	mov	r3, #4	; 0x4
+a0301c5c:	e51b2014 	ldr	r2, [fp, -#20]
+a0301c60:	e0833002 	add	r3, r3, r2
+a0301c64:	e51b0018 	ldr	r0, [fp, -#24]
+a0301c68:	e5931000 	ldr	r1, [r3]
+a0301c6c:	eb0015ec 	bl	a0307424 <printerror>
+a0301c70:	e3a03000 	mov	r3, #0	; 0x0
+a0301c74:	e50b3024 	str	r3, [fp, -#36]
+a0301c78:	ea000001 	b	a0301c84 <Erase+0x118>
+a0301c7c:	e3a03000 	mov	r3, #0	; 0x0
+a0301c80:	e50b3024 	str	r3, [fp, -#36]
+a0301c84:	e51b0024 	ldr	r0, [fp, -#36]
+a0301c88:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0301c8c:	a030fd00 	eorges	pc, r0, r0, lsl #26
+
+a0301c90 <serial_default_init>:
+a0301c90:	e1a0c00d 	mov	ip, sp
+a0301c94:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0301c98:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301c9c:	e3a00007 	mov	r0, #7	; 0x7
+a0301ca0:	eb0023c9 	bl	a030abcc <serial_init>
+a0301ca4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0301ca8 <boot_linux>:
+a0301ca8:	e1a0c00d 	mov	ip, sp
+a0301cac:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0301cb0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301cb4:	e24dd008 	sub	sp, sp, #8	; 0x8
+a0301cb8:	e50b0010 	str	r0, [fp, -#16]
+a0301cbc:	e50b1014 	str	r1, [fp, -#20]
+a0301cc0:	eb000049 	bl	a0301dec <setup_start_tag>
+a0301cc4:	eb00006f 	bl	a0301e88 <setup_memory_tags>
+a0301cc8:	e51b0010 	ldr	r0, [fp, -#16]
+a0301ccc:	e51b1014 	ldr	r1, [fp, -#20]
+a0301cd0:	eb0000b3 	bl	a0301fa4 <setup_commandline_tag>
+a0301cd4:	e59f3064 	ldr	r3, [pc, #100]	; a0301d40 <boot_linux+0x98>
+a0301cd8:	e5933068 	ldr	r3, [r3, #104]
+a0301cdc:	e3530000 	cmp	r3, #0	; 0x0
+a0301ce0:	0a000001 	beq	a0301cec <boot_linux+0x44>
+a0301ce4:	eb000116 	bl	a0302144 <setup_initrd_tag>
+a0301ce8:	eb000152 	bl	a0302238 <setup_ramdisk_tag>
+a0301cec:	eb000175 	bl	a03022c8 <setup_end_tag>
+a0301cf0:	e59f004c 	ldr	r0, [pc, #76]	; a0301d44 <boot_linux+0x9c>
+a0301cf4:	eb002369 	bl	a030aaa0 <printf>
+a0301cf8:	eb002411 	bl	a030ad44 <serial_flush_output>
+a0301cfc:	eb0016b8 	bl	a03077e4 <exit_subsystems>
+a0301d00:	e59f0040 	ldr	r0, [pc, #64]	; a0301d48 <boot_linux+0xa0>
+a0301d04:	eb002365 	bl	a030aaa0 <printf>
+a0301d08:	e59f303c 	ldr	r3, [pc, #60]	; a0301d4c <boot_linux+0xa4>
+a0301d0c:	e5933000 	ldr	r3, [r3]
+a0301d10:	e3a00000 	mov	r0, #0	; 0x0
+a0301d14:	e3a01f65 	mov	r1, #404	; 0x194
+a0301d18:	e2811002 	add	r1, r1, #2	; 0x2
+a0301d1c:	e3a0220a 	mov	r2, #-1610612736	; 0xa0000000
+a0301d20:	e2822c01 	add	r2, r2, #256	; 0x100
+a0301d24:	e1a0e00f 	mov	lr, pc
+a0301d28:	e1a0f003 	mov	pc, r3
+a0301d2c:	e59f001c 	ldr	r0, [pc, #28]	; a0301d50 <boot_linux+0xa8>
+a0301d30:	eb00235a 	bl	a030aaa0 <printf>
+a0301d34:	e3a03000 	mov	r3, #0	; 0x0
+a0301d38:	e1a00003 	mov	r0, r3
+a0301d3c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0301d40:	a030fd20 	eorges	pc, r0, r0, lsr #26
+a0301d44:	a030c3fc 	ldrgesh	ip, [r0], -ip
+a0301d48:	a030c414 	eorges	ip, r0, r4, lsl r4
+a0301d4c:	a030d648 	eorges	sp, r0, r8, asr #12
+a0301d50:	a030c438 	eorges	ip, r0, r8, lsr r4
+
+a0301d54 <cmd_kernel>:
+a0301d54:	e1a0c00d 	mov	ip, sp
+a0301d58:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0301d5c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301d60:	e24dd014 	sub	sp, sp, #20	; 0x14
+a0301d64:	e50b0010 	str	r0, [fp, -#16]
+a0301d68:	e50b1014 	str	r1, [fp, -#20]
+a0301d6c:	e51b3010 	ldr	r3, [fp, -#16]
+a0301d70:	e3530001 	cmp	r3, #1	; 0x1
+a0301d74:	ca000000 	bgt	a0301d7c <cmd_kernel+0x28>
+a0301d78:	ea000011 	b	a0301dc4 <cmd_kernel+0x70>
+a0301d7c:	e3a02004 	mov	r2, #4	; 0x4
+a0301d80:	e51b3014 	ldr	r3, [fp, -#20]
+a0301d84:	e0823003 	add	r3, r2, r3
+a0301d88:	e24b2018 	sub	r2, fp, #24	; 0x18
+a0301d8c:	e5930000 	ldr	r0, [r3]
+a0301d90:	e1a01002 	mov	r1, r2
+a0301d94:	eb0025f5 	bl	a030b570 <strtou32>
+a0301d98:	e1a03000 	mov	r3, r0
+a0301d9c:	e50b301c 	str	r3, [fp, -#28]
+a0301da0:	e51b301c 	ldr	r3, [fp, -#28]
+a0301da4:	e3530000 	cmp	r3, #0	; 0x0
+a0301da8:	aa000002 	bge	a0301db8 <cmd_kernel+0x64>
+a0301dac:	e3e03000 	mvn	r3, #0	; 0x0
+a0301db0:	e50b3020 	str	r3, [fp, -#32]
+a0301db4:	ea000008 	b	a0301ddc <cmd_kernel+0x88>
+a0301db8:	e59f2024 	ldr	r2, [pc, #36]	; a0301de4 <cmd_kernel+0x90>
+a0301dbc:	e51b3018 	ldr	r3, [fp, -#24]
+a0301dc0:	e5823000 	str	r3, [r2]
+a0301dc4:	e59f3018 	ldr	r3, [pc, #24]	; a0301de4 <cmd_kernel+0x90>
+a0301dc8:	e59f0018 	ldr	r0, [pc, #24]	; a0301de8 <cmd_kernel+0x94>
+a0301dcc:	e5931000 	ldr	r1, [r3]
+a0301dd0:	eb002332 	bl	a030aaa0 <printf>
+a0301dd4:	e3a03000 	mov	r3, #0	; 0x0
+a0301dd8:	e50b3020 	str	r3, [fp, -#32]
+a0301ddc:	e51b0020 	ldr	r0, [fp, -#32]
+a0301de0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0301de4:	a030d648 	eorges	sp, r0, r8, asr #12
+a0301de8:	a030c474 	eorges	ip, r0, r4, ror r4
+
+a0301dec <setup_start_tag>:
+a0301dec:	e1a0c00d 	mov	ip, sp
+a0301df0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0301df4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301df8:	e59f2084 	ldr	r2, [pc, #132]	; a0301e84 <setup_start_tag+0x98>
+a0301dfc:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0301e00:	e2833c01 	add	r3, r3, #256	; 0x100
+a0301e04:	e5823000 	str	r3, [r2]
+a0301e08:	e59f3074 	ldr	r3, [pc, #116]	; a0301e84 <setup_start_tag+0x98>
+a0301e0c:	e5932000 	ldr	r2, [r3]
+a0301e10:	e3a03355 	mov	r3, #1409286145	; 0x54000001
+a0301e14:	e2833841 	add	r3, r3, #4259840	; 0x410000
+a0301e18:	e5823004 	str	r3, [r2, #4]
+a0301e1c:	e59f3060 	ldr	r3, [pc, #96]	; a0301e84 <setup_start_tag+0x98>
+a0301e20:	e5932000 	ldr	r2, [r3]
+a0301e24:	e3a03005 	mov	r3, #5	; 0x5
+a0301e28:	e5823000 	str	r3, [r2]
+a0301e2c:	e59f3050 	ldr	r3, [pc, #80]	; a0301e84 <setup_start_tag+0x98>
+a0301e30:	e5932000 	ldr	r2, [r3]
+a0301e34:	e3a03000 	mov	r3, #0	; 0x0
+a0301e38:	e5823008 	str	r3, [r2, #8]
+a0301e3c:	e59f3040 	ldr	r3, [pc, #64]	; a0301e84 <setup_start_tag+0x98>
+a0301e40:	e5932000 	ldr	r2, [r3]
+a0301e44:	e3a03000 	mov	r3, #0	; 0x0
+a0301e48:	e582300c 	str	r3, [r2, #12]
+a0301e4c:	e59f3030 	ldr	r3, [pc, #48]	; a0301e84 <setup_start_tag+0x98>
+a0301e50:	e5932000 	ldr	r2, [r3]
+a0301e54:	e3a03000 	mov	r3, #0	; 0x0
+a0301e58:	e5823010 	str	r3, [r2, #16]
+a0301e5c:	e59f0020 	ldr	r0, [pc, #32]	; a0301e84 <setup_start_tag+0x98>
+a0301e60:	e59f101c 	ldr	r1, [pc, #28]	; a0301e84 <setup_start_tag+0x98>
+a0301e64:	e59f3018 	ldr	r3, [pc, #24]	; a0301e84 <setup_start_tag+0x98>
+a0301e68:	e5933000 	ldr	r3, [r3]
+a0301e6c:	e5933000 	ldr	r3, [r3]
+a0301e70:	e1a02103 	mov	r2, r3, lsl #2
+a0301e74:	e5913000 	ldr	r3, [r1]
+a0301e78:	e0833002 	add	r3, r3, r2
+a0301e7c:	e5803000 	str	r3, [r0]
+a0301e80:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0301e84:	a030e584 	eorges	lr, r0, r4, lsl #11
+
+a0301e88 <setup_memory_tags>:
+a0301e88:	e1a0c00d 	mov	ip, sp
+a0301e8c:	e92dd810 	stmdb	sp!, {r4, fp, ip, lr, pc}
+a0301e90:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301e94:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0301e98:	e3a03000 	mov	r3, #0	; 0x0
+a0301e9c:	e50b3014 	str	r3, [fp, -#20]
+a0301ea0:	e51b3014 	ldr	r3, [fp, -#20]
+a0301ea4:	e353001f 	cmp	r3, #31	; 0x1f
+a0301ea8:	da000000 	ble	a0301eb0 <setup_memory_tags+0x28>
+a0301eac:	ea000039 	b	a0301f98 <setup_memory_tags+0x110>
+a0301eb0:	e59f00e4 	ldr	r0, [pc, #228]	; a0301f9c <setup_memory_tags+0x114>
+a0301eb4:	e51b2014 	ldr	r2, [fp, -#20]
+a0301eb8:	e3a01008 	mov	r1, #8	; 0x8
+a0301ebc:	e1a03002 	mov	r3, r2
+a0301ec0:	e1a03083 	mov	r3, r3, lsl #1
+a0301ec4:	e0833002 	add	r3, r3, r2
+a0301ec8:	e1a03103 	mov	r3, r3, lsl #2
+a0301ecc:	e0833000 	add	r3, r3, r0
+a0301ed0:	e0833001 	add	r3, r3, r1
+a0301ed4:	e5933000 	ldr	r3, [r3]
+a0301ed8:	e3530000 	cmp	r3, #0	; 0x0
+a0301edc:	0a000029 	beq	a0301f88 <setup_memory_tags+0x100>
+a0301ee0:	e59f30b8 	ldr	r3, [pc, #184]	; a0301fa0 <setup_memory_tags+0x118>
+a0301ee4:	e5932000 	ldr	r2, [r3]
+a0301ee8:	e3a03395 	mov	r3, #1409286146	; 0x54000002
+a0301eec:	e2833841 	add	r3, r3, #4259840	; 0x410000
+a0301ef0:	e5823004 	str	r3, [r2, #4]
+a0301ef4:	e59f30a4 	ldr	r3, [pc, #164]	; a0301fa0 <setup_memory_tags+0x118>
+a0301ef8:	e5932000 	ldr	r2, [r3]
+a0301efc:	e3a03004 	mov	r3, #4	; 0x4
+a0301f00:	e5823000 	str	r3, [r2]
+a0301f04:	e59f3094 	ldr	r3, [pc, #148]	; a0301fa0 <setup_memory_tags+0x118>
+a0301f08:	e5930000 	ldr	r0, [r3]
+a0301f0c:	e59f1088 	ldr	r1, [pc, #136]	; a0301f9c <setup_memory_tags+0x114>
+a0301f10:	e51b2014 	ldr	r2, [fp, -#20]
+a0301f14:	e1a03002 	mov	r3, r2
+a0301f18:	e1a03083 	mov	r3, r3, lsl #1
+a0301f1c:	e0833002 	add	r3, r3, r2
+a0301f20:	e1a03103 	mov	r3, r3, lsl #2
+a0301f24:	e0833001 	add	r3, r3, r1
+a0301f28:	e5933000 	ldr	r3, [r3]
+a0301f2c:	e580300c 	str	r3, [r0, #12]
+a0301f30:	e59f3068 	ldr	r3, [pc, #104]	; a0301fa0 <setup_memory_tags+0x118>
+a0301f34:	e5934000 	ldr	r4, [r3]
+a0301f38:	e59f005c 	ldr	r0, [pc, #92]	; a0301f9c <setup_memory_tags+0x114>
+a0301f3c:	e51b2014 	ldr	r2, [fp, -#20]
+a0301f40:	e3a01004 	mov	r1, #4	; 0x4
+a0301f44:	e1a03002 	mov	r3, r2
+a0301f48:	e1a03083 	mov	r3, r3, lsl #1
+a0301f4c:	e0833002 	add	r3, r3, r2
+a0301f50:	e1a03103 	mov	r3, r3, lsl #2
+a0301f54:	e0833000 	add	r3, r3, r0
+a0301f58:	e0833001 	add	r3, r3, r1
+a0301f5c:	e5933000 	ldr	r3, [r3]
+a0301f60:	e5843008 	str	r3, [r4, #8]
+a0301f64:	e59f0034 	ldr	r0, [pc, #52]	; a0301fa0 <setup_memory_tags+0x118>
+a0301f68:	e59f1030 	ldr	r1, [pc, #48]	; a0301fa0 <setup_memory_tags+0x118>
+a0301f6c:	e59f302c 	ldr	r3, [pc, #44]	; a0301fa0 <setup_memory_tags+0x118>
+a0301f70:	e5933000 	ldr	r3, [r3]
+a0301f74:	e5933000 	ldr	r3, [r3]
+a0301f78:	e1a02103 	mov	r2, r3, lsl #2
+a0301f7c:	e5913000 	ldr	r3, [r1]
+a0301f80:	e0833002 	add	r3, r3, r2
+a0301f84:	e5803000 	str	r3, [r0]
+a0301f88:	e51b3014 	ldr	r3, [fp, -#20]
+a0301f8c:	e2833001 	add	r3, r3, #1	; 0x1
+a0301f90:	e50b3014 	str	r3, [fp, -#20]
+a0301f94:	eaffffc1 	b	a0301ea0 <setup_memory_tags+0x18>
+a0301f98:	e91ba810 	ldmdb	fp, {r4, fp, sp, pc}
+a0301f9c:	a03101a0 	eorges	r0, r1, r0, lsr #3
+a0301fa0:	a030e584 	eorges	lr, r0, r4, lsl #11
+
+a0301fa4 <setup_commandline_tag>:
+a0301fa4:	e1a0c00d 	mov	ip, sp
+a0301fa8:	e92dd810 	stmdb	sp!, {r4, fp, ip, lr, pc}
+a0301fac:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0301fb0:	e24dd010 	sub	sp, sp, #16	; 0x10
+a0301fb4:	e50b0014 	str	r0, [fp, -#20]
+a0301fb8:	e50b1018 	str	r1, [fp, -#24]
+a0301fbc:	e59f3174 	ldr	r3, [pc, #372]	; a0302138 <setup_commandline_tag+0x194>
+a0301fc0:	e5932000 	ldr	r2, [r3]
+a0301fc4:	e3a03000 	mov	r3, #0	; 0x0
+a0301fc8:	e5c23008 	strb	r3, [r2, #8]
+a0301fcc:	e59f3168 	ldr	r3, [pc, #360]	; a030213c <setup_commandline_tag+0x198>
+a0301fd0:	e5d33070 	ldrb	r3, [r3, #112]
+a0301fd4:	e3530000 	cmp	r3, #0	; 0x0
+a0301fd8:	0a000006 	beq	a0301ff8 <setup_commandline_tag+0x54>
+a0301fdc:	e59f3154 	ldr	r3, [pc, #340]	; a0302138 <setup_commandline_tag+0x194>
+a0301fe0:	e5933000 	ldr	r3, [r3]
+a0301fe4:	e2833008 	add	r3, r3, #8	; 0x8
+a0301fe8:	e1a00003 	mov	r0, r3
+a0301fec:	e59f114c 	ldr	r1, [pc, #332]	; a0302140 <setup_commandline_tag+0x19c>
+a0301ff0:	e3a02b01 	mov	r2, #1024	; 0x400
+a0301ff4:	eb002514 	bl	a030b44c <strlcpy>
+a0301ff8:	e51b3014 	ldr	r3, [fp, -#20]
+a0301ffc:	e3530001 	cmp	r3, #1	; 0x1
+a0302000:	da000029 	ble	a03020ac <setup_commandline_tag+0x108>
+a0302004:	e59f312c 	ldr	r3, [pc, #300]	; a0302138 <setup_commandline_tag+0x194>
+a0302008:	e5933000 	ldr	r3, [r3]
+a030200c:	e2833008 	add	r3, r3, #8	; 0x8
+a0302010:	e50b301c 	str	r3, [fp, -#28]
+a0302014:	e3a03001 	mov	r3, #1	; 0x1
+a0302018:	e50b3020 	str	r3, [fp, -#32]
+a030201c:	e51b2020 	ldr	r2, [fp, -#32]
+a0302020:	e51b3014 	ldr	r3, [fp, -#20]
+a0302024:	e1520003 	cmp	r2, r3
+a0302028:	ba000000 	blt	a0302030 <setup_commandline_tag+0x8c>
+a030202c:	ea000018 	b	a0302094 <setup_commandline_tag+0xf0>
+a0302030:	e51b3020 	ldr	r3, [fp, -#32]
+a0302034:	e1a02103 	mov	r2, r3, lsl #2
+a0302038:	e51b3018 	ldr	r3, [fp, -#24]
+a030203c:	e0823003 	add	r3, r2, r3
+a0302040:	e51b001c 	ldr	r0, [fp, -#28]
+a0302044:	e5931000 	ldr	r1, [r3]
+a0302048:	e3a02b01 	mov	r2, #1024	; 0x400
+a030204c:	eb0024fe 	bl	a030b44c <strlcpy>
+a0302050:	e51b001c 	ldr	r0, [fp, -#28]
+a0302054:	eb002491 	bl	a030b2a0 <strlen>
+a0302058:	e1a02000 	mov	r2, r0
+a030205c:	e51b301c 	ldr	r3, [fp, -#28]
+a0302060:	e0833002 	add	r3, r3, r2
+a0302064:	e50b301c 	str	r3, [fp, -#28]
+a0302068:	e24b001c 	sub	r0, fp, #28	; 0x1c
+a030206c:	e5902000 	ldr	r2, [r0]
+a0302070:	e1a01002 	mov	r1, r2
+a0302074:	e3a03020 	mov	r3, #32	; 0x20
+a0302078:	e5c13000 	strb	r3, [r1]
+a030207c:	e2822001 	add	r2, r2, #1	; 0x1
+a0302080:	e5802000 	str	r2, [r0]
+a0302084:	e51b3020 	ldr	r3, [fp, -#32]
+a0302088:	e2833001 	add	r3, r3, #1	; 0x1
+a030208c:	e50b3020 	str	r3, [fp, -#32]
+a0302090:	eaffffe1 	b	a030201c <setup_commandline_tag+0x78>
+a0302094:	e51b301c 	ldr	r3, [fp, -#28]
+a0302098:	e2433001 	sub	r3, r3, #1	; 0x1
+a030209c:	e50b301c 	str	r3, [fp, -#28]
+a03020a0:	e51b201c 	ldr	r2, [fp, -#28]
+a03020a4:	e3a03000 	mov	r3, #0	; 0x0
+a03020a8:	e5c23000 	strb	r3, [r2]
+a03020ac:	e59f3084 	ldr	r3, [pc, #132]	; a0302138 <setup_commandline_tag+0x194>
+a03020b0:	e5933000 	ldr	r3, [r3]
+a03020b4:	e2833008 	add	r3, r3, #8	; 0x8
+a03020b8:	e1a00003 	mov	r0, r3
+a03020bc:	eb002477 	bl	a030b2a0 <strlen>
+a03020c0:	e1a03000 	mov	r3, r0
+a03020c4:	e3530000 	cmp	r3, #0	; 0x0
+a03020c8:	da000019 	ble	a0302134 <setup_commandline_tag+0x190>
+a03020cc:	e59f3064 	ldr	r3, [pc, #100]	; a0302138 <setup_commandline_tag+0x194>
+a03020d0:	e5932000 	ldr	r2, [r3]
+a03020d4:	e3a03315 	mov	r3, #1409286144	; 0x54000000
+a03020d8:	e2833841 	add	r3, r3, #4259840	; 0x410000
+a03020dc:	e2833009 	add	r3, r3, #9	; 0x9
+a03020e0:	e5823004 	str	r3, [r2, #4]
+a03020e4:	e59f304c 	ldr	r3, [pc, #76]	; a0302138 <setup_commandline_tag+0x194>
+a03020e8:	e5934000 	ldr	r4, [r3]
+a03020ec:	e59f3044 	ldr	r3, [pc, #68]	; a0302138 <setup_commandline_tag+0x194>
+a03020f0:	e5933000 	ldr	r3, [r3]
+a03020f4:	e2833008 	add	r3, r3, #8	; 0x8
+a03020f8:	e1a00003 	mov	r0, r3
+a03020fc:	eb002467 	bl	a030b2a0 <strlen>
+a0302100:	e1a03000 	mov	r3, r0
+a0302104:	e283300d 	add	r3, r3, #13	; 0xd
+a0302108:	e1a03123 	mov	r3, r3, lsr #2
+a030210c:	e5843000 	str	r3, [r4]
+a0302110:	e59f0020 	ldr	r0, [pc, #32]	; a0302138 <setup_commandline_tag+0x194>
+a0302114:	e59f101c 	ldr	r1, [pc, #28]	; a0302138 <setup_commandline_tag+0x194>
+a0302118:	e59f3018 	ldr	r3, [pc, #24]	; a0302138 <setup_commandline_tag+0x194>
+a030211c:	e5933000 	ldr	r3, [r3]
+a0302120:	e5933000 	ldr	r3, [r3]
+a0302124:	e1a02103 	mov	r2, r3, lsl #2
+a0302128:	e5913000 	ldr	r3, [r1]
+a030212c:	e0833002 	add	r3, r3, r2
+a0302130:	e5803000 	str	r3, [r0]
+a0302134:	e91ba810 	ldmdb	fp, {r4, fp, sp, pc}
+a0302138:	a030e584 	eorges	lr, r0, r4, lsl #11
+a030213c:	a030fd20 	eorges	pc, r0, r0, lsr #26
+a0302140:	a030fd90 	mlages	r0, r0, sp, pc
+
+a0302144 <setup_initrd_tag>:
+a0302144:	e1a0c00d 	mov	ip, sp
+a0302148:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030214c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302150:	e59f30dc 	ldr	r3, [pc, #220]	; a0302234 <setup_initrd_tag+0xf0>
+a0302154:	e5932000 	ldr	r2, [r3]
+a0302158:	e3a03315 	mov	r3, #1409286144	; 0x54000000
+a030215c:	e2833841 	add	r3, r3, #4259840	; 0x410000
+a0302160:	e2833005 	add	r3, r3, #5	; 0x5
+a0302164:	e5823004 	str	r3, [r2, #4]
+a0302168:	e59f30c4 	ldr	r3, [pc, #196]	; a0302234 <setup_initrd_tag+0xf0>
+a030216c:	e5932000 	ldr	r2, [r3]
+a0302170:	e3a03004 	mov	r3, #4	; 0x4
+a0302174:	e5823000 	str	r3, [r2]
+a0302178:	e59f30b4 	ldr	r3, [pc, #180]	; a0302234 <setup_initrd_tag+0xf0>
+a030217c:	e5932000 	ldr	r2, [r3]
+a0302180:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0302184:	e2833605 	add	r3, r3, #5242880	; 0x500000
+a0302188:	e5823008 	str	r3, [r2, #8]
+a030218c:	e59f30a0 	ldr	r3, [pc, #160]	; a0302234 <setup_initrd_tag+0xf0>
+a0302190:	e5932000 	ldr	r2, [r3]
+a0302194:	e3a03501 	mov	r3, #4194304	; 0x400000
+a0302198:	e582300c 	str	r3, [r2, #12]
+a030219c:	e59f0090 	ldr	r0, [pc, #144]	; a0302234 <setup_initrd_tag+0xf0>
+a03021a0:	e59f108c 	ldr	r1, [pc, #140]	; a0302234 <setup_initrd_tag+0xf0>
+a03021a4:	e59f3088 	ldr	r3, [pc, #136]	; a0302234 <setup_initrd_tag+0xf0>
+a03021a8:	e5933000 	ldr	r3, [r3]
+a03021ac:	e5933000 	ldr	r3, [r3]
+a03021b0:	e1a02103 	mov	r2, r3, lsl #2
+a03021b4:	e5913000 	ldr	r3, [r1]
+a03021b8:	e0833002 	add	r3, r3, r2
+a03021bc:	e5803000 	str	r3, [r0]
+a03021c0:	e59f306c 	ldr	r3, [pc, #108]	; a0302234 <setup_initrd_tag+0xf0>
+a03021c4:	e5932000 	ldr	r2, [r3]
+a03021c8:	e3a03315 	mov	r3, #1409286144	; 0x54000000
+a03021cc:	e2833842 	add	r3, r3, #4325376	; 0x420000
+a03021d0:	e2833005 	add	r3, r3, #5	; 0x5
+a03021d4:	e5823004 	str	r3, [r2, #4]
+a03021d8:	e59f3054 	ldr	r3, [pc, #84]	; a0302234 <setup_initrd_tag+0xf0>
+a03021dc:	e5932000 	ldr	r2, [r3]
+a03021e0:	e3a03004 	mov	r3, #4	; 0x4
+a03021e4:	e5823000 	str	r3, [r2]
+a03021e8:	e59f3044 	ldr	r3, [pc, #68]	; a0302234 <setup_initrd_tag+0xf0>
+a03021ec:	e5932000 	ldr	r2, [r3]
+a03021f0:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a03021f4:	e2833605 	add	r3, r3, #5242880	; 0x500000
+a03021f8:	e5823008 	str	r3, [r2, #8]
+a03021fc:	e59f3030 	ldr	r3, [pc, #48]	; a0302234 <setup_initrd_tag+0xf0>
+a0302200:	e5932000 	ldr	r2, [r3]
+a0302204:	e3a03501 	mov	r3, #4194304	; 0x400000
+a0302208:	e582300c 	str	r3, [r2, #12]
+a030220c:	e59f0020 	ldr	r0, [pc, #32]	; a0302234 <setup_initrd_tag+0xf0>
+a0302210:	e59f101c 	ldr	r1, [pc, #28]	; a0302234 <setup_initrd_tag+0xf0>
+a0302214:	e59f3018 	ldr	r3, [pc, #24]	; a0302234 <setup_initrd_tag+0xf0>
+a0302218:	e5933000 	ldr	r3, [r3]
+a030221c:	e5933000 	ldr	r3, [r3]
+a0302220:	e1a02103 	mov	r2, r3, lsl #2
+a0302224:	e5913000 	ldr	r3, [r1]
+a0302228:	e0833002 	add	r3, r3, r2
+a030222c:	e5803000 	str	r3, [r0]
+a0302230:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302234:	a030e584 	eorges	lr, r0, r4, lsl #11
+
+a0302238 <setup_ramdisk_tag>:
+a0302238:	e1a0c00d 	mov	ip, sp
+a030223c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302240:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302244:	e59f3078 	ldr	r3, [pc, #120]	; a03022c4 <setup_ramdisk_tag+0x8c>
+a0302248:	e5932000 	ldr	r2, [r3]
+a030224c:	e3a03315 	mov	r3, #1409286144	; 0x54000000
+a0302250:	e2833841 	add	r3, r3, #4259840	; 0x410000
+a0302254:	e2833004 	add	r3, r3, #4	; 0x4
+a0302258:	e5823004 	str	r3, [r2, #4]
+a030225c:	e59f3060 	ldr	r3, [pc, #96]	; a03022c4 <setup_ramdisk_tag+0x8c>
+a0302260:	e5932000 	ldr	r2, [r3]
+a0302264:	e3a03005 	mov	r3, #5	; 0x5
+a0302268:	e5823000 	str	r3, [r2]
+a030226c:	e59f3050 	ldr	r3, [pc, #80]	; a03022c4 <setup_ramdisk_tag+0x8c>
+a0302270:	e5932000 	ldr	r2, [r3]
+a0302274:	e3a03000 	mov	r3, #0	; 0x0
+a0302278:	e5823010 	str	r3, [r2, #16]
+a030227c:	e59f3040 	ldr	r3, [pc, #64]	; a03022c4 <setup_ramdisk_tag+0x8c>
+a0302280:	e5932000 	ldr	r2, [r3]
+a0302284:	e3a03a02 	mov	r3, #8192	; 0x2000
+a0302288:	e582300c 	str	r3, [r2, #12]
+a030228c:	e59f3030 	ldr	r3, [pc, #48]	; a03022c4 <setup_ramdisk_tag+0x8c>
+a0302290:	e5932000 	ldr	r2, [r3]
+a0302294:	e3a03001 	mov	r3, #1	; 0x1
+a0302298:	e5823008 	str	r3, [r2, #8]
+a030229c:	e59f0020 	ldr	r0, [pc, #32]	; a03022c4 <setup_ramdisk_tag+0x8c>
+a03022a0:	e59f101c 	ldr	r1, [pc, #28]	; a03022c4 <setup_ramdisk_tag+0x8c>
+a03022a4:	e59f3018 	ldr	r3, [pc, #24]	; a03022c4 <setup_ramdisk_tag+0x8c>
+a03022a8:	e5933000 	ldr	r3, [r3]
+a03022ac:	e5933000 	ldr	r3, [r3]
+a03022b0:	e1a02103 	mov	r2, r3, lsl #2
+a03022b4:	e5913000 	ldr	r3, [r1]
+a03022b8:	e0833002 	add	r3, r3, r2
+a03022bc:	e5803000 	str	r3, [r0]
+a03022c0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03022c4:	a030e584 	eorges	lr, r0, r4, lsl #11
+
+a03022c8 <setup_end_tag>:
+a03022c8:	e1a0c00d 	mov	ip, sp
+a03022cc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03022d0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03022d4:	e59f301c 	ldr	r3, [pc, #28]	; a03022f8 <setup_end_tag+0x30>
+a03022d8:	e5932000 	ldr	r2, [r3]
+a03022dc:	e3a03000 	mov	r3, #0	; 0x0
+a03022e0:	e5823004 	str	r3, [r2, #4]
+a03022e4:	e59f300c 	ldr	r3, [pc, #12]	; a03022f8 <setup_end_tag+0x30>
+a03022e8:	e5932000 	ldr	r2, [r3]
+a03022ec:	e3a03000 	mov	r3, #0	; 0x0
+a03022f0:	e5823000 	str	r3, [r2]
+a03022f4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03022f8:	a030e584 	eorges	lr, r0, r4, lsl #11
+
+a03022fc <main>:
+a03022fc:	e1a0c00d 	mov	ip, sp
+a0302300:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302304:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302308:	e24ddf45 	sub	sp, sp, #276	; 0x114
+a030230c:	e3a03000 	mov	r3, #0	; 0x0
+a0302310:	e50b3010 	str	r3, [fp, -#16]
+a0302314:	e3a03000 	mov	r3, #0	; 0x0
+a0302318:	e50b3114 	str	r3, [fp, -#276]
+a030231c:	e59f2278 	ldr	r2, [pc, #632]	; a030259c <l5+0x1fc>
+a0302320:	e3a03000 	mov	r3, #0	; 0x0
+a0302324:	e582301c 	str	r3, [r2, #28]
+a0302328:	e59f226c 	ldr	r2, [pc, #620]	; a030259c <l5+0x1fc>
+a030232c:	e3a03000 	mov	r3, #0	; 0x0
+a0302330:	e5823004 	str	r3, [r2, #4]
+a0302334:	e59f2260 	ldr	r2, [pc, #608]	; a030259c <l5+0x1fc>
+a0302338:	e3a03000 	mov	r3, #0	; 0x0
+a030233c:	e5823034 	str	r3, [r2, #52]
+a0302340:	e59f2254 	ldr	r2, [pc, #596]	; a030259c <l5+0x1fc>
+a0302344:	e3a03007 	mov	r3, #7	; 0x7
+a0302348:	e5823060 	str	r3, [r2, #96]
+a030234c:	e59f2248 	ldr	r2, [pc, #584]	; a030259c <l5+0x1fc>
+a0302350:	e3a03007 	mov	r3, #7	; 0x7
+a0302354:	e5823064 	str	r3, [r2, #100]
+a0302358:	e59f223c 	ldr	r2, [pc, #572]	; a030259c <l5+0x1fc>
+a030235c:	e3a03000 	mov	r3, #0	; 0x0
+a0302360:	e5823068 	str	r3, [r2, #104]
+a0302364:	e59f2230 	ldr	r2, [pc, #560]	; a030259c <l5+0x1fc>
+a0302368:	e3a03000 	mov	r3, #0	; 0x0
+a030236c:	e5c23070 	strb	r3, [r2, #112]
+a0302370:	e59f2224 	ldr	r2, [pc, #548]	; a030259c <l5+0x1fc>
+a0302374:	e3a0300a 	mov	r3, #10	; 0xa
+a0302378:	e582306c 	str	r3, [r2, #108]
+a030237c:	eb001501 	bl	a0307788 <init_subsystems>
+a0302380:	eb000112 	bl	a03027d0 <find_parameters>
+a0302384:	e1a03000 	mov	r3, r0
+a0302388:	e50b3118 	str	r3, [fp, -#280]
+a030238c:	e59f3208 	ldr	r3, [pc, #520]	; a030259c <l5+0x1fc>
+a0302390:	e5930064 	ldr	r0, [r3, #100]
+a0302394:	eb00220c 	bl	a030abcc <serial_init>
+a0302398:	e59f0234 	ldr	r0, [pc, #564]	; a03025d4 <l5+0x234>
+a030239c:	e3a0204b 	mov	r2, #75	; 0x4b
+
+a03023a0 <l5>:
+a03023a0:	e5901014 	ldr	r1, [r0, #20]
+a03023a4:	e2111020 	ands	r1, r1, #32	; 0x20
+a03023a8:	0afffffc 	beq	a03023a0 <l5>
+a03023ac:	e5c02000 	strb	r2, [r0]
+a03023b0:	e51b3118 	ldr	r3, [fp, -#280]
+a03023b4:	e3530000 	cmp	r3, #0	; 0x0
+a03023b8:	0a000003 	beq	a03023cc <l5+0x2c>
+a03023bc:	e24b3f45 	sub	r3, fp, #276	; 0x114
+a03023c0:	e51b0118 	ldr	r0, [fp, -#280]
+a03023c4:	e1a01003 	mov	r1, r3
+a03023c8:	eb000251 	bl	a0302d14 <parse_ptag>
+a03023cc:	e59f01cc 	ldr	r0, [pc, #460]	; a03025a0 <l5+0x200>
+a03023d0:	eb0021b2 	bl	a030aaa0 <printf>
+a03023d4:	e59f31c8 	ldr	r3, [pc, #456]	; a03025a4 <l5+0x204>
+a03023d8:	e59f01c8 	ldr	r0, [pc, #456]	; a03025a8 <l5+0x208>
+a03023dc:	e5931000 	ldr	r1, [r3]
+a03023e0:	eb0021ae 	bl	a030aaa0 <printf>
+a03023e4:	e59f01c0 	ldr	r0, [pc, #448]	; a03025ac <l5+0x20c>
+a03023e8:	eb0021ac 	bl	a030aaa0 <printf>
+a03023ec:	e59f01bc 	ldr	r0, [pc, #444]	; a03025b0 <l5+0x210>
+a03023f0:	eb0021aa 	bl	a030aaa0 <printf>
+a03023f4:	e59f01b8 	ldr	r0, [pc, #440]	; a03025b4 <l5+0x214>
+a03023f8:	eb0021a8 	bl	a030aaa0 <printf>
+a03023fc:	eb0000ef 	bl	a03027c0 <print_elf_sections>
+a0302400:	e51b3118 	ldr	r3, [fp, -#280]
+a0302404:	e3530000 	cmp	r3, #0	; 0x0
+a0302408:	0a000003 	beq	a030241c <l5+0x7c>
+a030240c:	e24b3f45 	sub	r3, fp, #276	; 0x114
+a0302410:	e51b0118 	ldr	r0, [fp, -#280]
+a0302414:	e1a01003 	mov	r1, r3
+a0302418:	eb000268 	bl	a0302dc0 <parse_ptags>
+a030241c:	e59f0194 	ldr	r0, [pc, #404]	; a03025b8 <l5+0x218>
+a0302420:	eb001266 	bl	a0306dc0 <do_reload>
+a0302424:	e59f0190 	ldr	r0, [pc, #400]	; a03025bc <l5+0x21c>
+a0302428:	eb001264 	bl	a0306dc0 <do_reload>
+a030242c:	e59f3168 	ldr	r3, [pc, #360]	; a030259c <l5+0x1fc>
+a0302430:	e5933068 	ldr	r3, [r3, #104]
+a0302434:	e3530000 	cmp	r3, #0	; 0x0
+a0302438:	0a000001 	beq	a0302444 <l5+0xa4>
+a030243c:	e59f017c 	ldr	r0, [pc, #380]	; a03025c0 <l5+0x220>
+a0302440:	eb00125e 	bl	a0306dc0 <do_reload>
+a0302444:	e59f3150 	ldr	r3, [pc, #336]	; a030259c <l5+0x1fc>
+a0302448:	e593306c 	ldr	r3, [r3, #108]
+a030244c:	e3730001 	cmn	r3, #1	; 0x1
+a0302450:	da000038 	ble	a0302538 <l5+0x198>
+a0302454:	e3a03000 	mov	r3, #0	; 0x0
+a0302458:	e50b3120 	str	r3, [fp, -#288]
+a030245c:	e59f3138 	ldr	r3, [pc, #312]	; a030259c <l5+0x1fc>
+a0302460:	e59f015c 	ldr	r0, [pc, #348]	; a03025c4 <l5+0x224>
+a0302464:	e593106c 	ldr	r1, [r3, #108]
+a0302468:	eb00218c 	bl	a030aaa0 <printf>
+a030246c:	e59f3128 	ldr	r3, [pc, #296]	; a030259c <l5+0x1fc>
+a0302470:	e593306c 	ldr	r3, [r3, #108]
+a0302474:	e3530000 	cmp	r3, #0	; 0x0
+a0302478:	1a000007 	bne	a030249c <l5+0xfc>
+a030247c:	e24b3e11 	sub	r3, fp, #272	; 0x110
+a0302480:	e1a00003 	mov	r0, r3
+a0302484:	e3a01001 	mov	r1, #1	; 0x1
+a0302488:	e3a02000 	mov	r2, #0	; 0x0
+a030248c:	eb00233e 	bl	a030b18c <SerialInputBlock>
+a0302490:	e1a03000 	mov	r3, r0
+a0302494:	e50b3120 	str	r3, [fp, -#288]
+a0302498:	ea000018 	b	a0302500 <l5+0x160>
+a030249c:	e3a03000 	mov	r3, #0	; 0x0
+a03024a0:	e50b311c 	str	r3, [fp, -#284]
+a03024a4:	e59f30f0 	ldr	r3, [pc, #240]	; a030259c <l5+0x1fc>
+a03024a8:	e51b211c 	ldr	r2, [fp, -#284]
+a03024ac:	e593306c 	ldr	r3, [r3, #108]
+a03024b0:	e1520003 	cmp	r2, r3
+a03024b4:	ba000000 	blt	a03024bc <l5+0x11c>
+a03024b8:	ea000010 	b	a0302500 <l5+0x160>
+a03024bc:	e3a0002e 	mov	r0, #46	; 0x2e
+a03024c0:	eb0021dc 	bl	a030ac38 <serial_write>
+a03024c4:	e24b3e11 	sub	r3, fp, #272	; 0x110
+a03024c8:	e1a00003 	mov	r0, r3
+a03024cc:	e3a01001 	mov	r1, #1	; 0x1
+a03024d0:	e3a02001 	mov	r2, #1	; 0x1
+a03024d4:	eb00232c 	bl	a030b18c <SerialInputBlock>
+a03024d8:	e1a03000 	mov	r3, r0
+a03024dc:	e50b3120 	str	r3, [fp, -#288]
+a03024e0:	e51b3120 	ldr	r3, [fp, -#288]
+a03024e4:	e3530000 	cmp	r3, #0	; 0x0
+a03024e8:	da000000 	ble	a03024f0 <l5+0x150>
+a03024ec:	ea000003 	b	a0302500 <l5+0x160>
+a03024f0:	e51b311c 	ldr	r3, [fp, -#284]
+a03024f4:	e2833001 	add	r3, r3, #1	; 0x1
+a03024f8:	e50b311c 	str	r3, [fp, -#284]
+a03024fc:	eaffffe8 	b	a03024a4 <l5+0x104>
+a0302500:	e51b3120 	ldr	r3, [fp, -#288]
+a0302504:	e3530000 	cmp	r3, #0	; 0x0
+a0302508:	1a000006 	bne	a0302528 <l5+0x188>
+a030250c:	e3a034bf 	mov	r3, #-1090519040	; 0xbf000000
+a0302510:	e1a03b43 	mov	r3, r3, asr #22
+a0302514:	e3a02000 	mov	r2, #0	; 0x0
+a0302518:	e24b100c 	sub	r1, fp, #12	; 0xc
+a030251c:	e7c12003 	strb	r2, [r1, r3]
+a0302520:	e59f00a0 	ldr	r0, [pc, #160]	; a03025c8 <l5+0x228>
+a0302524:	eb00105b 	bl	a0306698 <parse_command>
+a0302528:	e59f009c 	ldr	r0, [pc, #156]	; a03025cc <l5+0x22c>
+a030252c:	eb00215b 	bl	a030aaa0 <printf>
+a0302530:	e59f0098 	ldr	r0, [pc, #152]	; a03025d0 <l5+0x230>
+a0302534:	eb002159 	bl	a030aaa0 <printf>
+a0302538:	e1a00000 	nop			(mov r0,r0)
+a030253c:	e3a00000 	mov	r0, #0	; 0x0
+a0302540:	eb0010f2 	bl	a0306910 <DisplayPrompt>
+a0302544:	e24b3e11 	sub	r3, fp, #272	; 0x110
+a0302548:	e1a00003 	mov	r0, r3
+a030254c:	e3a01c01 	mov	r1, #256	; 0x100
+a0302550:	e3a02f96 	mov	r2, #600	; 0x258
+a0302554:	eb0010fe 	bl	a0306954 <GetCommand>
+a0302558:	e1a03000 	mov	r3, r0
+a030255c:	e50b3010 	str	r3, [fp, -#16]
+a0302560:	e51b3010 	ldr	r3, [fp, -#16]
+a0302564:	e3530000 	cmp	r3, #0	; 0x0
+a0302568:	dafffff3 	ble	a030253c <l5+0x19c>
+a030256c:	e24b3e11 	sub	r3, fp, #272	; 0x110
+a0302570:	e1a00003 	mov	r0, r3
+a0302574:	eb001047 	bl	a0306698 <parse_command>
+a0302578:	e1a03000 	mov	r3, r0
+a030257c:	e50b3120 	str	r3, [fp, -#288]
+a0302580:	e51b3120 	ldr	r3, [fp, -#288]
+a0302584:	e3530000 	cmp	r3, #0	; 0x0
+a0302588:	aaffffeb 	bge	a030253c <l5+0x19c>
+a030258c:	e51b0120 	ldr	r0, [fp, -#288]
+a0302590:	e3a01000 	mov	r1, #0	; 0x0
+a0302594:	eb0013a2 	bl	a0307424 <printerror>
+a0302598:	eaffffe7 	b	a030253c <l5+0x19c>
+a030259c:	a030fd20 	eorges	pc, r0, r0, lsr #26
+a03025a0:	a030c4d0 	ldrgesb	ip, [r0], -r0
+a03025a4:	a030d6bc 	ldrgeh	sp, [r0], -ip
+a03025a8:	a030c4e8 	eorges	ip, r0, r8, ror #9
+a03025ac:	a030c530 	eorges	ip, r0, r0, lsr r5
+a03025b0:	a030c578 	eorges	ip, r0, r8, ror r5
+a03025b4:	a030c5b8 	ldrgeh	ip, [r0], -r8
+a03025b8:	a030c5f4 	ldrgesh	ip, [r0], -r4
+a03025bc:	a030c5fc 	ldrgesh	ip, [r0], -ip
+a03025c0:	a030c604 	eorges	ip, r0, r4, lsl #12
+a03025c4:	a030c60c 	eorges	ip, r0, ip, lsl #12
+a03025c8:	a030c648 	eorges	ip, r0, r8, asr #12
+a03025cc:	a030c650 	eorges	ip, r0, r0, asr r6
+a03025d0:	a030c664 	eorges	ip, r0, r4, ror #12
+a03025d4:	40700000 	rsbmis	r0, r0, r0
+
+a03025d8 <PrintStatus>:
+a03025d8:	e1a0c00d 	mov	ip, sp
+a03025dc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03025e0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03025e4:	e24dd008 	sub	sp, sp, #8	; 0x8
+a03025e8:	e50b0010 	str	r0, [fp, -#16]
+a03025ec:	e50b1014 	str	r1, [fp, -#20]
+a03025f0:	e59f3148 	ldr	r3, [pc, #328]	; a0302740 <PrintStatus+0x168>
+a03025f4:	e5930000 	ldr	r0, [r3]
+a03025f8:	eb002128 	bl	a030aaa0 <printf>
+a03025fc:	e59f0140 	ldr	r0, [pc, #320]	; a0302744 <PrintStatus+0x16c>
+a0302600:	eb002126 	bl	a030aaa0 <printf>
+a0302604:	e59f313c 	ldr	r3, [pc, #316]	; a0302748 <PrintStatus+0x170>
+a0302608:	e5930060 	ldr	r0, [r3, #96]
+a030260c:	eb001158 	bl	a0306b74 <PrintSerialSpeed>
+a0302610:	e59f0134 	ldr	r0, [pc, #308]	; a030274c <PrintStatus+0x174>
+a0302614:	eb002121 	bl	a030aaa0 <printf>
+a0302618:	e59f0130 	ldr	r0, [pc, #304]	; a0302750 <PrintStatus+0x178>
+a030261c:	eb00211f 	bl	a030aaa0 <printf>
+a0302620:	e59f3120 	ldr	r3, [pc, #288]	; a0302748 <PrintStatus+0x170>
+a0302624:	e5930064 	ldr	r0, [r3, #100]
+a0302628:	eb001151 	bl	a0306b74 <PrintSerialSpeed>
+a030262c:	e59f0118 	ldr	r0, [pc, #280]	; a030274c <PrintStatus+0x174>
+a0302630:	eb00211a 	bl	a030aaa0 <printf>
+a0302634:	e59f0118 	ldr	r0, [pc, #280]	; a0302754 <PrintStatus+0x17c>
+a0302638:	e3a01000 	mov	r1, #0	; 0x0
+a030263c:	eb002117 	bl	a030aaa0 <printf>
+a0302640:	e59f3100 	ldr	r3, [pc, #256]	; a0302748 <PrintStatus+0x170>
+a0302644:	e593304c 	ldr	r3, [r3, #76]
+a0302648:	e3530000 	cmp	r3, #0	; 0x0
+a030264c:	1a000002 	bne	a030265c <PrintStatus+0x84>
+a0302650:	e59f0100 	ldr	r0, [pc, #256]	; a0302758 <PrintStatus+0x180>
+a0302654:	eb002111 	bl	a030aaa0 <printf>
+a0302658:	ea000005 	b	a0302674 <PrintStatus+0x9c>
+a030265c:	e59f30e4 	ldr	r3, [pc, #228]	; a0302748 <PrintStatus+0x170>
+a0302660:	e59f00f4 	ldr	r0, [pc, #244]	; a030275c <PrintStatus+0x184>
+a0302664:	e3a0120a 	mov	r1, #-1610612736	; 0xa0000000
+a0302668:	e2811602 	add	r1, r1, #2097152	; 0x200000
+a030266c:	e5932048 	ldr	r2, [r3, #72]
+a0302670:	eb00210a 	bl	a030aaa0 <printf>
+a0302674:	e59f00e4 	ldr	r0, [pc, #228]	; a0302760 <PrintStatus+0x188>
+a0302678:	e3a01701 	mov	r1, #262144	; 0x40000
+a030267c:	eb002107 	bl	a030aaa0 <printf>
+a0302680:	e59f30c0 	ldr	r3, [pc, #192]	; a0302748 <PrintStatus+0x170>
+a0302684:	e593301c 	ldr	r3, [r3, #28]
+a0302688:	e3530000 	cmp	r3, #0	; 0x0
+a030268c:	1a000002 	bne	a030269c <PrintStatus+0xc4>
+a0302690:	e59f00c0 	ldr	r0, [pc, #192]	; a0302758 <PrintStatus+0x180>
+a0302694:	eb002101 	bl	a030aaa0 <printf>
+a0302698:	ea000005 	b	a03026b4 <PrintStatus+0xdc>
+a030269c:	e59f30a4 	ldr	r3, [pc, #164]	; a0302748 <PrintStatus+0x170>
+a03026a0:	e59f00b4 	ldr	r0, [pc, #180]	; a030275c <PrintStatus+0x184>
+a03026a4:	e3a0120a 	mov	r1, #-1610612736	; 0xa0000000
+a03026a8:	e2811821 	add	r1, r1, #2162688	; 0x210000
+a03026ac:	e5932018 	ldr	r2, [r3, #24]
+a03026b0:	eb0020fa 	bl	a030aaa0 <printf>
+a03026b4:	e59f00a8 	ldr	r0, [pc, #168]	; a0302764 <PrintStatus+0x18c>
+a03026b8:	e3a01701 	mov	r1, #262144	; 0x40000
+a03026bc:	eb0020f7 	bl	a030aaa0 <printf>
+a03026c0:	e59f3080 	ldr	r3, [pc, #128]	; a0302748 <PrintStatus+0x170>
+a03026c4:	e5933004 	ldr	r3, [r3, #4]
+a03026c8:	e3530000 	cmp	r3, #0	; 0x0
+a03026cc:	1a000002 	bne	a03026dc <PrintStatus+0x104>
+a03026d0:	e59f0080 	ldr	r0, [pc, #128]	; a0302758 <PrintStatus+0x180>
+a03026d4:	eb0020f1 	bl	a030aaa0 <printf>
+a03026d8:	ea000005 	b	a03026f4 <PrintStatus+0x11c>
+a03026dc:	e59f3064 	ldr	r3, [pc, #100]	; a0302748 <PrintStatus+0x170>
+a03026e0:	e59f0074 	ldr	r0, [pc, #116]	; a030275c <PrintStatus+0x184>
+a03026e4:	e3a0120a 	mov	r1, #-1610612736	; 0xa0000000
+a03026e8:	e2811902 	add	r1, r1, #32768	; 0x8000
+a03026ec:	e5932000 	ldr	r2, [r3]
+a03026f0:	eb0020ea 	bl	a030aaa0 <printf>
+a03026f4:	e59f006c 	ldr	r0, [pc, #108]	; a0302768 <PrintStatus+0x190>
+a03026f8:	e3a01709 	mov	r1, #2359296	; 0x240000
+a03026fc:	eb0020e7 	bl	a030aaa0 <printf>
+a0302700:	e59f3040 	ldr	r3, [pc, #64]	; a0302748 <PrintStatus+0x170>
+a0302704:	e5933034 	ldr	r3, [r3, #52]
+a0302708:	e3530000 	cmp	r3, #0	; 0x0
+a030270c:	1a000002 	bne	a030271c <PrintStatus+0x144>
+a0302710:	e59f0040 	ldr	r0, [pc, #64]	; a0302758 <PrintStatus+0x180>
+a0302714:	eb0020e1 	bl	a030aaa0 <printf>
+a0302718:	ea000005 	b	a0302734 <PrintStatus+0x15c>
+a030271c:	e59f3024 	ldr	r3, [pc, #36]	; a0302748 <PrintStatus+0x170>
+a0302720:	e59f0034 	ldr	r0, [pc, #52]	; a030275c <PrintStatus+0x184>
+a0302724:	e3a0120a 	mov	r1, #-1610612736	; 0xa0000000
+a0302728:	e2811605 	add	r1, r1, #5242880	; 0x500000
+a030272c:	e5932030 	ldr	r2, [r3, #48]
+a0302730:	eb0020da 	bl	a030aaa0 <printf>
+a0302734:	e3a03000 	mov	r3, #0	; 0x0
+a0302738:	e1a00003 	mov	r0, r3
+a030273c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302740:	a030d6bc 	ldrgeh	sp, [r0], -ip
+a0302744:	a030c68c 	eorges	ip, r0, ip, lsl #13
+a0302748:	a030fd20 	eorges	pc, r0, r0, lsr #26
+a030274c:	a030c6a4 	eorges	ip, r0, r4, lsr #13
+a0302750:	a030c6ac 	eorges	ip, r0, ip, lsr #13
+a0302754:	a030c6c4 	eorges	ip, r0, r4, asr #13
+a0302758:	a030c6d8 	ldrgesb	ip, [r0], -r8
+a030275c:	a030c6e4 	eorges	ip, r0, r4, ror #13
+a0302760:	a030c704 	eorges	ip, r0, r4, lsl #14
+a0302764:	a030c718 	eorges	ip, r0, r8, lsl r7
+a0302768:	a030c72c 	eorges	ip, r0, ip, lsr #14
+
+a030276c <Reload>:
+a030276c:	e1a0c00d 	mov	ip, sp
+a0302770:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302774:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302778:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a030277c:	e50b0010 	str	r0, [fp, -#16]
+a0302780:	e50b1014 	str	r1, [fp, -#20]
+a0302784:	e51b3010 	ldr	r3, [fp, -#16]
+a0302788:	e3530001 	cmp	r3, #1	; 0x1
+a030278c:	ca000002 	bgt	a030279c <Reload+0x30>
+a0302790:	e3e03001 	mvn	r3, #1	; 0x1
+a0302794:	e50b3018 	str	r3, [fp, -#24]
+a0302798:	ea000006 	b	a03027b8 <Reload+0x4c>
+a030279c:	e3a02004 	mov	r2, #4	; 0x4
+a03027a0:	e51b3014 	ldr	r3, [fp, -#20]
+a03027a4:	e0823003 	add	r3, r2, r3
+a03027a8:	e5930000 	ldr	r0, [r3]
+a03027ac:	eb001183 	bl	a0306dc0 <do_reload>
+a03027b0:	e1a03000 	mov	r3, r0
+a03027b4:	e50b3018 	str	r3, [fp, -#24]
+a03027b8:	e51b0018 	ldr	r0, [fp, -#24]
+a03027bc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03027c0 <print_elf_sections>:
+a03027c0:	e1a0c00d 	mov	ip, sp
+a03027c4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03027c8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03027cc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03027d0 <find_parameters>:
+a03027d0:	e1a0c00d 	mov	ip, sp
+a03027d4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03027d8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03027dc:	e24dd008 	sub	sp, sp, #8	; 0x8
+a03027e0:	e59f0038 	ldr	r0, [pc, #56]	; a0302820 <find_parameters+0x50>
+a03027e4:	eb0003d1 	bl	a0303730 <pt_find_by_name>
+a03027e8:	e1a03000 	mov	r3, r0
+a03027ec:	e50b3010 	str	r3, [fp, -#16]
+a03027f0:	e51b3010 	ldr	r3, [fp, -#16]
+a03027f4:	e3530000 	cmp	r3, #0	; 0x0
+a03027f8:	0a000003 	beq	a030280c <find_parameters+0x3c>
+a03027fc:	e51b0010 	ldr	r0, [fp, -#16]
+a0302800:	eb000450 	bl	a0303948 <pt_flash_start>
+a0302804:	e50b0014 	str	r0, [fp, -#20]
+a0302808:	ea000001 	b	a0302814 <find_parameters+0x44>
+a030280c:	e3a03000 	mov	r3, #0	; 0x0
+a0302810:	e50b3014 	str	r3, [fp, -#20]
+a0302814:	e51b3014 	ldr	r3, [fp, -#20]
+a0302818:	e1a00003 	mov	r0, r3
+a030281c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302820:	a030c750 	eorges	ip, r0, r0, asr r7
+
+a0302824 <get_memory_map>:
+a0302824:	e1a0c00d 	mov	ip, sp
+a0302828:	e92dd830 	stmdb	sp!, {r4, r5, fp, ip, lr, pc}
+a030282c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302830:	e24dd008 	sub	sp, sp, #8	; 0x8
+a0302834:	e3a03000 	mov	r3, #0	; 0x0
+a0302838:	e50b301c 	str	r3, [fp, -#28]
+a030283c:	e51b301c 	ldr	r3, [fp, -#28]
+a0302840:	e353001f 	cmp	r3, #31	; 0x1f
+a0302844:	da000000 	ble	a030284c <get_memory_map+0x28>
+a0302848:	ea00000e 	b	a0302888 <get_memory_map+0x64>
+a030284c:	e59f032c 	ldr	r0, [pc, #812]	; a0302b80 <get_memory_map+0x35c>
+a0302850:	e51b201c 	ldr	r2, [fp, -#28]
+a0302854:	e3a01008 	mov	r1, #8	; 0x8
+a0302858:	e1a03002 	mov	r3, r2
+a030285c:	e1a03083 	mov	r3, r3, lsl #1
+a0302860:	e0833002 	add	r3, r3, r2
+a0302864:	e1a03103 	mov	r3, r3, lsl #2
+a0302868:	e0833000 	add	r3, r3, r0
+a030286c:	e0832001 	add	r2, r3, r1
+a0302870:	e3a03000 	mov	r3, #0	; 0x0
+a0302874:	e5823000 	str	r3, [r2]
+a0302878:	e51b301c 	ldr	r3, [fp, -#28]
+a030287c:	e2833001 	add	r3, r3, #1	; 0x1
+a0302880:	e50b301c 	str	r3, [fp, -#28]
+a0302884:	eaffffec 	b	a030283c <get_memory_map+0x18>
+a0302888:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a030288c:	e50b3018 	str	r3, [fp, -#24]
+a0302890:	e51b3018 	ldr	r3, [fp, -#24]
+a0302894:	e3730215 	cmn	r3, #1342177281	; 0x50000001
+a0302898:	9a000000 	bls	a03028a0 <get_memory_map+0x7c>
+a030289c:	ea000006 	b	a03028bc <get_memory_map+0x98>
+a03028a0:	e51b2018 	ldr	r2, [fp, -#24]
+a03028a4:	e3a03000 	mov	r3, #0	; 0x0
+a03028a8:	e5823000 	str	r3, [r2]
+a03028ac:	e51b3018 	ldr	r3, [fp, -#24]
+a03028b0:	e2833601 	add	r3, r3, #1048576	; 0x100000
+a03028b4:	e50b3018 	str	r3, [fp, -#24]
+a03028b8:	eafffff4 	b	a0302890 <get_memory_map+0x6c>
+a03028bc:	e3a03000 	mov	r3, #0	; 0x0
+a03028c0:	e50b301c 	str	r3, [fp, -#28]
+a03028c4:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a03028c8:	e50b3018 	str	r3, [fp, -#24]
+a03028cc:	e51b3018 	ldr	r3, [fp, -#24]
+a03028d0:	e3730215 	cmn	r3, #1342177281	; 0x50000001
+a03028d4:	9a000000 	bls	a03028dc <get_memory_map+0xb8>
+a03028d8:	ea000070 	b	a0302aa0 <get_memory_map+0x27c>
+a03028dc:	e51b0018 	ldr	r0, [fp, -#24]
+a03028e0:	ebfff6de 	bl	a0300460 <testram>
+a03028e4:	e1a03000 	mov	r3, r0
+a03028e8:	e3530000 	cmp	r3, #0	; 0x0
+a03028ec:	1a000058 	bne	a0302a54 <get_memory_map+0x230>
+a03028f0:	e51b3018 	ldr	r3, [fp, -#24]
+a03028f4:	e5933000 	ldr	r3, [r3]
+a03028f8:	e3530000 	cmp	r3, #0	; 0x0
+a03028fc:	0a00000f 	beq	a0302940 <get_memory_map+0x11c>
+a0302900:	e59f0278 	ldr	r0, [pc, #632]	; a0302b80 <get_memory_map+0x35c>
+a0302904:	e51b201c 	ldr	r2, [fp, -#28]
+a0302908:	e3a01008 	mov	r1, #8	; 0x8
+a030290c:	e1a03002 	mov	r3, r2
+a0302910:	e1a03083 	mov	r3, r3, lsl #1
+a0302914:	e0833002 	add	r3, r3, r2
+a0302918:	e1a03103 	mov	r3, r3, lsl #2
+a030291c:	e0833000 	add	r3, r3, r0
+a0302920:	e0833001 	add	r3, r3, r1
+a0302924:	e5933000 	ldr	r3, [r3]
+a0302928:	e3530000 	cmp	r3, #0	; 0x0
+a030292c:	0a000057 	beq	a0302a90 <get_memory_map+0x26c>
+a0302930:	e51b301c 	ldr	r3, [fp, -#28]
+a0302934:	e2833001 	add	r3, r3, #1	; 0x1
+a0302938:	e50b301c 	str	r3, [fp, -#28]
+a030293c:	ea000053 	b	a0302a90 <get_memory_map+0x26c>
+a0302940:	e51b2018 	ldr	r2, [fp, -#24]
+a0302944:	e51b3018 	ldr	r3, [fp, -#24]
+a0302948:	e5823000 	str	r3, [r2]
+a030294c:	e59f022c 	ldr	r0, [pc, #556]	; a0302b80 <get_memory_map+0x35c>
+a0302950:	e51b201c 	ldr	r2, [fp, -#28]
+a0302954:	e3a01008 	mov	r1, #8	; 0x8
+a0302958:	e1a03002 	mov	r3, r2
+a030295c:	e1a03083 	mov	r3, r3, lsl #1
+a0302960:	e0833002 	add	r3, r3, r2
+a0302964:	e1a03103 	mov	r3, r3, lsl #2
+a0302968:	e0833000 	add	r3, r3, r0
+a030296c:	e0833001 	add	r3, r3, r1
+a0302970:	e5933000 	ldr	r3, [r3]
+a0302974:	e3530000 	cmp	r3, #0	; 0x0
+a0302978:	1a00001f 	bne	a03029fc <get_memory_map+0x1d8>
+a030297c:	e59f11fc 	ldr	r1, [pc, #508]	; a0302b80 <get_memory_map+0x35c>
+a0302980:	e51b201c 	ldr	r2, [fp, -#28]
+a0302984:	e1a03002 	mov	r3, r2
+a0302988:	e1a03083 	mov	r3, r3, lsl #1
+a030298c:	e0833002 	add	r3, r3, r2
+a0302990:	e1a03103 	mov	r3, r3, lsl #2
+a0302994:	e0832001 	add	r2, r3, r1
+a0302998:	e51b3018 	ldr	r3, [fp, -#24]
+a030299c:	e5823000 	str	r3, [r2]
+a03029a0:	e59f01d8 	ldr	r0, [pc, #472]	; a0302b80 <get_memory_map+0x35c>
+a03029a4:	e51b201c 	ldr	r2, [fp, -#28]
+a03029a8:	e3a01004 	mov	r1, #4	; 0x4
+a03029ac:	e1a03002 	mov	r3, r2
+a03029b0:	e1a03083 	mov	r3, r3, lsl #1
+a03029b4:	e0833002 	add	r3, r3, r2
+a03029b8:	e1a03103 	mov	r3, r3, lsl #2
+a03029bc:	e0833000 	add	r3, r3, r0
+a03029c0:	e0832001 	add	r2, r3, r1
+a03029c4:	e3a03601 	mov	r3, #1048576	; 0x100000
+a03029c8:	e5823000 	str	r3, [r2]
+a03029cc:	e59f01ac 	ldr	r0, [pc, #428]	; a0302b80 <get_memory_map+0x35c>
+a03029d0:	e51b201c 	ldr	r2, [fp, -#28]
+a03029d4:	e3a01008 	mov	r1, #8	; 0x8
+a03029d8:	e1a03002 	mov	r3, r2
+a03029dc:	e1a03083 	mov	r3, r3, lsl #1
+a03029e0:	e0833002 	add	r3, r3, r2
+a03029e4:	e1a03103 	mov	r3, r3, lsl #2
+a03029e8:	e0833000 	add	r3, r3, r0
+a03029ec:	e0832001 	add	r2, r3, r1
+a03029f0:	e3a03001 	mov	r3, #1	; 0x1
+a03029f4:	e5823000 	str	r3, [r2]
+a03029f8:	ea000024 	b	a0302a90 <get_memory_map+0x26c>
+a03029fc:	e59f017c 	ldr	r0, [pc, #380]	; a0302b80 <get_memory_map+0x35c>
+a0302a00:	e51b201c 	ldr	r2, [fp, -#28]
+a0302a04:	e3a01004 	mov	r1, #4	; 0x4
+a0302a08:	e1a03002 	mov	r3, r2
+a0302a0c:	e1a03083 	mov	r3, r3, lsl #1
+a0302a10:	e0833002 	add	r3, r3, r2
+a0302a14:	e1a03103 	mov	r3, r3, lsl #2
+a0302a18:	e0833000 	add	r3, r3, r0
+a0302a1c:	e0834001 	add	r4, r3, r1
+a0302a20:	e59f0158 	ldr	r0, [pc, #344]	; a0302b80 <get_memory_map+0x35c>
+a0302a24:	e51b201c 	ldr	r2, [fp, -#28]
+a0302a28:	e3a01004 	mov	r1, #4	; 0x4
+a0302a2c:	e1a03002 	mov	r3, r2
+a0302a30:	e1a03083 	mov	r3, r3, lsl #1
+a0302a34:	e0833002 	add	r3, r3, r2
+a0302a38:	e1a03103 	mov	r3, r3, lsl #2
+a0302a3c:	e0833000 	add	r3, r3, r0
+a0302a40:	e0833001 	add	r3, r3, r1
+a0302a44:	e5933000 	ldr	r3, [r3]
+a0302a48:	e2833601 	add	r3, r3, #1048576	; 0x100000
+a0302a4c:	e5843000 	str	r3, [r4]
+a0302a50:	ea00000e 	b	a0302a90 <get_memory_map+0x26c>
+a0302a54:	e59f0124 	ldr	r0, [pc, #292]	; a0302b80 <get_memory_map+0x35c>
+a0302a58:	e51b201c 	ldr	r2, [fp, -#28]
+a0302a5c:	e3a01008 	mov	r1, #8	; 0x8
+a0302a60:	e1a03002 	mov	r3, r2
+a0302a64:	e1a03083 	mov	r3, r3, lsl #1
+a0302a68:	e0833002 	add	r3, r3, r2
+a0302a6c:	e1a03103 	mov	r3, r3, lsl #2
+a0302a70:	e0833000 	add	r3, r3, r0
+a0302a74:	e0833001 	add	r3, r3, r1
+a0302a78:	e5933000 	ldr	r3, [r3]
+a0302a7c:	e3530001 	cmp	r3, #1	; 0x1
+a0302a80:	1a000002 	bne	a0302a90 <get_memory_map+0x26c>
+a0302a84:	e51b301c 	ldr	r3, [fp, -#28]
+a0302a88:	e2833001 	add	r3, r3, #1	; 0x1
+a0302a8c:	e50b301c 	str	r3, [fp, -#28]
+a0302a90:	e51b3018 	ldr	r3, [fp, -#24]
+a0302a94:	e2833601 	add	r3, r3, #1048576	; 0x100000
+a0302a98:	e50b3018 	str	r3, [fp, -#24]
+a0302a9c:	eaffff8a 	b	a03028cc <get_memory_map+0xa8>
+a0302aa0:	e59f00dc 	ldr	r0, [pc, #220]	; a0302b84 <get_memory_map+0x360>
+a0302aa4:	eb001ffd 	bl	a030aaa0 <printf>
+a0302aa8:	e3a03000 	mov	r3, #0	; 0x0
+a0302aac:	e50b301c 	str	r3, [fp, -#28]
+a0302ab0:	e51b301c 	ldr	r3, [fp, -#28]
+a0302ab4:	e353001f 	cmp	r3, #31	; 0x1f
+a0302ab8:	da000000 	ble	a0302ac0 <get_memory_map+0x29c>
+a0302abc:	ea00002e 	b	a0302b7c <get_memory_map+0x358>
+a0302ac0:	e59f00b8 	ldr	r0, [pc, #184]	; a0302b80 <get_memory_map+0x35c>
+a0302ac4:	e51b201c 	ldr	r2, [fp, -#28]
+a0302ac8:	e3a01008 	mov	r1, #8	; 0x8
+a0302acc:	e1a03002 	mov	r3, r2
+a0302ad0:	e1a03083 	mov	r3, r3, lsl #1
+a0302ad4:	e0833002 	add	r3, r3, r2
+a0302ad8:	e1a03103 	mov	r3, r3, lsl #2
+a0302adc:	e0833000 	add	r3, r3, r0
+a0302ae0:	e0833001 	add	r3, r3, r1
+a0302ae4:	e5933000 	ldr	r3, [r3]
+a0302ae8:	e3530000 	cmp	r3, #0	; 0x0
+a0302aec:	0a00001e 	beq	a0302b6c <get_memory_map+0x348>
+a0302af0:	e59f0088 	ldr	r0, [pc, #136]	; a0302b80 <get_memory_map+0x35c>
+a0302af4:	e51b201c 	ldr	r2, [fp, -#28]
+a0302af8:	e3a01004 	mov	r1, #4	; 0x4
+a0302afc:	e1a03002 	mov	r3, r2
+a0302b00:	e1a03083 	mov	r3, r3, lsl #1
+a0302b04:	e0833002 	add	r3, r3, r2
+a0302b08:	e1a03103 	mov	r3, r3, lsl #2
+a0302b0c:	e0833000 	add	r3, r3, r0
+a0302b10:	e0834001 	add	r4, r3, r1
+a0302b14:	e59f1064 	ldr	r1, [pc, #100]	; a0302b80 <get_memory_map+0x35c>
+a0302b18:	e51b201c 	ldr	r2, [fp, -#28]
+a0302b1c:	e1a03002 	mov	r3, r2
+a0302b20:	e1a03083 	mov	r3, r3, lsl #1
+a0302b24:	e0833002 	add	r3, r3, r2
+a0302b28:	e1a03103 	mov	r3, r3, lsl #2
+a0302b2c:	e0835001 	add	r5, r3, r1
+a0302b30:	e59f0048 	ldr	r0, [pc, #72]	; a0302b80 <get_memory_map+0x35c>
+a0302b34:	e51b201c 	ldr	r2, [fp, -#28]
+a0302b38:	e3a01004 	mov	r1, #4	; 0x4
+a0302b3c:	e1a03002 	mov	r3, r2
+a0302b40:	e1a03083 	mov	r3, r3, lsl #1
+a0302b44:	e0833002 	add	r3, r3, r2
+a0302b48:	e1a03103 	mov	r3, r3, lsl #2
+a0302b4c:	e0833000 	add	r3, r3, r0
+a0302b50:	e0833001 	add	r3, r3, r1
+a0302b54:	e5933000 	ldr	r3, [r3]
+a0302b58:	e1a03a23 	mov	r3, r3, lsr #20
+a0302b5c:	e59f0024 	ldr	r0, [pc, #36]	; a0302b88 <get_memory_map+0x364>
+a0302b60:	e5941000 	ldr	r1, [r4]
+a0302b64:	e5952000 	ldr	r2, [r5]
+a0302b68:	eb001fcc 	bl	a030aaa0 <printf>
+a0302b6c:	e51b301c 	ldr	r3, [fp, -#28]
+a0302b70:	e2833001 	add	r3, r3, #1	; 0x1
+a0302b74:	e50b301c 	str	r3, [fp, -#28]
+a0302b78:	eaffffcc 	b	a0302ab0 <get_memory_map+0x28c>
+a0302b7c:	e91ba830 	ldmdb	fp, {r4, r5, fp, sp, pc}
+a0302b80:	a03101a0 	eorges	r0, r1, r0, lsr #3
+a0302b84:	a030c758 	eorges	ip, r0, r8, asr r7
+a0302b88:	a030c768 	eorges	ip, r0, r8, ror #14
+
+a0302b8c <parse_ptag_core>:
+a0302b8c:	e1a0c00d 	mov	ip, sp
+a0302b90:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302b94:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302b98:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0302b9c:	e50b0010 	str	r0, [fp, -#16]
+a0302ba0:	e59f2020 	ldr	r2, [pc, #32]	; a0302bc8 <parse_ptag_core+0x3c>
+a0302ba4:	e51b3010 	ldr	r3, [fp, -#16]
+a0302ba8:	e593300c 	ldr	r3, [r3, #12]
+a0302bac:	e5823064 	str	r3, [r2, #100]
+a0302bb0:	e59f3010 	ldr	r3, [pc, #16]	; a0302bc8 <parse_ptag_core+0x3c>
+a0302bb4:	e5930064 	ldr	r0, [r3, #100]
+a0302bb8:	eb002003 	bl	a030abcc <serial_init>
+a0302bbc:	e3a03000 	mov	r3, #0	; 0x0
+a0302bc0:	e1a00003 	mov	r0, r3
+a0302bc4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302bc8:	a030fd20 	eorges	pc, r0, r0, lsr #26
+
+a0302bcc <parse_ptag_ramdisk>:
+a0302bcc:	e1a0c00d 	mov	ip, sp
+a0302bd0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302bd4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302bd8:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0302bdc:	e50b0010 	str	r0, [fp, -#16]
+a0302be0:	e59f2018 	ldr	r2, [pc, #24]	; a0302c00 <parse_ptag_ramdisk+0x34>
+a0302be4:	e51b3010 	ldr	r3, [fp, -#16]
+a0302be8:	e593300c 	ldr	r3, [r3, #12]
+a0302bec:	e2033001 	and	r3, r3, #1	; 0x1
+a0302bf0:	e5823068 	str	r3, [r2, #104]
+a0302bf4:	e3a03000 	mov	r3, #0	; 0x0
+a0302bf8:	e1a00003 	mov	r0, r3
+a0302bfc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302c00:	a030fd20 	eorges	pc, r0, r0, lsr #26
+
+a0302c04 <parse_ptag_bootdelay>:
+a0302c04:	e1a0c00d 	mov	ip, sp
+a0302c08:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302c0c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302c10:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0302c14:	e50b0010 	str	r0, [fp, -#16]
+a0302c18:	e59f2014 	ldr	r2, [pc, #20]	; a0302c34 <parse_ptag_bootdelay+0x30>
+a0302c1c:	e51b3010 	ldr	r3, [fp, -#16]
+a0302c20:	e593300c 	ldr	r3, [r3, #12]
+a0302c24:	e582306c 	str	r3, [r2, #108]
+a0302c28:	e3a03000 	mov	r3, #0	; 0x0
+a0302c2c:	e1a00003 	mov	r0, r3
+a0302c30:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302c34:	a030fd20 	eorges	pc, r0, r0, lsr #26
+
+a0302c38 <parse_ptag_cmdline>:
+a0302c38:	e1a0c00d 	mov	ip, sp
+a0302c3c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302c40:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302c44:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0302c48:	e50b0010 	str	r0, [fp, -#16]
+a0302c4c:	e51b3010 	ldr	r3, [fp, -#16]
+a0302c50:	e283300c 	add	r3, r3, #12	; 0xc
+a0302c54:	e59f0014 	ldr	r0, [pc, #20]	; a0302c70 <parse_ptag_cmdline+0x38>
+a0302c58:	e1a01003 	mov	r1, r3
+a0302c5c:	e3a02b01 	mov	r2, #1024	; 0x400
+a0302c60:	eb0021f9 	bl	a030b44c <strlcpy>
+a0302c64:	e3a03000 	mov	r3, #0	; 0x0
+a0302c68:	e1a00003 	mov	r0, r3
+a0302c6c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302c70:	a030fd90 	mlages	r0, r0, sp, pc
+
+a0302c74 <parse_ptag_baud>:
+a0302c74:	e1a0c00d 	mov	ip, sp
+a0302c78:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302c7c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302c80:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0302c84:	e50b0010 	str	r0, [fp, -#16]
+a0302c88:	e59f2014 	ldr	r2, [pc, #20]	; a0302ca4 <parse_ptag_baud+0x30>
+a0302c8c:	e51b3010 	ldr	r3, [fp, -#16]
+a0302c90:	e593300c 	ldr	r3, [r3, #12]
+a0302c94:	e5823060 	str	r3, [r2, #96]
+a0302c98:	e3a03000 	mov	r3, #0	; 0x0
+a0302c9c:	e1a00003 	mov	r0, r3
+a0302ca0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302ca4:	a030fd20 	eorges	pc, r0, r0, lsr #26
+
+a0302ca8 <parse_ptag_hwaddr>:
+a0302ca8:	e1a0c00d 	mov	ip, sp
+a0302cac:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302cb0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302cb4:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0302cb8:	e50b0010 	str	r0, [fp, -#16]
+a0302cbc:	eb00126a 	bl	a030766c <ether_get_name>
+a0302cc0:	e1a03000 	mov	r3, r0
+a0302cc4:	e3530000 	cmp	r3, #0	; 0x0
+a0302cc8:	0a00000a 	beq	a0302cf8 <parse_ptag_hwaddr+0x50>
+a0302ccc:	eb001266 	bl	a030766c <ether_get_name>
+a0302cd0:	e1a02000 	mov	r2, r0
+a0302cd4:	e51b3010 	ldr	r3, [fp, -#16]
+a0302cd8:	e283300c 	add	r3, r3, #12	; 0xc
+a0302cdc:	e1a00002 	mov	r0, r2
+a0302ce0:	e1a01003 	mov	r1, r3
+a0302ce4:	e3a0200a 	mov	r2, #10	; 0xa
+a0302ce8:	eb002182 	bl	a030b2f8 <strncmp>
+a0302cec:	e1a03000 	mov	r3, r0
+a0302cf0:	e3530000 	cmp	r3, #0	; 0x0
+a0302cf4:	1a000003 	bne	a0302d08 <parse_ptag_hwaddr+0x60>
+a0302cf8:	e51b3010 	ldr	r3, [fp, -#16]
+a0302cfc:	e2833016 	add	r3, r3, #22	; 0x16
+a0302d00:	e1a00003 	mov	r0, r3
+a0302d04:	eb00123c 	bl	a03075fc <ether_set_addr>
+a0302d08:	e3a03000 	mov	r3, #0	; 0x0
+a0302d0c:	e1a00003 	mov	r0, r3
+a0302d10:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0302d14 <parse_ptag>:
+a0302d14:	e1a0c00d 	mov	ip, sp
+a0302d18:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302d1c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302d20:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0302d24:	e50b0010 	str	r0, [fp, -#16]
+a0302d28:	e50b1014 	str	r1, [fp, -#20]
+a0302d2c:	e59f3084 	ldr	r3, [pc, #132]	; a0302db8 <parse_ptag+0xa4>
+a0302d30:	e50b3018 	str	r3, [fp, -#24]
+a0302d34:	e51b2018 	ldr	r2, [fp, -#24]
+a0302d38:	e59f307c 	ldr	r3, [pc, #124]	; a0302dbc <parse_ptag+0xa8>
+a0302d3c:	e1520003 	cmp	r2, r3
+a0302d40:	3a000000 	bcc	a0302d48 <parse_ptag+0x34>
+a0302d44:	ea000014 	b	a0302d9c <parse_ptag+0x88>
+a0302d48:	e51b3010 	ldr	r3, [fp, -#16]
+a0302d4c:	e51b2018 	ldr	r2, [fp, -#24]
+a0302d50:	e5931004 	ldr	r1, [r3, #4]
+a0302d54:	e5923000 	ldr	r3, [r2]
+a0302d58:	e1510003 	cmp	r1, r3
+a0302d5c:	1a00000a 	bne	a0302d8c <parse_ptag+0x78>
+a0302d60:	e51b3014 	ldr	r3, [fp, -#20]
+a0302d64:	e51b2010 	ldr	r2, [fp, -#16]
+a0302d68:	e5931000 	ldr	r1, [r3]
+a0302d6c:	e5923008 	ldr	r3, [r2, #8]
+a0302d70:	e1510003 	cmp	r1, r3
+a0302d74:	1a000004 	bne	a0302d8c <parse_ptag+0x78>
+a0302d78:	e51b3018 	ldr	r3, [fp, -#24]
+a0302d7c:	e5933004 	ldr	r3, [r3, #4]
+a0302d80:	e51b0010 	ldr	r0, [fp, -#16]
+a0302d84:	e1a0e00f 	mov	lr, pc
+a0302d88:	e1a0f003 	mov	pc, r3
+a0302d8c:	e51b3018 	ldr	r3, [fp, -#24]
+a0302d90:	e2833008 	add	r3, r3, #8	; 0x8
+a0302d94:	e50b3018 	str	r3, [fp, -#24]
+a0302d98:	eaffffe5 	b	a0302d34 <parse_ptag+0x20>
+a0302d9c:	e51b2018 	ldr	r2, [fp, -#24]
+a0302da0:	e59f3014 	ldr	r3, [pc, #20]	; a0302dbc <parse_ptag+0xa8>
+a0302da4:	e1520003 	cmp	r2, r3
+a0302da8:	23a03000 	movcs	r3, #0	; 0x0
+a0302dac:	33a03001 	movcc	r3, #1	; 0x1
+a0302db0:	e1a00003 	mov	r0, r3
+a0302db4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302db8:	a030df50 	eorges	sp, r0, r0, asr pc
+a0302dbc:	a030df80 	eorges	sp, r0, r0, lsl #31
+
+a0302dc0 <parse_ptags>:
+a0302dc0:	e1a0c00d 	mov	ip, sp
+a0302dc4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302dc8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302dcc:	e24dd008 	sub	sp, sp, #8	; 0x8
+a0302dd0:	e50b0010 	str	r0, [fp, -#16]
+a0302dd4:	e50b1014 	str	r1, [fp, -#20]
+a0302dd8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0302ddc <check_ptable_magic>:
+a0302ddc:	e1a0c00d 	mov	ip, sp
+a0302de0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302de4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302de8:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0302dec:	e50b0010 	str	r0, [fp, -#16]
+a0302df0:	e50b1014 	str	r1, [fp, -#20]
+a0302df4:	e51b3010 	ldr	r3, [fp, -#16]
+a0302df8:	e5932000 	ldr	r2, [r3]
+a0302dfc:	e51b3014 	ldr	r3, [fp, -#20]
+a0302e00:	e1520003 	cmp	r2, r3
+a0302e04:	0a000008 	beq	a0302e2c <check_ptable_magic+0x50>
+a0302e08:	e51b3010 	ldr	r3, [fp, -#16]
+a0302e0c:	e59f0028 	ldr	r0, [pc, #40]	; a0302e3c <check_ptable_magic+0x60>
+a0302e10:	e51b1010 	ldr	r1, [fp, -#16]
+a0302e14:	e5932000 	ldr	r2, [r3]
+a0302e18:	e51b3014 	ldr	r3, [fp, -#20]
+a0302e1c:	eb001f1f 	bl	a030aaa0 <printf>
+a0302e20:	e3e03002 	mvn	r3, #2	; 0x2
+a0302e24:	e50b3018 	str	r3, [fp, -#24]
+a0302e28:	ea000001 	b	a0302e34 <check_ptable_magic+0x58>
+a0302e2c:	e3a03000 	mov	r3, #0	; 0x0
+a0302e30:	e50b3018 	str	r3, [fp, -#24]
+a0302e34:	e51b0018 	ldr	r0, [fp, -#24]
+a0302e38:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302e3c:	a030c784 	eorges	ip, r0, r4, lsl #15
+
+a0302e40 <find_flash_ptable>:
+a0302e40:	e1a0c00d 	mov	ip, sp
+a0302e44:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302e48:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302e4c:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0302e50:	e59f30b4 	ldr	r3, [pc, #180]	; a0302f0c <find_flash_ptable+0xcc>
+a0302e54:	e5933000 	ldr	r3, [r3]
+a0302e58:	e5932000 	ldr	r2, [r3]
+a0302e5c:	e59f30ac 	ldr	r3, [pc, #172]	; a0302f10 <find_flash_ptable+0xd0>
+a0302e60:	e1520003 	cmp	r2, r3
+a0302e64:	1a000004 	bne	a0302e7c <find_flash_ptable+0x3c>
+a0302e68:	e59f309c 	ldr	r3, [pc, #156]	; a0302f0c <find_flash_ptable+0xcc>
+a0302e6c:	e59f00a0 	ldr	r0, [pc, #160]	; a0302f14 <find_flash_ptable+0xd4>
+a0302e70:	e5931000 	ldr	r1, [r3]
+a0302e74:	eb001f09 	bl	a030aaa0 <printf>
+a0302e78:	ea000022 	b	a0302f08 <find_flash_ptable+0xc8>
+a0302e7c:	e59f0094 	ldr	r0, [pc, #148]	; a0302f18 <find_flash_ptable+0xd8>
+a0302e80:	eb001f06 	bl	a030aaa0 <printf>
+a0302e84:	e24b3014 	sub	r3, fp, #20	; 0x14
+a0302e88:	e1a00003 	mov	r0, r3
+a0302e8c:	ebfff97f 	bl	a0301490 <flash_get_first_block_address>
+a0302e90:	e1a03000 	mov	r3, r0
+a0302e94:	e50b3018 	str	r3, [fp, -#24]
+a0302e98:	e51b3018 	ldr	r3, [fp, -#24]
+a0302e9c:	e3530000 	cmp	r3, #0	; 0x0
+a0302ea0:	aa000002 	bge	a0302eb0 <find_flash_ptable+0x70>
+a0302ea4:	e59f0070 	ldr	r0, [pc, #112]	; a0302f1c <find_flash_ptable+0xdc>
+a0302ea8:	eb001efc 	bl	a030aaa0 <printf>
+a0302eac:	ea000015 	b	a0302f08 <find_flash_ptable+0xc8>
+a0302eb0:	e1a00000 	nop			(mov r0,r0)
+a0302eb4:	e51b3014 	ldr	r3, [fp, -#20]
+a0302eb8:	e5932000 	ldr	r2, [r3]
+a0302ebc:	e59f304c 	ldr	r3, [pc, #76]	; a0302f10 <find_flash_ptable+0xd0>
+a0302ec0:	e1520003 	cmp	r2, r3
+a0302ec4:	1a000000 	bne	a0302ecc <find_flash_ptable+0x8c>
+a0302ec8:	ea00000b 	b	a0302efc <find_flash_ptable+0xbc>
+a0302ecc:	e51b3014 	ldr	r3, [fp, -#20]
+a0302ed0:	e50b3010 	str	r3, [fp, -#16]
+a0302ed4:	e24b3014 	sub	r3, fp, #20	; 0x14
+a0302ed8:	e1a00003 	mov	r0, r3
+a0302edc:	e51b1010 	ldr	r1, [fp, -#16]
+a0302ee0:	ebfff980 	bl	a03014e8 <flash_get_next_block_address>
+a0302ee4:	e1a03000 	mov	r3, r0
+a0302ee8:	e50b3018 	str	r3, [fp, -#24]
+a0302eec:	e51b3018 	ldr	r3, [fp, -#24]
+a0302ef0:	e3530000 	cmp	r3, #0	; 0x0
+a0302ef4:	aaffffee 	bge	a0302eb4 <find_flash_ptable+0x74>
+a0302ef8:	ea000002 	b	a0302f08 <find_flash_ptable+0xc8>
+a0302efc:	e59f2008 	ldr	r2, [pc, #8]	; a0302f0c <find_flash_ptable+0xcc>
+a0302f00:	e51b3014 	ldr	r3, [fp, -#20]
+a0302f04:	e5823000 	str	r3, [r2]
+a0302f08:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0302f0c:	a0310340 	eorges	r0, r1, r0, asr #6
+a0302f10:	42465054 	submi	r5, r6, #84	; 0x54
+a0302f14:	a030c7b0 	ldrgeh	ip, [r0], -r0
+a0302f18:	a030c7e4 	eorges	ip, r0, r4, ror #15
+a0302f1c:	a030c80c 	eorges	ip, r0, ip, lsl #16
+
+a0302f20 <copy_ptable>:
+a0302f20:	e1a0c00d 	mov	ip, sp
+a0302f24:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0302f28:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0302f2c:	e24dd01c 	sub	sp, sp, #28	; 0x1c
+a0302f30:	e50b0010 	str	r0, [fp, -#16]
+a0302f34:	e50b1014 	str	r1, [fp, -#20]
+a0302f38:	e50b2018 	str	r2, [fp, -#24]
+a0302f3c:	e50b301c 	str	r3, [fp, -#28]
+a0302f40:	e3a03001 	mov	r3, #1	; 0x1
+a0302f44:	e50b3020 	str	r3, [fp, -#32]
+a0302f48:	e3a03000 	mov	r3, #0	; 0x0
+a0302f4c:	e50b3024 	str	r3, [fp, -#36]
+a0302f50:	e51b301c 	ldr	r3, [fp, -#28]
+a0302f54:	e3530001 	cmp	r3, #1	; 0x1
+a0302f58:	ca000002 	bgt	a0302f68 <copy_ptable+0x48>
+a0302f5c:	e3e03000 	mvn	r3, #0	; 0x0
+a0302f60:	e50b3028 	str	r3, [fp, -#40]
+a0302f64:	ea000061 	b	a03030f0 <copy_ptable+0x1d0>
+a0302f68:	e51b3010 	ldr	r3, [fp, -#16]
+a0302f6c:	e5932000 	ldr	r2, [r3]
+a0302f70:	e51b3018 	ldr	r3, [fp, -#24]
+a0302f74:	e1520003 	cmp	r2, r3
+a0302f78:	0a000002 	beq	a0302f88 <copy_ptable+0x68>
+a0302f7c:	e3e03000 	mvn	r3, #0	; 0x0
+a0302f80:	e50b3028 	str	r3, [fp, -#40]
+a0302f84:	ea000059 	b	a03030f0 <copy_ptable+0x1d0>
+a0302f88:	e51b3010 	ldr	r3, [fp, -#16]
+a0302f8c:	e51b0014 	ldr	r0, [fp, -#20]
+a0302f90:	e51b1010 	ldr	r1, [fp, -#16]
+a0302f94:	e5932004 	ldr	r2, [r3, #4]
+a0302f98:	eb001a0a 	bl	a03097c8 <memcpy>
+a0302f9c:	e51b3010 	ldr	r3, [fp, -#16]
+a0302fa0:	e51b2010 	ldr	r2, [fp, -#16]
+a0302fa4:	e5933004 	ldr	r3, [r3, #4]
+a0302fa8:	e0823003 	add	r3, r2, r3
+a0302fac:	e50b3010 	str	r3, [fp, -#16]
+a0302fb0:	e51b3014 	ldr	r3, [fp, -#20]
+a0302fb4:	e51b2014 	ldr	r2, [fp, -#20]
+a0302fb8:	e5933004 	ldr	r3, [r3, #4]
+a0302fbc:	e0823003 	add	r3, r2, r3
+a0302fc0:	e50b3014 	str	r3, [fp, -#20]
+a0302fc4:	e51b3020 	ldr	r3, [fp, -#32]
+a0302fc8:	e2833001 	add	r3, r3, #1	; 0x1
+a0302fcc:	e50b3020 	str	r3, [fp, -#32]
+a0302fd0:	e51b2020 	ldr	r2, [fp, -#32]
+a0302fd4:	e51b301c 	ldr	r3, [fp, -#28]
+a0302fd8:	e1520003 	cmp	r2, r3
+a0302fdc:	1a000002 	bne	a0302fec <copy_ptable+0xcc>
+a0302fe0:	e3e03006 	mvn	r3, #6	; 0x6
+a0302fe4:	e50b3024 	str	r3, [fp, -#36]
+a0302fe8:	ea000039 	b	a03030d4 <copy_ptable+0x1b4>
+a0302fec:	e51b0010 	ldr	r0, [fp, -#16]
+a0302ff0:	e3a01c45 	mov	r1, #17664	; 0x4500
+a0302ff4:	e28111c5 	add	r1, r1, #1073741873	; 0x40000031
+a0302ff8:	e2811625 	add	r1, r1, #38797312	; 0x2500000
+a0302ffc:	ebffff76 	bl	a0302ddc <check_ptable_magic>
+a0303000:	e1a03000 	mov	r3, r0
+a0303004:	e50b3024 	str	r3, [fp, -#36]
+a0303008:	e51b3024 	ldr	r3, [fp, -#36]
+a030300c:	e3530000 	cmp	r3, #0	; 0x0
+a0303010:	1a000000 	bne	a0303018 <copy_ptable+0xf8>
+a0303014:	ea00001b 	b	a0303088 <copy_ptable+0x168>
+a0303018:	e51b0010 	ldr	r0, [fp, -#16]
+a030301c:	e59f10d4 	ldr	r1, [pc, #212]	; a03030f8 <copy_ptable+0x1d8>
+a0303020:	ebffff6d 	bl	a0302ddc <check_ptable_magic>
+a0303024:	e1a03000 	mov	r3, r0
+a0303028:	e50b3024 	str	r3, [fp, -#36]
+a030302c:	e51b3024 	ldr	r3, [fp, -#36]
+a0303030:	e3530000 	cmp	r3, #0	; 0x0
+a0303034:	1a000003 	bne	a0303048 <copy_ptable+0x128>
+a0303038:	e59b3004 	ldr	r3, [fp, #4]
+a030303c:	e3530000 	cmp	r3, #0	; 0x0
+a0303040:	0affffe2 	beq	a0302fd0 <copy_ptable+0xb0>
+a0303044:	ea00000f 	b	a0303088 <copy_ptable+0x168>
+a0303048:	e51b0010 	ldr	r0, [fp, -#16]
+a030304c:	e3a01c45 	mov	r1, #17664	; 0x4500
+a0303050:	e28111cd 	add	r1, r1, #1073741875	; 0x40000033
+a0303054:	e2811625 	add	r1, r1, #38797312	; 0x2500000
+a0303058:	ebffff5f 	bl	a0302ddc <check_ptable_magic>
+a030305c:	e1a03000 	mov	r3, r0
+a0303060:	e50b3024 	str	r3, [fp, -#36]
+a0303064:	e51b3024 	ldr	r3, [fp, -#36]
+a0303068:	e3530000 	cmp	r3, #0	; 0x0
+a030306c:	1a000002 	bne	a030307c <copy_ptable+0x15c>
+a0303070:	e3a03000 	mov	r3, #0	; 0x0
+a0303074:	e50b3024 	str	r3, [fp, -#36]
+a0303078:	ea000015 	b	a03030d4 <copy_ptable+0x1b4>
+a030307c:	e3e03002 	mvn	r3, #2	; 0x2
+a0303080:	e50b3024 	str	r3, [fp, -#36]
+a0303084:	ea000012 	b	a03030d4 <copy_ptable+0x1b4>
+a0303088:	e51b3010 	ldr	r3, [fp, -#16]
+a030308c:	e51b0014 	ldr	r0, [fp, -#20]
+a0303090:	e51b1010 	ldr	r1, [fp, -#16]
+a0303094:	e5932004 	ldr	r2, [r3, #4]
+a0303098:	eb0019ca 	bl	a03097c8 <memcpy>
+a030309c:	e51b3010 	ldr	r3, [fp, -#16]
+a03030a0:	e51b2010 	ldr	r2, [fp, -#16]
+a03030a4:	e5933004 	ldr	r3, [r3, #4]
+a03030a8:	e0823003 	add	r3, r2, r3
+a03030ac:	e50b3010 	str	r3, [fp, -#16]
+a03030b0:	e51b3014 	ldr	r3, [fp, -#20]
+a03030b4:	e51b2014 	ldr	r2, [fp, -#20]
+a03030b8:	e5933004 	ldr	r3, [r3, #4]
+a03030bc:	e0823003 	add	r3, r2, r3
+a03030c0:	e50b3014 	str	r3, [fp, -#20]
+a03030c4:	e51b3020 	ldr	r3, [fp, -#32]
+a03030c8:	e2833001 	add	r3, r3, #1	; 0x1
+a03030cc:	e50b3020 	str	r3, [fp, -#32]
+a03030d0:	eaffffbe 	b	a0302fd0 <copy_ptable+0xb0>
+a03030d4:	e51b3014 	ldr	r3, [fp, -#20]
+a03030d8:	e3a02c45 	mov	r2, #17664	; 0x4500
+a03030dc:	e28221cd 	add	r2, r2, #1073741875	; 0x40000033
+a03030e0:	e2822625 	add	r2, r2, #38797312	; 0x2500000
+a03030e4:	e5832000 	str	r2, [r3]
+a03030e8:	e51b3024 	ldr	r3, [fp, -#36]
+a03030ec:	e50b3028 	str	r3, [fp, -#40]
+a03030f0:	e51b0028 	ldr	r0, [fp, -#40]
+a03030f4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03030f8:	42504530 	submis	r4, r0, #201326592	; 0xc000000
+
+a03030fc <ptable_print>:
+a03030fc:	e1a0c00d 	mov	ip, sp
+a0303100:	e92dd830 	stmdb	sp!, {r4, r5, fp, ip, lr, pc}
+a0303104:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303108:	e24dd010 	sub	sp, sp, #16	; 0x10
+a030310c:	e50b0018 	str	r0, [fp, -#24]
+a0303110:	e51b3018 	ldr	r3, [fp, -#24]
+a0303114:	e593300c 	ldr	r3, [r3, #12]
+a0303118:	e1a03523 	mov	r3, r3, lsr #10
+a030311c:	e51b2018 	ldr	r2, [fp, -#24]
+a0303120:	e59f01b4 	ldr	r0, [pc, #436]	; a03032dc <ptable_print+0x1e0>
+a0303124:	e1a01003 	mov	r1, r3
+a0303128:	e5922008 	ldr	r2, [r2, #8]
+a030312c:	eb001e5b 	bl	a030aaa0 <printf>
+a0303130:	e51b3018 	ldr	r3, [fp, -#24]
+a0303134:	e51b2018 	ldr	r2, [fp, -#24]
+a0303138:	e5933004 	ldr	r3, [r3, #4]
+a030313c:	e0823003 	add	r3, r2, r3
+a0303140:	e50b3018 	str	r3, [fp, -#24]
+a0303144:	e51b3018 	ldr	r3, [fp, -#24]
+a0303148:	e5933000 	ldr	r3, [r3]
+a030314c:	e50b3020 	str	r3, [fp, -#32]
+a0303150:	e3a03c45 	mov	r3, #17664	; 0x4500
+a0303154:	e28331c5 	add	r3, r3, #1073741873	; 0x40000031
+a0303158:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a030315c:	e51b2020 	ldr	r2, [fp, -#32]
+a0303160:	e1520003 	cmp	r2, r3
+a0303164:	0a000011 	beq	a03031b0 <ptable_print+0xb4>
+a0303168:	e3a03c45 	mov	r3, #17664	; 0x4500
+a030316c:	e28331c5 	add	r3, r3, #1073741873	; 0x40000031
+a0303170:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a0303174:	e51b2020 	ldr	r2, [fp, -#32]
+a0303178:	e1520003 	cmp	r2, r3
+a030317c:	8a000004 	bhi	a0303194 <ptable_print+0x98>
+a0303180:	e59f3158 	ldr	r3, [pc, #344]	; a03032e0 <ptable_print+0x1e4>
+a0303184:	e51b2020 	ldr	r2, [fp, -#32]
+a0303188:	e1520003 	cmp	r2, r3
+a030318c:	0affffe7 	beq	a0303130 <ptable_print+0x34>
+a0303190:	ea00004c 	b	a03032c8 <ptable_print+0x1cc>
+a0303194:	e3a03c45 	mov	r3, #17664	; 0x4500
+a0303198:	e28331cd 	add	r3, r3, #1073741875	; 0x40000033
+a030319c:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a03031a0:	e51b2020 	ldr	r2, [fp, -#32]
+a03031a4:	e1520003 	cmp	r2, r3
+a03031a8:	0a00004a 	beq	a03032d8 <ptable_print+0x1dc>
+a03031ac:	ea000045 	b	a03032c8 <ptable_print+0x1cc>
+a03031b0:	e51b2018 	ldr	r2, [fp, -#24]
+a03031b4:	e51b4018 	ldr	r4, [fp, -#24]
+a03031b8:	e51b5018 	ldr	r5, [fp, -#24]
+a03031bc:	e51b3018 	ldr	r3, [fp, -#24]
+a03031c0:	e2833010 	add	r3, r3, #16	; 0x10
+a03031c4:	e58d3000 	str	r3, [sp]
+a03031c8:	e59f0114 	ldr	r0, [pc, #276]	; a03032e4 <ptable_print+0x1e8>
+a03031cc:	e592100c 	ldr	r1, [r2, #12]
+a03031d0:	e5942008 	ldr	r2, [r4, #8]
+a03031d4:	e595300c 	ldr	r3, [r5, #12]
+a03031d8:	eb001e30 	bl	a030aaa0 <printf>
+a03031dc:	e51b3018 	ldr	r3, [fp, -#24]
+a03031e0:	e5933030 	ldr	r3, [r3, #48]
+a03031e4:	e2033001 	and	r3, r3, #1	; 0x1
+a03031e8:	e3530000 	cmp	r3, #0	; 0x0
+a03031ec:	0a000001 	beq	a03031f8 <ptable_print+0xfc>
+a03031f0:	e59f00f0 	ldr	r0, [pc, #240]	; a03032e8 <ptable_print+0x1ec>
+a03031f4:	eb001e29 	bl	a030aaa0 <printf>
+a03031f8:	e51b3018 	ldr	r3, [fp, -#24]
+a03031fc:	e5933034 	ldr	r3, [r3, #52]
+a0303200:	e3530000 	cmp	r3, #0	; 0x0
+a0303204:	0a00000e 	beq	a0303244 <ptable_print+0x148>
+a0303208:	e51b3018 	ldr	r3, [fp, -#24]
+a030320c:	e5933030 	ldr	r3, [r3, #48]
+a0303210:	e2033002 	and	r3, r3, #2	; 0x2
+a0303214:	e3530000 	cmp	r3, #0	; 0x0
+a0303218:	0a000002 	beq	a0303228 <ptable_print+0x12c>
+a030321c:	e59f30c8 	ldr	r3, [pc, #200]	; a03032ec <ptable_print+0x1f0>
+a0303220:	e50b301c 	str	r3, [fp, -#28]
+a0303224:	ea000001 	b	a0303230 <ptable_print+0x134>
+a0303228:	e59f20c0 	ldr	r2, [pc, #192]	; a03032f0 <ptable_print+0x1f4>
+a030322c:	e50b201c 	str	r2, [fp, -#28]
+a0303230:	e51b3018 	ldr	r3, [fp, -#24]
+a0303234:	e59f00b8 	ldr	r0, [pc, #184]	; a03032f4 <ptable_print+0x1f8>
+a0303238:	e51b101c 	ldr	r1, [fp, -#28]
+a030323c:	e5932034 	ldr	r2, [r3, #52]
+a0303240:	eb001e16 	bl	a030aaa0 <printf>
+a0303244:	e51b3018 	ldr	r3, [fp, -#24]
+a0303248:	e5933038 	ldr	r3, [r3, #56]
+a030324c:	e3530000 	cmp	r3, #0	; 0x0
+a0303250:	0a00000d 	beq	a030328c <ptable_print+0x190>
+a0303254:	e51b3018 	ldr	r3, [fp, -#24]
+a0303258:	e59f0098 	ldr	r0, [pc, #152]	; a03032f8 <ptable_print+0x1fc>
+a030325c:	e5931038 	ldr	r1, [r3, #56]
+a0303260:	eb001e0e 	bl	a030aaa0 <printf>
+a0303264:	e51b3018 	ldr	r3, [fp, -#24]
+a0303268:	e5933030 	ldr	r3, [r3, #48]
+a030326c:	e2033004 	and	r3, r3, #4	; 0x4
+a0303270:	e3530000 	cmp	r3, #0	; 0x0
+a0303274:	0a000002 	beq	a0303284 <ptable_print+0x188>
+a0303278:	e59f007c 	ldr	r0, [pc, #124]	; a03032fc <ptable_print+0x200>
+a030327c:	eb001e07 	bl	a030aaa0 <printf>
+a0303280:	ea000001 	b	a030328c <ptable_print+0x190>
+a0303284:	e59f0074 	ldr	r0, [pc, #116]	; a0303300 <ptable_print+0x204>
+a0303288:	eb001e04 	bl	a030aaa0 <printf>
+a030328c:	e51b3018 	ldr	r3, [fp, -#24]
+a0303290:	e5933030 	ldr	r3, [r3, #48]
+a0303294:	e2033008 	and	r3, r3, #8	; 0x8
+a0303298:	e3530000 	cmp	r3, #0	; 0x0
+a030329c:	0a000001 	beq	a03032a8 <ptable_print+0x1ac>
+a03032a0:	e59f005c 	ldr	r0, [pc, #92]	; a0303304 <ptable_print+0x208>
+a03032a4:	eb001dfd 	bl	a030aaa0 <printf>
+a03032a8:	e51b3018 	ldr	r3, [fp, -#24]
+a03032ac:	e5933030 	ldr	r3, [r3, #48]
+a03032b0:	e2033010 	and	r3, r3, #16	; 0x10
+a03032b4:	e3530000 	cmp	r3, #0	; 0x0
+a03032b8:	0affff9c 	beq	a0303130 <ptable_print+0x34>
+a03032bc:	e59f0044 	ldr	r0, [pc, #68]	; a0303308 <ptable_print+0x20c>
+a03032c0:	eb001df6 	bl	a030aaa0 <printf>
+a03032c4:	eaffff99 	b	a0303130 <ptable_print+0x34>
+a03032c8:	eb00104b 	bl	a03073fc <printerrprefix>
+a03032cc:	e59f0038 	ldr	r0, [pc, #56]	; a030330c <ptable_print+0x210>
+a03032d0:	e51b1018 	ldr	r1, [fp, -#24]
+a03032d4:	eb001df1 	bl	a030aaa0 <printf>
+a03032d8:	e91ba830 	ldmdb	fp, {r4, r5, fp, sp, pc}
+a03032dc:	a030c824 	eorges	ip, r0, r4, lsr #16
+a03032e0:	42504530 	submis	r4, r0, #201326592	; 0xc000000
+a03032e4:	a030c850 	eorges	ip, r0, r0, asr r8
+a03032e8:	a030c874 	eorges	ip, r0, r4, ror r8
+a03032ec:	a030c894 	mlages	r0, r4, r8, ip
+a03032f0:	a030c8a4 	eorges	ip, r0, r4, lsr #17
+a03032f4:	a030c8a8 	eorges	ip, r0, r8, lsr #17
+a03032f8:	a030c8c0 	eorges	ip, r0, r0, asr #17
+a03032fc:	a030c8dc 	ldrgesb	ip, [r0], -ip
+a0303300:	a030c8f8 	ldrgesh	ip, [r0], -r8
+a0303304:	a030c8fc 	ldrgesh	ip, [r0], -ip
+a0303308:	a030c910 	eorges	ip, r0, r0, lsl r9
+a030330c:	a030c928 	eorges	ip, r0, r8, lsr #18
+
+a0303310 <fixup_ptable>:
+a0303310:	e1a0c00d 	mov	ip, sp
+a0303314:	e92dd810 	stmdb	sp!, {r4, fp, ip, lr, pc}
+a0303318:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030331c:	e24dd01c 	sub	sp, sp, #28	; 0x1c
+a0303320:	e50b0014 	str	r0, [fp, -#20]
+a0303324:	e51b3014 	ldr	r3, [fp, -#20]
+a0303328:	e5933008 	ldr	r3, [r3, #8]
+a030332c:	e50b3018 	str	r3, [fp, -#24]
+a0303330:	e51b3014 	ldr	r3, [fp, -#20]
+a0303334:	e593300c 	ldr	r3, [r3, #12]
+a0303338:	e50b301c 	str	r3, [fp, -#28]
+a030333c:	e3a03000 	mov	r3, #0	; 0x0
+a0303340:	e50b3020 	str	r3, [fp, -#32]
+a0303344:	e51b3014 	ldr	r3, [fp, -#20]
+a0303348:	e50b3024 	str	r3, [fp, -#36]
+a030334c:	e51b3014 	ldr	r3, [fp, -#20]
+a0303350:	e59f017c 	ldr	r0, [pc, #380]	; a03034d4 <fixup_ptable+0x1c4>
+a0303354:	e5931008 	ldr	r1, [r3, #8]
+a0303358:	eb001dd0 	bl	a030aaa0 <printf>
+a030335c:	e51b3014 	ldr	r3, [fp, -#20]
+a0303360:	e59f0170 	ldr	r0, [pc, #368]	; a03034d8 <fixup_ptable+0x1c8>
+a0303364:	e593100c 	ldr	r1, [r3, #12]
+a0303368:	eb001dcc 	bl	a030aaa0 <printf>
+a030336c:	e51b3014 	ldr	r3, [fp, -#20]
+a0303370:	e593300c 	ldr	r3, [r3, #12]
+a0303374:	e3730001 	cmn	r3, #1	; 0x1
+a0303378:	1a000005 	bne	a0303394 <fixup_ptable+0x84>
+a030337c:	e51b4014 	ldr	r4, [fp, -#20]
+a0303380:	ebfff5d9 	bl	a0300aec <flash_get_size>
+a0303384:	e1a03000 	mov	r3, r0
+a0303388:	e50b301c 	str	r3, [fp, -#28]
+a030338c:	e51b301c 	ldr	r3, [fp, -#28]
+a0303390:	e584300c 	str	r3, [r4, #12]
+a0303394:	e1a00000 	nop			(mov r0,r0)
+a0303398:	e51b3024 	ldr	r3, [fp, -#36]
+a030339c:	e51b2024 	ldr	r2, [fp, -#36]
+a03033a0:	e5933004 	ldr	r3, [r3, #4]
+a03033a4:	e0823003 	add	r3, r2, r3
+a03033a8:	e50b3024 	str	r3, [fp, -#36]
+a03033ac:	e51b3024 	ldr	r3, [fp, -#36]
+a03033b0:	e5933000 	ldr	r3, [r3]
+a03033b4:	e50b302c 	str	r3, [fp, -#44]
+a03033b8:	e3a03c45 	mov	r3, #17664	; 0x4500
+a03033bc:	e28331c5 	add	r3, r3, #1073741873	; 0x40000031
+a03033c0:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a03033c4:	e51b202c 	ldr	r2, [fp, -#44]
+a03033c8:	e1520003 	cmp	r2, r3
+a03033cc:	0a000014 	beq	a0303424 <fixup_ptable+0x114>
+a03033d0:	e3a03c45 	mov	r3, #17664	; 0x4500
+a03033d4:	e28331c5 	add	r3, r3, #1073741873	; 0x40000031
+a03033d8:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a03033dc:	e51b202c 	ldr	r2, [fp, -#44]
+a03033e0:	e1520003 	cmp	r2, r3
+a03033e4:	8a000004 	bhi	a03033fc <fixup_ptable+0xec>
+a03033e8:	e59f30ec 	ldr	r3, [pc, #236]	; a03034dc <fixup_ptable+0x1cc>
+a03033ec:	e51b202c 	ldr	r2, [fp, -#44]
+a03033f0:	e1520003 	cmp	r2, r3
+a03033f4:	0affffe7 	beq	a0303398 <fixup_ptable+0x88>
+a03033f8:	ea00002d 	b	a03034b4 <fixup_ptable+0x1a4>
+a03033fc:	e3a03c45 	mov	r3, #17664	; 0x4500
+a0303400:	e28331cd 	add	r3, r3, #1073741875	; 0x40000033
+a0303404:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a0303408:	e51b202c 	ldr	r2, [fp, -#44]
+a030340c:	e1520003 	cmp	r2, r3
+a0303410:	0a000000 	beq	a0303418 <fixup_ptable+0x108>
+a0303414:	ea000026 	b	a03034b4 <fixup_ptable+0x1a4>
+a0303418:	e3a03000 	mov	r3, #0	; 0x0
+a030341c:	e50b3028 	str	r3, [fp, -#40]
+a0303420:	ea000029 	b	a03034cc <fixup_ptable+0x1bc>
+a0303424:	e51b3020 	ldr	r3, [fp, -#32]
+a0303428:	e3530000 	cmp	r3, #0	; 0x0
+a030342c:	0a000005 	beq	a0303448 <fixup_ptable+0x138>
+a0303430:	eb000ff1 	bl	a03073fc <printerrprefix>
+a0303434:	e59f00a4 	ldr	r0, [pc, #164]	; a03034e0 <fixup_ptable+0x1d0>
+a0303438:	eb001d98 	bl	a030aaa0 <printf>
+a030343c:	e3e02000 	mvn	r2, #0	; 0x0
+a0303440:	e50b2028 	str	r2, [fp, -#40]
+a0303444:	ea000020 	b	a03034cc <fixup_ptable+0x1bc>
+a0303448:	e51b3024 	ldr	r3, [fp, -#36]
+a030344c:	e5933008 	ldr	r3, [r3, #8]
+a0303450:	e3730001 	cmn	r3, #1	; 0x1
+a0303454:	1a000002 	bne	a0303464 <fixup_ptable+0x154>
+a0303458:	e51b2024 	ldr	r2, [fp, -#36]
+a030345c:	e51b3018 	ldr	r3, [fp, -#24]
+a0303460:	e5823008 	str	r3, [r2, #8]
+a0303464:	e51b3024 	ldr	r3, [fp, -#36]
+a0303468:	e593300c 	ldr	r3, [r3, #12]
+a030346c:	e3730001 	cmn	r3, #1	; 0x1
+a0303470:	1a000004 	bne	a0303488 <fixup_ptable+0x178>
+a0303474:	e51b3024 	ldr	r3, [fp, -#36]
+a0303478:	e51b201c 	ldr	r2, [fp, -#28]
+a030347c:	e583200c 	str	r2, [r3, #12]
+a0303480:	e3a03001 	mov	r3, #1	; 0x1
+a0303484:	e50b3020 	str	r3, [fp, -#32]
+a0303488:	e51b3024 	ldr	r3, [fp, -#36]
+a030348c:	e51b2018 	ldr	r2, [fp, -#24]
+a0303490:	e593300c 	ldr	r3, [r3, #12]
+a0303494:	e0823003 	add	r3, r2, r3
+a0303498:	e50b3018 	str	r3, [fp, -#24]
+a030349c:	e51b3024 	ldr	r3, [fp, -#36]
+a03034a0:	e51b201c 	ldr	r2, [fp, -#28]
+a03034a4:	e593300c 	ldr	r3, [r3, #12]
+a03034a8:	e0633002 	rsb	r3, r3, r2
+a03034ac:	e50b301c 	str	r3, [fp, -#28]
+a03034b0:	eaffffb8 	b	a0303398 <fixup_ptable+0x88>
+a03034b4:	eb000fd0 	bl	a03073fc <printerrprefix>
+a03034b8:	e59f0024 	ldr	r0, [pc, #36]	; a03034e4 <fixup_ptable+0x1d4>
+a03034bc:	e51b1024 	ldr	r1, [fp, -#36]
+a03034c0:	eb001d76 	bl	a030aaa0 <printf>
+a03034c4:	e3e03000 	mvn	r3, #0	; 0x0
+a03034c8:	e50b3028 	str	r3, [fp, -#40]
+a03034cc:	e51b0028 	ldr	r0, [fp, -#40]
+a03034d0:	e91ba810 	ldmdb	fp, {r4, fp, sp, pc}
+a03034d4:	a030c948 	eorges	ip, r0, r8, asr #18
+a03034d8:	a030c964 	eorges	ip, r0, r4, ror #18
+a03034dc:	42504530 	submis	r4, r0, #201326592	; 0xc000000
+a03034e0:	a030c97c 	eorges	ip, r0, ip, ror r9
+a03034e4:	a030c928 	eorges	ip, r0, r8, lsr #18
+
+a03034e8 <ptable_init>:
+a03034e8:	e1a0c00d 	mov	ip, sp
+a03034ec:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03034f0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03034f4:	e24dd008 	sub	sp, sp, #8	; 0x8
+a03034f8:	e59f2124 	ldr	r2, [pc, #292]	; a0303624 <ptable_init+0x13c>
+a03034fc:	e3a03000 	mov	r3, #0	; 0x0
+a0303500:	e58d3000 	str	r3, [sp]
+a0303504:	e5920000 	ldr	r0, [r2]
+a0303508:	e59f1118 	ldr	r1, [pc, #280]	; a0303628 <ptable_init+0x140>
+a030350c:	e59f2118 	ldr	r2, [pc, #280]	; a030362c <ptable_init+0x144>
+a0303510:	e3a03040 	mov	r3, #64	; 0x40
+a0303514:	ebfffe81 	bl	a0302f20 <copy_ptable>
+a0303518:	e1a03000 	mov	r3, r0
+a030351c:	e50b3010 	str	r3, [fp, -#16]
+a0303520:	e51b3010 	ldr	r3, [fp, -#16]
+a0303524:	e3530000 	cmp	r3, #0	; 0x0
+a0303528:	1a000006 	bne	a0303548 <ptable_init+0x60>
+a030352c:	e59f30f4 	ldr	r3, [pc, #244]	; a0303628 <ptable_init+0x140>
+a0303530:	e59f20f8 	ldr	r2, [pc, #248]	; a0303630 <ptable_init+0x148>
+a0303534:	e5832000 	str	r2, [r3]
+a0303538:	e59f30e4 	ldr	r3, [pc, #228]	; a0303624 <ptable_init+0x13c>
+a030353c:	e59f00f0 	ldr	r0, [pc, #240]	; a0303634 <ptable_init+0x14c>
+a0303540:	e5931000 	ldr	r1, [r3]
+a0303544:	eb001d55 	bl	a030aaa0 <printf>
+a0303548:	ebfffe3c 	bl	a0302e40 <find_flash_ptable>
+a030354c:	e59f20e4 	ldr	r2, [pc, #228]	; a0303638 <ptable_init+0x150>
+a0303550:	e3a03001 	mov	r3, #1	; 0x1
+a0303554:	e58d3000 	str	r3, [sp]
+a0303558:	e5920000 	ldr	r0, [r2]
+a030355c:	e59f10c4 	ldr	r1, [pc, #196]	; a0303628 <ptable_init+0x140>
+a0303560:	e59f20d4 	ldr	r2, [pc, #212]	; a030363c <ptable_init+0x154>
+a0303564:	e3a03040 	mov	r3, #64	; 0x40
+a0303568:	ebfffe6c 	bl	a0302f20 <copy_ptable>
+a030356c:	e1a03000 	mov	r3, r0
+a0303570:	e50b3010 	str	r3, [fp, -#16]
+a0303574:	e51b3010 	ldr	r3, [fp, -#16]
+a0303578:	e3530000 	cmp	r3, #0	; 0x0
+a030357c:	1a000006 	bne	a030359c <ptable_init+0xb4>
+a0303580:	e59f30a0 	ldr	r3, [pc, #160]	; a0303628 <ptable_init+0x140>
+a0303584:	e59f20a4 	ldr	r2, [pc, #164]	; a0303630 <ptable_init+0x148>
+a0303588:	e5832000 	str	r2, [r3]
+a030358c:	e59f30a4 	ldr	r3, [pc, #164]	; a0303638 <ptable_init+0x150>
+a0303590:	e59f00a8 	ldr	r0, [pc, #168]	; a0303640 <ptable_init+0x158>
+a0303594:	e5931000 	ldr	r1, [r3]
+a0303598:	eb001d40 	bl	a030aaa0 <printf>
+a030359c:	e59f0084 	ldr	r0, [pc, #132]	; a0303628 <ptable_init+0x140>
+a03035a0:	e59f1088 	ldr	r1, [pc, #136]	; a0303630 <ptable_init+0x148>
+a03035a4:	ebfffe0c 	bl	a0302ddc <check_ptable_magic>
+a03035a8:	e1a03000 	mov	r3, r0
+a03035ac:	e3530000 	cmp	r3, #0	; 0x0
+a03035b0:	0a000002 	beq	a03035c0 <ptable_init+0xd8>
+a03035b4:	e59f0088 	ldr	r0, [pc, #136]	; a0303644 <ptable_init+0x15c>
+a03035b8:	eb001d38 	bl	a030aaa0 <printf>
+a03035bc:	ea000006 	b	a03035dc <ptable_init+0xf4>
+a03035c0:	e59f0060 	ldr	r0, [pc, #96]	; a0303628 <ptable_init+0x140>
+a03035c4:	ebffff51 	bl	a0303310 <fixup_ptable>
+a03035c8:	e1a03000 	mov	r3, r0
+a03035cc:	e3530000 	cmp	r3, #0	; 0x0
+a03035d0:	0a000012 	beq	a0303620 <ptable_init+0x138>
+a03035d4:	e59f006c 	ldr	r0, [pc, #108]	; a0303648 <ptable_init+0x160>
+a03035d8:	eb001d30 	bl	a030aaa0 <printf>
+a03035dc:	e59f2044 	ldr	r2, [pc, #68]	; a0303628 <ptable_init+0x140>
+a03035e0:	e59f3048 	ldr	r3, [pc, #72]	; a0303630 <ptable_init+0x148>
+a03035e4:	e5823000 	str	r3, [r2]
+a03035e8:	e59f2038 	ldr	r2, [pc, #56]	; a0303628 <ptable_init+0x140>
+a03035ec:	e3a0303c 	mov	r3, #60	; 0x3c
+a03035f0:	e5823004 	str	r3, [r2, #4]
+a03035f4:	e59f202c 	ldr	r2, [pc, #44]	; a0303628 <ptable_init+0x140>
+a03035f8:	e3a03000 	mov	r3, #0	; 0x0
+a03035fc:	e5823008 	str	r3, [r2, #8]
+a0303600:	e59f2020 	ldr	r2, [pc, #32]	; a0303628 <ptable_init+0x140>
+a0303604:	e3a03000 	mov	r3, #0	; 0x0
+a0303608:	e582300c 	str	r3, [r2, #12]
+a030360c:	e59f2014 	ldr	r2, [pc, #20]	; a0303628 <ptable_init+0x140>
+a0303610:	e3a03c45 	mov	r3, #17664	; 0x4500
+a0303614:	e28331cd 	add	r3, r3, #1073741875	; 0x40000033
+a0303618:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a030361c:	e582303c 	str	r3, [r2, #60]
+a0303620:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0303624:	a0310320 	eorges	r0, r1, r0, lsr #6
+a0303628:	a030e588 	eorges	lr, r0, r8, lsl #11
+a030362c:	42445054 	submi	r5, r4, #84	; 0x54
+a0303630:	42435054 	submi	r5, r3, #84	; 0x54
+a0303634:	a030c9c0 	eorges	ip, r0, r0, asr #19
+a0303638:	a0310340 	eorges	r0, r1, r0, asr #6
+a030363c:	42465054 	submi	r5, r6, #84	; 0x54
+a0303640:	a030c9ec 	eorges	ip, r0, ip, ror #19
+a0303644:	a030ca14 	eorges	ip, r0, r4, lsl sl
+a0303648:	a030ca34 	eorges	ip, r0, r4, lsr sl
+
+a030364c <pt_first>:
+a030364c:	e1a0c00d 	mov	ip, sp
+a0303650:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303654:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303658:	e59f000c 	ldr	r0, [pc, #12]	; a030366c <pt_first+0x20>
+a030365c:	eb000003 	bl	a0303670 <pt_next>
+a0303660:	e1a03000 	mov	r3, r0
+a0303664:	e1a00003 	mov	r0, r3
+a0303668:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030366c:	a030e588 	eorges	lr, r0, r8, lsl #11
+
+a0303670 <pt_next>:
+a0303670:	e1a0c00d 	mov	ip, sp
+a0303674:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303678:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030367c:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0303680:	e50b0010 	str	r0, [fp, -#16]
+a0303684:	e51b3010 	ldr	r3, [fp, -#16]
+a0303688:	e51b2010 	ldr	r2, [fp, -#16]
+a030368c:	e5933004 	ldr	r3, [r3, #4]
+a0303690:	e0823003 	add	r3, r2, r3
+a0303694:	e50b3010 	str	r3, [fp, -#16]
+a0303698:	e51b3010 	ldr	r3, [fp, -#16]
+a030369c:	e5933000 	ldr	r3, [r3]
+a03036a0:	e50b3018 	str	r3, [fp, -#24]
+a03036a4:	e3a03c45 	mov	r3, #17664	; 0x4500
+a03036a8:	e28331c5 	add	r3, r3, #1073741873	; 0x40000031
+a03036ac:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a03036b0:	e51b2018 	ldr	r2, [fp, -#24]
+a03036b4:	e1520003 	cmp	r2, r3
+a03036b8:	0a000014 	beq	a0303710 <pt_next+0xa0>
+a03036bc:	e3a03c45 	mov	r3, #17664	; 0x4500
+a03036c0:	e28331c5 	add	r3, r3, #1073741873	; 0x40000031
+a03036c4:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a03036c8:	e51b2018 	ldr	r2, [fp, -#24]
+a03036cc:	e1520003 	cmp	r2, r3
+a03036d0:	8a000004 	bhi	a03036e8 <pt_next+0x78>
+a03036d4:	e59f3050 	ldr	r3, [pc, #80]	; a030372c <pt_next+0xbc>
+a03036d8:	e51b2018 	ldr	r2, [fp, -#24]
+a03036dc:	e1520003 	cmp	r2, r3
+a03036e0:	0affffe7 	beq	a0303684 <pt_next+0x14>
+a03036e4:	ea00000c 	b	a030371c <pt_next+0xac>
+a03036e8:	e3a03c45 	mov	r3, #17664	; 0x4500
+a03036ec:	e28331cd 	add	r3, r3, #1073741875	; 0x40000033
+a03036f0:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a03036f4:	e51b2018 	ldr	r2, [fp, -#24]
+a03036f8:	e1520003 	cmp	r2, r3
+a03036fc:	0a000000 	beq	a0303704 <pt_next+0x94>
+a0303700:	ea000005 	b	a030371c <pt_next+0xac>
+a0303704:	e3a03000 	mov	r3, #0	; 0x0
+a0303708:	e50b3014 	str	r3, [fp, -#20]
+a030370c:	ea000004 	b	a0303724 <pt_next+0xb4>
+a0303710:	e51b3010 	ldr	r3, [fp, -#16]
+a0303714:	e50b3014 	str	r3, [fp, -#20]
+a0303718:	ea000001 	b	a0303724 <pt_next+0xb4>
+a030371c:	e3a02000 	mov	r2, #0	; 0x0
+a0303720:	e50b2014 	str	r2, [fp, -#20]
+a0303724:	e51b0014 	ldr	r0, [fp, -#20]
+a0303728:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030372c:	42504530 	submis	r4, r0, #201326592	; 0xc000000
+
+a0303730 <pt_find_by_name>:
+a0303730:	e1a0c00d 	mov	ip, sp
+a0303734:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303738:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030373c:	e24dd010 	sub	sp, sp, #16	; 0x10
+a0303740:	e50b0010 	str	r0, [fp, -#16]
+a0303744:	e59f30dc 	ldr	r3, [pc, #220]	; a0303828 <pt_find_by_name+0xf8>
+a0303748:	e50b3014 	str	r3, [fp, -#20]
+a030374c:	e51b3014 	ldr	r3, [fp, -#20]
+a0303750:	e51b2014 	ldr	r2, [fp, -#20]
+a0303754:	e5933004 	ldr	r3, [r3, #4]
+a0303758:	e0823003 	add	r3, r2, r3
+a030375c:	e50b3014 	str	r3, [fp, -#20]
+a0303760:	e51b3014 	ldr	r3, [fp, -#20]
+a0303764:	e5933000 	ldr	r3, [r3]
+a0303768:	e50b301c 	str	r3, [fp, -#28]
+a030376c:	e3a03c45 	mov	r3, #17664	; 0x4500
+a0303770:	e28331c5 	add	r3, r3, #1073741873	; 0x40000031
+a0303774:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a0303778:	e51b201c 	ldr	r2, [fp, -#28]
+a030377c:	e1520003 	cmp	r2, r3
+a0303780:	0a000014 	beq	a03037d8 <pt_find_by_name+0xa8>
+a0303784:	e3a03c45 	mov	r3, #17664	; 0x4500
+a0303788:	e28331c5 	add	r3, r3, #1073741873	; 0x40000031
+a030378c:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a0303790:	e51b201c 	ldr	r2, [fp, -#28]
+a0303794:	e1520003 	cmp	r2, r3
+a0303798:	8a000004 	bhi	a03037b0 <pt_find_by_name+0x80>
+a030379c:	e59f3088 	ldr	r3, [pc, #136]	; a030382c <pt_find_by_name+0xfc>
+a03037a0:	e51b201c 	ldr	r2, [fp, -#28]
+a03037a4:	e1520003 	cmp	r2, r3
+a03037a8:	0affffe7 	beq	a030374c <pt_find_by_name+0x1c>
+a03037ac:	ea000015 	b	a0303808 <pt_find_by_name+0xd8>
+a03037b0:	e3a03c45 	mov	r3, #17664	; 0x4500
+a03037b4:	e28331cd 	add	r3, r3, #1073741875	; 0x40000033
+a03037b8:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a03037bc:	e51b201c 	ldr	r2, [fp, -#28]
+a03037c0:	e1520003 	cmp	r2, r3
+a03037c4:	0a000000 	beq	a03037cc <pt_find_by_name+0x9c>
+a03037c8:	ea00000e 	b	a0303808 <pt_find_by_name+0xd8>
+a03037cc:	e3a03000 	mov	r3, #0	; 0x0
+a03037d0:	e50b3018 	str	r3, [fp, -#24]
+a03037d4:	ea000011 	b	a0303820 <pt_find_by_name+0xf0>
+a03037d8:	e51b3014 	ldr	r3, [fp, -#20]
+a03037dc:	e2833010 	add	r3, r3, #16	; 0x10
+a03037e0:	e1a00003 	mov	r0, r3
+a03037e4:	e51b1010 	ldr	r1, [fp, -#16]
+a03037e8:	e3a02020 	mov	r2, #32	; 0x20
+a03037ec:	eb001ec1 	bl	a030b2f8 <strncmp>
+a03037f0:	e1a03000 	mov	r3, r0
+a03037f4:	e3530000 	cmp	r3, #0	; 0x0
+a03037f8:	1affffd3 	bne	a030374c <pt_find_by_name+0x1c>
+a03037fc:	e51b3014 	ldr	r3, [fp, -#20]
+a0303800:	e50b3018 	str	r3, [fp, -#24]
+a0303804:	ea000005 	b	a0303820 <pt_find_by_name+0xf0>
+a0303808:	eb000efb 	bl	a03073fc <printerrprefix>
+a030380c:	e59f001c 	ldr	r0, [pc, #28]	; a0303830 <pt_find_by_name+0x100>
+a0303810:	e51b1014 	ldr	r1, [fp, -#20]
+a0303814:	eb001ca1 	bl	a030aaa0 <printf>
+a0303818:	e3a02000 	mov	r2, #0	; 0x0
+a030381c:	e50b2018 	str	r2, [fp, -#24]
+a0303820:	e51b0018 	ldr	r0, [fp, -#24]
+a0303824:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0303828:	a030e588 	eorges	lr, r0, r8, lsl #11
+a030382c:	42504530 	submis	r4, r0, #201326592	; 0xc000000
+a0303830:	a030c928 	eorges	ip, r0, r8, lsr #18
+
+a0303834 <pt_find_by_address>:
+a0303834:	e1a0c00d 	mov	ip, sp
+a0303838:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030383c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303840:	e24dd010 	sub	sp, sp, #16	; 0x10
+a0303844:	e50b0010 	str	r0, [fp, -#16]
+a0303848:	e59f30ec 	ldr	r3, [pc, #236]	; a030393c <pt_find_by_address+0x108>
+a030384c:	e50b3014 	str	r3, [fp, -#20]
+a0303850:	e51b3014 	ldr	r3, [fp, -#20]
+a0303854:	e51b2014 	ldr	r2, [fp, -#20]
+a0303858:	e5933004 	ldr	r3, [r3, #4]
+a030385c:	e0823003 	add	r3, r2, r3
+a0303860:	e50b3014 	str	r3, [fp, -#20]
+a0303864:	e51b3014 	ldr	r3, [fp, -#20]
+a0303868:	e5933000 	ldr	r3, [r3]
+a030386c:	e50b301c 	str	r3, [fp, -#28]
+a0303870:	e3a03c45 	mov	r3, #17664	; 0x4500
+a0303874:	e28331c5 	add	r3, r3, #1073741873	; 0x40000031
+a0303878:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a030387c:	e51b201c 	ldr	r2, [fp, -#28]
+a0303880:	e1520003 	cmp	r2, r3
+a0303884:	0a000014 	beq	a03038dc <pt_find_by_address+0xa8>
+a0303888:	e3a03c45 	mov	r3, #17664	; 0x4500
+a030388c:	e28331c5 	add	r3, r3, #1073741873	; 0x40000031
+a0303890:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a0303894:	e51b201c 	ldr	r2, [fp, -#28]
+a0303898:	e1520003 	cmp	r2, r3
+a030389c:	8a000004 	bhi	a03038b4 <pt_find_by_address+0x80>
+a03038a0:	e59f3098 	ldr	r3, [pc, #152]	; a0303940 <pt_find_by_address+0x10c>
+a03038a4:	e51b201c 	ldr	r2, [fp, -#28]
+a03038a8:	e1520003 	cmp	r2, r3
+a03038ac:	0affffe7 	beq	a0303850 <pt_find_by_address+0x1c>
+a03038b0:	ea000019 	b	a030391c <pt_find_by_address+0xe8>
+a03038b4:	e3a03c45 	mov	r3, #17664	; 0x4500
+a03038b8:	e28331cd 	add	r3, r3, #1073741875	; 0x40000033
+a03038bc:	e2833625 	add	r3, r3, #38797312	; 0x2500000
+a03038c0:	e51b201c 	ldr	r2, [fp, -#28]
+a03038c4:	e1520003 	cmp	r2, r3
+a03038c8:	0a000000 	beq	a03038d0 <pt_find_by_address+0x9c>
+a03038cc:	ea000012 	b	a030391c <pt_find_by_address+0xe8>
+a03038d0:	e3a03000 	mov	r3, #0	; 0x0
+a03038d4:	e50b3018 	str	r3, [fp, -#24]
+a03038d8:	ea000015 	b	a0303934 <pt_find_by_address+0x100>
+a03038dc:	e51b3014 	ldr	r3, [fp, -#20]
+a03038e0:	e51b2010 	ldr	r2, [fp, -#16]
+a03038e4:	e5933008 	ldr	r3, [r3, #8]
+a03038e8:	e1520003 	cmp	r2, r3
+a03038ec:	3affffd7 	bcc	a0303850 <pt_find_by_address+0x1c>
+a03038f0:	e51b3014 	ldr	r3, [fp, -#20]
+a03038f4:	e51b2014 	ldr	r2, [fp, -#20]
+a03038f8:	e5931008 	ldr	r1, [r3, #8]
+a03038fc:	e592300c 	ldr	r3, [r2, #12]
+a0303900:	e0812003 	add	r2, r1, r3
+a0303904:	e51b3010 	ldr	r3, [fp, -#16]
+a0303908:	e1530002 	cmp	r3, r2
+a030390c:	2affffcf 	bcs	a0303850 <pt_find_by_address+0x1c>
+a0303910:	e51b3014 	ldr	r3, [fp, -#20]
+a0303914:	e50b3018 	str	r3, [fp, -#24]
+a0303918:	ea000005 	b	a0303934 <pt_find_by_address+0x100>
+a030391c:	eb000eb6 	bl	a03073fc <printerrprefix>
+a0303920:	e59f001c 	ldr	r0, [pc, #28]	; a0303944 <pt_find_by_address+0x110>
+a0303924:	e51b1014 	ldr	r1, [fp, -#20]
+a0303928:	eb001c5c 	bl	a030aaa0 <printf>
+a030392c:	e3a02000 	mov	r2, #0	; 0x0
+a0303930:	e50b2018 	str	r2, [fp, -#24]
+a0303934:	e51b0018 	ldr	r0, [fp, -#24]
+a0303938:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030393c:	a030e588 	eorges	lr, r0, r8, lsl #11
+a0303940:	42504530 	submis	r4, r0, #201326592	; 0xc000000
+a0303944:	a030c928 	eorges	ip, r0, r8, lsr #18
+
+a0303948 <pt_flash_start>:
+a0303948:	e1a0c00d 	mov	ip, sp
+a030394c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303950:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303954:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0303958:	e50b0010 	str	r0, [fp, -#16]
+a030395c:	e59f3014 	ldr	r3, [pc, #20]	; a0303978 <pt_flash_start+0x30>
+a0303960:	e51b2010 	ldr	r2, [fp, -#16]
+a0303964:	e5931008 	ldr	r1, [r3, #8]
+a0303968:	e5923008 	ldr	r3, [r2, #8]
+a030396c:	e0813003 	add	r3, r1, r3
+a0303970:	e1a00003 	mov	r0, r3
+a0303974:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0303978:	a030e588 	eorges	lr, r0, r8, lsl #11
+
+a030397c <ptprint>:
+a030397c:	e1a0c00d 	mov	ip, sp
+a0303980:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303984:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303988:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030398c:	e50b0010 	str	r0, [fp, -#16]
+a0303990:	e50b1014 	str	r1, [fp, -#20]
+a0303994:	e59f000c 	ldr	r0, [pc, #12]	; a03039a8 <ptprint+0x2c>
+a0303998:	ebfffdd7 	bl	a03030fc <ptable_print>
+a030399c:	e3a03000 	mov	r3, #0	; 0x0
+a03039a0:	e1a00003 	mov	r0, r3
+a03039a4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03039a8:	a030e588 	eorges	lr, r0, r8, lsl #11
+
+a03039ac <reblob>:
+a03039ac:	e1a0c00d 	mov	ip, sp
+a03039b0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03039b4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03039b8:	e24dd010 	sub	sp, sp, #16	; 0x10
+a03039bc:	e50b0010 	str	r0, [fp, -#16]
+a03039c0:	e50b1014 	str	r1, [fp, -#20]
+a03039c4:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a03039c8:	e2833602 	add	r3, r3, #2097152	; 0x200000
+a03039cc:	e50b3018 	str	r3, [fp, -#24]
+a03039d0:	e59f304c 	ldr	r3, [pc, #76]	; a0303a24 <reblob+0x78>
+a03039d4:	e593304c 	ldr	r3, [r3, #76]
+a03039d8:	e3530000 	cmp	r3, #0	; 0x0
+a03039dc:	1a000005 	bne	a03039f8 <reblob+0x4c>
+a03039e0:	eb000e85 	bl	a03073fc <printerrprefix>
+a03039e4:	e59f003c 	ldr	r0, [pc, #60]	; a0303a28 <reblob+0x7c>
+a03039e8:	eb001c2c 	bl	a030aaa0 <printf>
+a03039ec:	e3e03000 	mvn	r3, #0	; 0x0
+a03039f0:	e50b301c 	str	r3, [fp, -#28]
+a03039f4:	ea000008 	b	a0303a1c <reblob+0x70>
+a03039f8:	e59f002c 	ldr	r0, [pc, #44]	; a0303a2c <reblob+0x80>
+a03039fc:	eb001c27 	bl	a030aaa0 <printf>
+a0303a00:	eb001ccf 	bl	a030ad44 <serial_flush_output>
+a0303a04:	eb000f76 	bl	a03077e4 <exit_subsystems>
+a0303a08:	e51b3018 	ldr	r3, [fp, -#24]
+a0303a0c:	e1a0e00f 	mov	lr, pc
+a0303a10:	e1a0f003 	mov	pc, r3
+a0303a14:	e3a03000 	mov	r3, #0	; 0x0
+a0303a18:	e50b301c 	str	r3, [fp, -#28]
+a0303a1c:	e51b001c 	ldr	r0, [fp, -#28]
+a0303a20:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0303a24:	a030fd20 	eorges	pc, r0, r0, lsr #26
+a0303a28:	a030ca60 	eorges	ip, r0, r0, ror #20
+a0303a2c:	a030ca78 	eorges	ip, r0, r8, ror sl
+
+a0303a30 <ldr_update_progress>:
+a0303a30:	e1a0c00d 	mov	ip, sp
+a0303a34:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303a38:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303a3c:	e59f0004 	ldr	r0, [pc, #4]	; a0303a48 <ldr_update_progress+0x18>
+a0303a40:	eb001c16 	bl	a030aaa0 <printf>
+a0303a44:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0303a48:	a030caa0 	eorges	ip, r0, r0, lsr #21
+
+a0303a4c <load_kernel>:
+a0303a4c:	e1a0c00d 	mov	ip, sp
+a0303a50:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303a54:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303a58:	e24dd020 	sub	sp, sp, #32	; 0x20
+a0303a5c:	e50b0010 	str	r0, [fp, -#16]
+a0303a60:	e3a03000 	mov	r3, #0	; 0x0
+a0303a64:	e50b3018 	str	r3, [fp, -#24]
+a0303a68:	ebfffef7 	bl	a030364c <pt_first>
+a0303a6c:	e1a03000 	mov	r3, r0
+a0303a70:	e50b301c 	str	r3, [fp, -#28]
+a0303a74:	e51b301c 	ldr	r3, [fp, -#28]
+a0303a78:	e3530000 	cmp	r3, #0	; 0x0
+a0303a7c:	1a000000 	bne	a0303a84 <load_kernel+0x38>
+a0303a80:	ea00001e 	b	a0303b00 <load_kernel+0xb4>
+a0303a84:	e51b301c 	ldr	r3, [fp, -#28]
+a0303a88:	e5933030 	ldr	r3, [r3, #48]
+a0303a8c:	e2033004 	and	r3, r3, #4	; 0x4
+a0303a90:	e3530000 	cmp	r3, #0	; 0x0
+a0303a94:	0a000014 	beq	a0303aec <load_kernel+0xa0>
+a0303a98:	e59f3128 	ldr	r3, [pc, #296]	; a0303bc8 <load_kernel+0x17c>
+a0303a9c:	e50b3018 	str	r3, [fp, -#24]
+a0303aa0:	e51b001c 	ldr	r0, [fp, -#28]
+a0303aa4:	ebffffa7 	bl	a0303948 <pt_flash_start>
+a0303aa8:	e50b0020 	str	r0, [fp, -#32]
+a0303aac:	e51b301c 	ldr	r3, [fp, -#28]
+a0303ab0:	e593300c 	ldr	r3, [r3, #12]
+a0303ab4:	e50b3028 	str	r3, [fp, -#40]
+a0303ab8:	e51b0020 	ldr	r0, [fp, -#32]
+a0303abc:	ebfff54c 	bl	a0300ff4 <flash_get_block_size>
+a0303ac0:	e50b0024 	str	r0, [fp, -#36]
+a0303ac4:	e51b3018 	ldr	r3, [fp, -#24]
+a0303ac8:	e24b2028 	sub	r2, fp, #40	; 0x28
+a0303acc:	e5933000 	ldr	r3, [r3]
+a0303ad0:	e1a00002 	mov	r0, r2
+a0303ad4:	e1a0e00f 	mov	lr, pc
+a0303ad8:	e1a0f003 	mov	pc, r3
+a0303adc:	e1a03000 	mov	r3, r0
+a0303ae0:	e3530000 	cmp	r3, #0	; 0x0
+a0303ae4:	0a000000 	beq	a0303aec <load_kernel+0xa0>
+a0303ae8:	ea000004 	b	a0303b00 <load_kernel+0xb4>
+a0303aec:	e51b001c 	ldr	r0, [fp, -#28]
+a0303af0:	ebfffede 	bl	a0303670 <pt_next>
+a0303af4:	e1a03000 	mov	r3, r0
+a0303af8:	e50b301c 	str	r3, [fp, -#28]
+a0303afc:	eaffffdc 	b	a0303a74 <load_kernel+0x28>
+a0303b00:	e51b301c 	ldr	r3, [fp, -#28]
+a0303b04:	e3530000 	cmp	r3, #0	; 0x0
+a0303b08:	1a000005 	bne	a0303b24 <load_kernel+0xd8>
+a0303b0c:	eb000e3a 	bl	a03073fc <printerrprefix>
+a0303b10:	e59f00b4 	ldr	r0, [pc, #180]	; a0303bcc <load_kernel+0x180>
+a0303b14:	eb001be1 	bl	a030aaa0 <printf>
+a0303b18:	e3a03001 	mov	r3, #1	; 0x1
+a0303b1c:	e50b302c 	str	r3, [fp, -#44]
+a0303b20:	ea000026 	b	a0303bc0 <load_kernel+0x174>
+a0303b24:	e51b301c 	ldr	r3, [fp, -#28]
+a0303b28:	e2833010 	add	r3, r3, #16	; 0x10
+a0303b2c:	e51b2018 	ldr	r2, [fp, -#24]
+a0303b30:	e59f0098 	ldr	r0, [pc, #152]	; a0303bd0 <load_kernel+0x184>
+a0303b34:	e1a01003 	mov	r1, r3
+a0303b38:	e5922008 	ldr	r2, [r2, #8]
+a0303b3c:	eb001bd7 	bl	a030aaa0 <printf>
+a0303b40:	e51b3018 	ldr	r3, [fp, -#24]
+a0303b44:	e24b2028 	sub	r2, fp, #40	; 0x28
+a0303b48:	e5933004 	ldr	r3, [r3, #4]
+a0303b4c:	e3a0020a 	mov	r0, #-1610612736	; 0xa0000000
+a0303b50:	e2800902 	add	r0, r0, #32768	; 0x8000
+a0303b54:	e1a01002 	mov	r1, r2
+a0303b58:	e59f2074 	ldr	r2, [pc, #116]	; a0303bd4 <load_kernel+0x188>
+a0303b5c:	e1a0e00f 	mov	lr, pc
+a0303b60:	e1a0f003 	mov	pc, r3
+a0303b64:	e1a03000 	mov	r3, r0
+a0303b68:	e50b3014 	str	r3, [fp, -#20]
+a0303b6c:	e51b3014 	ldr	r3, [fp, -#20]
+a0303b70:	e3530000 	cmp	r3, #0	; 0x0
+a0303b74:	1a000005 	bne	a0303b90 <load_kernel+0x144>
+a0303b78:	eb000e1f 	bl	a03073fc <printerrprefix>
+a0303b7c:	e59f0054 	ldr	r0, [pc, #84]	; a0303bd8 <load_kernel+0x18c>
+a0303b80:	eb001bc6 	bl	a030aaa0 <printf>
+a0303b84:	e3a03001 	mov	r3, #1	; 0x1
+a0303b88:	e50b302c 	str	r3, [fp, -#44]
+a0303b8c:	ea00000b 	b	a0303bc0 <load_kernel+0x174>
+a0303b90:	e51b2010 	ldr	r2, [fp, -#16]
+a0303b94:	e51b3014 	ldr	r3, [fp, -#20]
+a0303b98:	e5823000 	str	r3, [r2]
+a0303b9c:	e51b2010 	ldr	r2, [fp, -#16]
+a0303ba0:	e3a03000 	mov	r3, #0	; 0x0
+a0303ba4:	e5823004 	str	r3, [r2, #4]
+a0303ba8:	e59f002c 	ldr	r0, [pc, #44]	; a0303bdc <load_kernel+0x190>
+a0303bac:	e51b1014 	ldr	r1, [fp, -#20]
+a0303bb0:	e51b2014 	ldr	r2, [fp, -#20]
+a0303bb4:	eb001bb9 	bl	a030aaa0 <printf>
+a0303bb8:	e3a03000 	mov	r3, #0	; 0x0
+a0303bbc:	e50b302c 	str	r3, [fp, -#44]
+a0303bc0:	e51b002c 	ldr	r0, [fp, -#44]
+a0303bc4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0303bc8:	a030d77c 	eorges	sp, r0, ip, ror r7
+a0303bcc:	a030caa4 	eorges	ip, r0, r4, lsr #21
+a0303bd0:	a030cabc 	ldrgeh	ip, [r0], -ip
+a0303bd4:	a030cae8 	eorges	ip, r0, r8, ror #21
+a0303bd8:	a030caf4 	ldrgesh	ip, [r0], -r4
+a0303bdc:	a030cb0c 	eorges	ip, r0, ip, lsl #22
+
+a0303be0 <zImage_check_magic>:
+a0303be0:	e1a0c00d 	mov	ip, sp
+a0303be4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303be8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303bec:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0303bf0:	e50b0010 	str	r0, [fp, -#16]
+a0303bf4:	e51b3010 	ldr	r3, [fp, -#16]
+a0303bf8:	e3a02024 	mov	r2, #36	; 0x24
+a0303bfc:	e5933008 	ldr	r3, [r3, #8]
+a0303c00:	e0823003 	add	r3, r2, r3
+a0303c04:	e5932000 	ldr	r2, [r3]
+a0303c08:	e3a0375b 	mov	r3, #23855104	; 0x16c0000
+a0303c0c:	e2833bca 	add	r3, r3, #206848	; 0x32800
+a0303c10:	e2833018 	add	r3, r3, #24	; 0x18
+a0303c14:	e1520003 	cmp	r2, r3
+a0303c18:	13a03000 	movne	r3, #0	; 0x0
+a0303c1c:	03a03001 	moveq	r3, #1	; 0x1
+a0303c20:	e1a00003 	mov	r0, r3
+a0303c24:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0303c28 <zImage_load_kernel>:
+a0303c28:	e1a0c00d 	mov	ip, sp
+a0303c2c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303c30:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303c34:	e24dd014 	sub	sp, sp, #20	; 0x14
+a0303c38:	e50b0010 	str	r0, [fp, -#16]
+a0303c3c:	e50b1014 	str	r1, [fp, -#20]
+a0303c40:	e50b2018 	str	r2, [fp, -#24]
+a0303c44:	e51b3014 	ldr	r3, [fp, -#20]
+a0303c48:	e3a0202c 	mov	r2, #44	; 0x2c
+a0303c4c:	e5933008 	ldr	r3, [r3, #8]
+a0303c50:	e0821003 	add	r1, r2, r3
+a0303c54:	e51b3014 	ldr	r3, [fp, -#20]
+a0303c58:	e3a02028 	mov	r2, #40	; 0x28
+a0303c5c:	e5933008 	ldr	r3, [r3, #8]
+a0303c60:	e0823003 	add	r3, r2, r3
+a0303c64:	e5912000 	ldr	r2, [r1]
+a0303c68:	e5933000 	ldr	r3, [r3]
+a0303c6c:	e0633002 	rsb	r3, r3, r2
+a0303c70:	e50b301c 	str	r3, [fp, -#28]
+a0303c74:	e3a03000 	mov	r3, #0	; 0x0
+a0303c78:	e50b3020 	str	r3, [fp, -#32]
+a0303c7c:	e51b301c 	ldr	r3, [fp, -#28]
+a0303c80:	e2432701 	sub	r2, r3, #262144	; 0x40000
+a0303c84:	e51b3020 	ldr	r3, [fp, -#32]
+a0303c88:	e1530002 	cmp	r3, r2
+a0303c8c:	9a000000 	bls	a0303c94 <zImage_load_kernel+0x6c>
+a0303c90:	ea00000f 	b	a0303cd4 <zImage_load_kernel+0xac>
+a0303c94:	ebffff65 	bl	a0303a30 <ldr_update_progress>
+a0303c98:	e51b2010 	ldr	r2, [fp, -#16]
+a0303c9c:	e51b3020 	ldr	r3, [fp, -#32]
+a0303ca0:	e0821003 	add	r1, r2, r3
+a0303ca4:	e51b3014 	ldr	r3, [fp, -#20]
+a0303ca8:	e5932008 	ldr	r2, [r3, #8]
+a0303cac:	e51b3020 	ldr	r3, [fp, -#32]
+a0303cb0:	e0823003 	add	r3, r2, r3
+a0303cb4:	e1a00001 	mov	r0, r1
+a0303cb8:	e1a01003 	mov	r1, r3
+a0303cbc:	e3a02701 	mov	r2, #262144	; 0x40000
+a0303cc0:	eb0016c0 	bl	a03097c8 <memcpy>
+a0303cc4:	e51b3020 	ldr	r3, [fp, -#32]
+a0303cc8:	e2833701 	add	r3, r3, #262144	; 0x40000
+a0303ccc:	e50b3020 	str	r3, [fp, -#32]
+a0303cd0:	eaffffe9 	b	a0303c7c <zImage_load_kernel+0x54>
+a0303cd4:	e51b2010 	ldr	r2, [fp, -#16]
+a0303cd8:	e51b3020 	ldr	r3, [fp, -#32]
+a0303cdc:	e0820003 	add	r0, r2, r3
+a0303ce0:	e51b3014 	ldr	r3, [fp, -#20]
+a0303ce4:	e5932008 	ldr	r2, [r3, #8]
+a0303ce8:	e51b3020 	ldr	r3, [fp, -#32]
+a0303cec:	e0821003 	add	r1, r2, r3
+a0303cf0:	e51b201c 	ldr	r2, [fp, -#28]
+a0303cf4:	e51b3020 	ldr	r3, [fp, -#32]
+a0303cf8:	e0633002 	rsb	r3, r3, r2
+a0303cfc:	e1a02003 	mov	r2, r3
+a0303d00:	eb0016b0 	bl	a03097c8 <memcpy>
+a0303d04:	e51b301c 	ldr	r3, [fp, -#28]
+a0303d08:	e1a00003 	mov	r0, r3
+a0303d0c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0303d10 <get_status>:
+a0303d10:	e1a0c00d 	mov	ip, sp
+a0303d14:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303d18:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303d1c:	e24dd014 	sub	sp, sp, #20	; 0x14
+a0303d20:	e50b0010 	str	r0, [fp, -#16]
+a0303d24:	eb001e77 	bl	a030b708 <timer_read>
+a0303d28:	e1a03000 	mov	r3, r0
+a0303d2c:	e50b3014 	str	r3, [fp, -#20]
+a0303d30:	eb001eb1 	bl	a030b7fc <timer_tps>
+a0303d34:	e1a02000 	mov	r2, r0
+a0303d38:	e1a03002 	mov	r3, r2
+a0303d3c:	e1a03103 	mov	r3, r3, lsl #2
+a0303d40:	e0833002 	add	r3, r3, r2
+a0303d44:	e1a02103 	mov	r2, r3, lsl #2
+a0303d48:	e51b3014 	ldr	r3, [fp, -#20]
+a0303d4c:	e0833002 	add	r3, r3, r2
+a0303d50:	e50b3018 	str	r3, [fp, -#24]
+a0303d54:	e51b3010 	ldr	r3, [fp, -#16]
+a0303d58:	e1d330b0 	ldrh	r3, [r3]
+a0303d5c:	e14b31ba 	strh	r3, [fp, -#26]
+a0303d60:	e15b31ba 	ldrh	r3, [fp, -#26]
+a0303d64:	e2033080 	and	r3, r3, #128	; 0x80
+a0303d68:	e1a03803 	mov	r3, r3, lsl #16
+a0303d6c:	e1a03823 	mov	r3, r3, lsr #16
+a0303d70:	e3530000 	cmp	r3, #0	; 0x0
+a0303d74:	0a000002 	beq	a0303d84 <get_status+0x74>
+a0303d78:	e15b31ba 	ldrh	r3, [fp, -#26]
+a0303d7c:	e50b3020 	str	r3, [fp, -#32]
+a0303d80:	ea000006 	b	a0303da0 <get_status+0x90>
+a0303d84:	eb001e5f 	bl	a030b708 <timer_read>
+a0303d88:	e1a02000 	mov	r2, r0
+a0303d8c:	e51b3018 	ldr	r3, [fp, -#24]
+a0303d90:	e1520003 	cmp	r2, r3
+a0303d94:	3affffee 	bcc	a0303d54 <get_status+0x44>
+a0303d98:	e3e03000 	mvn	r3, #0	; 0x0
+a0303d9c:	e50b3020 	str	r3, [fp, -#32]
+a0303da0:	e51b0020 	ldr	r0, [fp, -#32]
+a0303da4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0303da8 <clear_status>:
+a0303da8:	e1a0c00d 	mov	ip, sp
+a0303dac:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303db0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303db4:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0303db8:	e50b0010 	str	r0, [fp, -#16]
+a0303dbc:	e51b3010 	ldr	r3, [fp, -#16]
+a0303dc0:	e3a02050 	mov	r2, #80	; 0x50
+a0303dc4:	e1c320b0 	strh	r2, [r3]
+a0303dc8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0303dcc <print_flash_error>:
+a0303dcc:	e1a0c00d 	mov	ip, sp
+a0303dd0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303dd4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303dd8:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0303ddc:	e50b0010 	str	r0, [fp, -#16]
+a0303de0:	e50b1014 	str	r1, [fp, -#20]
+a0303de4:	e50b2018 	str	r2, [fp, -#24]
+a0303de8:	e3a0000a 	mov	r0, #10	; 0xa
+a0303dec:	eb001b91 	bl	a030ac38 <serial_write>
+a0303df0:	e51b0010 	ldr	r0, [fp, -#16]
+a0303df4:	eb001bde 	bl	a030ad74 <SerialOutputString>
+a0303df8:	e59f0104 	ldr	r0, [pc, #260]	; a0303f04 <print_flash_error+0x138>
+a0303dfc:	eb001bdc 	bl	a030ad74 <SerialOutputString>
+a0303e00:	e51b0014 	ldr	r0, [fp, -#20]
+a0303e04:	eb001bee 	bl	a030adc4 <SerialOutputHex>
+a0303e08:	e3a0000a 	mov	r0, #10	; 0xa
+a0303e0c:	eb001b89 	bl	a030ac38 <serial_write>
+a0303e10:	e59f00f0 	ldr	r0, [pc, #240]	; a0303f08 <print_flash_error+0x13c>
+a0303e14:	eb001bd6 	bl	a030ad74 <SerialOutputString>
+a0303e18:	e51b0018 	ldr	r0, [fp, -#24]
+a0303e1c:	eb001be8 	bl	a030adc4 <SerialOutputHex>
+a0303e20:	e3a0000a 	mov	r0, #10	; 0xa
+a0303e24:	eb001b83 	bl	a030ac38 <serial_write>
+a0303e28:	e51b3018 	ldr	r3, [fp, -#24]
+a0303e2c:	e3530000 	cmp	r3, #0	; 0x0
+a0303e30:	aa000002 	bge	a0303e40 <print_flash_error+0x74>
+a0303e34:	e59f00d0 	ldr	r0, [pc, #208]	; a0303f0c <print_flash_error+0x140>
+a0303e38:	eb001bcd 	bl	a030ad74 <SerialOutputString>
+a0303e3c:	ea00002d 	b	a0303ef8 <print_flash_error+0x12c>
+a0303e40:	e59f00c8 	ldr	r0, [pc, #200]	; a0303f10 <print_flash_error+0x144>
+a0303e44:	eb001bca 	bl	a030ad74 <SerialOutputString>
+a0303e48:	e51b3018 	ldr	r3, [fp, -#24]
+a0303e4c:	e2033080 	and	r3, r3, #128	; 0x80
+a0303e50:	e3530000 	cmp	r3, #0	; 0x0
+a0303e54:	0a000001 	beq	a0303e60 <print_flash_error+0x94>
+a0303e58:	e59f00b4 	ldr	r0, [pc, #180]	; a0303f14 <print_flash_error+0x148>
+a0303e5c:	eb001bc4 	bl	a030ad74 <SerialOutputString>
+a0303e60:	e51b3018 	ldr	r3, [fp, -#24]
+a0303e64:	e2033040 	and	r3, r3, #64	; 0x40
+a0303e68:	e3530000 	cmp	r3, #0	; 0x0
+a0303e6c:	0a000001 	beq	a0303e78 <print_flash_error+0xac>
+a0303e70:	e59f00a0 	ldr	r0, [pc, #160]	; a0303f18 <print_flash_error+0x14c>
+a0303e74:	eb001bbe 	bl	a030ad74 <SerialOutputString>
+a0303e78:	e51b3018 	ldr	r3, [fp, -#24]
+a0303e7c:	e2033020 	and	r3, r3, #32	; 0x20
+a0303e80:	e3530000 	cmp	r3, #0	; 0x0
+a0303e84:	0a000001 	beq	a0303e90 <print_flash_error+0xc4>
+a0303e88:	e59f008c 	ldr	r0, [pc, #140]	; a0303f1c <print_flash_error+0x150>
+a0303e8c:	eb001bb8 	bl	a030ad74 <SerialOutputString>
+a0303e90:	e51b3018 	ldr	r3, [fp, -#24]
+a0303e94:	e2033010 	and	r3, r3, #16	; 0x10
+a0303e98:	e3530000 	cmp	r3, #0	; 0x0
+a0303e9c:	0a000001 	beq	a0303ea8 <print_flash_error+0xdc>
+a0303ea0:	e59f0078 	ldr	r0, [pc, #120]	; a0303f20 <print_flash_error+0x154>
+a0303ea4:	eb001bb2 	bl	a030ad74 <SerialOutputString>
+a0303ea8:	e51b3018 	ldr	r3, [fp, -#24]
+a0303eac:	e2033008 	and	r3, r3, #8	; 0x8
+a0303eb0:	e3530000 	cmp	r3, #0	; 0x0
+a0303eb4:	0a000001 	beq	a0303ec0 <print_flash_error+0xf4>
+a0303eb8:	e59f0064 	ldr	r0, [pc, #100]	; a0303f24 <print_flash_error+0x158>
+a0303ebc:	eb001bac 	bl	a030ad74 <SerialOutputString>
+a0303ec0:	e51b3018 	ldr	r3, [fp, -#24]
+a0303ec4:	e2033004 	and	r3, r3, #4	; 0x4
+a0303ec8:	e3530000 	cmp	r3, #0	; 0x0
+a0303ecc:	0a000001 	beq	a0303ed8 <print_flash_error+0x10c>
+a0303ed0:	e59f0050 	ldr	r0, [pc, #80]	; a0303f28 <print_flash_error+0x15c>
+a0303ed4:	eb001ba6 	bl	a030ad74 <SerialOutputString>
+a0303ed8:	e51b3018 	ldr	r3, [fp, -#24]
+a0303edc:	e2033002 	and	r3, r3, #2	; 0x2
+a0303ee0:	e3530000 	cmp	r3, #0	; 0x0
+a0303ee4:	0a000001 	beq	a0303ef0 <print_flash_error+0x124>
+a0303ee8:	e59f003c 	ldr	r0, [pc, #60]	; a0303f2c <print_flash_error+0x160>
+a0303eec:	eb001ba0 	bl	a030ad74 <SerialOutputString>
+a0303ef0:	e3a0007d 	mov	r0, #125	; 0x7d
+a0303ef4:	eb001b4f 	bl	a030ac38 <serial_write>
+a0303ef8:	e59f0030 	ldr	r0, [pc, #48]	; a0303f30 <print_flash_error+0x164>
+a0303efc:	eb001b9c 	bl	a030ad74 <SerialOutputString>
+a0303f00:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0303f04:	a030cb30 	eorges	ip, r0, r0, lsr fp
+a0303f08:	a030cb48 	eorges	ip, r0, r8, asr #22
+a0303f0c:	a030cb58 	eorges	ip, r0, r8, asr fp
+a0303f10:	a030cb78 	eorges	ip, r0, r8, ror fp
+a0303f14:	a030cb80 	eorges	ip, r0, r0, lsl #23
+a0303f18:	a030cb90 	mlages	r0, r0, fp, ip
+a0303f1c:	a030cba4 	eorges	ip, r0, r4, lsr #23
+a0303f20:	a030cbb8 	ldrgeh	ip, [r0], -r8
+a0303f24:	a030cbc8 	eorges	ip, r0, r8, asr #23
+a0303f28:	a030cbdc 	ldrgesb	ip, [r0], -ip
+a0303f2c:	a030cbf0 	ldrgesh	ip, [r0], -r0
+a0303f30:	a030cc04 	eorges	ip, r0, r4, lsl #24
+
+a0303f34 <do_erase>:
+a0303f34:	e1a0c00d 	mov	ip, sp
+a0303f38:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303f3c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303f40:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0303f44:	e50b0010 	str	r0, [fp, -#16]
+a0303f48:	e51b0010 	ldr	r0, [fp, -#16]
+a0303f4c:	ebffff95 	bl	a0303da8 <clear_status>
+a0303f50:	e51b2010 	ldr	r2, [fp, -#16]
+a0303f54:	e3a03020 	mov	r3, #32	; 0x20
+a0303f58:	e1c230b0 	strh	r3, [r2]
+a0303f5c:	e51b2010 	ldr	r2, [fp, -#16]
+a0303f60:	e3a030d0 	mov	r3, #208	; 0xd0
+a0303f64:	e1c230b0 	strh	r3, [r2]
+a0303f68:	e51b0010 	ldr	r0, [fp, -#16]
+a0303f6c:	ebffff67 	bl	a0303d10 <get_status>
+a0303f70:	e1a03000 	mov	r3, r0
+a0303f74:	e50b3014 	str	r3, [fp, -#20]
+a0303f78:	e51b2010 	ldr	r2, [fp, -#16]
+a0303f7c:	e3a030ff 	mov	r3, #255	; 0xff
+a0303f80:	e1c230b0 	strh	r3, [r2]
+a0303f84:	e51b3014 	ldr	r3, [fp, -#20]
+a0303f88:	e3530000 	cmp	r3, #0	; 0x0
+a0303f8c:	ba000004 	blt	a0303fa4 <do_erase+0x70>
+a0303f90:	e51b3014 	ldr	r3, [fp, -#20]
+a0303f94:	e203302a 	and	r3, r3, #42	; 0x2a
+a0303f98:	e3530000 	cmp	r3, #0	; 0x0
+a0303f9c:	1a000000 	bne	a0303fa4 <do_erase+0x70>
+a0303fa0:	ea000006 	b	a0303fc0 <do_erase+0x8c>
+a0303fa4:	e59f0024 	ldr	r0, [pc, #36]	; a0303fd0 <do_erase+0x9c>
+a0303fa8:	e51b1010 	ldr	r1, [fp, -#16]
+a0303fac:	e51b2014 	ldr	r2, [fp, -#20]
+a0303fb0:	ebffff85 	bl	a0303dcc <print_flash_error>
+a0303fb4:	e3e0300b 	mvn	r3, #11	; 0xb
+a0303fb8:	e50b3018 	str	r3, [fp, -#24]
+a0303fbc:	ea000001 	b	a0303fc8 <do_erase+0x94>
+a0303fc0:	e3a03000 	mov	r3, #0	; 0x0
+a0303fc4:	e50b3018 	str	r3, [fp, -#24]
+a0303fc8:	e51b0018 	ldr	r0, [fp, -#24]
+a0303fcc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0303fd0:	a030cc08 	eorges	ip, r0, r8, lsl #24
+
+a0303fd4 <do_write>:
+a0303fd4:	e1a0c00d 	mov	ip, sp
+a0303fd8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0303fdc:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0303fe0:	e24dd010 	sub	sp, sp, #16	; 0x10
+a0303fe4:	e50b0010 	str	r0, [fp, -#16]
+a0303fe8:	e50b1014 	str	r1, [fp, -#20]
+a0303fec:	e51b0010 	ldr	r0, [fp, -#16]
+a0303ff0:	ebffff6c 	bl	a0303da8 <clear_status>
+a0303ff4:	e51b2010 	ldr	r2, [fp, -#16]
+a0303ff8:	e3a03040 	mov	r3, #64	; 0x40
+a0303ffc:	e1c230b0 	strh	r3, [r2]
+a0304000:	e51b2010 	ldr	r2, [fp, -#16]
+a0304004:	e51b3014 	ldr	r3, [fp, -#20]
+a0304008:	e1d330b0 	ldrh	r3, [r3]
+a030400c:	e1c230b0 	strh	r3, [r2]
+a0304010:	e51b0010 	ldr	r0, [fp, -#16]
+a0304014:	ebffff3d 	bl	a0303d10 <get_status>
+a0304018:	e1a03000 	mov	r3, r0
+a030401c:	e50b3018 	str	r3, [fp, -#24]
+a0304020:	e51b2010 	ldr	r2, [fp, -#16]
+a0304024:	e3a030ff 	mov	r3, #255	; 0xff
+a0304028:	e1c230b0 	strh	r3, [r2]
+a030402c:	e51b3018 	ldr	r3, [fp, -#24]
+a0304030:	e3530000 	cmp	r3, #0	; 0x0
+a0304034:	ba00000a 	blt	a0304064 <do_write+0x90>
+a0304038:	e51b3018 	ldr	r3, [fp, -#24]
+a030403c:	e203301a 	and	r3, r3, #26	; 0x1a
+a0304040:	e3530000 	cmp	r3, #0	; 0x0
+a0304044:	1a000006 	bne	a0304064 <do_write+0x90>
+a0304048:	e51b3010 	ldr	r3, [fp, -#16]
+a030404c:	e51b2014 	ldr	r2, [fp, -#20]
+a0304050:	e1d310b0 	ldrh	r1, [r3]
+a0304054:	e1d230b0 	ldrh	r3, [r2]
+a0304058:	e1510003 	cmp	r1, r3
+a030405c:	1a000000 	bne	a0304064 <do_write+0x90>
+a0304060:	ea000002 	b	a0304070 <do_write+0x9c>
+a0304064:	e3e0300c 	mvn	r3, #12	; 0xc
+a0304068:	e50b301c 	str	r3, [fp, -#28]
+a030406c:	ea000001 	b	a0304078 <do_write+0xa4>
+a0304070:	e3a03000 	mov	r3, #0	; 0x0
+a0304074:	e50b301c 	str	r3, [fp, -#28]
+a0304078:	e51b001c 	ldr	r0, [fp, -#28]
+a030407c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0304080 <flash_erase_intel16>:
+a0304080:	e1a0c00d 	mov	ip, sp
+a0304084:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0304088:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030408c:	e24dd010 	sub	sp, sp, #16	; 0x10
+a0304090:	e50b0010 	str	r0, [fp, -#16]
+a0304094:	e51b3010 	ldr	r3, [fp, -#16]
+a0304098:	e50b3018 	str	r3, [fp, -#24]
+a030409c:	e51b0018 	ldr	r0, [fp, -#24]
+a03040a0:	ebffffa3 	bl	a0303f34 <do_erase>
+a03040a4:	e1a03000 	mov	r3, r0
+a03040a8:	e50b3014 	str	r3, [fp, -#20]
+a03040ac:	e51b3014 	ldr	r3, [fp, -#20]
+a03040b0:	e3530000 	cmp	r3, #0	; 0x0
+a03040b4:	0a000002 	beq	a03040c4 <flash_erase_intel16+0x44>
+a03040b8:	e51b3014 	ldr	r3, [fp, -#20]
+a03040bc:	e50b301c 	str	r3, [fp, -#28]
+a03040c0:	ea000014 	b	a0304118 <flash_erase_intel16+0x98>
+a03040c4:	e51b3018 	ldr	r3, [fp, -#24]
+a03040c8:	e2833002 	add	r3, r3, #2	; 0x2
+a03040cc:	e50b3018 	str	r3, [fp, -#24]
+a03040d0:	e51b3018 	ldr	r3, [fp, -#24]
+a03040d4:	e1d320b0 	ldrh	r2, [r3]
+a03040d8:	e3a03cff 	mov	r3, #65280	; 0xff00
+a03040dc:	e28330ff 	add	r3, r3, #255	; 0xff
+a03040e0:	e1520003 	cmp	r2, r3
+a03040e4:	0a000003 	beq	a03040f8 <flash_erase_intel16+0x78>
+a03040e8:	e51b0018 	ldr	r0, [fp, -#24]
+a03040ec:	ebffff90 	bl	a0303f34 <do_erase>
+a03040f0:	e1a03000 	mov	r3, r0
+a03040f4:	e50b3014 	str	r3, [fp, -#20]
+a03040f8:	e51b3014 	ldr	r3, [fp, -#20]
+a03040fc:	e3530000 	cmp	r3, #0	; 0x0
+a0304100:	0a000002 	beq	a0304110 <flash_erase_intel16+0x90>
+a0304104:	e51b3014 	ldr	r3, [fp, -#20]
+a0304108:	e50b301c 	str	r3, [fp, -#28]
+a030410c:	ea000001 	b	a0304118 <flash_erase_intel16+0x98>
+a0304110:	e3a03000 	mov	r3, #0	; 0x0
+a0304114:	e50b301c 	str	r3, [fp, -#28]
+a0304118:	e51b001c 	ldr	r0, [fp, -#28]
+a030411c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0304120 <flash_write_intel16>:
+a0304120:	e1a0c00d 	mov	ip, sp
+a0304124:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0304128:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030412c:	e24dd018 	sub	sp, sp, #24	; 0x18
+a0304130:	e50b0010 	str	r0, [fp, -#16]
+a0304134:	e50b1014 	str	r1, [fp, -#20]
+a0304138:	e51b3010 	ldr	r3, [fp, -#16]
+a030413c:	e50b3018 	str	r3, [fp, -#24]
+a0304140:	e51b3014 	ldr	r3, [fp, -#20]
+a0304144:	e50b301c 	str	r3, [fp, -#28]
+a0304148:	e51b0018 	ldr	r0, [fp, -#24]
+a030414c:	e51b101c 	ldr	r1, [fp, -#28]
+a0304150:	ebffff9f 	bl	a0303fd4 <do_write>
+a0304154:	e1a03000 	mov	r3, r0
+a0304158:	e50b3020 	str	r3, [fp, -#32]
+a030415c:	e51b3020 	ldr	r3, [fp, -#32]
+a0304160:	e3530000 	cmp	r3, #0	; 0x0
+a0304164:	0a000002 	beq	a0304174 <flash_write_intel16+0x54>
+a0304168:	e51b3020 	ldr	r3, [fp, -#32]
+a030416c:	e50b3024 	str	r3, [fp, -#36]
+a0304170:	ea000012 	b	a03041c0 <flash_write_intel16+0xa0>
+a0304174:	e51b3018 	ldr	r3, [fp, -#24]
+a0304178:	e2833002 	add	r3, r3, #2	; 0x2
+a030417c:	e50b3018 	str	r3, [fp, -#24]
+a0304180:	e51b301c 	ldr	r3, [fp, -#28]
+a0304184:	e2833002 	add	r3, r3, #2	; 0x2
+a0304188:	e50b301c 	str	r3, [fp, -#28]
+a030418c:	e51b0018 	ldr	r0, [fp, -#24]
+a0304190:	e51b101c 	ldr	r1, [fp, -#28]
+a0304194:	ebffff8e 	bl	a0303fd4 <do_write>
+a0304198:	e1a03000 	mov	r3, r0
+a030419c:	e50b3020 	str	r3, [fp, -#32]
+a03041a0:	e51b3020 	ldr	r3, [fp, -#32]
+a03041a4:	e3530000 	cmp	r3, #0	; 0x0
+a03041a8:	0a000002 	beq	a03041b8 <flash_write_intel16+0x98>
+a03041ac:	e51b3020 	ldr	r3, [fp, -#32]
+a03041b0:	e50b3024 	str	r3, [fp, -#36]
+a03041b4:	ea000001 	b	a03041c0 <flash_write_intel16+0xa0>
+a03041b8:	e3a03000 	mov	r3, #0	; 0x0
+a03041bc:	e50b3024 	str	r3, [fp, -#36]
+a03041c0:	e51b0024 	ldr	r0, [fp, -#36]
+a03041c4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03041c8 <flash_lock_block_intel16>:
+a03041c8:	e1a0c00d 	mov	ip, sp
+a03041cc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03041d0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03041d4:	e24dd010 	sub	sp, sp, #16	; 0x10
+a03041d8:	e50b0010 	str	r0, [fp, -#16]
+a03041dc:	e51b3010 	ldr	r3, [fp, -#16]
+a03041e0:	e50b3014 	str	r3, [fp, -#20]
+a03041e4:	e51b0014 	ldr	r0, [fp, -#20]
+a03041e8:	ebfffeee 	bl	a0303da8 <clear_status>
+a03041ec:	e51b2014 	ldr	r2, [fp, -#20]
+a03041f0:	e3a03060 	mov	r3, #96	; 0x60
+a03041f4:	e1c230b0 	strh	r3, [r2]
+a03041f8:	e51b2014 	ldr	r2, [fp, -#20]
+a03041fc:	e3a03001 	mov	r3, #1	; 0x1
+a0304200:	e1c230b0 	strh	r3, [r2]
+a0304204:	e51b0014 	ldr	r0, [fp, -#20]
+a0304208:	ebfffec0 	bl	a0303d10 <get_status>
+a030420c:	e1a03000 	mov	r3, r0
+a0304210:	e50b3018 	str	r3, [fp, -#24]
+a0304214:	e51b2014 	ldr	r2, [fp, -#20]
+a0304218:	e3a030ff 	mov	r3, #255	; 0xff
+a030421c:	e1c230b0 	strh	r3, [r2]
+a0304220:	e51b3018 	ldr	r3, [fp, -#24]
+a0304224:	e3530000 	cmp	r3, #0	; 0x0
+a0304228:	ba000004 	blt	a0304240 <flash_lock_block_intel16+0x78>
+a030422c:	e51b3018 	ldr	r3, [fp, -#24]
+a0304230:	e203301a 	and	r3, r3, #26	; 0x1a
+a0304234:	e3530000 	cmp	r3, #0	; 0x0
+a0304238:	1a000000 	bne	a0304240 <flash_lock_block_intel16+0x78>
+a030423c:	ea000006 	b	a030425c <flash_lock_block_intel16+0x94>
+a0304240:	e59f0024 	ldr	r0, [pc, #36]	; a030426c <flash_lock_block_intel16+0xa4>
+a0304244:	e51b1014 	ldr	r1, [fp, -#20]
+a0304248:	e51b2018 	ldr	r2, [fp, -#24]
+a030424c:	ebfffede 	bl	a0303dcc <print_flash_error>
+a0304250:	e51b3018 	ldr	r3, [fp, -#24]
+a0304254:	e50b301c 	str	r3, [fp, -#28]
+a0304258:	ea000001 	b	a0304264 <flash_lock_block_intel16+0x9c>
+a030425c:	e3a03000 	mov	r3, #0	; 0x0
+a0304260:	e50b301c 	str	r3, [fp, -#28]
+a0304264:	e51b001c 	ldr	r0, [fp, -#28]
+a0304268:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030426c:	a030cc14 	eorges	ip, r0, r4, lsl ip
+
+a0304270 <flash_unlock_block_intel16>:
+a0304270:	e1a0c00d 	mov	ip, sp
+a0304274:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0304278:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030427c:	e24dd010 	sub	sp, sp, #16	; 0x10
+a0304280:	e50b0010 	str	r0, [fp, -#16]
+a0304284:	e51b3010 	ldr	r3, [fp, -#16]
+a0304288:	e50b3014 	str	r3, [fp, -#20]
+a030428c:	e51b0014 	ldr	r0, [fp, -#20]
+a0304290:	ebfffec4 	bl	a0303da8 <clear_status>
+a0304294:	e51b2014 	ldr	r2, [fp, -#20]
+a0304298:	e3a03060 	mov	r3, #96	; 0x60
+a030429c:	e1c230b0 	strh	r3, [r2]
+a03042a0:	e51b2014 	ldr	r2, [fp, -#20]
+a03042a4:	e3a030d0 	mov	r3, #208	; 0xd0
+a03042a8:	e1c230b0 	strh	r3, [r2]
+a03042ac:	e51b0014 	ldr	r0, [fp, -#20]
+a03042b0:	ebfffe96 	bl	a0303d10 <get_status>
+a03042b4:	e1a03000 	mov	r3, r0
+a03042b8:	e50b3018 	str	r3, [fp, -#24]
+a03042bc:	e51b2014 	ldr	r2, [fp, -#20]
+a03042c0:	e3a030ff 	mov	r3, #255	; 0xff
+a03042c4:	e1c230b0 	strh	r3, [r2]
+a03042c8:	e51b3018 	ldr	r3, [fp, -#24]
+a03042cc:	e3530000 	cmp	r3, #0	; 0x0
+a03042d0:	ba000004 	blt	a03042e8 <flash_unlock_block_intel16+0x78>
+a03042d4:	e51b3018 	ldr	r3, [fp, -#24]
+a03042d8:	e203303a 	and	r3, r3, #58	; 0x3a
+a03042dc:	e3530000 	cmp	r3, #0	; 0x0
+a03042e0:	1a000000 	bne	a03042e8 <flash_unlock_block_intel16+0x78>
+a03042e4:	ea000006 	b	a0304304 <flash_unlock_block_intel16+0x94>
+a03042e8:	e59f0024 	ldr	r0, [pc, #36]	; a0304314 <flash_unlock_block_intel16+0xa4>
+a03042ec:	e51b1014 	ldr	r1, [fp, -#20]
+a03042f0:	e51b2018 	ldr	r2, [fp, -#24]
+a03042f4:	ebfffeb4 	bl	a0303dcc <print_flash_error>
+a03042f8:	e51b3018 	ldr	r3, [fp, -#24]
+a03042fc:	e50b301c 	str	r3, [fp, -#28]
+a0304300:	ea000001 	b	a030430c <flash_unlock_block_intel16+0x9c>
+a0304304:	e3a03000 	mov	r3, #0	; 0x0
+a0304308:	e50b301c 	str	r3, [fp, -#28]
+a030430c:	e51b001c 	ldr	r0, [fp, -#28]
+a0304310:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0304314:	a030cc30 	eorges	ip, r0, r0, lsr ip
+
+a0304318 <flash_query_block_lock_intel16>:
+a0304318:	e1a0c00d 	mov	ip, sp
+a030431c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0304320:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0304324:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0304328:	e50b0010 	str	r0, [fp, -#16]
+a030432c:	e51b3010 	ldr	r3, [fp, -#16]
+a0304330:	e50b3014 	str	r3, [fp, -#20]
+a0304334:	e51b0014 	ldr	r0, [fp, -#20]
+a0304338:	ebfffe9a 	bl	a0303da8 <clear_status>
+a030433c:	e51b2014 	ldr	r2, [fp, -#20]
+a0304340:	e3a03090 	mov	r3, #144	; 0x90
+a0304344:	e1c230b0 	strh	r3, [r2]
+a0304348:	e3a02004 	mov	r2, #4	; 0x4
+a030434c:	e51b3014 	ldr	r3, [fp, -#20]
+a0304350:	e0823003 	add	r3, r2, r3
+a0304354:	e1d330b0 	ldrh	r3, [r3]
+a0304358:	e14b31b6 	strh	r3, [fp, -#22]
+a030435c:	e51b2014 	ldr	r2, [fp, -#20]
+a0304360:	e3a030ff 	mov	r3, #255	; 0xff
+a0304364:	e1c230b0 	strh	r3, [r2]
+a0304368:	e15b31b6 	ldrh	r3, [fp, -#22]
+a030436c:	e2033003 	and	r3, r3, #3	; 0x3
+a0304370:	e1a03803 	mov	r3, r3, lsl #16
+a0304374:	e1a03823 	mov	r3, r3, lsr #16
+a0304378:	e3530000 	cmp	r3, #0	; 0x0
+a030437c:	03a03000 	moveq	r3, #0	; 0x0
+a0304380:	13a03001 	movne	r3, #1	; 0x1
+a0304384:	e1a00003 	mov	r0, r3
+a0304388:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030438c <flash_query_descriptors_intel16>:
+a030438c:	e1a0c00d 	mov	ip, sp
+a0304390:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0304394:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0304398:	e24dd02c 	sub	sp, sp, #44	; 0x2c
+a030439c:	e50b0010 	str	r0, [fp, -#16]
+a03043a0:	e50b1014 	str	r1, [fp, -#20]
+a03043a4:	e51b3010 	ldr	r3, [fp, -#16]
+a03043a8:	e50b3018 	str	r3, [fp, -#24]
+a03043ac:	e3a020aa 	mov	r2, #170	; 0xaa
+a03043b0:	e51b3018 	ldr	r3, [fp, -#24]
+a03043b4:	e0822003 	add	r2, r2, r3
+a03043b8:	e3a03098 	mov	r3, #152	; 0x98
+a03043bc:	e1c230b0 	strh	r3, [r2]
+a03043c0:	e3a02020 	mov	r2, #32	; 0x20
+a03043c4:	e51b3018 	ldr	r3, [fp, -#24]
+a03043c8:	e0823003 	add	r3, r2, r3
+a03043cc:	e1d330b0 	ldrh	r3, [r3]
+a03043d0:	e3530051 	cmp	r3, #81	; 0x51
+a03043d4:	0a00000e 	beq	a0304414 <flash_query_descriptors_intel16+0x88>
+a03043d8:	e3a02022 	mov	r2, #34	; 0x22
+a03043dc:	e51b3018 	ldr	r3, [fp, -#24]
+a03043e0:	e0823003 	add	r3, r2, r3
+a03043e4:	e1d330b0 	ldrh	r3, [r3]
+a03043e8:	e3530052 	cmp	r3, #82	; 0x52
+a03043ec:	0a000008 	beq	a0304414 <flash_query_descriptors_intel16+0x88>
+a03043f0:	e3a02024 	mov	r2, #36	; 0x24
+a03043f4:	e51b3018 	ldr	r3, [fp, -#24]
+a03043f8:	e0823003 	add	r3, r2, r3
+a03043fc:	e1d330b0 	ldrh	r3, [r3]
+a0304400:	e3530059 	cmp	r3, #89	; 0x59
+a0304404:	0a000002 	beq	a0304414 <flash_query_descriptors_intel16+0x88>
+a0304408:	e3e03000 	mvn	r3, #0	; 0x0
+a030440c:	e50b301c 	str	r3, [fp, -#28]
+a0304410:	ea00007a 	b	a0304600 <flash_query_descriptors_intel16+0x274>
+a0304414:	e3a02058 	mov	r2, #88	; 0x58
+a0304418:	e51b3018 	ldr	r3, [fp, -#24]
+a030441c:	e0823003 	add	r3, r2, r3
+a0304420:	e1d330b0 	ldrh	r3, [r3]
+a0304424:	e50b3020 	str	r3, [fp, -#32]
+a0304428:	e3a03000 	mov	r3, #0	; 0x0
+a030442c:	e50b3024 	str	r3, [fp, -#36]
+a0304430:	e51b2024 	ldr	r2, [fp, -#36]
+a0304434:	e51b3020 	ldr	r3, [fp, -#32]
+a0304438:	e1520003 	cmp	r2, r3
+a030443c:	aa000056 	bge	a030459c <flash_query_descriptors_intel16+0x210>
+a0304440:	e51b3024 	ldr	r3, [fp, -#36]
+a0304444:	e3530003 	cmp	r3, #3	; 0x3
+a0304448:	da000000 	ble	a0304450 <flash_query_descriptors_intel16+0xc4>
+a030444c:	ea000052 	b	a030459c <flash_query_descriptors_intel16+0x210>
+a0304450:	e51b3024 	ldr	r3, [fp, -#36]
+a0304454:	e3a0105a 	mov	r1, #90	; 0x5a
+a0304458:	e1a02183 	mov	r2, r3, lsl #3
+a030445c:	e51b3018 	ldr	r3, [fp, -#24]
+a0304460:	e0823003 	add	r3, r2, r3
+a0304464:	e0833001 	add	r3, r3, r1
+a0304468:	e1d300b0 	ldrh	r0, [r3]
+a030446c:	e51b3024 	ldr	r3, [fp, -#36]
+a0304470:	e3a0105c 	mov	r1, #92	; 0x5c
+a0304474:	e1a02183 	mov	r2, r3, lsl #3
+a0304478:	e51b3018 	ldr	r3, [fp, -#24]
+a030447c:	e0823003 	add	r3, r2, r3
+a0304480:	e0833001 	add	r3, r3, r1
+a0304484:	e1d330b0 	ldrh	r3, [r3]
+a0304488:	e1a03403 	mov	r3, r3, lsl #8
+a030448c:	e1803003 	orr	r3, r0, r3
+a0304490:	e50b3028 	str	r3, [fp, -#40]
+a0304494:	e51b3028 	ldr	r3, [fp, -#40]
+a0304498:	e2833001 	add	r3, r3, #1	; 0x1
+a030449c:	e50b302c 	str	r3, [fp, -#44]
+a03044a0:	e51b3024 	ldr	r3, [fp, -#36]
+a03044a4:	e3a0105e 	mov	r1, #94	; 0x5e
+a03044a8:	e1a02183 	mov	r2, r3, lsl #3
+a03044ac:	e51b3018 	ldr	r3, [fp, -#24]
+a03044b0:	e0823003 	add	r3, r2, r3
+a03044b4:	e0833001 	add	r3, r3, r1
+a03044b8:	e1d300b0 	ldrh	r0, [r3]
+a03044bc:	e51b3024 	ldr	r3, [fp, -#36]
+a03044c0:	e3a01060 	mov	r1, #96	; 0x60
+a03044c4:	e1a02183 	mov	r2, r3, lsl #3
+a03044c8:	e51b3018 	ldr	r3, [fp, -#24]
+a03044cc:	e0823003 	add	r3, r2, r3
+a03044d0:	e0833001 	add	r3, r3, r1
+a03044d4:	e1d330b0 	ldrh	r3, [r3]
+a03044d8:	e1a03403 	mov	r3, r3, lsl #8
+a03044dc:	e1803003 	orr	r3, r0, r3
+a03044e0:	e50b3030 	str	r3, [fp, -#48]
+a03044e4:	e51b3030 	ldr	r3, [fp, -#48]
+a03044e8:	e3530000 	cmp	r3, #0	; 0x0
+a03044ec:	0a000003 	beq	a0304500 <flash_query_descriptors_intel16+0x174>
+a03044f0:	e51b3030 	ldr	r3, [fp, -#48]
+a03044f4:	e1a03403 	mov	r3, r3, lsl #8
+a03044f8:	e50b3038 	str	r3, [fp, -#56]
+a03044fc:	ea000001 	b	a0304508 <flash_query_descriptors_intel16+0x17c>
+a0304500:	e3a03080 	mov	r3, #128	; 0x80
+a0304504:	e50b3038 	str	r3, [fp, -#56]
+a0304508:	e51b3038 	ldr	r3, [fp, -#56]
+a030450c:	e50b3034 	str	r3, [fp, -#52]
+a0304510:	e59f1100 	ldr	r1, [pc, #256]	; a0304618 <flash_query_descriptors_intel16+0x28c>
+a0304514:	e51b2024 	ldr	r2, [fp, -#36]
+a0304518:	e1a03002 	mov	r3, r2
+a030451c:	e1a03083 	mov	r3, r3, lsl #1
+a0304520:	e0833002 	add	r3, r3, r2
+a0304524:	e1a03103 	mov	r3, r3, lsl #2
+a0304528:	e0832001 	add	r2, r3, r1
+a030452c:	e51b3034 	ldr	r3, [fp, -#52]
+a0304530:	e5823000 	str	r3, [r2]
+a0304534:	e59f00dc 	ldr	r0, [pc, #220]	; a0304618 <flash_query_descriptors_intel16+0x28c>
+a0304538:	e51b2024 	ldr	r2, [fp, -#36]
+a030453c:	e3a01004 	mov	r1, #4	; 0x4
+a0304540:	e1a03002 	mov	r3, r2
+a0304544:	e1a03083 	mov	r3, r3, lsl #1
+a0304548:	e0833002 	add	r3, r3, r2
+a030454c:	e1a03103 	mov	r3, r3, lsl #2
+a0304550:	e0833000 	add	r3, r3, r0
+a0304554:	e0832001 	add	r2, r3, r1
+a0304558:	e51b302c 	ldr	r3, [fp, -#44]
+a030455c:	e5823000 	str	r3, [r2]
+a0304560:	e59f00b0 	ldr	r0, [pc, #176]	; a0304618 <flash_query_descriptors_intel16+0x28c>
+a0304564:	e51b2024 	ldr	r2, [fp, -#36]
+a0304568:	e3a01008 	mov	r1, #8	; 0x8
+a030456c:	e1a03002 	mov	r3, r2
+a0304570:	e1a03083 	mov	r3, r3, lsl #1
+a0304574:	e0833002 	add	r3, r3, r2
+a0304578:	e1a03103 	mov	r3, r3, lsl #2
+a030457c:	e0833000 	add	r3, r3, r0
+a0304580:	e0832001 	add	r2, r3, r1
+a0304584:	e3a03001 	mov	r3, #1	; 0x1
+a0304588:	e5823000 	str	r3, [r2]
+a030458c:	e51b3024 	ldr	r3, [fp, -#36]
+a0304590:	e2833001 	add	r3, r3, #1	; 0x1
+a0304594:	e50b3024 	str	r3, [fp, -#36]
+a0304598:	eaffffa4 	b	a0304430 <flash_query_descriptors_intel16+0xa4>
+a030459c:	e59f1074 	ldr	r1, [pc, #116]	; a0304618 <flash_query_descriptors_intel16+0x28c>
+a03045a0:	e51b2024 	ldr	r2, [fp, -#36]
+a03045a4:	e1a03002 	mov	r3, r2
+a03045a8:	e1a03083 	mov	r3, r3, lsl #1
+a03045ac:	e0833002 	add	r3, r3, r2
+a03045b0:	e1a03103 	mov	r3, r3, lsl #2
+a03045b4:	e0832001 	add	r2, r3, r1
+a03045b8:	e3a03000 	mov	r3, #0	; 0x0
+a03045bc:	e5823000 	str	r3, [r2]
+a03045c0:	e59f0050 	ldr	r0, [pc, #80]	; a0304618 <flash_query_descriptors_intel16+0x28c>
+a03045c4:	e51b2024 	ldr	r2, [fp, -#36]
+a03045c8:	e3a01004 	mov	r1, #4	; 0x4
+a03045cc:	e1a03002 	mov	r3, r2
+a03045d0:	e1a03083 	mov	r3, r3, lsl #1
+a03045d4:	e0833002 	add	r3, r3, r2
+a03045d8:	e1a03103 	mov	r3, r3, lsl #2
+a03045dc:	e0833000 	add	r3, r3, r0
+a03045e0:	e0832001 	add	r2, r3, r1
+a03045e4:	e3a03000 	mov	r3, #0	; 0x0
+a03045e8:	e5823000 	str	r3, [r2]
+a03045ec:	e51b2014 	ldr	r2, [fp, -#20]
+a03045f0:	e59f3020 	ldr	r3, [pc, #32]	; a0304618 <flash_query_descriptors_intel16+0x28c>
+a03045f4:	e5823000 	str	r3, [r2]
+a03045f8:	e3a03000 	mov	r3, #0	; 0x0
+a03045fc:	e50b301c 	str	r3, [fp, -#28]
+a0304600:	e51b2018 	ldr	r2, [fp, -#24]
+a0304604:	e3a030ff 	mov	r3, #255	; 0xff
+a0304608:	e1c230b0 	strh	r3, [r2]
+a030460c:	e51b301c 	ldr	r3, [fp, -#28]
+a0304610:	e1a00003 	mov	r0, r3
+a0304614:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0304618:	a030f488 	eorges	pc, r0, r8, lsl #9
+
+a030461c <mainstone_init_hardware>:
+a030461c:	e1a0c00d 	mov	ip, sp
+a0304620:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0304624:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0304628:	e59f2050 	ldr	r2, [pc, #80]	; a0304680 <mainstone_init_hardware+0x64>
+a030462c:	e59f3050 	ldr	r3, [pc, #80]	; a0304684 <mainstone_init_hardware+0x68>
+a0304630:	e5823000 	str	r3, [r2]
+a0304634:	e59f204c 	ldr	r2, [pc, #76]	; a0304688 <mainstone_init_hardware+0x6c>
+a0304638:	e59f304c 	ldr	r3, [pc, #76]	; a030468c <mainstone_init_hardware+0x70>
+a030463c:	e5823000 	str	r3, [r2]
+a0304640:	e59f2048 	ldr	r2, [pc, #72]	; a0304690 <mainstone_init_hardware+0x74>
+a0304644:	e59f3048 	ldr	r3, [pc, #72]	; a0304694 <mainstone_init_hardware+0x78>
+a0304648:	e5823000 	str	r3, [r2]
+a030464c:	e59f2044 	ldr	r2, [pc, #68]	; a0304698 <mainstone_init_hardware+0x7c>
+a0304650:	e3a03000 	mov	r3, #0	; 0x0
+a0304654:	e5823000 	str	r3, [r2]
+a0304658:	e59f203c 	ldr	r2, [pc, #60]	; a030469c <mainstone_init_hardware+0x80>
+a030465c:	e59f303c 	ldr	r3, [pc, #60]	; a03046a0 <mainstone_init_hardware+0x84>
+a0304660:	e5823000 	str	r3, [r2]
+a0304664:	e59f2038 	ldr	r2, [pc, #56]	; a03046a4 <mainstone_init_hardware+0x88>
+a0304668:	e59f3038 	ldr	r3, [pc, #56]	; a03046a8 <mainstone_init_hardware+0x8c>
+a030466c:	e5823000 	str	r3, [r2]
+a0304670:	e59f2034 	ldr	r2, [pc, #52]	; a03046ac <mainstone_init_hardware+0x90>
+a0304674:	e59f3034 	ldr	r3, [pc, #52]	; a03046b0 <mainstone_init_hardware+0x94>
+a0304678:	e5823000 	str	r3, [r2]
+a030467c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0304680:	a030fce0 	eorges	pc, r0, r0, ror #25
+a0304684:	a030cc4c 	eorges	ip, r0, ip, asr #24
+a0304688:	a030fd00 	eorges	pc, r0, r0, lsl #26
+a030468c:	a030d788 	eorges	sp, r0, r8, lsl #15
+a0304690:	a0310320 	eorges	r0, r1, r0, lsr #6
+a0304694:	a030cc70 	eorges	ip, r0, r0, ror ip
+a0304698:	a0310340 	eorges	r0, r1, r0, asr #6
+a030469c:	a03103a0 	eorges	r0, r1, r0, lsr #7
+a03046a0:	a030dc84 	eorges	sp, r0, r4, lsl #25
+a03046a4:	a03103c0 	eorges	r0, r1, r0, asr #7
+a03046a8:	a030dc88 	eorges	sp, r0, r8, lsl #25
+a03046ac:	a03103e0 	eorges	r0, r1, r0, ror #7
+a03046b0:	a030dca0 	eorges	sp, r0, r0, lsr #25
+
+a03046b4 <cmd_flash_write>:
+a03046b4:	e1a0c00d 	mov	ip, sp
+a03046b8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03046bc:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03046c0:	e24dd018 	sub	sp, sp, #24	; 0x18
+a03046c4:	e50b0010 	str	r0, [fp, -#16]
+a03046c8:	e50b1014 	str	r1, [fp, -#20]
+a03046cc:	e3a03000 	mov	r3, #0	; 0x0
+a03046d0:	e50b3018 	str	r3, [fp, -#24]
+a03046d4:	e3a03000 	mov	r3, #0	; 0x0
+a03046d8:	e50b301c 	str	r3, [fp, -#28]
+a03046dc:	e3a03000 	mov	r3, #0	; 0x0
+a03046e0:	e50b3020 	str	r3, [fp, -#32]
+a03046e4:	e3a03000 	mov	r3, #0	; 0x0
+a03046e8:	e50b3024 	str	r3, [fp, -#36]
+a03046ec:	e51b3010 	ldr	r3, [fp, -#16]
+a03046f0:	e3530003 	cmp	r3, #3	; 0x3
+a03046f4:	ca000002 	bgt	a0304704 <cmd_flash_write+0x50>
+a03046f8:	e3e03000 	mvn	r3, #0	; 0x0
+a03046fc:	e50b3018 	str	r3, [fp, -#24]
+a0304700:	ea000032 	b	a03047d0 <cmd_flash_write+0x11c>
+a0304704:	e3a02004 	mov	r2, #4	; 0x4
+a0304708:	e51b3014 	ldr	r3, [fp, -#20]
+a030470c:	e0823003 	add	r3, r2, r3
+a0304710:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0304714:	e5930000 	ldr	r0, [r3]
+a0304718:	e1a01002 	mov	r1, r2
+a030471c:	eb001b93 	bl	a030b570 <strtou32>
+a0304720:	e1a03000 	mov	r3, r0
+a0304724:	e50b3018 	str	r3, [fp, -#24]
+a0304728:	e51b3018 	ldr	r3, [fp, -#24]
+a030472c:	e3530000 	cmp	r3, #0	; 0x0
+a0304730:	aa000002 	bge	a0304740 <cmd_flash_write+0x8c>
+a0304734:	e3e03000 	mvn	r3, #0	; 0x0
+a0304738:	e50b3018 	str	r3, [fp, -#24]
+a030473c:	ea000023 	b	a03047d0 <cmd_flash_write+0x11c>
+a0304740:	e3a02008 	mov	r2, #8	; 0x8
+a0304744:	e51b3014 	ldr	r3, [fp, -#20]
+a0304748:	e0823003 	add	r3, r2, r3
+a030474c:	e24b2020 	sub	r2, fp, #32	; 0x20
+a0304750:	e5930000 	ldr	r0, [r3]
+a0304754:	e1a01002 	mov	r1, r2
+a0304758:	eb001b84 	bl	a030b570 <strtou32>
+a030475c:	e1a03000 	mov	r3, r0
+a0304760:	e50b3018 	str	r3, [fp, -#24]
+a0304764:	e51b3018 	ldr	r3, [fp, -#24]
+a0304768:	e3530000 	cmp	r3, #0	; 0x0
+a030476c:	aa000002 	bge	a030477c <cmd_flash_write+0xc8>
+a0304770:	e3e03000 	mvn	r3, #0	; 0x0
+a0304774:	e50b3018 	str	r3, [fp, -#24]
+a0304778:	ea000014 	b	a03047d0 <cmd_flash_write+0x11c>
+a030477c:	e3a0200c 	mov	r2, #12	; 0xc
+a0304780:	e51b3014 	ldr	r3, [fp, -#20]
+a0304784:	e0823003 	add	r3, r2, r3
+a0304788:	e24b2024 	sub	r2, fp, #36	; 0x24
+a030478c:	e5930000 	ldr	r0, [r3]
+a0304790:	e1a01002 	mov	r1, r2
+a0304794:	eb001b75 	bl	a030b570 <strtou32>
+a0304798:	e1a03000 	mov	r3, r0
+a030479c:	e50b3018 	str	r3, [fp, -#24]
+a03047a0:	e51b3018 	ldr	r3, [fp, -#24]
+a03047a4:	e3530000 	cmp	r3, #0	; 0x0
+a03047a8:	aa000002 	bge	a03047b8 <cmd_flash_write+0x104>
+a03047ac:	e3e03000 	mvn	r3, #0	; 0x0
+a03047b0:	e50b3018 	str	r3, [fp, -#24]
+a03047b4:	ea000005 	b	a03047d0 <cmd_flash_write+0x11c>
+a03047b8:	e51b0020 	ldr	r0, [fp, -#32]
+a03047bc:	e51b101c 	ldr	r1, [fp, -#28]
+a03047c0:	e51b2024 	ldr	r2, [fp, -#36]
+a03047c4:	ebfff0f0 	bl	a0300b8c <flash_write_region>
+a03047c8:	e1a03000 	mov	r3, r0
+a03047cc:	e50b3018 	str	r3, [fp, -#24]
+a03047d0:	e51b3018 	ldr	r3, [fp, -#24]
+a03047d4:	e1a00003 	mov	r0, r3
+a03047d8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03047dc <cmd_flash_erase>:
+a03047dc:	e1a0c00d 	mov	ip, sp
+a03047e0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03047e4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03047e8:	e24dd014 	sub	sp, sp, #20	; 0x14
+a03047ec:	e50b0010 	str	r0, [fp, -#16]
+a03047f0:	e50b1014 	str	r1, [fp, -#20]
+a03047f4:	e3a03000 	mov	r3, #0	; 0x0
+a03047f8:	e50b3018 	str	r3, [fp, -#24]
+a03047fc:	e3a03000 	mov	r3, #0	; 0x0
+a0304800:	e50b301c 	str	r3, [fp, -#28]
+a0304804:	e3a03000 	mov	r3, #0	; 0x0
+a0304808:	e50b3020 	str	r3, [fp, -#32]
+a030480c:	e51b3010 	ldr	r3, [fp, -#16]
+a0304810:	e3530002 	cmp	r3, #2	; 0x2
+a0304814:	ca000002 	bgt	a0304824 <cmd_flash_erase+0x48>
+a0304818:	e3e03000 	mvn	r3, #0	; 0x0
+a030481c:	e50b3018 	str	r3, [fp, -#24]
+a0304820:	ea000022 	b	a03048b0 <cmd_flash_erase+0xd4>
+a0304824:	e3a02004 	mov	r2, #4	; 0x4
+a0304828:	e51b3014 	ldr	r3, [fp, -#20]
+a030482c:	e0823003 	add	r3, r2, r3
+a0304830:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0304834:	e5930000 	ldr	r0, [r3]
+a0304838:	e1a01002 	mov	r1, r2
+a030483c:	eb001b4b 	bl	a030b570 <strtou32>
+a0304840:	e1a03000 	mov	r3, r0
+a0304844:	e50b3018 	str	r3, [fp, -#24]
+a0304848:	e51b3018 	ldr	r3, [fp, -#24]
+a030484c:	e3530000 	cmp	r3, #0	; 0x0
+a0304850:	aa000002 	bge	a0304860 <cmd_flash_erase+0x84>
+a0304854:	e3e03000 	mvn	r3, #0	; 0x0
+a0304858:	e50b3018 	str	r3, [fp, -#24]
+a030485c:	ea000013 	b	a03048b0 <cmd_flash_erase+0xd4>
+a0304860:	e3a02008 	mov	r2, #8	; 0x8
+a0304864:	e51b3014 	ldr	r3, [fp, -#20]
+a0304868:	e0823003 	add	r3, r2, r3
+a030486c:	e24b2020 	sub	r2, fp, #32	; 0x20
+a0304870:	e5930000 	ldr	r0, [r3]
+a0304874:	e1a01002 	mov	r1, r2
+a0304878:	eb001b3c 	bl	a030b570 <strtou32>
+a030487c:	e1a03000 	mov	r3, r0
+a0304880:	e50b3018 	str	r3, [fp, -#24]
+a0304884:	e51b3018 	ldr	r3, [fp, -#24]
+a0304888:	e3530000 	cmp	r3, #0	; 0x0
+a030488c:	aa000002 	bge	a030489c <cmd_flash_erase+0xc0>
+a0304890:	e3e03000 	mvn	r3, #0	; 0x0
+a0304894:	e50b3018 	str	r3, [fp, -#24]
+a0304898:	ea000004 	b	a03048b0 <cmd_flash_erase+0xd4>
+a030489c:	e51b001c 	ldr	r0, [fp, -#28]
+a03048a0:	e51b1020 	ldr	r1, [fp, -#32]
+a03048a4:	ebfff03a 	bl	a0300994 <flash_erase_region>
+a03048a8:	e1a03000 	mov	r3, r0
+a03048ac:	e50b3018 	str	r3, [fp, -#24]
+a03048b0:	e51b3018 	ldr	r3, [fp, -#24]
+a03048b4:	e1a00003 	mov	r0, r3
+a03048b8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03048bc <cmd_clock_info>:
+a03048bc:	e1a0c00d 	mov	ip, sp
+a03048c0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03048c4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03048c8:	e24dd050 	sub	sp, sp, #80	; 0x50
+a03048cc:	e50b0010 	str	r0, [fp, -#16]
+a03048d0:	e50b1014 	str	r1, [fp, -#20]
+a03048d4:	e3a03441 	mov	r3, #1090519040	; 0x41000000
+a03048d8:	e2833603 	add	r3, r3, #3145728	; 0x300000
+a03048dc:	e5933000 	ldr	r3, [r3]
+a03048e0:	e50b3018 	str	r3, [fp, -#24]
+a03048e4:	e3a03131 	mov	r3, #1073741836	; 0x4000000c
+a03048e8:	e2833613 	add	r3, r3, #19922944	; 0x1300000
+a03048ec:	e5933000 	ldr	r3, [r3]
+a03048f0:	e50b301c 	str	r3, [fp, -#28]
+a03048f4:	ee163e10 	mrc	14, 0, r3, cr6, cr0, {0}
+a03048f8:	e50b3020 	str	r3, [fp, -#32]
+a03048fc:	e51b301c 	ldr	r3, [fp, -#28]
+a0304900:	e203301f 	and	r3, r3, #31	; 0x1f
+a0304904:	e50b3024 	str	r3, [fp, -#36]
+a0304908:	e51b301c 	ldr	r3, [fp, -#28]
+a030490c:	e1a033a3 	mov	r3, r3, lsr #7
+a0304910:	e2033007 	and	r3, r3, #7	; 0x7
+a0304914:	e50b302c 	str	r3, [fp, -#44]
+a0304918:	e51b3024 	ldr	r3, [fp, -#36]
+a030491c:	e353000a 	cmp	r3, #10	; 0xa
+a0304920:	8a000002 	bhi	a0304930 <cmd_clock_info+0x74>
+a0304924:	e3a03001 	mov	r3, #1	; 0x1
+a0304928:	e50b3028 	str	r3, [fp, -#40]
+a030492c:	ea000007 	b	a0304950 <cmd_clock_info+0x94>
+a0304930:	e51b3024 	ldr	r3, [fp, -#36]
+a0304934:	e3530014 	cmp	r3, #20	; 0x14
+a0304938:	8a000002 	bhi	a0304948 <cmd_clock_info+0x8c>
+a030493c:	e3a03002 	mov	r3, #2	; 0x2
+a0304940:	e50b3028 	str	r3, [fp, -#40]
+a0304944:	ea000001 	b	a0304950 <cmd_clock_info+0x94>
+a0304948:	e3a03004 	mov	r3, #4	; 0x4
+a030494c:	e50b3028 	str	r3, [fp, -#40]
+a0304950:	e51b2024 	ldr	r2, [fp, -#36]
+a0304954:	e1a03002 	mov	r3, r2
+a0304958:	e1a03283 	mov	r3, r3, lsl #5
+a030495c:	e0623003 	rsb	r3, r2, r3
+a0304960:	e1a03103 	mov	r3, r3, lsl #2
+a0304964:	e0833002 	add	r3, r3, r2
+a0304968:	e1a02103 	mov	r2, r3, lsl #2
+a030496c:	e0833002 	add	r3, r3, r2
+a0304970:	e1a02103 	mov	r2, r3, lsl #2
+a0304974:	e0833002 	add	r3, r3, r2
+a0304978:	e1a02303 	mov	r2, r3, lsl #6
+a030497c:	e0833002 	add	r3, r3, r2
+a0304980:	e1a03303 	mov	r3, r3, lsl #6
+a0304984:	e50b3030 	str	r3, [fp, -#48]
+a0304988:	e51b2024 	ldr	r2, [fp, -#36]
+a030498c:	e51b302c 	ldr	r3, [fp, -#44]
+a0304990:	e0020293 	mul	r2, r3, r2
+a0304994:	e1a03002 	mov	r3, r2
+a0304998:	e1a03283 	mov	r3, r3, lsl #5
+a030499c:	e0623003 	rsb	r3, r2, r3
+a03049a0:	e1a03103 	mov	r3, r3, lsl #2
+a03049a4:	e0833002 	add	r3, r3, r2
+a03049a8:	e1a02103 	mov	r2, r3, lsl #2
+a03049ac:	e0833002 	add	r3, r3, r2
+a03049b0:	e1a02103 	mov	r2, r3, lsl #2
+a03049b4:	e0833002 	add	r3, r3, r2
+a03049b8:	e1a02303 	mov	r2, r3, lsl #6
+a03049bc:	e0833002 	add	r3, r3, r2
+a03049c0:	e1a03303 	mov	r3, r3, lsl #6
+a03049c4:	e1a030a3 	mov	r3, r3, lsr #1
+a03049c8:	e50b3034 	str	r3, [fp, -#52]
+a03049cc:	e51b3020 	ldr	r3, [fp, -#32]
+a03049d0:	e2033008 	and	r3, r3, #8	; 0x8
+a03049d4:	e3530000 	cmp	r3, #0	; 0x0
+a03049d8:	0a000002 	beq	a03049e8 <cmd_clock_info+0x12c>
+a03049dc:	e51b3030 	ldr	r3, [fp, -#48]
+a03049e0:	e50b3038 	str	r3, [fp, -#56]
+a03049e4:	ea000002 	b	a03049f4 <cmd_clock_info+0x138>
+a03049e8:	e51b3030 	ldr	r3, [fp, -#48]
+a03049ec:	e1a030a3 	mov	r3, r3, lsr #1
+a03049f0:	e50b3038 	str	r3, [fp, -#56]
+a03049f4:	e51b3018 	ldr	r3, [fp, -#24]
+a03049f8:	e2033402 	and	r3, r3, #33554432	; 0x2000000
+a03049fc:	e3530000 	cmp	r3, #0	; 0x0
+a0304a00:	0a000002 	beq	a0304a10 <cmd_clock_info+0x154>
+a0304a04:	e51b3038 	ldr	r3, [fp, -#56]
+a0304a08:	e50b303c 	str	r3, [fp, -#60]
+a0304a0c:	ea000004 	b	a0304a24 <cmd_clock_info+0x168>
+a0304a10:	e51b0030 	ldr	r0, [fp, -#48]
+a0304a14:	e51b1028 	ldr	r1, [fp, -#40]
+a0304a18:	eb001d45 	bl	a030bf34 <__udivsi3>
+a0304a1c:	e1a03000 	mov	r3, r0
+a0304a20:	e50b303c 	str	r3, [fp, -#60]
+a0304a24:	e3a03312 	mov	r3, #1207959552	; 0x48000000
+a0304a28:	e2833004 	add	r3, r3, #4	; 0x4
+a0304a2c:	e5933000 	ldr	r3, [r3]
+a0304a30:	e2033202 	and	r3, r3, #536870912	; 0x20000000
+a0304a34:	e3530000 	cmp	r3, #0	; 0x0
+a0304a38:	0a000002 	beq	a0304a48 <cmd_clock_info+0x18c>
+a0304a3c:	e3a03004 	mov	r3, #4	; 0x4
+a0304a40:	e50b3040 	str	r3, [fp, -#64]
+a0304a44:	ea00000a 	b	a0304a74 <cmd_clock_info+0x1b8>
+a0304a48:	e3a03312 	mov	r3, #1207959552	; 0x48000000
+a0304a4c:	e2833004 	add	r3, r3, #4	; 0x4
+a0304a50:	e5933000 	ldr	r3, [r3]
+a0304a54:	e2033901 	and	r3, r3, #16384	; 0x4000
+a0304a58:	e3530000 	cmp	r3, #0	; 0x0
+a0304a5c:	0a000002 	beq	a0304a6c <cmd_clock_info+0x1b0>
+a0304a60:	e3a03002 	mov	r3, #2	; 0x2
+a0304a64:	e50b3040 	str	r3, [fp, -#64]
+a0304a68:	ea000001 	b	a0304a74 <cmd_clock_info+0x1b8>
+a0304a6c:	e3a03001 	mov	r3, #1	; 0x1
+a0304a70:	e50b3040 	str	r3, [fp, -#64]
+a0304a74:	e3a03312 	mov	r3, #1207959552	; 0x48000000
+a0304a78:	e2833004 	add	r3, r3, #4	; 0x4
+a0304a7c:	e5933000 	ldr	r3, [r3]
+a0304a80:	e2033802 	and	r3, r3, #131072	; 0x20000
+a0304a84:	e3530000 	cmp	r3, #0	; 0x0
+a0304a88:	0a000002 	beq	a0304a98 <cmd_clock_info+0x1dc>
+a0304a8c:	e3a03002 	mov	r3, #2	; 0x2
+a0304a90:	e50b3044 	str	r3, [fp, -#68]
+a0304a94:	ea000001 	b	a0304aa0 <cmd_clock_info+0x1e4>
+a0304a98:	e3a03001 	mov	r3, #1	; 0x1
+a0304a9c:	e50b3044 	str	r3, [fp, -#68]
+a0304aa0:	e51b2030 	ldr	r2, [fp, -#48]
+a0304aa4:	e59f31f8 	ldr	r3, [pc, #504]	; a0304ca4 <cmd_clock_info+0x3e8>
+a0304aa8:	e0831392 	umull	r1, r3, r2, r3
+a0304aac:	e1a0c923 	mov	ip, r3, lsr #18
+a0304ab0:	e51b0030 	ldr	r0, [fp, -#48]
+a0304ab4:	e59f31e8 	ldr	r3, [pc, #488]	; a0304ca4 <cmd_clock_info+0x3e8>
+a0304ab8:	e0832390 	umull	r2, r3, r0, r3
+a0304abc:	e1a01923 	mov	r1, r3, lsr #18
+a0304ac0:	e1a02001 	mov	r2, r1
+a0304ac4:	e1a02282 	mov	r2, r2, lsl #5
+a0304ac8:	e0612002 	rsb	r2, r1, r2
+a0304acc:	e1a03302 	mov	r3, r2, lsl #6
+a0304ad0:	e0623003 	rsb	r3, r2, r3
+a0304ad4:	e1a03183 	mov	r3, r3, lsl #3
+a0304ad8:	e0833001 	add	r3, r3, r1
+a0304adc:	e1a03303 	mov	r3, r3, lsl #6
+a0304ae0:	e0632000 	rsb	r2, r3, r0
+a0304ae4:	e59f31bc 	ldr	r3, [pc, #444]	; a0304ca8 <cmd_clock_info+0x3ec>
+a0304ae8:	e0831392 	umull	r1, r3, r2, r3
+a0304aec:	e1a036a3 	mov	r3, r3, lsr #13
+a0304af0:	e59f01b4 	ldr	r0, [pc, #436]	; a0304cac <cmd_clock_info+0x3f0>
+a0304af4:	e1a0100c 	mov	r1, ip
+a0304af8:	e1a02003 	mov	r2, r3
+a0304afc:	e51b3024 	ldr	r3, [fp, -#36]
+a0304b00:	eb0017e6 	bl	a030aaa0 <printf>
+a0304b04:	e51b2034 	ldr	r2, [fp, -#52]
+a0304b08:	e59f3194 	ldr	r3, [pc, #404]	; a0304ca4 <cmd_clock_info+0x3e8>
+a0304b0c:	e0831392 	umull	r1, r3, r2, r3
+a0304b10:	e1a03923 	mov	r3, r3, lsr #18
+a0304b14:	e50b3048 	str	r3, [fp, -#72]
+a0304b18:	e51b0034 	ldr	r0, [fp, -#52]
+a0304b1c:	e59f3180 	ldr	r3, [pc, #384]	; a0304ca4 <cmd_clock_info+0x3e8>
+a0304b20:	e0832390 	umull	r2, r3, r0, r3
+a0304b24:	e1a01923 	mov	r1, r3, lsr #18
+a0304b28:	e1a02001 	mov	r2, r1
+a0304b2c:	e1a02282 	mov	r2, r2, lsl #5
+a0304b30:	e0612002 	rsb	r2, r1, r2
+a0304b34:	e1a03302 	mov	r3, r2, lsl #6
+a0304b38:	e0623003 	rsb	r3, r2, r3
+a0304b3c:	e1a03183 	mov	r3, r3, lsl #3
+a0304b40:	e0833001 	add	r3, r3, r1
+a0304b44:	e1a03303 	mov	r3, r3, lsl #6
+a0304b48:	e0632000 	rsb	r2, r3, r0
+a0304b4c:	e59f3154 	ldr	r3, [pc, #340]	; a0304ca8 <cmd_clock_info+0x3ec>
+a0304b50:	e0831392 	umull	r1, r3, r2, r3
+a0304b54:	e1a036a3 	mov	r3, r3, lsr #13
+a0304b58:	e50b304c 	str	r3, [fp, -#76]
+a0304b5c:	e51b302c 	ldr	r3, [fp, -#44]
+a0304b60:	e1a030a3 	mov	r3, r3, lsr #1
+a0304b64:	e50b3050 	str	r3, [fp, -#80]
+a0304b68:	e51b302c 	ldr	r3, [fp, -#44]
+a0304b6c:	e2032001 	and	r2, r3, #1	; 0x1
+a0304b70:	e1a03002 	mov	r3, r2
+a0304b74:	e1a03103 	mov	r3, r3, lsl #2
+a0304b78:	e0833002 	add	r3, r3, r2
+a0304b7c:	e58d3000 	str	r3, [sp]
+a0304b80:	e51b3020 	ldr	r3, [fp, -#32]
+a0304b84:	e2033001 	and	r3, r3, #1	; 0x1
+a0304b88:	e3530000 	cmp	r3, #0	; 0x0
+a0304b8c:	0a000002 	beq	a0304b9c <cmd_clock_info+0x2e0>
+a0304b90:	e59f2118 	ldr	r2, [pc, #280]	; a0304cb0 <cmd_clock_info+0x3f4>
+a0304b94:	e50b2054 	str	r2, [fp, -#84]
+a0304b98:	ea000001 	b	a0304ba4 <cmd_clock_info+0x2e8>
+a0304b9c:	e59f3110 	ldr	r3, [pc, #272]	; a0304cb4 <cmd_clock_info+0x3f8>
+a0304ba0:	e50b3054 	str	r3, [fp, -#84]
+a0304ba4:	e51b1054 	ldr	r1, [fp, -#84]
+a0304ba8:	e58d1004 	str	r1, [sp, #4]
+a0304bac:	e59f0104 	ldr	r0, [pc, #260]	; a0304cb8 <cmd_clock_info+0x3fc>
+a0304bb0:	e51b1048 	ldr	r1, [fp, -#72]
+a0304bb4:	e51b204c 	ldr	r2, [fp, -#76]
+a0304bb8:	e51b3050 	ldr	r3, [fp, -#80]
+a0304bbc:	eb0017b7 	bl	a030aaa0 <printf>
+a0304bc0:	e51b203c 	ldr	r2, [fp, -#60]
+a0304bc4:	e59f30d8 	ldr	r3, [pc, #216]	; a0304ca4 <cmd_clock_info+0x3e8>
+a0304bc8:	e0831392 	umull	r1, r3, r2, r3
+a0304bcc:	e1a0e923 	mov	lr, r3, lsr #18
+a0304bd0:	e51b003c 	ldr	r0, [fp, -#60]
+a0304bd4:	e59f30c8 	ldr	r3, [pc, #200]	; a0304ca4 <cmd_clock_info+0x3e8>
+a0304bd8:	e0832390 	umull	r2, r3, r0, r3
+a0304bdc:	e1a01923 	mov	r1, r3, lsr #18
+a0304be0:	e1a02001 	mov	r2, r1
+a0304be4:	e1a02282 	mov	r2, r2, lsl #5
+a0304be8:	e0612002 	rsb	r2, r1, r2
+a0304bec:	e1a03302 	mov	r3, r2, lsl #6
+a0304bf0:	e0623003 	rsb	r3, r2, r3
+a0304bf4:	e1a03183 	mov	r3, r3, lsl #3
+a0304bf8:	e0833001 	add	r3, r3, r1
+a0304bfc:	e1a03303 	mov	r3, r3, lsl #6
+a0304c00:	e0632000 	rsb	r2, r3, r0
+a0304c04:	e59f309c 	ldr	r3, [pc, #156]	; a0304ca8 <cmd_clock_info+0x3ec>
+a0304c08:	e0831392 	umull	r1, r3, r2, r3
+a0304c0c:	e1a026a3 	mov	r2, r3, lsr #13
+a0304c10:	e51b3018 	ldr	r3, [fp, -#24]
+a0304c14:	e1a03ca3 	mov	r3, r3, lsr #25
+a0304c18:	e203c001 	and	ip, r3, #1	; 0x1
+a0304c1c:	e51b3040 	ldr	r3, [fp, -#64]
+a0304c20:	e58d3000 	str	r3, [sp]
+a0304c24:	e51b3044 	ldr	r3, [fp, -#68]
+a0304c28:	e58d3004 	str	r3, [sp, #4]
+a0304c2c:	e59f0088 	ldr	r0, [pc, #136]	; a0304cbc <cmd_clock_info+0x400>
+a0304c30:	e1a0100e 	mov	r1, lr
+a0304c34:	e1a0300c 	mov	r3, ip
+a0304c38:	eb001798 	bl	a030aaa0 <printf>
+a0304c3c:	e51b2038 	ldr	r2, [fp, -#56]
+a0304c40:	e59f305c 	ldr	r3, [pc, #92]	; a0304ca4 <cmd_clock_info+0x3e8>
+a0304c44:	e0831392 	umull	r1, r3, r2, r3
+a0304c48:	e1a0c923 	mov	ip, r3, lsr #18
+a0304c4c:	e51b0038 	ldr	r0, [fp, -#56]
+a0304c50:	e59f304c 	ldr	r3, [pc, #76]	; a0304ca4 <cmd_clock_info+0x3e8>
+a0304c54:	e0832390 	umull	r2, r3, r0, r3
+a0304c58:	e1a01923 	mov	r1, r3, lsr #18
+a0304c5c:	e1a02001 	mov	r2, r1
+a0304c60:	e1a02282 	mov	r2, r2, lsl #5
+a0304c64:	e0612002 	rsb	r2, r1, r2
+a0304c68:	e1a03302 	mov	r3, r2, lsl #6
+a0304c6c:	e0623003 	rsb	r3, r2, r3
+a0304c70:	e1a03183 	mov	r3, r3, lsl #3
+a0304c74:	e0833001 	add	r3, r3, r1
+a0304c78:	e1a03303 	mov	r3, r3, lsl #6
+a0304c7c:	e0632000 	rsb	r2, r3, r0
+a0304c80:	e59f3020 	ldr	r3, [pc, #32]	; a0304ca8 <cmd_clock_info+0x3ec>
+a0304c84:	e0831392 	umull	r1, r3, r2, r3
+a0304c88:	e1a036a3 	mov	r3, r3, lsr #13
+a0304c8c:	e59f002c 	ldr	r0, [pc, #44]	; a0304cc0 <cmd_clock_info+0x404>
+a0304c90:	e1a0100c 	mov	r1, ip
+a0304c94:	e1a02003 	mov	r2, r3
+a0304c98:	eb001780 	bl	a030aaa0 <printf>
+a0304c9c:	e1a00003 	mov	r0, r3
+a0304ca0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0304ca4:	431bde83 	tstmi	fp, #2096	; 0x830
+a0304ca8:	d1b71759 	movles	r1, r9, asr r7
+a0304cac:	a030cdac 	eorges	ip, r0, ip, lsr #27
+a0304cb0:	a030cdd0 	ldrgesb	ip, [r0], -r0
+a0304cb4:	a030cdd4 	ldrgesb	ip, [r0], -r4
+a0304cb8:	a030cdd8 	ldrgesb	ip, [r0], -r8
+a0304cbc:	a030ce0c 	eorges	ip, r0, ip, lsl #28
+a0304cc0:	a030ce4c 	eorges	ip, r0, ip, asr #28
+
+a0304cc4 <cmd_go>:
+a0304cc4:	e1a0c00d 	mov	ip, sp
+a0304cc8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0304ccc:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0304cd0:	e24dd014 	sub	sp, sp, #20	; 0x14
+a0304cd4:	e50b0010 	str	r0, [fp, -#16]
+a0304cd8:	e50b1014 	str	r1, [fp, -#20]
+a0304cdc:	e3a03000 	mov	r3, #0	; 0x0
+a0304ce0:	e50b3018 	str	r3, [fp, -#24]
+a0304ce4:	e51b3010 	ldr	r3, [fp, -#16]
+a0304ce8:	e3530002 	cmp	r3, #2	; 0x2
+a0304cec:	0a000002 	beq	a0304cfc <cmd_go+0x38>
+a0304cf0:	e3e03000 	mvn	r3, #0	; 0x0
+a0304cf4:	e50b3020 	str	r3, [fp, -#32]
+a0304cf8:	ea000018 	b	a0304d60 <cmd_go+0x9c>
+a0304cfc:	e3a02004 	mov	r2, #4	; 0x4
+a0304d00:	e51b3014 	ldr	r3, [fp, -#20]
+a0304d04:	e0823003 	add	r3, r2, r3
+a0304d08:	e24b2018 	sub	r2, fp, #24	; 0x18
+a0304d0c:	e5930000 	ldr	r0, [r3]
+a0304d10:	e1a01002 	mov	r1, r2
+a0304d14:	eb001a15 	bl	a030b570 <strtou32>
+a0304d18:	e1a03000 	mov	r3, r0
+a0304d1c:	e50b301c 	str	r3, [fp, -#28]
+a0304d20:	e51b301c 	ldr	r3, [fp, -#28]
+a0304d24:	e3530000 	cmp	r3, #0	; 0x0
+a0304d28:	aa000002 	bge	a0304d38 <cmd_go+0x74>
+a0304d2c:	e3e03000 	mvn	r3, #0	; 0x0
+a0304d30:	e50b3020 	str	r3, [fp, -#32]
+a0304d34:	ea000009 	b	a0304d60 <cmd_go+0x9c>
+a0304d38:	e59f0028 	ldr	r0, [pc, #40]	; a0304d68 <cmd_go+0xa4>
+a0304d3c:	e51b1018 	ldr	r1, [fp, -#24]
+a0304d40:	eb001756 	bl	a030aaa0 <printf>
+a0304d44:	e51b3018 	ldr	r3, [fp, -#24]
+a0304d48:	e1a0e00f 	mov	lr, pc
+a0304d4c:	e1a0f003 	mov	pc, r3
+a0304d50:	e59f0014 	ldr	r0, [pc, #20]	; a0304d6c <cmd_go+0xa8>
+a0304d54:	eb001751 	bl	a030aaa0 <printf>
+a0304d58:	e3a03000 	mov	r3, #0	; 0x0
+a0304d5c:	e50b3020 	str	r3, [fp, -#32]
+a0304d60:	e51b0020 	ldr	r0, [fp, -#32]
+a0304d64:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0304d68:	a030ce78 	eorges	ip, r0, r8, ror lr
+a0304d6c:	a030ce94 	mlages	r0, r4, lr, ip
+
+a0304d70 <ReadByteWithTimeout>:
+a0304d70:	e1a0c00d 	mov	ip, sp
+a0304d74:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0304d78:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0304d7c:	e24dd010 	sub	sp, sp, #16	; 0x10
+a0304d80:	e50b0010 	str	r0, [fp, -#16]
+a0304d84:	e24b3011 	sub	r3, fp, #17	; 0x11
+a0304d88:	e1a00003 	mov	r0, r3
+a0304d8c:	e3a01001 	mov	r1, #1	; 0x1
+a0304d90:	e51b2010 	ldr	r2, [fp, -#16]
+a0304d94:	eb0018fc 	bl	a030b18c <SerialInputBlock>
+a0304d98:	e1a03000 	mov	r3, r0
+a0304d9c:	e50b3018 	str	r3, [fp, -#24]
+a0304da0:	e51b3018 	ldr	r3, [fp, -#24]
+a0304da4:	e3530001 	cmp	r3, #1	; 0x1
+a0304da8:	1a000002 	bne	a0304db8 <ReadByteWithTimeout+0x48>
+a0304dac:	e55b3011 	ldrb	r3, [fp, -#17]
+a0304db0:	e50b301c 	str	r3, [fp, -#28]
+a0304db4:	ea000001 	b	a0304dc0 <ReadByteWithTimeout+0x50>
+a0304db8:	e3e03000 	mvn	r3, #0	; 0x0
+a0304dbc:	e50b301c 	str	r3, [fp, -#28]
+a0304dc0:	e51b001c 	ldr	r0, [fp, -#28]
+a0304dc4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0304dc8 <XModemReceive>:
+a0304dc8:	e1a0c00d 	mov	ip, sp
+a0304dcc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0304dd0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0304dd4:	e24dd05c 	sub	sp, sp, #92	; 0x5c
+a0304dd8:	e50b0010 	str	r0, [fp, -#16]
+a0304ddc:	e50b1014 	str	r1, [fp, -#20]
+a0304de0:	e3a03000 	mov	r3, #0	; 0x0
+a0304de4:	e50b3018 	str	r3, [fp, -#24]
+a0304de8:	e3a03001 	mov	r3, #1	; 0x1
+a0304dec:	e50b301c 	str	r3, [fp, -#28]
+a0304df0:	e3a03000 	mov	r3, #0	; 0x0
+a0304df4:	e50b3020 	str	r3, [fp, -#32]
+a0304df8:	e3a03001 	mov	r3, #1	; 0x1
+a0304dfc:	e50b3024 	str	r3, [fp, -#36]
+a0304e00:	e3a03043 	mov	r3, #67	; 0x43
+a0304e04:	e54b3025 	strb	r3, [fp, -#37]
+a0304e08:	eb00013f 	bl	a030530c <ReadFlush>
+a0304e0c:	e55b3025 	ldrb	r3, [fp, -#37]
+a0304e10:	e1a00003 	mov	r0, r3
+a0304e14:	eb000132 	bl	a03052e4 <WriteByte>
+a0304e18:	e3a03000 	mov	r3, #0	; 0x0
+a0304e1c:	e50b303c 	str	r3, [fp, -#60]
+a0304e20:	e3a03000 	mov	r3, #0	; 0x0
+a0304e24:	e50b3040 	str	r3, [fp, -#64]
+a0304e28:	e3a03000 	mov	r3, #0	; 0x0
+a0304e2c:	e50b3044 	str	r3, [fp, -#68]
+a0304e30:	e3a0000a 	mov	r0, #10	; 0xa
+a0304e34:	ebffffcd 	bl	a0304d70 <ReadByteWithTimeout>
+a0304e38:	e1a03000 	mov	r3, r0
+a0304e3c:	e50b302c 	str	r3, [fp, -#44]
+a0304e40:	e51b302c 	ldr	r3, [fp, -#44]
+a0304e44:	e3530000 	cmp	r3, #0	; 0x0
+a0304e48:	aa000000 	bge	a0304e50 <XModemReceive+0x88>
+a0304e4c:	ea0000ef 	b	a0305210 <XModemReceive+0x448>
+a0304e50:	e3a03015 	mov	r3, #21	; 0x15
+a0304e54:	e54b3025 	strb	r3, [fp, -#37]
+a0304e58:	e51b302c 	ldr	r3, [fp, -#44]
+a0304e5c:	e50b3064 	str	r3, [fp, -#100]
+a0304e60:	e51b3064 	ldr	r3, [fp, -#100]
+a0304e64:	e3530001 	cmp	r3, #1	; 0x1
+a0304e68:	ba0000e8 	blt	a0305210 <XModemReceive+0x448>
+a0304e6c:	e51b3064 	ldr	r3, [fp, -#100]
+a0304e70:	e3530002 	cmp	r3, #2	; 0x2
+a0304e74:	da000006 	ble	a0304e94 <XModemReceive+0xcc>
+a0304e78:	e51b3064 	ldr	r3, [fp, -#100]
+a0304e7c:	e3530004 	cmp	r3, #4	; 0x4
+a0304e80:	0a000000 	beq	a0304e88 <XModemReceive+0xc0>
+a0304e84:	ea0000e1 	b	a0305210 <XModemReceive+0x448>
+a0304e88:	e3a00006 	mov	r0, #6	; 0x6
+a0304e8c:	eb000114 	bl	a03052e4 <WriteByte>
+a0304e90:	ea00010e 	b	a03052d0 <XModemReceive+0x508>
+a0304e94:	e3a0000a 	mov	r0, #10	; 0xa
+a0304e98:	ebffffb4 	bl	a0304d70 <ReadByteWithTimeout>
+a0304e9c:	e1a03000 	mov	r3, r0
+a0304ea0:	e50b3030 	str	r3, [fp, -#48]
+a0304ea4:	e51b3030 	ldr	r3, [fp, -#48]
+a0304ea8:	e3530000 	cmp	r3, #0	; 0x0
+a0304eac:	aa000000 	bge	a0304eb4 <XModemReceive+0xec>
+a0304eb0:	ea0000d6 	b	a0305210 <XModemReceive+0x448>
+a0304eb4:	e3a0000a 	mov	r0, #10	; 0xa
+a0304eb8:	ebffffac 	bl	a0304d70 <ReadByteWithTimeout>
+a0304ebc:	e1a03000 	mov	r3, r0
+a0304ec0:	e50b3034 	str	r3, [fp, -#52]
+a0304ec4:	e51b3034 	ldr	r3, [fp, -#52]
+a0304ec8:	e3530000 	cmp	r3, #0	; 0x0
+a0304ecc:	aa000000 	bge	a0304ed4 <XModemReceive+0x10c>
+a0304ed0:	ea0000ce 	b	a0305210 <XModemReceive+0x448>
+a0304ed4:	e51b3034 	ldr	r3, [fp, -#52]
+a0304ed8:	e26320ff 	rsb	r2, r3, #255	; 0xff
+a0304edc:	e51b3030 	ldr	r3, [fp, -#48]
+a0304ee0:	e1530002 	cmp	r3, r2
+a0304ee4:	0a000000 	beq	a0304eec <XModemReceive+0x124>
+a0304ee8:	ea0000c8 	b	a0305210 <XModemReceive+0x448>
+a0304eec:	e51b302c 	ldr	r3, [fp, -#44]
+a0304ef0:	e3530001 	cmp	r3, #1	; 0x1
+a0304ef4:	1a000002 	bne	a0304f04 <XModemReceive+0x13c>
+a0304ef8:	e3a03080 	mov	r3, #128	; 0x80
+a0304efc:	e50b3068 	str	r3, [fp, -#104]
+a0304f00:	ea000001 	b	a0304f0c <XModemReceive+0x144>
+a0304f04:	e3a03b01 	mov	r3, #1024	; 0x400
+a0304f08:	e50b3068 	str	r3, [fp, -#104]
+a0304f0c:	e51b3068 	ldr	r3, [fp, -#104]
+a0304f10:	e50b3038 	str	r3, [fp, -#56]
+a0304f14:	e3a03000 	mov	r3, #0	; 0x0
+a0304f18:	e50b3048 	str	r3, [fp, -#72]
+a0304f1c:	e51b2048 	ldr	r2, [fp, -#72]
+a0304f20:	e51b3038 	ldr	r3, [fp, -#56]
+a0304f24:	e1520003 	cmp	r2, r3
+a0304f28:	ba000000 	blt	a0304f30 <XModemReceive+0x168>
+a0304f2c:	ea000010 	b	a0304f74 <XModemReceive+0x1ac>
+a0304f30:	e3a0000a 	mov	r0, #10	; 0xa
+a0304f34:	ebffff8d 	bl	a0304d70 <ReadByteWithTimeout>
+a0304f38:	e1a03000 	mov	r3, r0
+a0304f3c:	e50b304c 	str	r3, [fp, -#76]
+a0304f40:	e51b304c 	ldr	r3, [fp, -#76]
+a0304f44:	e3530000 	cmp	r3, #0	; 0x0
+a0304f48:	aa000000 	bge	a0304f50 <XModemReceive+0x188>
+a0304f4c:	ea0000af 	b	a0305210 <XModemReceive+0x448>
+a0304f50:	e59f2388 	ldr	r2, [pc, #904]	; a03052e0 <XModemReceive+0x518>
+a0304f54:	e51b3048 	ldr	r3, [fp, -#72]
+a0304f58:	e0822003 	add	r2, r2, r3
+a0304f5c:	e55b304c 	ldrb	r3, [fp, -#76]
+a0304f60:	e5c23000 	strb	r3, [r2]
+a0304f64:	e51b3048 	ldr	r3, [fp, -#72]
+a0304f68:	e2833001 	add	r3, r3, #1	; 0x1
+a0304f6c:	e50b3048 	str	r3, [fp, -#72]
+a0304f70:	eaffffe9 	b	a0304f1c <XModemReceive+0x154>
+a0304f74:	e51b3024 	ldr	r3, [fp, -#36]
+a0304f78:	e3530000 	cmp	r3, #0	; 0x0
+a0304f7c:	0a00000f 	beq	a0304fc0 <XModemReceive+0x1f8>
+a0304f80:	e3a0000a 	mov	r0, #10	; 0xa
+a0304f84:	ebffff79 	bl	a0304d70 <ReadByteWithTimeout>
+a0304f88:	e1a03000 	mov	r3, r0
+a0304f8c:	e50b3040 	str	r3, [fp, -#64]
+a0304f90:	e51b3040 	ldr	r3, [fp, -#64]
+a0304f94:	e3530000 	cmp	r3, #0	; 0x0
+a0304f98:	aa000000 	bge	a0304fa0 <XModemReceive+0x1d8>
+a0304f9c:	ea00009b 	b	a0305210 <XModemReceive+0x448>
+a0304fa0:	e3a0000a 	mov	r0, #10	; 0xa
+a0304fa4:	ebffff71 	bl	a0304d70 <ReadByteWithTimeout>
+a0304fa8:	e1a03000 	mov	r3, r0
+a0304fac:	e50b3044 	str	r3, [fp, -#68]
+a0304fb0:	e51b3044 	ldr	r3, [fp, -#68]
+a0304fb4:	e3530000 	cmp	r3, #0	; 0x0
+a0304fb8:	aa000008 	bge	a0304fe0 <XModemReceive+0x218>
+a0304fbc:	ea000093 	b	a0305210 <XModemReceive+0x448>
+a0304fc0:	e3a0000a 	mov	r0, #10	; 0xa
+a0304fc4:	ebffff69 	bl	a0304d70 <ReadByteWithTimeout>
+a0304fc8:	e1a03000 	mov	r3, r0
+a0304fcc:	e50b303c 	str	r3, [fp, -#60]
+a0304fd0:	e51b303c 	ldr	r3, [fp, -#60]
+a0304fd4:	e3530000 	cmp	r3, #0	; 0x0
+a0304fd8:	aa000000 	bge	a0304fe0 <XModemReceive+0x218>
+a0304fdc:	ea00008b 	b	a0305210 <XModemReceive+0x448>
+a0304fe0:	e51b301c 	ldr	r3, [fp, -#28]
+a0304fe4:	e2433001 	sub	r3, r3, #1	; 0x1
+a0304fe8:	e20320ff 	and	r2, r3, #255	; 0xff
+a0304fec:	e51b3030 	ldr	r3, [fp, -#48]
+a0304ff0:	e1530002 	cmp	r3, r2
+a0304ff4:	1a000000 	bne	a0304ffc <XModemReceive+0x234>
+a0304ff8:	ea00007f 	b	a03051fc <XModemReceive+0x434>
+a0304ffc:	e51b301c 	ldr	r3, [fp, -#28]
+a0305000:	e20320ff 	and	r2, r3, #255	; 0xff
+a0305004:	e51b3030 	ldr	r3, [fp, -#48]
+a0305008:	e1530002 	cmp	r3, r2
+a030500c:	0a000000 	beq	a0305014 <XModemReceive+0x24c>
+a0305010:	ea00007e 	b	a0305210 <XModemReceive+0x448>
+a0305014:	e51b3024 	ldr	r3, [fp, -#36]
+a0305018:	e3530000 	cmp	r3, #0	; 0x0
+a030501c:	0a00003c 	beq	a0305114 <XModemReceive+0x34c>
+a0305020:	e3a03000 	mov	r3, #0	; 0x0
+a0305024:	e50b304c 	str	r3, [fp, -#76]
+a0305028:	e3a03000 	mov	r3, #0	; 0x0
+a030502c:	e50b3048 	str	r3, [fp, -#72]
+a0305030:	e51b2048 	ldr	r2, [fp, -#72]
+a0305034:	e51b3038 	ldr	r3, [fp, -#56]
+a0305038:	e1520003 	cmp	r2, r3
+a030503c:	ba000000 	blt	a0305044 <XModemReceive+0x27c>
+a0305040:	ea000023 	b	a03050d4 <XModemReceive+0x30c>
+a0305044:	e59f2294 	ldr	r2, [pc, #660]	; a03052e0 <XModemReceive+0x518>
+a0305048:	e51b3048 	ldr	r3, [fp, -#72]
+a030504c:	e0823003 	add	r3, r2, r3
+a0305050:	e5d33000 	ldrb	r3, [r3]
+a0305054:	e1a02403 	mov	r2, r3, lsl #8
+a0305058:	e51b304c 	ldr	r3, [fp, -#76]
+a030505c:	e0233002 	eor	r3, r3, r2
+a0305060:	e50b304c 	str	r3, [fp, -#76]
+a0305064:	e3a03000 	mov	r3, #0	; 0x0
+a0305068:	e50b3050 	str	r3, [fp, -#80]
+a030506c:	e51b3050 	ldr	r3, [fp, -#80]
+a0305070:	e3530007 	cmp	r3, #7	; 0x7
+a0305074:	da000000 	ble	a030507c <XModemReceive+0x2b4>
+a0305078:	ea000011 	b	a03050c4 <XModemReceive+0x2fc>
+a030507c:	e51b304c 	ldr	r3, [fp, -#76]
+a0305080:	e2033902 	and	r3, r3, #32768	; 0x8000
+a0305084:	e3530000 	cmp	r3, #0	; 0x0
+a0305088:	0a000006 	beq	a03050a8 <XModemReceive+0x2e0>
+a030508c:	e51b304c 	ldr	r3, [fp, -#76]
+a0305090:	e1a02083 	mov	r2, r3, lsl #1
+a0305094:	e3a03a01 	mov	r3, #4096	; 0x1000
+a0305098:	e2833021 	add	r3, r3, #33	; 0x21
+a030509c:	e0223003 	eor	r3, r2, r3
+a03050a0:	e50b304c 	str	r3, [fp, -#76]
+a03050a4:	ea000002 	b	a03050b4 <XModemReceive+0x2ec>
+a03050a8:	e51b304c 	ldr	r3, [fp, -#76]
+a03050ac:	e1a03083 	mov	r3, r3, lsl #1
+a03050b0:	e50b304c 	str	r3, [fp, -#76]
+a03050b4:	e51b3050 	ldr	r3, [fp, -#80]
+a03050b8:	e2833001 	add	r3, r3, #1	; 0x1
+a03050bc:	e50b3050 	str	r3, [fp, -#80]
+a03050c0:	eaffffe9 	b	a030506c <XModemReceive+0x2a4>
+a03050c4:	e51b3048 	ldr	r3, [fp, -#72]
+a03050c8:	e2833001 	add	r3, r3, #1	; 0x1
+a03050cc:	e50b3048 	str	r3, [fp, -#72]
+a03050d0:	eaffffd6 	b	a0305030 <XModemReceive+0x268>
+a03050d4:	e51b304c 	ldr	r3, [fp, -#76]
+a03050d8:	e1a03443 	mov	r3, r3, asr #8
+a03050dc:	e20330ff 	and	r3, r3, #255	; 0xff
+a03050e0:	e50b3054 	str	r3, [fp, -#84]
+a03050e4:	e51b304c 	ldr	r3, [fp, -#76]
+a03050e8:	e20330ff 	and	r3, r3, #255	; 0xff
+a03050ec:	e50b3058 	str	r3, [fp, -#88]
+a03050f0:	e51b2040 	ldr	r2, [fp, -#64]
+a03050f4:	e51b3054 	ldr	r3, [fp, -#84]
+a03050f8:	e1520003 	cmp	r2, r3
+a03050fc:	1a000043 	bne	a0305210 <XModemReceive+0x448>
+a0305100:	e51b2044 	ldr	r2, [fp, -#68]
+a0305104:	e51b3058 	ldr	r3, [fp, -#88]
+a0305108:	e1520003 	cmp	r2, r3
+a030510c:	1a00003f 	bne	a0305210 <XModemReceive+0x448>
+a0305110:	ea000018 	b	a0305178 <XModemReceive+0x3b0>
+a0305114:	e3a03000 	mov	r3, #0	; 0x0
+a0305118:	e54b3059 	strb	r3, [fp, -#89]
+a030511c:	e3a03000 	mov	r3, #0	; 0x0
+a0305120:	e50b3058 	str	r3, [fp, -#88]
+a0305124:	e51b2058 	ldr	r2, [fp, -#88]
+a0305128:	e51b3038 	ldr	r3, [fp, -#56]
+a030512c:	e1520003 	cmp	r2, r3
+a0305130:	ba000000 	blt	a0305138 <XModemReceive+0x370>
+a0305134:	ea00000a 	b	a0305164 <XModemReceive+0x39c>
+a0305138:	e59f21a0 	ldr	r2, [pc, #416]	; a03052e0 <XModemReceive+0x518>
+a030513c:	e51b3058 	ldr	r3, [fp, -#88]
+a0305140:	e0823003 	add	r3, r2, r3
+a0305144:	e55b2059 	ldrb	r2, [fp, -#89]
+a0305148:	e5d33000 	ldrb	r3, [r3]
+a030514c:	e0823003 	add	r3, r2, r3
+a0305150:	e54b3059 	strb	r3, [fp, -#89]
+a0305154:	e51b3058 	ldr	r3, [fp, -#88]
+a0305158:	e2833001 	add	r3, r3, #1	; 0x1
+a030515c:	e50b3058 	str	r3, [fp, -#88]
+a0305160:	eaffffef 	b	a0305124 <XModemReceive+0x35c>
+a0305164:	e55b2059 	ldrb	r2, [fp, -#89]
+a0305168:	e51b303c 	ldr	r3, [fp, -#60]
+a030516c:	e1530002 	cmp	r3, r2
+a0305170:	0a000000 	beq	a0305178 <XModemReceive+0x3b0>
+a0305174:	ea000025 	b	a0305210 <XModemReceive+0x448>
+a0305178:	e51b301c 	ldr	r3, [fp, -#28]
+a030517c:	e2833001 	add	r3, r3, #1	; 0x1
+a0305180:	e50b301c 	str	r3, [fp, -#28]
+a0305184:	e51b2020 	ldr	r2, [fp, -#32]
+a0305188:	e51b3038 	ldr	r3, [fp, -#56]
+a030518c:	e0823003 	add	r3, r2, r3
+a0305190:	e50b3020 	str	r3, [fp, -#32]
+a0305194:	e51b2020 	ldr	r2, [fp, -#32]
+a0305198:	e51b3014 	ldr	r3, [fp, -#20]
+a030519c:	e1520003 	cmp	r2, r3
+a03051a0:	9a000000 	bls	a03051a8 <XModemReceive+0x3e0>
+a03051a4:	ea000019 	b	a0305210 <XModemReceive+0x448>
+a03051a8:	e3a03000 	mov	r3, #0	; 0x0
+a03051ac:	e50b3058 	str	r3, [fp, -#88]
+a03051b0:	e51b2058 	ldr	r2, [fp, -#88]
+a03051b4:	e51b3038 	ldr	r3, [fp, -#56]
+a03051b8:	e1520003 	cmp	r2, r3
+a03051bc:	ba000000 	blt	a03051c4 <XModemReceive+0x3fc>
+a03051c0:	ea00000d 	b	a03051fc <XModemReceive+0x434>
+a03051c4:	e24b0010 	sub	r0, fp, #16	; 0x10
+a03051c8:	e5902000 	ldr	r2, [r0]
+a03051cc:	e59f110c 	ldr	r1, [pc, #268]	; a03052e0 <XModemReceive+0x518>
+a03051d0:	e51b3058 	ldr	r3, [fp, -#88]
+a03051d4:	e0813003 	add	r3, r1, r3
+a03051d8:	e1a01002 	mov	r1, r2
+a03051dc:	e5d33000 	ldrb	r3, [r3]
+a03051e0:	e5c13000 	strb	r3, [r1]
+a03051e4:	e2822001 	add	r2, r2, #1	; 0x1
+a03051e8:	e5802000 	str	r2, [r0]
+a03051ec:	e51b3058 	ldr	r3, [fp, -#88]
+a03051f0:	e2833001 	add	r3, r3, #1	; 0x1
+a03051f4:	e50b3058 	str	r3, [fp, -#88]
+a03051f8:	eaffffec 	b	a03051b0 <XModemReceive+0x3e8>
+a03051fc:	e3a03000 	mov	r3, #0	; 0x0
+a0305200:	e50b3018 	str	r3, [fp, -#24]
+a0305204:	e3a00006 	mov	r0, #6	; 0x6
+a0305208:	eb000035 	bl	a03052e4 <WriteByte>
+a030520c:	eaffff01 	b	a0304e18 <XModemReceive+0x50>
+a0305210:	e51b3018 	ldr	r3, [fp, -#24]
+a0305214:	e2833001 	add	r3, r3, #1	; 0x1
+a0305218:	e50b3018 	str	r3, [fp, -#24]
+a030521c:	e51b3018 	ldr	r3, [fp, -#24]
+a0305220:	e3530005 	cmp	r3, #5	; 0x5
+a0305224:	1a000024 	bne	a03052bc <XModemReceive+0x4f4>
+a0305228:	e55b3025 	ldrb	r3, [fp, -#37]
+a030522c:	e3530043 	cmp	r3, #67	; 0x43
+a0305230:	1a000006 	bne	a0305250 <XModemReceive+0x488>
+a0305234:	e3a03015 	mov	r3, #21	; 0x15
+a0305238:	e54b3025 	strb	r3, [fp, -#37]
+a030523c:	e3a03000 	mov	r3, #0	; 0x0
+a0305240:	e50b3018 	str	r3, [fp, -#24]
+a0305244:	e3a03000 	mov	r3, #0	; 0x0
+a0305248:	e50b3024 	str	r3, [fp, -#36]
+a030524c:	eaffffef 	b	a0305210 <XModemReceive+0x448>
+a0305250:	e3a03000 	mov	r3, #0	; 0x0
+a0305254:	e50b3058 	str	r3, [fp, -#88]
+a0305258:	e51b3058 	ldr	r3, [fp, -#88]
+a030525c:	e3530004 	cmp	r3, #4	; 0x4
+a0305260:	da000000 	ble	a0305268 <XModemReceive+0x4a0>
+a0305264:	ea000005 	b	a0305280 <XModemReceive+0x4b8>
+a0305268:	e3a00018 	mov	r0, #24	; 0x18
+a030526c:	eb00001c 	bl	a03052e4 <WriteByte>
+a0305270:	e51b3058 	ldr	r3, [fp, -#88]
+a0305274:	e2833001 	add	r3, r3, #1	; 0x1
+a0305278:	e50b3058 	str	r3, [fp, -#88]
+a030527c:	eafffff5 	b	a0305258 <XModemReceive+0x490>
+a0305280:	e3a03000 	mov	r3, #0	; 0x0
+a0305284:	e50b3058 	str	r3, [fp, -#88]
+a0305288:	e51b3058 	ldr	r3, [fp, -#88]
+a030528c:	e3530004 	cmp	r3, #4	; 0x4
+a0305290:	da000000 	ble	a0305298 <XModemReceive+0x4d0>
+a0305294:	ea000005 	b	a03052b0 <XModemReceive+0x4e8>
+a0305298:	e3a00008 	mov	r0, #8	; 0x8
+a030529c:	eb000010 	bl	a03052e4 <WriteByte>
+a03052a0:	e51b3058 	ldr	r3, [fp, -#88]
+a03052a4:	e2833001 	add	r3, r3, #1	; 0x1
+a03052a8:	e50b3058 	str	r3, [fp, -#88]
+a03052ac:	eafffff5 	b	a0305288 <XModemReceive+0x4c0>
+a03052b0:	e3e03000 	mvn	r3, #0	; 0x0
+a03052b4:	e50b3060 	str	r3, [fp, -#96]
+a03052b8:	ea000006 	b	a03052d8 <XModemReceive+0x510>
+a03052bc:	eb000012 	bl	a030530c <ReadFlush>
+a03052c0:	e55b3025 	ldrb	r3, [fp, -#37]
+a03052c4:	e1a00003 	mov	r0, r3
+a03052c8:	eb000005 	bl	a03052e4 <WriteByte>
+a03052cc:	eafffed1 	b	a0304e18 <XModemReceive+0x50>
+a03052d0:	e51b3020 	ldr	r3, [fp, -#32]
+a03052d4:	e50b3060 	str	r3, [fp, -#96]
+a03052d8:	e51b0060 	ldr	r0, [fp, -#96]
+a03052dc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03052e0:	a030f4c4 	eorges	pc, r0, r4, asr #9
+
+a03052e4 <WriteByte>:
+a03052e4:	e1a0c00d 	mov	ip, sp
+a03052e8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03052ec:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03052f0:	e24dd004 	sub	sp, sp, #4	; 0x4
+a03052f4:	e1a03000 	mov	r3, r0
+a03052f8:	e54b300d 	strb	r3, [fp, -#13]
+a03052fc:	e55b300d 	ldrb	r3, [fp, -#13]
+a0305300:	e1a00003 	mov	r0, r3
+a0305304:	eb001667 	bl	a030aca8 <serial_write_raw>
+a0305308:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030530c <ReadFlush>:
+a030530c:	e1a0c00d 	mov	ip, sp
+a0305310:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0305314:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0305318:	eb00167d 	bl	a030ad14 <serial_flush_input>
+a030531c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0305320 <reset_cmd>:
+a0305320:	e1a0c00d 	mov	ip, sp
+a0305324:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0305328:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030532c:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0305330:	e50b0010 	str	r0, [fp, -#16]
+a0305334:	e50b1014 	str	r1, [fp, -#20]
+a0305338:	eb001681 	bl	a030ad44 <serial_flush_output>
+a030533c:	e59f0054 	ldr	r0, [pc, #84]	; a0305398 <reset_cmd+0x78>
+a0305340:	eb0015d6 	bl	a030aaa0 <printf>
+a0305344:	eb00167e 	bl	a030ad44 <serial_flush_output>
+a0305348:	e3a03000 	mov	r3, #0	; 0x0
+a030534c:	e50b3018 	str	r3, [fp, -#24]
+a0305350:	e51b3018 	ldr	r3, [fp, -#24]
+a0305354:	e3530063 	cmp	r3, #99	; 0x63
+a0305358:	da000000 	ble	a0305360 <reset_cmd+0x40>
+a030535c:	ea000005 	b	a0305378 <reset_cmd+0x58>
+a0305360:	e3a0000a 	mov	r0, #10	; 0xa
+a0305364:	eb001633 	bl	a030ac38 <serial_write>
+a0305368:	e51b3018 	ldr	r3, [fp, -#24]
+a030536c:	e2833001 	add	r3, r3, #1	; 0x1
+a0305370:	e50b3018 	str	r3, [fp, -#24]
+a0305374:	eafffff5 	b	a0305350 <reset_cmd+0x30>
+a0305378:	eb001671 	bl	a030ad44 <serial_flush_output>
+a030537c:	e59f0014 	ldr	r0, [pc, #20]	; a0305398 <reset_cmd+0x78>
+a0305380:	eb0015c6 	bl	a030aaa0 <printf>
+a0305384:	eb00166e 	bl	a030ad44 <serial_flush_output>
+a0305388:	eb001661 	bl	a030ad14 <serial_flush_input>
+a030538c:	e3a03000 	mov	r3, #0	; 0x0
+a0305390:	e1a00003 	mov	r0, r3
+a0305394:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0305398:	a030cea0 	eorges	ip, r0, r0, lsr #29
+
+a030539c <reboot_cmd>:
+a030539c:	e1a0c00d 	mov	ip, sp
+a03053a0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03053a4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03053a8:	e24dd008 	sub	sp, sp, #8	; 0x8
+a03053ac:	e50b0010 	str	r0, [fp, -#16]
+a03053b0:	e50b1014 	str	r1, [fp, -#20]
+a03053b4:	e59f0014 	ldr	r0, [pc, #20]	; a03053d0 <reboot_cmd+0x34>
+a03053b8:	eb0015b8 	bl	a030aaa0 <printf>
+a03053bc:	eb001660 	bl	a030ad44 <serial_flush_output>
+a03053c0:	eb0015f2 	bl	a030ab90 <reboot_system>
+a03053c4:	e3a03000 	mov	r3, #0	; 0x0
+a03053c8:	e1a00003 	mov	r0, r3
+a03053cc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03053d0:	a030cea4 	eorges	ip, r0, r4, lsr #29
+
+a03053d4 <bogomips_cmd>:
+a03053d4:	e1a0c00d 	mov	ip, sp
+a03053d8:	e92dd810 	stmdb	sp!, {r4, fp, ip, lr, pc}
+a03053dc:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03053e0:	e24dd014 	sub	sp, sp, #20	; 0x14
+a03053e4:	e50b0014 	str	r0, [fp, -#20]
+a03053e8:	e50b1018 	str	r1, [fp, -#24]
+a03053ec:	eb0018c5 	bl	a030b708 <timer_read>
+a03053f0:	e1a03000 	mov	r3, r0
+a03053f4:	e50b3020 	str	r3, [fp, -#32]
+a03053f8:	e3a03000 	mov	r3, #0	; 0x0
+a03053fc:	e50b301c 	str	r3, [fp, -#28]
+a0305400:	e51b201c 	ldr	r2, [fp, -#28]
+a0305404:	e3a03b61 	mov	r3, #99328	; 0x18400
+a0305408:	e2833fa7 	add	r3, r3, #668	; 0x29c
+a030540c:	e2833003 	add	r3, r3, #3	; 0x3
+a0305410:	e1520003 	cmp	r2, r3
+a0305414:	da000000 	ble	a030541c <bogomips_cmd+0x48>
+a0305418:	ea000003 	b	a030542c <bogomips_cmd+0x58>
+a030541c:	e51b301c 	ldr	r3, [fp, -#28]
+a0305420:	e2833001 	add	r3, r3, #1	; 0x1
+a0305424:	e50b301c 	str	r3, [fp, -#28]
+a0305428:	eafffff4 	b	a0305400 <bogomips_cmd+0x2c>
+a030542c:	eb0018b5 	bl	a030b708 <timer_read>
+a0305430:	e1a02000 	mov	r2, r0
+a0305434:	e51b3020 	ldr	r3, [fp, -#32]
+a0305438:	e0633002 	rsb	r3, r3, r2
+a030543c:	e50b3024 	str	r3, [fp, -#36]
+a0305440:	e51b2024 	ldr	r2, [fp, -#36]
+a0305444:	e1a03002 	mov	r3, r2
+a0305448:	e1a03283 	mov	r3, r3, lsl #5
+a030544c:	e0623003 	rsb	r3, r2, r3
+a0305450:	e1a03103 	mov	r3, r3, lsl #2
+a0305454:	e0833002 	add	r3, r3, r2
+a0305458:	e1a04183 	mov	r4, r3, lsl #3
+a030545c:	eb0018e6 	bl	a030b7fc <timer_tps>
+a0305460:	e1a03000 	mov	r3, r0
+a0305464:	e1a00004 	mov	r0, r4
+a0305468:	e1a01003 	mov	r1, r3
+a030546c:	eb001ab0 	bl	a030bf34 <__udivsi3>
+a0305470:	e1a03000 	mov	r3, r0
+a0305474:	e59f004c 	ldr	r0, [pc, #76]	; a03054c8 <bogomips_cmd+0xf4>
+a0305478:	e1a01003 	mov	r1, r3
+a030547c:	eb001587 	bl	a030aaa0 <printf>
+a0305480:	eb0018dd 	bl	a030b7fc <timer_tps>
+a0305484:	e1a02000 	mov	r2, r0
+a0305488:	e1a03002 	mov	r3, r2
+a030548c:	e1a03103 	mov	r3, r3, lsl #2
+a0305490:	e0833002 	add	r3, r3, r2
+a0305494:	e1a02103 	mov	r2, r3, lsl #2
+a0305498:	e0833002 	add	r3, r3, r2
+a030549c:	e1a03083 	mov	r3, r3, lsl #1
+a03054a0:	e1a00003 	mov	r0, r3
+a03054a4:	e51b1024 	ldr	r1, [fp, -#36]
+a03054a8:	eb001aa1 	bl	a030bf34 <__udivsi3>
+a03054ac:	e1a03000 	mov	r3, r0
+a03054b0:	e59f0014 	ldr	r0, [pc, #20]	; a03054cc <bogomips_cmd+0xf8>
+a03054b4:	e1a01003 	mov	r1, r3
+a03054b8:	eb001578 	bl	a030aaa0 <printf>
+a03054bc:	e3a03000 	mov	r3, #0	; 0x0
+a03054c0:	e1a00003 	mov	r0, r3
+a03054c4:	e91ba810 	ldmdb	fp, {r4, fp, sp, pc}
+a03054c8:	a030ceb4 	ldrgeh	ip, [r0], -r4
+a03054cc:	a030cec8 	eorges	ip, r0, r8, asr #29
+
+a03054d0 <call_cmd>:
+a03054d0:	e1a0c00d 	mov	ip, sp
+a03054d4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03054d8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03054dc:	e24dd024 	sub	sp, sp, #36	; 0x24
+a03054e0:	e50b0010 	str	r0, [fp, -#16]
+a03054e4:	e50b1014 	str	r1, [fp, -#20]
+a03054e8:	e3a03000 	mov	r3, #0	; 0x0
+a03054ec:	e50b3018 	str	r3, [fp, -#24]
+a03054f0:	e3a03000 	mov	r3, #0	; 0x0
+a03054f4:	e50b3020 	str	r3, [fp, -#32]
+a03054f8:	e3a03000 	mov	r3, #0	; 0x0
+a03054fc:	e50b3024 	str	r3, [fp, -#36]
+a0305500:	e3a03000 	mov	r3, #0	; 0x0
+a0305504:	e50b3028 	str	r3, [fp, -#40]
+a0305508:	e3a03000 	mov	r3, #0	; 0x0
+a030550c:	e50b302c 	str	r3, [fp, -#44]
+a0305510:	e51b3010 	ldr	r3, [fp, -#16]
+a0305514:	e3530001 	cmp	r3, #1	; 0x1
+a0305518:	da000003 	ble	a030552c <call_cmd+0x5c>
+a030551c:	e51b3010 	ldr	r3, [fp, -#16]
+a0305520:	e3530006 	cmp	r3, #6	; 0x6
+a0305524:	ca000000 	bgt	a030552c <call_cmd+0x5c>
+a0305528:	ea000002 	b	a0305538 <call_cmd+0x68>
+a030552c:	e3e03000 	mvn	r3, #0	; 0x0
+a0305530:	e50b3018 	str	r3, [fp, -#24]
+a0305534:	ea000064 	b	a03056cc <call_cmd+0x1fc>
+a0305538:	e3a02004 	mov	r2, #4	; 0x4
+a030553c:	e51b3014 	ldr	r3, [fp, -#20]
+a0305540:	e0823003 	add	r3, r2, r3
+a0305544:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0305548:	e5930000 	ldr	r0, [r3]
+a030554c:	e1a01002 	mov	r1, r2
+a0305550:	eb001806 	bl	a030b570 <strtou32>
+a0305554:	e1a03000 	mov	r3, r0
+a0305558:	e50b3018 	str	r3, [fp, -#24]
+a030555c:	e51b3018 	ldr	r3, [fp, -#24]
+a0305560:	e3530000 	cmp	r3, #0	; 0x0
+a0305564:	aa000002 	bge	a0305574 <call_cmd+0xa4>
+a0305568:	e3e03000 	mvn	r3, #0	; 0x0
+a030556c:	e50b3018 	str	r3, [fp, -#24]
+a0305570:	ea000055 	b	a03056cc <call_cmd+0x1fc>
+a0305574:	e51b3010 	ldr	r3, [fp, -#16]
+a0305578:	e3530002 	cmp	r3, #2	; 0x2
+a030557c:	da00000e 	ble	a03055bc <call_cmd+0xec>
+a0305580:	e3a02008 	mov	r2, #8	; 0x8
+a0305584:	e51b3014 	ldr	r3, [fp, -#20]
+a0305588:	e0823003 	add	r3, r2, r3
+a030558c:	e24b2020 	sub	r2, fp, #32	; 0x20
+a0305590:	e5930000 	ldr	r0, [r3]
+a0305594:	e1a01002 	mov	r1, r2
+a0305598:	eb0017f4 	bl	a030b570 <strtou32>
+a030559c:	e1a03000 	mov	r3, r0
+a03055a0:	e50b3018 	str	r3, [fp, -#24]
+a03055a4:	e51b3018 	ldr	r3, [fp, -#24]
+a03055a8:	e3530000 	cmp	r3, #0	; 0x0
+a03055ac:	aa000002 	bge	a03055bc <call_cmd+0xec>
+a03055b0:	e3e03000 	mvn	r3, #0	; 0x0
+a03055b4:	e50b3018 	str	r3, [fp, -#24]
+a03055b8:	ea000043 	b	a03056cc <call_cmd+0x1fc>
+a03055bc:	e51b3010 	ldr	r3, [fp, -#16]
+a03055c0:	e3530003 	cmp	r3, #3	; 0x3
+a03055c4:	da00000e 	ble	a0305604 <call_cmd+0x134>
+a03055c8:	e3a02008 	mov	r2, #8	; 0x8
+a03055cc:	e51b3014 	ldr	r3, [fp, -#20]
+a03055d0:	e0823003 	add	r3, r2, r3
+a03055d4:	e24b2024 	sub	r2, fp, #36	; 0x24
+a03055d8:	e5930000 	ldr	r0, [r3]
+a03055dc:	e1a01002 	mov	r1, r2
+a03055e0:	eb0017e2 	bl	a030b570 <strtou32>
+a03055e4:	e1a03000 	mov	r3, r0
+a03055e8:	e50b3018 	str	r3, [fp, -#24]
+a03055ec:	e51b3018 	ldr	r3, [fp, -#24]
+a03055f0:	e3530000 	cmp	r3, #0	; 0x0
+a03055f4:	aa000002 	bge	a0305604 <call_cmd+0x134>
+a03055f8:	e3e03000 	mvn	r3, #0	; 0x0
+a03055fc:	e50b3018 	str	r3, [fp, -#24]
+a0305600:	ea000031 	b	a03056cc <call_cmd+0x1fc>
+a0305604:	e51b3010 	ldr	r3, [fp, -#16]
+a0305608:	e3530004 	cmp	r3, #4	; 0x4
+a030560c:	da00000e 	ble	a030564c <call_cmd+0x17c>
+a0305610:	e3a02008 	mov	r2, #8	; 0x8
+a0305614:	e51b3014 	ldr	r3, [fp, -#20]
+a0305618:	e0823003 	add	r3, r2, r3
+a030561c:	e24b2028 	sub	r2, fp, #40	; 0x28
+a0305620:	e5930000 	ldr	r0, [r3]
+a0305624:	e1a01002 	mov	r1, r2
+a0305628:	eb0017d0 	bl	a030b570 <strtou32>
+a030562c:	e1a03000 	mov	r3, r0
+a0305630:	e50b3018 	str	r3, [fp, -#24]
+a0305634:	e51b3018 	ldr	r3, [fp, -#24]
+a0305638:	e3530000 	cmp	r3, #0	; 0x0
+a030563c:	aa000002 	bge	a030564c <call_cmd+0x17c>
+a0305640:	e3e03000 	mvn	r3, #0	; 0x0
+a0305644:	e50b3018 	str	r3, [fp, -#24]
+a0305648:	ea00001f 	b	a03056cc <call_cmd+0x1fc>
+a030564c:	e51b3010 	ldr	r3, [fp, -#16]
+a0305650:	e3530005 	cmp	r3, #5	; 0x5
+a0305654:	da00000e 	ble	a0305694 <call_cmd+0x1c4>
+a0305658:	e3a02008 	mov	r2, #8	; 0x8
+a030565c:	e51b3014 	ldr	r3, [fp, -#20]
+a0305660:	e0823003 	add	r3, r2, r3
+a0305664:	e24b202c 	sub	r2, fp, #44	; 0x2c
+a0305668:	e5930000 	ldr	r0, [r3]
+a030566c:	e1a01002 	mov	r1, r2
+a0305670:	eb0017be 	bl	a030b570 <strtou32>
+a0305674:	e1a03000 	mov	r3, r0
+a0305678:	e50b3018 	str	r3, [fp, -#24]
+a030567c:	e51b3018 	ldr	r3, [fp, -#24]
+a0305680:	e3530000 	cmp	r3, #0	; 0x0
+a0305684:	aa000002 	bge	a0305694 <call_cmd+0x1c4>
+a0305688:	e3e03000 	mvn	r3, #0	; 0x0
+a030568c:	e50b3018 	str	r3, [fp, -#24]
+a0305690:	ea00000d 	b	a03056cc <call_cmd+0x1fc>
+a0305694:	eb0015aa 	bl	a030ad44 <serial_flush_output>
+a0305698:	e51b301c 	ldr	r3, [fp, -#28]
+a030569c:	e50b3030 	str	r3, [fp, -#48]
+a03056a0:	e51bc030 	ldr	ip, [fp, -#48]
+a03056a4:	e51b0020 	ldr	r0, [fp, -#32]
+a03056a8:	e51b1024 	ldr	r1, [fp, -#36]
+a03056ac:	e51b2028 	ldr	r2, [fp, -#40]
+a03056b0:	e51b302c 	ldr	r3, [fp, -#44]
+a03056b4:	e1a0e00f 	mov	lr, pc
+a03056b8:	e1a0f00c 	mov	pc, ip
+a03056bc:	e1a03000 	mov	r3, r0
+a03056c0:	e50b3018 	str	r3, [fp, -#24]
+a03056c4:	e3a03000 	mov	r3, #0	; 0x0
+a03056c8:	e50b3018 	str	r3, [fp, -#24]
+a03056cc:	e51b3018 	ldr	r3, [fp, -#24]
+a03056d0:	e1a00003 	mov	r0, r3
+a03056d4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03056d8 <chgbit_cmd>:
+a03056d8:	e1a0c00d 	mov	ip, sp
+a03056dc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03056e0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03056e4:	e24dd014 	sub	sp, sp, #20	; 0x14
+a03056e8:	e50b0010 	str	r0, [fp, -#16]
+a03056ec:	e50b1014 	str	r1, [fp, -#20]
+a03056f0:	e3a03000 	mov	r3, #0	; 0x0
+a03056f4:	e50b3018 	str	r3, [fp, -#24]
+a03056f8:	e51b3010 	ldr	r3, [fp, -#16]
+a03056fc:	e3530003 	cmp	r3, #3	; 0x3
+a0305700:	ca000002 	bgt	a0305710 <chgbit_cmd+0x38>
+a0305704:	e3e03000 	mvn	r3, #0	; 0x0
+a0305708:	e50b3018 	str	r3, [fp, -#24]
+a030570c:	ea000071 	b	a03058d8 <chgbit_cmd+0x200>
+a0305710:	e3a02004 	mov	r2, #4	; 0x4
+a0305714:	e51b3014 	ldr	r3, [fp, -#20]
+a0305718:	e0823003 	add	r3, r2, r3
+a030571c:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0305720:	e5930000 	ldr	r0, [r3]
+a0305724:	e1a01002 	mov	r1, r2
+a0305728:	eb001790 	bl	a030b570 <strtou32>
+a030572c:	e1a03000 	mov	r3, r0
+a0305730:	e50b3018 	str	r3, [fp, -#24]
+a0305734:	e51b3018 	ldr	r3, [fp, -#24]
+a0305738:	e3530000 	cmp	r3, #0	; 0x0
+a030573c:	aa000002 	bge	a030574c <chgbit_cmd+0x74>
+a0305740:	e3e03000 	mvn	r3, #0	; 0x0
+a0305744:	e50b3018 	str	r3, [fp, -#24]
+a0305748:	ea000062 	b	a03058d8 <chgbit_cmd+0x200>
+a030574c:	e3a02008 	mov	r2, #8	; 0x8
+a0305750:	e51b3014 	ldr	r3, [fp, -#20]
+a0305754:	e0823003 	add	r3, r2, r3
+a0305758:	e24b2020 	sub	r2, fp, #32	; 0x20
+a030575c:	e5930000 	ldr	r0, [r3]
+a0305760:	e1a01002 	mov	r1, r2
+a0305764:	eb001781 	bl	a030b570 <strtou32>
+a0305768:	e1a03000 	mov	r3, r0
+a030576c:	e50b3018 	str	r3, [fp, -#24]
+a0305770:	e51b3018 	ldr	r3, [fp, -#24]
+a0305774:	e3530000 	cmp	r3, #0	; 0x0
+a0305778:	aa000002 	bge	a0305788 <chgbit_cmd+0xb0>
+a030577c:	e3e03000 	mvn	r3, #0	; 0x0
+a0305780:	e50b3018 	str	r3, [fp, -#24]
+a0305784:	ea000053 	b	a03058d8 <chgbit_cmd+0x200>
+a0305788:	e51b301c 	ldr	r3, [fp, -#28]
+a030578c:	e2033003 	and	r3, r3, #3	; 0x3
+a0305790:	e50b301c 	str	r3, [fp, -#28]
+a0305794:	e3530000 	cmp	r3, #0	; 0x0
+a0305798:	0a000002 	beq	a03057a8 <chgbit_cmd+0xd0>
+a030579c:	e3e03005 	mvn	r3, #5	; 0x5
+a03057a0:	e50b3018 	str	r3, [fp, -#24]
+a03057a4:	ea00004b 	b	a03058d8 <chgbit_cmd+0x200>
+a03057a8:	e51b301c 	ldr	r3, [fp, -#28]
+a03057ac:	e59f0130 	ldr	r0, [pc, #304]	; a03058e4 <chgbit_cmd+0x20c>
+a03057b0:	e5931000 	ldr	r1, [r3]
+a03057b4:	eb0014b9 	bl	a030aaa0 <printf>
+a03057b8:	e3a0200c 	mov	r2, #12	; 0xc
+a03057bc:	e51b3014 	ldr	r3, [fp, -#20]
+a03057c0:	e0823003 	add	r3, r2, r3
+a03057c4:	e5933000 	ldr	r3, [r3]
+a03057c8:	e5d33000 	ldrb	r3, [r3]
+a03057cc:	e3c33020 	bic	r3, r3, #32	; 0x20
+a03057d0:	e2433041 	sub	r3, r3, #65	; 0x41
+a03057d4:	e3530017 	cmp	r3, #23	; 0x17
+a03057d8:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
+a03057dc:	ea000034 	b	a03058b4 <chgbit_cmd+0x1dc>
+a03057e0:	a0305840 	eorges	r5, r0, r0, asr #16
+a03057e4:	a03058b4 	ldrgeh	r5, [r0], -r4
+a03057e8:	a0305894 	mlages	r0, r4, r8, r5
+a03057ec:	a03058b4 	ldrgeh	r5, [r0], -r4
+a03057f0:	a03058b4 	ldrgeh	r5, [r0], -r4
+a03057f4:	a03058b4 	ldrgeh	r5, [r0], -r4
+a03057f8:	a03058b4 	ldrgeh	r5, [r0], -r4
+a03057fc:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305800:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305804:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305808:	a03058b4 	ldrgeh	r5, [r0], -r4
+a030580c:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305810:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305814:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305818:	a030585c 	eorges	r5, r0, ip, asr r8
+a030581c:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305820:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305824:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305828:	a030585c 	eorges	r5, r0, ip, asr r8
+a030582c:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305830:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305834:	a03058b4 	ldrgeh	r5, [r0], -r4
+a0305838:	a03058b4 	ldrgeh	r5, [r0], -r4
+a030583c:	a0305878 	eorges	r5, r0, r8, ror r8
+a0305840:	e51b101c 	ldr	r1, [fp, -#28]
+a0305844:	e51b301c 	ldr	r3, [fp, -#28]
+a0305848:	e5932000 	ldr	r2, [r3]
+a030584c:	e51b3020 	ldr	r3, [fp, -#32]
+a0305850:	e0023003 	and	r3, r2, r3
+a0305854:	e5813000 	str	r3, [r1]
+a0305858:	ea000018 	b	a03058c0 <chgbit_cmd+0x1e8>
+a030585c:	e51b101c 	ldr	r1, [fp, -#28]
+a0305860:	e51b301c 	ldr	r3, [fp, -#28]
+a0305864:	e5932000 	ldr	r2, [r3]
+a0305868:	e51b3020 	ldr	r3, [fp, -#32]
+a030586c:	e1823003 	orr	r3, r2, r3
+a0305870:	e5813000 	str	r3, [r1]
+a0305874:	ea000011 	b	a03058c0 <chgbit_cmd+0x1e8>
+a0305878:	e51b101c 	ldr	r1, [fp, -#28]
+a030587c:	e51b301c 	ldr	r3, [fp, -#28]
+a0305880:	e5932000 	ldr	r2, [r3]
+a0305884:	e51b3020 	ldr	r3, [fp, -#32]
+a0305888:	e0223003 	eor	r3, r2, r3
+a030588c:	e5813000 	str	r3, [r1]
+a0305890:	ea00000a 	b	a03058c0 <chgbit_cmd+0x1e8>
+a0305894:	e51b001c 	ldr	r0, [fp, -#28]
+a0305898:	e51b101c 	ldr	r1, [fp, -#28]
+a030589c:	e51b3020 	ldr	r3, [fp, -#32]
+a03058a0:	e1e02003 	mvn	r2, r3
+a03058a4:	e5913000 	ldr	r3, [r1]
+a03058a8:	e0033002 	and	r3, r3, r2
+a03058ac:	e5803000 	str	r3, [r0]
+a03058b0:	ea000002 	b	a03058c0 <chgbit_cmd+0x1e8>
+a03058b4:	e3e03000 	mvn	r3, #0	; 0x0
+a03058b8:	e50b3018 	str	r3, [fp, -#24]
+a03058bc:	ea000005 	b	a03058d8 <chgbit_cmd+0x200>
+a03058c0:	e51b301c 	ldr	r3, [fp, -#28]
+a03058c4:	e59f001c 	ldr	r0, [pc, #28]	; a03058e8 <chgbit_cmd+0x210>
+a03058c8:	e5931000 	ldr	r1, [r3]
+a03058cc:	eb001473 	bl	a030aaa0 <printf>
+a03058d0:	e3a03000 	mov	r3, #0	; 0x0
+a03058d4:	e50b3018 	str	r3, [fp, -#24]
+a03058d8:	e51b3018 	ldr	r3, [fp, -#24]
+a03058dc:	e1a00003 	mov	r0, r3
+a03058e0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03058e4:	a030ced8 	ldrgesb	ip, [r0], -r8
+a03058e8:	a030cee0 	eorges	ip, r0, r0, ror #29
+
+a03058ec <dummy_cmd>:
+a03058ec:	e1a0c00d 	mov	ip, sp
+a03058f0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03058f4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03058f8:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a03058fc:	e50b0010 	str	r0, [fp, -#16]
+a0305900:	e50b1014 	str	r1, [fp, -#20]
+a0305904:	e3a03000 	mov	r3, #0	; 0x0
+a0305908:	e50b3018 	str	r3, [fp, -#24]
+a030590c:	e51b2018 	ldr	r2, [fp, -#24]
+a0305910:	e51b3010 	ldr	r3, [fp, -#16]
+a0305914:	e1520003 	cmp	r2, r3
+a0305918:	ba000000 	blt	a0305920 <dummy_cmd+0x34>
+a030591c:	ea00000b 	b	a0305950 <dummy_cmd+0x64>
+a0305920:	e51b3018 	ldr	r3, [fp, -#24]
+a0305924:	e1a02103 	mov	r2, r3, lsl #2
+a0305928:	e51b3014 	ldr	r3, [fp, -#20]
+a030592c:	e0823003 	add	r3, r2, r3
+a0305930:	e59f0024 	ldr	r0, [pc, #36]	; a030595c <dummy_cmd+0x70>
+a0305934:	e51b1018 	ldr	r1, [fp, -#24]
+a0305938:	e5932000 	ldr	r2, [r3]
+a030593c:	eb001457 	bl	a030aaa0 <printf>
+a0305940:	e51b3018 	ldr	r3, [fp, -#24]
+a0305944:	e2833001 	add	r3, r3, #1	; 0x1
+a0305948:	e50b3018 	str	r3, [fp, -#24]
+a030594c:	eaffffee 	b	a030590c <dummy_cmd+0x20>
+a0305950:	e3a03000 	mov	r3, #0	; 0x0
+a0305954:	e1a00003 	mov	r0, r3
+a0305958:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030595c:	a030cef0 	ldrgesh	ip, [r0], -r0
+
+a0305960 <dump_cmd>:
+a0305960:	e1a0c00d 	mov	ip, sp
+a0305964:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0305968:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030596c:	e24dd018 	sub	sp, sp, #24	; 0x18
+a0305970:	e50b0010 	str	r0, [fp, -#16]
+a0305974:	e50b1014 	str	r1, [fp, -#20]
+a0305978:	e3a03000 	mov	r3, #0	; 0x0
+a030597c:	e50b3018 	str	r3, [fp, -#24]
+a0305980:	e51b3010 	ldr	r3, [fp, -#16]
+a0305984:	e3530000 	cmp	r3, #0	; 0x0
+a0305988:	ca000002 	bgt	a0305998 <dump_cmd+0x38>
+a030598c:	e3e03000 	mvn	r3, #0	; 0x0
+a0305990:	e50b3018 	str	r3, [fp, -#24]
+a0305994:	ea000078 	b	a0305b7c <dump_cmd+0x21c>
+a0305998:	e51b3010 	ldr	r3, [fp, -#16]
+a030599c:	e3530001 	cmp	r3, #1	; 0x1
+a03059a0:	da00000d 	ble	a03059dc <dump_cmd+0x7c>
+a03059a4:	e3a02004 	mov	r2, #4	; 0x4
+a03059a8:	e51b3014 	ldr	r3, [fp, -#20]
+a03059ac:	e0823003 	add	r3, r2, r3
+a03059b0:	e5930000 	ldr	r0, [r3]
+a03059b4:	e59f11cc 	ldr	r1, [pc, #460]	; a0305b88 <dump_cmd+0x228>
+a03059b8:	eb0016ec 	bl	a030b570 <strtou32>
+a03059bc:	e1a03000 	mov	r3, r0
+a03059c0:	e50b3018 	str	r3, [fp, -#24]
+a03059c4:	e51b3018 	ldr	r3, [fp, -#24]
+a03059c8:	e3530000 	cmp	r3, #0	; 0x0
+a03059cc:	aa000002 	bge	a03059dc <dump_cmd+0x7c>
+a03059d0:	e3e03000 	mvn	r3, #0	; 0x0
+a03059d4:	e50b3018 	str	r3, [fp, -#24]
+a03059d8:	ea000067 	b	a0305b7c <dump_cmd+0x21c>
+a03059dc:	e51b3010 	ldr	r3, [fp, -#16]
+a03059e0:	e3530003 	cmp	r3, #3	; 0x3
+a03059e4:	1a00000e 	bne	a0305a24 <dump_cmd+0xc4>
+a03059e8:	e3a02008 	mov	r2, #8	; 0x8
+a03059ec:	e51b3014 	ldr	r3, [fp, -#20]
+a03059f0:	e0823003 	add	r3, r2, r3
+a03059f4:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a03059f8:	e5930000 	ldr	r0, [r3]
+a03059fc:	e1a01002 	mov	r1, r2
+a0305a00:	eb0016da 	bl	a030b570 <strtou32>
+a0305a04:	e1a03000 	mov	r3, r0
+a0305a08:	e50b3018 	str	r3, [fp, -#24]
+a0305a0c:	e51b3018 	ldr	r3, [fp, -#24]
+a0305a10:	e3530000 	cmp	r3, #0	; 0x0
+a0305a14:	aa000006 	bge	a0305a34 <dump_cmd+0xd4>
+a0305a18:	e3e03000 	mvn	r3, #0	; 0x0
+a0305a1c:	e50b3018 	str	r3, [fp, -#24]
+a0305a20:	ea000055 	b	a0305b7c <dump_cmd+0x21c>
+a0305a24:	e59f315c 	ldr	r3, [pc, #348]	; a0305b88 <dump_cmd+0x228>
+a0305a28:	e5933000 	ldr	r3, [r3]
+a0305a2c:	e2833080 	add	r3, r3, #128	; 0x80
+a0305a30:	e50b301c 	str	r3, [fp, -#28]
+a0305a34:	e59f314c 	ldr	r3, [pc, #332]	; a0305b88 <dump_cmd+0x228>
+a0305a38:	e5933000 	ldr	r3, [r3]
+a0305a3c:	e2033003 	and	r3, r3, #3	; 0x3
+a0305a40:	e3530000 	cmp	r3, #0	; 0x0
+a0305a44:	1a000004 	bne	a0305a5c <dump_cmd+0xfc>
+a0305a48:	e51b301c 	ldr	r3, [fp, -#28]
+a0305a4c:	e2033003 	and	r3, r3, #3	; 0x3
+a0305a50:	e3530000 	cmp	r3, #0	; 0x0
+a0305a54:	1a000000 	bne	a0305a5c <dump_cmd+0xfc>
+a0305a58:	ea000002 	b	a0305a68 <dump_cmd+0x108>
+a0305a5c:	e3e03005 	mvn	r3, #5	; 0x5
+a0305a60:	e50b3018 	str	r3, [fp, -#24]
+a0305a64:	ea000044 	b	a0305b7c <dump_cmd+0x21c>
+a0305a68:	e1a00000 	nop			(mov r0,r0)
+a0305a6c:	e59f3114 	ldr	r3, [pc, #276]	; a0305b88 <dump_cmd+0x228>
+a0305a70:	e5932000 	ldr	r2, [r3]
+a0305a74:	e51b301c 	ldr	r3, [fp, -#28]
+a0305a78:	e1520003 	cmp	r2, r3
+a0305a7c:	3a000000 	bcc	a0305a84 <dump_cmd+0x124>
+a0305a80:	ea00003b 	b	a0305b74 <dump_cmd+0x214>
+a0305a84:	e59f30fc 	ldr	r3, [pc, #252]	; a0305b88 <dump_cmd+0x228>
+a0305a88:	e59f00fc 	ldr	r0, [pc, #252]	; a0305b8c <dump_cmd+0x22c>
+a0305a8c:	e5931000 	ldr	r1, [r3]
+a0305a90:	eb001402 	bl	a030aaa0 <printf>
+a0305a94:	e59f30ec 	ldr	r3, [pc, #236]	; a0305b88 <dump_cmd+0x228>
+a0305a98:	e5933000 	ldr	r3, [r3]
+a0305a9c:	e50b3020 	str	r3, [fp, -#32]
+a0305aa0:	e59f30e0 	ldr	r3, [pc, #224]	; a0305b88 <dump_cmd+0x228>
+a0305aa4:	e5933000 	ldr	r3, [r3]
+a0305aa8:	e2832010 	add	r2, r3, #16	; 0x10
+a0305aac:	e51b3020 	ldr	r3, [fp, -#32]
+a0305ab0:	e1530002 	cmp	r3, r2
+a0305ab4:	3a000000 	bcc	a0305abc <dump_cmd+0x15c>
+a0305ab8:	ea000009 	b	a0305ae4 <dump_cmd+0x184>
+a0305abc:	e51b3020 	ldr	r3, [fp, -#32]
+a0305ac0:	e5933000 	ldr	r3, [r3]
+a0305ac4:	e50b3024 	str	r3, [fp, -#36]
+a0305ac8:	e59f00c0 	ldr	r0, [pc, #192]	; a0305b90 <dump_cmd+0x230>
+a0305acc:	e51b1024 	ldr	r1, [fp, -#36]
+a0305ad0:	eb0013f2 	bl	a030aaa0 <printf>
+a0305ad4:	e51b3020 	ldr	r3, [fp, -#32]
+a0305ad8:	e2833004 	add	r3, r3, #4	; 0x4
+a0305adc:	e50b3020 	str	r3, [fp, -#32]
+a0305ae0:	eaffffee 	b	a0305aa0 <dump_cmd+0x140>
+a0305ae4:	e59f309c 	ldr	r3, [pc, #156]	; a0305b88 <dump_cmd+0x228>
+a0305ae8:	e5933000 	ldr	r3, [r3]
+a0305aec:	e50b3020 	str	r3, [fp, -#32]
+a0305af0:	e59f3090 	ldr	r3, [pc, #144]	; a0305b88 <dump_cmd+0x228>
+a0305af4:	e5933000 	ldr	r3, [r3]
+a0305af8:	e2832010 	add	r2, r3, #16	; 0x10
+a0305afc:	e51b3020 	ldr	r3, [fp, -#32]
+a0305b00:	e1530002 	cmp	r3, r2
+a0305b04:	3a000000 	bcc	a0305b0c <dump_cmd+0x1ac>
+a0305b08:	ea000011 	b	a0305b54 <dump_cmd+0x1f4>
+a0305b0c:	e51b3020 	ldr	r3, [fp, -#32]
+a0305b10:	e5d33000 	ldrb	r3, [r3]
+a0305b14:	e50b3024 	str	r3, [fp, -#36]
+a0305b18:	e51b3024 	ldr	r3, [fp, -#36]
+a0305b1c:	e353001f 	cmp	r3, #31	; 0x1f
+a0305b20:	9a000005 	bls	a0305b3c <dump_cmd+0x1dc>
+a0305b24:	e51b3024 	ldr	r3, [fp, -#36]
+a0305b28:	e353007e 	cmp	r3, #126	; 0x7e
+a0305b2c:	8a000002 	bhi	a0305b3c <dump_cmd+0x1dc>
+a0305b30:	e51b0024 	ldr	r0, [fp, -#36]
+a0305b34:	eb00143f 	bl	a030ac38 <serial_write>
+a0305b38:	ea000001 	b	a0305b44 <dump_cmd+0x1e4>
+a0305b3c:	e3a0002e 	mov	r0, #46	; 0x2e
+a0305b40:	eb00143c 	bl	a030ac38 <serial_write>
+a0305b44:	e51b3020 	ldr	r3, [fp, -#32]
+a0305b48:	e2833001 	add	r3, r3, #1	; 0x1
+a0305b4c:	e50b3020 	str	r3, [fp, -#32]
+a0305b50:	eaffffe6 	b	a0305af0 <dump_cmd+0x190>
+a0305b54:	e3a0000a 	mov	r0, #10	; 0xa
+a0305b58:	eb001436 	bl	a030ac38 <serial_write>
+a0305b5c:	e59f2024 	ldr	r2, [pc, #36]	; a0305b88 <dump_cmd+0x228>
+a0305b60:	e59f3020 	ldr	r3, [pc, #32]	; a0305b88 <dump_cmd+0x228>
+a0305b64:	e5933000 	ldr	r3, [r3]
+a0305b68:	e2833010 	add	r3, r3, #16	; 0x10
+a0305b6c:	e5823000 	str	r3, [r2]
+a0305b70:	eaffffbd 	b	a0305a6c <dump_cmd+0x10c>
+a0305b74:	e3a03000 	mov	r3, #0	; 0x0
+a0305b78:	e50b3018 	str	r3, [fp, -#24]
+a0305b7c:	e51b3018 	ldr	r3, [fp, -#24]
+a0305b80:	e1a00003 	mov	r0, r3
+a0305b84:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0305b88:	a030d9c4 	eorges	sp, r0, r4, asr #19
+a0305b8c:	a030cf04 	eorges	ip, r0, r4, lsl #30
+a0305b90:	a030cf10 	eorges	ip, r0, r0, lsl pc
+
+a0305b94 <memcpy_cmd>:
+a0305b94:	e1a0c00d 	mov	ip, sp
+a0305b98:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0305b9c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0305ba0:	e24dd018 	sub	sp, sp, #24	; 0x18
+a0305ba4:	e50b0010 	str	r0, [fp, -#16]
+a0305ba8:	e50b1014 	str	r1, [fp, -#20]
+a0305bac:	e3a03000 	mov	r3, #0	; 0x0
+a0305bb0:	e50b3018 	str	r3, [fp, -#24]
+a0305bb4:	e51b3010 	ldr	r3, [fp, -#16]
+a0305bb8:	e3530003 	cmp	r3, #3	; 0x3
+a0305bbc:	ca000002 	bgt	a0305bcc <memcpy_cmd+0x38>
+a0305bc0:	e3e03000 	mvn	r3, #0	; 0x0
+a0305bc4:	e50b3018 	str	r3, [fp, -#24]
+a0305bc8:	ea00004d 	b	a0305d04 <memcpy_cmd+0x170>
+a0305bcc:	e3a02004 	mov	r2, #4	; 0x4
+a0305bd0:	e51b3014 	ldr	r3, [fp, -#20]
+a0305bd4:	e0823003 	add	r3, r2, r3
+a0305bd8:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0305bdc:	e5930000 	ldr	r0, [r3]
+a0305be0:	e1a01002 	mov	r1, r2
+a0305be4:	eb001661 	bl	a030b570 <strtou32>
+a0305be8:	e1a03000 	mov	r3, r0
+a0305bec:	e50b3018 	str	r3, [fp, -#24]
+a0305bf0:	e51b3018 	ldr	r3, [fp, -#24]
+a0305bf4:	e3530000 	cmp	r3, #0	; 0x0
+a0305bf8:	aa000002 	bge	a0305c08 <memcpy_cmd+0x74>
+a0305bfc:	e3e03000 	mvn	r3, #0	; 0x0
+a0305c00:	e50b3018 	str	r3, [fp, -#24]
+a0305c04:	ea00003e 	b	a0305d04 <memcpy_cmd+0x170>
+a0305c08:	e3a02008 	mov	r2, #8	; 0x8
+a0305c0c:	e51b3014 	ldr	r3, [fp, -#20]
+a0305c10:	e0823003 	add	r3, r2, r3
+a0305c14:	e24b2020 	sub	r2, fp, #32	; 0x20
+a0305c18:	e5930000 	ldr	r0, [r3]
+a0305c1c:	e1a01002 	mov	r1, r2
+a0305c20:	eb001652 	bl	a030b570 <strtou32>
+a0305c24:	e1a03000 	mov	r3, r0
+a0305c28:	e50b3018 	str	r3, [fp, -#24]
+a0305c2c:	e51b3018 	ldr	r3, [fp, -#24]
+a0305c30:	e3530000 	cmp	r3, #0	; 0x0
+a0305c34:	aa000002 	bge	a0305c44 <memcpy_cmd+0xb0>
+a0305c38:	e3e03000 	mvn	r3, #0	; 0x0
+a0305c3c:	e50b3018 	str	r3, [fp, -#24]
+a0305c40:	ea00002f 	b	a0305d04 <memcpy_cmd+0x170>
+a0305c44:	e3a0200c 	mov	r2, #12	; 0xc
+a0305c48:	e51b3014 	ldr	r3, [fp, -#20]
+a0305c4c:	e0823003 	add	r3, r2, r3
+a0305c50:	e24b2024 	sub	r2, fp, #36	; 0x24
+a0305c54:	e5930000 	ldr	r0, [r3]
+a0305c58:	e1a01002 	mov	r1, r2
+a0305c5c:	eb001643 	bl	a030b570 <strtou32>
+a0305c60:	e1a03000 	mov	r3, r0
+a0305c64:	e50b3018 	str	r3, [fp, -#24]
+a0305c68:	e51b3018 	ldr	r3, [fp, -#24]
+a0305c6c:	e3530000 	cmp	r3, #0	; 0x0
+a0305c70:	aa000002 	bge	a0305c80 <memcpy_cmd+0xec>
+a0305c74:	e3e03000 	mvn	r3, #0	; 0x0
+a0305c78:	e50b3018 	str	r3, [fp, -#24]
+a0305c7c:	ea000020 	b	a0305d04 <memcpy_cmd+0x170>
+a0305c80:	e51b301c 	ldr	r3, [fp, -#28]
+a0305c84:	e2033003 	and	r3, r3, #3	; 0x3
+a0305c88:	e3530000 	cmp	r3, #0	; 0x0
+a0305c8c:	1a000004 	bne	a0305ca4 <memcpy_cmd+0x110>
+a0305c90:	e51b3020 	ldr	r3, [fp, -#32]
+a0305c94:	e2033003 	and	r3, r3, #3	; 0x3
+a0305c98:	e3530000 	cmp	r3, #0	; 0x0
+a0305c9c:	1a000000 	bne	a0305ca4 <memcpy_cmd+0x110>
+a0305ca0:	ea000002 	b	a0305cb0 <memcpy_cmd+0x11c>
+a0305ca4:	e3e03005 	mvn	r3, #5	; 0x5
+a0305ca8:	e50b3018 	str	r3, [fp, -#24]
+a0305cac:	ea000014 	b	a0305d04 <memcpy_cmd+0x170>
+a0305cb0:	e51b3024 	ldr	r3, [fp, -#36]
+a0305cb4:	e2033003 	and	r3, r3, #3	; 0x3
+a0305cb8:	e3530000 	cmp	r3, #0	; 0x0
+a0305cbc:	0a000004 	beq	a0305cd4 <memcpy_cmd+0x140>
+a0305cc0:	e51b3024 	ldr	r3, [fp, -#36]
+a0305cc4:	e1a03123 	mov	r3, r3, lsr #2
+a0305cc8:	e2833001 	add	r3, r3, #1	; 0x1
+a0305ccc:	e50b3024 	str	r3, [fp, -#36]
+a0305cd0:	ea000002 	b	a0305ce0 <memcpy_cmd+0x14c>
+a0305cd4:	e51b3024 	ldr	r3, [fp, -#36]
+a0305cd8:	e1a03123 	mov	r3, r3, lsr #2
+a0305cdc:	e50b3024 	str	r3, [fp, -#36]
+a0305ce0:	e51b0020 	ldr	r0, [fp, -#32]
+a0305ce4:	e51b101c 	ldr	r1, [fp, -#28]
+a0305ce8:	e51b2024 	ldr	r2, [fp, -#36]
+a0305cec:	eb00170c 	bl	a030b924 <MyMemCpy>
+a0305cf0:	e59f0018 	ldr	r0, [pc, #24]	; a0305d10 <memcpy_cmd+0x17c>
+a0305cf4:	e51b1024 	ldr	r1, [fp, -#36]
+a0305cf8:	eb001368 	bl	a030aaa0 <printf>
+a0305cfc:	e3a03000 	mov	r3, #0	; 0x0
+a0305d00:	e50b3018 	str	r3, [fp, -#24]
+a0305d04:	e51b3018 	ldr	r3, [fp, -#24]
+a0305d08:	e1a00003 	mov	r0, r3
+a0305d0c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0305d10:	a030cf18 	eorges	ip, r0, r8, lsl pc
+
+a0305d14 <peek_cmd>:
+a0305d14:	e1a0c00d 	mov	ip, sp
+a0305d18:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0305d1c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0305d20:	e24dd020 	sub	sp, sp, #32	; 0x20
+a0305d24:	e50b0010 	str	r0, [fp, -#16]
+a0305d28:	e50b1014 	str	r1, [fp, -#20]
+a0305d2c:	e3a03000 	mov	r3, #0	; 0x0
+a0305d30:	e50b3018 	str	r3, [fp, -#24]
+a0305d34:	e3a03077 	mov	r3, #119	; 0x77
+a0305d38:	e54b3021 	strb	r3, [fp, -#33]
+a0305d3c:	e51b3010 	ldr	r3, [fp, -#16]
+a0305d40:	e3530001 	cmp	r3, #1	; 0x1
+a0305d44:	ca000002 	bgt	a0305d54 <peek_cmd+0x40>
+a0305d48:	e3e03000 	mvn	r3, #0	; 0x0
+a0305d4c:	e50b3018 	str	r3, [fp, -#24]
+a0305d50:	ea000062 	b	a0305ee0 <peek_cmd+0x1cc>
+a0305d54:	e3a02004 	mov	r2, #4	; 0x4
+a0305d58:	e51b3014 	ldr	r3, [fp, -#20]
+a0305d5c:	e0823003 	add	r3, r2, r3
+a0305d60:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0305d64:	e5930000 	ldr	r0, [r3]
+a0305d68:	e1a01002 	mov	r1, r2
+a0305d6c:	eb0015ff 	bl	a030b570 <strtou32>
+a0305d70:	e1a03000 	mov	r3, r0
+a0305d74:	e50b3018 	str	r3, [fp, -#24]
+a0305d78:	e51b3018 	ldr	r3, [fp, -#24]
+a0305d7c:	e3530000 	cmp	r3, #0	; 0x0
+a0305d80:	aa000002 	bge	a0305d90 <peek_cmd+0x7c>
+a0305d84:	e3e03000 	mvn	r3, #0	; 0x0
+a0305d88:	e50b3018 	str	r3, [fp, -#24]
+a0305d8c:	ea000053 	b	a0305ee0 <peek_cmd+0x1cc>
+a0305d90:	e51b3010 	ldr	r3, [fp, -#16]
+a0305d94:	e3530001 	cmp	r3, #1	; 0x1
+a0305d98:	da000005 	ble	a0305db4 <peek_cmd+0xa0>
+a0305d9c:	e3a02008 	mov	r2, #8	; 0x8
+a0305da0:	e51b3014 	ldr	r3, [fp, -#20]
+a0305da4:	e0823003 	add	r3, r2, r3
+a0305da8:	e5933000 	ldr	r3, [r3]
+a0305dac:	e5d33000 	ldrb	r3, [r3]
+a0305db0:	e54b3021 	strb	r3, [fp, -#33]
+a0305db4:	e55b3021 	ldrb	r3, [fp, -#33]
+a0305db8:	e3833020 	orr	r3, r3, #32	; 0x20
+a0305dbc:	e20330ff 	and	r3, r3, #255	; 0xff
+a0305dc0:	e50b3028 	str	r3, [fp, -#40]
+a0305dc4:	e51b3028 	ldr	r3, [fp, -#40]
+a0305dc8:	e3530068 	cmp	r3, #104	; 0x68
+a0305dcc:	0a00000a 	beq	a0305dfc <peek_cmd+0xe8>
+a0305dd0:	e51b3028 	ldr	r3, [fp, -#40]
+a0305dd4:	e3530068 	cmp	r3, #104	; 0x68
+a0305dd8:	ca000003 	bgt	a0305dec <peek_cmd+0xd8>
+a0305ddc:	e51b3028 	ldr	r3, [fp, -#40]
+a0305de0:	e3530062 	cmp	r3, #98	; 0x62
+a0305de4:	0a000015 	beq	a0305e40 <peek_cmd+0x12c>
+a0305de8:	ea000011 	b	a0305e34 <peek_cmd+0x120>
+a0305dec:	e51b3028 	ldr	r3, [fp, -#40]
+a0305df0:	e3530077 	cmp	r3, #119	; 0x77
+a0305df4:	0a000007 	beq	a0305e18 <peek_cmd+0x104>
+a0305df8:	ea00000d 	b	a0305e34 <peek_cmd+0x120>
+a0305dfc:	e51b301c 	ldr	r3, [fp, -#28]
+a0305e00:	e2033001 	and	r3, r3, #1	; 0x1
+a0305e04:	e3530000 	cmp	r3, #0	; 0x0
+a0305e08:	0a00000c 	beq	a0305e40 <peek_cmd+0x12c>
+a0305e0c:	e3e03005 	mvn	r3, #5	; 0x5
+a0305e10:	e50b3018 	str	r3, [fp, -#24]
+a0305e14:	ea000031 	b	a0305ee0 <peek_cmd+0x1cc>
+a0305e18:	e51b301c 	ldr	r3, [fp, -#28]
+a0305e1c:	e2033003 	and	r3, r3, #3	; 0x3
+a0305e20:	e3530000 	cmp	r3, #0	; 0x0
+a0305e24:	0a000005 	beq	a0305e40 <peek_cmd+0x12c>
+a0305e28:	e3e03005 	mvn	r3, #5	; 0x5
+a0305e2c:	e50b3018 	str	r3, [fp, -#24]
+a0305e30:	ea00002a 	b	a0305ee0 <peek_cmd+0x1cc>
+a0305e34:	e3e03000 	mvn	r3, #0	; 0x0
+a0305e38:	e50b3018 	str	r3, [fp, -#24]
+a0305e3c:	ea000027 	b	a0305ee0 <peek_cmd+0x1cc>
+a0305e40:	e55b3021 	ldrb	r3, [fp, -#33]
+a0305e44:	e3833020 	orr	r3, r3, #32	; 0x20
+a0305e48:	e20330ff 	and	r3, r3, #255	; 0xff
+a0305e4c:	e50b302c 	str	r3, [fp, -#44]
+a0305e50:	e51b302c 	ldr	r3, [fp, -#44]
+a0305e54:	e3530068 	cmp	r3, #104	; 0x68
+a0305e58:	0a00000e 	beq	a0305e98 <peek_cmd+0x184>
+a0305e5c:	e51b302c 	ldr	r3, [fp, -#44]
+a0305e60:	e3530068 	cmp	r3, #104	; 0x68
+a0305e64:	ca000003 	bgt	a0305e78 <peek_cmd+0x164>
+a0305e68:	e51b302c 	ldr	r3, [fp, -#44]
+a0305e6c:	e3530062 	cmp	r3, #98	; 0x62
+a0305e70:	0a000004 	beq	a0305e88 <peek_cmd+0x174>
+a0305e74:	ea00000f 	b	a0305eb8 <peek_cmd+0x1a4>
+a0305e78:	e51b302c 	ldr	r3, [fp, -#44]
+a0305e7c:	e3530077 	cmp	r3, #119	; 0x77
+a0305e80:	0a000008 	beq	a0305ea8 <peek_cmd+0x194>
+a0305e84:	ea00000b 	b	a0305eb8 <peek_cmd+0x1a4>
+a0305e88:	e51b301c 	ldr	r3, [fp, -#28]
+a0305e8c:	e5d33000 	ldrb	r3, [r3]
+a0305e90:	e50b3020 	str	r3, [fp, -#32]
+a0305e94:	ea00000a 	b	a0305ec4 <peek_cmd+0x1b0>
+a0305e98:	e51b301c 	ldr	r3, [fp, -#28]
+a0305e9c:	e1d330b0 	ldrh	r3, [r3]
+a0305ea0:	e50b3020 	str	r3, [fp, -#32]
+a0305ea4:	ea000006 	b	a0305ec4 <peek_cmd+0x1b0>
+a0305ea8:	e51b301c 	ldr	r3, [fp, -#28]
+a0305eac:	e5933000 	ldr	r3, [r3]
+a0305eb0:	e50b3020 	str	r3, [fp, -#32]
+a0305eb4:	ea000002 	b	a0305ec4 <peek_cmd+0x1b0>
+a0305eb8:	e3e03000 	mvn	r3, #0	; 0x0
+a0305ebc:	e50b3018 	str	r3, [fp, -#24]
+a0305ec0:	ea000006 	b	a0305ee0 <peek_cmd+0x1cc>
+a0305ec4:	e55b3021 	ldrb	r3, [fp, -#33]
+a0305ec8:	e59f001c 	ldr	r0, [pc, #28]	; a0305eec <peek_cmd+0x1d8>
+a0305ecc:	e1a01003 	mov	r1, r3
+a0305ed0:	e51b2020 	ldr	r2, [fp, -#32]
+a0305ed4:	eb0012f1 	bl	a030aaa0 <printf>
+a0305ed8:	e3a03000 	mov	r3, #0	; 0x0
+a0305edc:	e50b3018 	str	r3, [fp, -#24]
+a0305ee0:	e51b3018 	ldr	r3, [fp, -#24]
+a0305ee4:	e1a00003 	mov	r0, r3
+a0305ee8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0305eec:	a030cf2c 	eorges	ip, r0, ip, lsr #30
+
+a0305ef0 <poke_cmd>:
+a0305ef0:	e1a0c00d 	mov	ip, sp
+a0305ef4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0305ef8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0305efc:	e24dd020 	sub	sp, sp, #32	; 0x20
+a0305f00:	e50b0010 	str	r0, [fp, -#16]
+a0305f04:	e50b1014 	str	r1, [fp, -#20]
+a0305f08:	e3a03000 	mov	r3, #0	; 0x0
+a0305f0c:	e50b3018 	str	r3, [fp, -#24]
+a0305f10:	e3a03077 	mov	r3, #119	; 0x77
+a0305f14:	e54b3021 	strb	r3, [fp, -#33]
+a0305f18:	e51b3010 	ldr	r3, [fp, -#16]
+a0305f1c:	e3530002 	cmp	r3, #2	; 0x2
+a0305f20:	ca000002 	bgt	a0305f30 <poke_cmd+0x40>
+a0305f24:	e3e03000 	mvn	r3, #0	; 0x0
+a0305f28:	e50b3018 	str	r3, [fp, -#24]
+a0305f2c:	ea00006c 	b	a03060e4 <poke_cmd+0x1f4>
+a0305f30:	e3a02004 	mov	r2, #4	; 0x4
+a0305f34:	e51b3014 	ldr	r3, [fp, -#20]
+a0305f38:	e0823003 	add	r3, r2, r3
+a0305f3c:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0305f40:	e5930000 	ldr	r0, [r3]
+a0305f44:	e1a01002 	mov	r1, r2
+a0305f48:	eb001588 	bl	a030b570 <strtou32>
+a0305f4c:	e1a03000 	mov	r3, r0
+a0305f50:	e50b3018 	str	r3, [fp, -#24]
+a0305f54:	e51b3018 	ldr	r3, [fp, -#24]
+a0305f58:	e3530000 	cmp	r3, #0	; 0x0
+a0305f5c:	aa000002 	bge	a0305f6c <poke_cmd+0x7c>
+a0305f60:	e3e03000 	mvn	r3, #0	; 0x0
+a0305f64:	e50b3018 	str	r3, [fp, -#24]
+a0305f68:	ea00005d 	b	a03060e4 <poke_cmd+0x1f4>
+a0305f6c:	e3a02008 	mov	r2, #8	; 0x8
+a0305f70:	e51b3014 	ldr	r3, [fp, -#20]
+a0305f74:	e0823003 	add	r3, r2, r3
+a0305f78:	e24b2020 	sub	r2, fp, #32	; 0x20
+a0305f7c:	e5930000 	ldr	r0, [r3]
+a0305f80:	e1a01002 	mov	r1, r2
+a0305f84:	eb001579 	bl	a030b570 <strtou32>
+a0305f88:	e1a03000 	mov	r3, r0
+a0305f8c:	e50b3018 	str	r3, [fp, -#24]
+a0305f90:	e51b3018 	ldr	r3, [fp, -#24]
+a0305f94:	e3530000 	cmp	r3, #0	; 0x0
+a0305f98:	aa000002 	bge	a0305fa8 <poke_cmd+0xb8>
+a0305f9c:	e3e03000 	mvn	r3, #0	; 0x0
+a0305fa0:	e50b3018 	str	r3, [fp, -#24]
+a0305fa4:	ea00004e 	b	a03060e4 <poke_cmd+0x1f4>
+a0305fa8:	e51b3010 	ldr	r3, [fp, -#16]
+a0305fac:	e3530002 	cmp	r3, #2	; 0x2
+a0305fb0:	da000005 	ble	a0305fcc <poke_cmd+0xdc>
+a0305fb4:	e3a0200c 	mov	r2, #12	; 0xc
+a0305fb8:	e51b3014 	ldr	r3, [fp, -#20]
+a0305fbc:	e0823003 	add	r3, r2, r3
+a0305fc0:	e5933000 	ldr	r3, [r3]
+a0305fc4:	e5d33000 	ldrb	r3, [r3]
+a0305fc8:	e54b3021 	strb	r3, [fp, -#33]
+a0305fcc:	e55b3021 	ldrb	r3, [fp, -#33]
+a0305fd0:	e3833020 	orr	r3, r3, #32	; 0x20
+a0305fd4:	e20330ff 	and	r3, r3, #255	; 0xff
+a0305fd8:	e50b3028 	str	r3, [fp, -#40]
+a0305fdc:	e51b3028 	ldr	r3, [fp, -#40]
+a0305fe0:	e3530068 	cmp	r3, #104	; 0x68
+a0305fe4:	0a00000a 	beq	a0306014 <poke_cmd+0x124>
+a0305fe8:	e51b3028 	ldr	r3, [fp, -#40]
+a0305fec:	e3530068 	cmp	r3, #104	; 0x68
+a0305ff0:	ca000003 	bgt	a0306004 <poke_cmd+0x114>
+a0305ff4:	e51b3028 	ldr	r3, [fp, -#40]
+a0305ff8:	e3530062 	cmp	r3, #98	; 0x62
+a0305ffc:	0a000015 	beq	a0306058 <poke_cmd+0x168>
+a0306000:	ea000011 	b	a030604c <poke_cmd+0x15c>
+a0306004:	e51b3028 	ldr	r3, [fp, -#40]
+a0306008:	e3530077 	cmp	r3, #119	; 0x77
+a030600c:	0a000007 	beq	a0306030 <poke_cmd+0x140>
+a0306010:	ea00000d 	b	a030604c <poke_cmd+0x15c>
+a0306014:	e51b301c 	ldr	r3, [fp, -#28]
+a0306018:	e2033001 	and	r3, r3, #1	; 0x1
+a030601c:	e3530000 	cmp	r3, #0	; 0x0
+a0306020:	0a00000c 	beq	a0306058 <poke_cmd+0x168>
+a0306024:	e3e03005 	mvn	r3, #5	; 0x5
+a0306028:	e50b3018 	str	r3, [fp, -#24]
+a030602c:	ea00002c 	b	a03060e4 <poke_cmd+0x1f4>
+a0306030:	e51b301c 	ldr	r3, [fp, -#28]
+a0306034:	e2033003 	and	r3, r3, #3	; 0x3
+a0306038:	e3530000 	cmp	r3, #0	; 0x0
+a030603c:	0a000005 	beq	a0306058 <poke_cmd+0x168>
+a0306040:	e3e03005 	mvn	r3, #5	; 0x5
+a0306044:	e50b3018 	str	r3, [fp, -#24]
+a0306048:	ea000025 	b	a03060e4 <poke_cmd+0x1f4>
+a030604c:	e3e03000 	mvn	r3, #0	; 0x0
+a0306050:	e50b3018 	str	r3, [fp, -#24]
+a0306054:	ea000022 	b	a03060e4 <poke_cmd+0x1f4>
+a0306058:	e55b3021 	ldrb	r3, [fp, -#33]
+a030605c:	e3833020 	orr	r3, r3, #32	; 0x20
+a0306060:	e20330ff 	and	r3, r3, #255	; 0xff
+a0306064:	e50b302c 	str	r3, [fp, -#44]
+a0306068:	e51b302c 	ldr	r3, [fp, -#44]
+a030606c:	e3530068 	cmp	r3, #104	; 0x68
+a0306070:	0a00000e 	beq	a03060b0 <poke_cmd+0x1c0>
+a0306074:	e51b302c 	ldr	r3, [fp, -#44]
+a0306078:	e3530068 	cmp	r3, #104	; 0x68
+a030607c:	ca000003 	bgt	a0306090 <poke_cmd+0x1a0>
+a0306080:	e51b302c 	ldr	r3, [fp, -#44]
+a0306084:	e3530062 	cmp	r3, #98	; 0x62
+a0306088:	0a000004 	beq	a03060a0 <poke_cmd+0x1b0>
+a030608c:	ea00000f 	b	a03060d0 <poke_cmd+0x1e0>
+a0306090:	e51b302c 	ldr	r3, [fp, -#44]
+a0306094:	e3530077 	cmp	r3, #119	; 0x77
+a0306098:	0a000008 	beq	a03060c0 <poke_cmd+0x1d0>
+a030609c:	ea00000b 	b	a03060d0 <poke_cmd+0x1e0>
+a03060a0:	e51b201c 	ldr	r2, [fp, -#28]
+a03060a4:	e55b3020 	ldrb	r3, [fp, -#32]
+a03060a8:	e5c23000 	strb	r3, [r2]
+a03060ac:	ea00000a 	b	a03060dc <poke_cmd+0x1ec>
+a03060b0:	e51b201c 	ldr	r2, [fp, -#28]
+a03060b4:	e15b32b0 	ldrh	r3, [fp, -#32]
+a03060b8:	e1c230b0 	strh	r3, [r2]
+a03060bc:	ea000006 	b	a03060dc <poke_cmd+0x1ec>
+a03060c0:	e51b201c 	ldr	r2, [fp, -#28]
+a03060c4:	e51b3020 	ldr	r3, [fp, -#32]
+a03060c8:	e5823000 	str	r3, [r2]
+a03060cc:	ea000002 	b	a03060dc <poke_cmd+0x1ec>
+a03060d0:	e3e03000 	mvn	r3, #0	; 0x0
+a03060d4:	e50b3018 	str	r3, [fp, -#24]
+a03060d8:	ea000001 	b	a03060e4 <poke_cmd+0x1f4>
+a03060dc:	e3a03000 	mov	r3, #0	; 0x0
+a03060e0:	e50b3018 	str	r3, [fp, -#24]
+a03060e4:	e51b3018 	ldr	r3, [fp, -#24]
+a03060e8:	e1a00003 	mov	r0, r3
+a03060ec:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03060f0 <md5chk_cmd>:
+a03060f0:	e1a0c00d 	mov	ip, sp
+a03060f4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03060f8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03060fc:	e24dd024 	sub	sp, sp, #36	; 0x24
+a0306100:	e50b0010 	str	r0, [fp, -#16]
+a0306104:	e50b1014 	str	r1, [fp, -#20]
+a0306108:	e3a03000 	mov	r3, #0	; 0x0
+a030610c:	e50b3018 	str	r3, [fp, -#24]
+a0306110:	e51b3010 	ldr	r3, [fp, -#16]
+a0306114:	e3530002 	cmp	r3, #2	; 0x2
+a0306118:	ca000002 	bgt	a0306128 <md5chk_cmd+0x38>
+a030611c:	e3e03000 	mvn	r3, #0	; 0x0
+a0306120:	e50b3018 	str	r3, [fp, -#24]
+a0306124:	ea000029 	b	a03061d0 <md5chk_cmd+0xe0>
+a0306128:	e3a02004 	mov	r2, #4	; 0x4
+a030612c:	e51b3014 	ldr	r3, [fp, -#20]
+a0306130:	e0823003 	add	r3, r2, r3
+a0306134:	e24b201c 	sub	r2, fp, #28	; 0x1c
+a0306138:	e5930000 	ldr	r0, [r3]
+a030613c:	e1a01002 	mov	r1, r2
+a0306140:	eb00150a 	bl	a030b570 <strtou32>
+a0306144:	e1a03000 	mov	r3, r0
+a0306148:	e50b3018 	str	r3, [fp, -#24]
+a030614c:	e51b3018 	ldr	r3, [fp, -#24]
+a0306150:	e3530000 	cmp	r3, #0	; 0x0
+a0306154:	aa000002 	bge	a0306164 <md5chk_cmd+0x74>
+a0306158:	e3e03000 	mvn	r3, #0	; 0x0
+a030615c:	e50b3018 	str	r3, [fp, -#24]
+a0306160:	ea00001a 	b	a03061d0 <md5chk_cmd+0xe0>
+a0306164:	e3a02008 	mov	r2, #8	; 0x8
+a0306168:	e51b3014 	ldr	r3, [fp, -#20]
+a030616c:	e0823003 	add	r3, r2, r3
+a0306170:	e24b2020 	sub	r2, fp, #32	; 0x20
+a0306174:	e5930000 	ldr	r0, [r3]
+a0306178:	e1a01002 	mov	r1, r2
+a030617c:	eb0014fb 	bl	a030b570 <strtou32>
+a0306180:	e1a03000 	mov	r3, r0
+a0306184:	e50b3018 	str	r3, [fp, -#24]
+a0306188:	e51b3018 	ldr	r3, [fp, -#24]
+a030618c:	e3530000 	cmp	r3, #0	; 0x0
+a0306190:	aa000002 	bge	a03061a0 <md5chk_cmd+0xb0>
+a0306194:	e3e03000 	mvn	r3, #0	; 0x0
+a0306198:	e50b3018 	str	r3, [fp, -#24]
+a030619c:	ea00000b 	b	a03061d0 <md5chk_cmd+0xe0>
+a03061a0:	e24b3030 	sub	r3, fp, #48	; 0x30
+a03061a4:	e51b001c 	ldr	r0, [fp, -#28]
+a03061a8:	e51b1020 	ldr	r1, [fp, -#32]
+a03061ac:	e1a02003 	mov	r2, r3
+a03061b0:	eb000638 	bl	a0307a98 <md5_buffer>
+a03061b4:	e24b3030 	sub	r3, fp, #48	; 0x30
+a03061b8:	e1a00003 	mov	r0, r3
+a03061bc:	eb000d43 	bl	a03096d0 <print_md5_digest>
+a03061c0:	e3a0000a 	mov	r0, #10	; 0xa
+a03061c4:	eb00129b 	bl	a030ac38 <serial_write>
+a03061c8:	e3a03000 	mov	r3, #0	; 0x0
+a03061cc:	e50b3018 	str	r3, [fp, -#24]
+a03061d0:	e51b3018 	ldr	r3, [fp, -#24]
+a03061d4:	e1a00003 	mov	r0, r3
+a03061d8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03061dc <xdownload_cmd>:
+a03061dc:	e1a0c00d 	mov	ip, sp
+a03061e0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03061e4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03061e8:	e24dd024 	sub	sp, sp, #36	; 0x24
+a03061ec:	e50b0010 	str	r0, [fp, -#16]
+a03061f0:	e50b1014 	str	r1, [fp, -#20]
+a03061f4:	e51b3010 	ldr	r3, [fp, -#16]
+a03061f8:	e3530001 	cmp	r3, #1	; 0x1
+a03061fc:	ca000002 	bgt	a030620c <xdownload_cmd+0x30>
+a0306200:	e3e03001 	mvn	r3, #1	; 0x1
+a0306204:	e50b302c 	str	r3, [fp, -#44]
+a0306208:	ea000070 	b	a03063d0 <xdownload_cmd+0x1f4>
+a030620c:	e3a02004 	mov	r2, #4	; 0x4
+a0306210:	e51b3014 	ldr	r3, [fp, -#20]
+a0306214:	e0822003 	add	r2, r2, r3
+a0306218:	e24b1018 	sub	r1, fp, #24	; 0x18
+a030621c:	e24bc01c 	sub	ip, fp, #28	; 0x1c
+a0306220:	e24be020 	sub	lr, fp, #32	; 0x20
+a0306224:	e24b3028 	sub	r3, fp, #40	; 0x28
+a0306228:	e58d3000 	str	r3, [sp]
+a030622c:	e5920000 	ldr	r0, [r2]
+a0306230:	e1a0200c 	mov	r2, ip
+a0306234:	e1a0300e 	mov	r3, lr
+a0306238:	eb000262 	bl	a0306bc8 <set_download_parameters>
+a030623c:	e1a03000 	mov	r3, r0
+a0306240:	e50b3024 	str	r3, [fp, -#36]
+a0306244:	e51b3024 	ldr	r3, [fp, -#36]
+a0306248:	e3530000 	cmp	r3, #0	; 0x0
+a030624c:	aa000002 	bge	a030625c <xdownload_cmd+0x80>
+a0306250:	e3a03000 	mov	r3, #0	; 0x0
+a0306254:	e50b302c 	str	r3, [fp, -#44]
+a0306258:	ea00005c 	b	a03063d0 <xdownload_cmd+0x1f4>
+a030625c:	e59f3174 	ldr	r3, [pc, #372]	; a03063d8 <xdownload_cmd+0x1fc>
+a0306260:	e59f2170 	ldr	r2, [pc, #368]	; a03063d8 <xdownload_cmd+0x1fc>
+a0306264:	e5931064 	ldr	r1, [r3, #100]
+a0306268:	e5923060 	ldr	r3, [r2, #96]
+a030626c:	e1510003 	cmp	r1, r3
+a0306270:	0a000015 	beq	a03062cc <xdownload_cmd+0xf0>
+a0306274:	e59f0160 	ldr	r0, [pc, #352]	; a03063dc <xdownload_cmd+0x200>
+a0306278:	eb001208 	bl	a030aaa0 <printf>
+a030627c:	e59f3154 	ldr	r3, [pc, #340]	; a03063d8 <xdownload_cmd+0x1fc>
+a0306280:	e5930060 	ldr	r0, [r3, #96]
+a0306284:	eb00023a 	bl	a0306b74 <PrintSerialSpeed>
+a0306288:	e59f0150 	ldr	r0, [pc, #336]	; a03063e0 <xdownload_cmd+0x204>
+a030628c:	eb001203 	bl	a030aaa0 <printf>
+a0306290:	e59f014c 	ldr	r0, [pc, #332]	; a03063e4 <xdownload_cmd+0x208>
+a0306294:	eb001201 	bl	a030aaa0 <printf>
+a0306298:	e59f0148 	ldr	r0, [pc, #328]	; a03063e8 <xdownload_cmd+0x20c>
+a030629c:	eb0011ff 	bl	a030aaa0 <printf>
+a03062a0:	e59f0144 	ldr	r0, [pc, #324]	; a03063ec <xdownload_cmd+0x210>
+a03062a4:	eb0011fd 	bl	a030aaa0 <printf>
+a03062a8:	e59f3128 	ldr	r3, [pc, #296]	; a03063d8 <xdownload_cmd+0x1fc>
+a03062ac:	e5930064 	ldr	r0, [r3, #100]
+a03062b0:	eb00022f 	bl	a0306b74 <PrintSerialSpeed>
+a03062b4:	e59f0134 	ldr	r0, [pc, #308]	; a03063f0 <xdownload_cmd+0x214>
+a03062b8:	eb0011f8 	bl	a030aaa0 <printf>
+a03062bc:	e59f3114 	ldr	r3, [pc, #276]	; a03063d8 <xdownload_cmd+0x1fc>
+a03062c0:	e5930060 	ldr	r0, [r3, #96]
+a03062c4:	eb001240 	bl	a030abcc <serial_init>
+a03062c8:	ea000001 	b	a03062d4 <xdownload_cmd+0xf8>
+a03062cc:	e59f0120 	ldr	r0, [pc, #288]	; a03063f4 <xdownload_cmd+0x218>
+a03062d0:	eb0011f2 	bl	a030aaa0 <printf>
+a03062d4:	e51b0018 	ldr	r0, [fp, -#24]
+a03062d8:	e51b101c 	ldr	r1, [fp, -#28]
+a03062dc:	ebfffab9 	bl	a0304dc8 <XModemReceive>
+a03062e0:	e1a02000 	mov	r2, r0
+a03062e4:	e51b3020 	ldr	r3, [fp, -#32]
+a03062e8:	e5832000 	str	r2, [r3]
+a03062ec:	e3a00064 	mov	r0, #100	; 0x64
+a03062f0:	eb00154a 	bl	a030b820 <msleep>
+a03062f4:	e59f00fc 	ldr	r0, [pc, #252]	; a03063f8 <xdownload_cmd+0x21c>
+a03062f8:	eb0011e8 	bl	a030aaa0 <printf>
+a03062fc:	eb001290 	bl	a030ad44 <serial_flush_output>
+a0306300:	e59f30d0 	ldr	r3, [pc, #208]	; a03063d8 <xdownload_cmd+0x1fc>
+a0306304:	e59f20cc 	ldr	r2, [pc, #204]	; a03063d8 <xdownload_cmd+0x1fc>
+a0306308:	e5931064 	ldr	r1, [r3, #100]
+a030630c:	e5923060 	ldr	r3, [r2, #96]
+a0306310:	e1510003 	cmp	r1, r3
+a0306314:	0a000006 	beq	a0306334 <xdownload_cmd+0x158>
+a0306318:	e59f00dc 	ldr	r0, [pc, #220]	; a03063fc <xdownload_cmd+0x220>
+a030631c:	eb0011df 	bl	a030aaa0 <printf>
+a0306320:	e59f30b0 	ldr	r3, [pc, #176]	; a03063d8 <xdownload_cmd+0x1fc>
+a0306324:	e5930064 	ldr	r0, [r3, #100]
+a0306328:	eb000211 	bl	a0306b74 <PrintSerialSpeed>
+a030632c:	e59f00cc 	ldr	r0, [pc, #204]	; a0306400 <xdownload_cmd+0x224>
+a0306330:	eb0011da 	bl	a030aaa0 <printf>
+a0306334:	e51b3020 	ldr	r3, [fp, -#32]
+a0306338:	e5933000 	ldr	r3, [r3]
+a030633c:	e3530000 	cmp	r3, #0	; 0x0
+a0306340:	aa00000d 	bge	a030637c <xdownload_cmd+0x1a0>
+a0306344:	e51b3020 	ldr	r3, [fp, -#32]
+a0306348:	e5933000 	ldr	r3, [r3]
+a030634c:	e50b3024 	str	r3, [fp, -#36]
+a0306350:	e3a02004 	mov	r2, #4	; 0x4
+a0306354:	e51b3014 	ldr	r3, [fp, -#20]
+a0306358:	e0823003 	add	r3, r2, r3
+a030635c:	e5930000 	ldr	r0, [r3]
+a0306360:	eb000296 	bl	a0306dc0 <do_reload>
+a0306364:	e59f306c 	ldr	r3, [pc, #108]	; a03063d8 <xdownload_cmd+0x1fc>
+a0306368:	e5930064 	ldr	r0, [r3, #100]
+a030636c:	eb001216 	bl	a030abcc <serial_init>
+a0306370:	e51b3024 	ldr	r3, [fp, -#36]
+a0306374:	e50b302c 	str	r3, [fp, -#44]
+a0306378:	ea000014 	b	a03063d0 <xdownload_cmd+0x1f4>
+a030637c:	e51b3020 	ldr	r3, [fp, -#32]
+a0306380:	e51b0018 	ldr	r0, [fp, -#24]
+a0306384:	e5931000 	ldr	r1, [r3]
+a0306388:	e51b2028 	ldr	r2, [fp, -#40]
+a030638c:	eb000306 	bl	a0306fac <do_md5sum>
+a0306390:	e51b3020 	ldr	r3, [fp, -#32]
+a0306394:	e51b2020 	ldr	r2, [fp, -#32]
+a0306398:	e59f0064 	ldr	r0, [pc, #100]	; a0306404 <xdownload_cmd+0x228>
+a030639c:	e5931000 	ldr	r1, [r3]
+a03063a0:	e5922000 	ldr	r2, [r2]
+a03063a4:	eb0011bd 	bl	a030aaa0 <printf>
+a03063a8:	e59f0058 	ldr	r0, [pc, #88]	; a0306408 <xdownload_cmd+0x22c>
+a03063ac:	e51b1018 	ldr	r1, [fp, -#24]
+a03063b0:	eb0011ba 	bl	a030aaa0 <printf>
+a03063b4:	e59f0050 	ldr	r0, [pc, #80]	; a030640c <xdownload_cmd+0x230>
+a03063b8:	eb0011b8 	bl	a030aaa0 <printf>
+a03063bc:	e59f3014 	ldr	r3, [pc, #20]	; a03063d8 <xdownload_cmd+0x1fc>
+a03063c0:	e5930064 	ldr	r0, [r3, #100]
+a03063c4:	eb001200 	bl	a030abcc <serial_init>
+a03063c8:	e3a03000 	mov	r3, #0	; 0x0
+a03063cc:	e50b302c 	str	r3, [fp, -#44]
+a03063d0:	e51b002c 	ldr	r0, [fp, -#44]
+a03063d4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03063d8:	a030fd20 	eorges	pc, r0, r0, lsr #26
+a03063dc:	a030cf38 	eorges	ip, r0, r8, lsr pc
+a03063e0:	a030cf48 	eorges	ip, r0, r8, asr #30
+a03063e4:	a030cf50 	eorges	ip, r0, r0, asr pc
+a03063e8:	a030cf88 	eorges	ip, r0, r8, lsl #31
+a03063ec:	a030cfc8 	eorges	ip, r0, r8, asr #31
+a03063f0:	a030cfe4 	eorges	ip, r0, r4, ror #31
+a03063f4:	a030d010 	eorges	sp, r0, r0, lsl r0
+a03063f8:	a030d054 	eorges	sp, r0, r4, asr r0
+a03063fc:	a030d058 	eorges	sp, r0, r8, asr r0
+a0306400:	a030d088 	eorges	sp, r0, r8, lsl #1
+a0306404:	a030d090 	mlages	r0, r0, r0, sp
+a0306408:	a030d0ac 	eorges	sp, r0, ip, lsr #1
+a030640c:	a030d0b8 	ldrgeh	sp, [r0], -r8
+
+a0306410 <init_commands>:
+a0306410:	e1a0c00d 	mov	ip, sp
+a0306414:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0306418:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030641c:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0306420:	e59f2068 	ldr	r2, [pc, #104]	; a0306490 <init_commands+0x80>
+a0306424:	e59f3068 	ldr	r3, [pc, #104]	; a0306494 <init_commands+0x84>
+a0306428:	e5823000 	str	r3, [r2]
+a030642c:	e59f3064 	ldr	r3, [pc, #100]	; a0306498 <init_commands+0x88>
+a0306430:	e50b3010 	str	r3, [fp, -#16]
+a0306434:	e59f3054 	ldr	r3, [pc, #84]	; a0306490 <init_commands+0x80>
+a0306438:	e5933000 	ldr	r3, [r3]
+a030643c:	e50b3018 	str	r3, [fp, -#24]
+a0306440:	e50b3014 	str	r3, [fp, -#20]
+a0306444:	e51b3018 	ldr	r3, [fp, -#24]
+a0306448:	e2833014 	add	r3, r3, #20	; 0x14
+a030644c:	e50b3018 	str	r3, [fp, -#24]
+a0306450:	e51b2018 	ldr	r2, [fp, -#24]
+a0306454:	e51b3010 	ldr	r3, [fp, -#16]
+a0306458:	e1520003 	cmp	r2, r3
+a030645c:	3a000000 	bcc	a0306464 <init_commands+0x54>
+a0306460:	ea000009 	b	a030648c <init_commands+0x7c>
+a0306464:	e51b2014 	ldr	r2, [fp, -#20]
+a0306468:	e51b3018 	ldr	r3, [fp, -#24]
+a030646c:	e5823010 	str	r3, [r2, #16]
+a0306470:	e51b3014 	ldr	r3, [fp, -#20]
+a0306474:	e2833014 	add	r3, r3, #20	; 0x14
+a0306478:	e50b3014 	str	r3, [fp, -#20]
+a030647c:	e51b3018 	ldr	r3, [fp, -#24]
+a0306480:	e2833014 	add	r3, r3, #20	; 0x14
+a0306484:	e50b3018 	str	r3, [fp, -#24]
+a0306488:	eafffff0 	b	a0306450 <init_commands+0x40>
+a030648c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0306490:	a0310360 	eorges	r0, r1, r0, ror #6
+a0306494:	a030dcb4 	ldrgeh	sp, [r0], -r4
+a0306498:	a030dee4 	eorges	sp, r0, r4, ror #29
+
+a030649c <parse_args>:
+a030649c:	e1a0c00d 	mov	ip, sp
+a03064a0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03064a4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03064a8:	e24dd018 	sub	sp, sp, #24	; 0x18
+a03064ac:	e50b0010 	str	r0, [fp, -#16]
+a03064b0:	e50b1014 	str	r1, [fp, -#20]
+a03064b4:	e50b2018 	str	r2, [fp, -#24]
+a03064b8:	e3a03000 	mov	r3, #0	; 0x0
+a03064bc:	e50b3020 	str	r3, [fp, -#32]
+a03064c0:	e51b2014 	ldr	r2, [fp, -#20]
+a03064c4:	e3a03000 	mov	r3, #0	; 0x0
+a03064c8:	e5823000 	str	r3, [r2]
+a03064cc:	e51b3010 	ldr	r3, [fp, -#16]
+a03064d0:	e5d33000 	ldrb	r3, [r3]
+a03064d4:	e3530000 	cmp	r3, #0	; 0x0
+a03064d8:	1a000000 	bne	a03064e0 <parse_args+0x44>
+a03064dc:	ea00003d 	b	a03065d8 <parse_args+0x13c>
+a03064e0:	e51b3010 	ldr	r3, [fp, -#16]
+a03064e4:	e50b301c 	str	r3, [fp, -#28]
+a03064e8:	e51b301c 	ldr	r3, [fp, -#28]
+a03064ec:	e5d33000 	ldrb	r3, [r3]
+a03064f0:	e3530000 	cmp	r3, #0	; 0x0
+a03064f4:	1a000000 	bne	a03064fc <parse_args+0x60>
+a03064f8:	ea00000a 	b	a0306528 <parse_args+0x8c>
+a03064fc:	e51b301c 	ldr	r3, [fp, -#28]
+a0306500:	e5d33000 	ldrb	r3, [r3]
+a0306504:	e3530009 	cmp	r3, #9	; 0x9
+a0306508:	1a000002 	bne	a0306518 <parse_args+0x7c>
+a030650c:	e51b301c 	ldr	r3, [fp, -#28]
+a0306510:	e3a02020 	mov	r2, #32	; 0x20
+a0306514:	e5c32000 	strb	r2, [r3]
+a0306518:	e51b301c 	ldr	r3, [fp, -#28]
+a030651c:	e2833001 	add	r3, r3, #1	; 0x1
+a0306520:	e50b301c 	str	r3, [fp, -#28]
+a0306524:	eaffffef 	b	a03064e8 <parse_args+0x4c>
+a0306528:	e51b3010 	ldr	r3, [fp, -#16]
+a030652c:	e50b301c 	str	r3, [fp, -#28]
+a0306530:	e3a03000 	mov	r3, #0	; 0x0
+a0306534:	e50b3024 	str	r3, [fp, -#36]
+a0306538:	e51b301c 	ldr	r3, [fp, -#28]
+a030653c:	e5d33000 	ldrb	r3, [r3]
+a0306540:	e3530000 	cmp	r3, #0	; 0x0
+a0306544:	1a000000 	bne	a030654c <parse_args+0xb0>
+a0306548:	ea00001f 	b	a03065cc <parse_args+0x130>
+a030654c:	e51b3020 	ldr	r3, [fp, -#32]
+a0306550:	e3530000 	cmp	r3, #0	; 0x0
+a0306554:	1a00000f 	bne	a0306598 <parse_args+0xfc>
+a0306558:	e51b301c 	ldr	r3, [fp, -#28]
+a030655c:	e5d33000 	ldrb	r3, [r3]
+a0306560:	e3530020 	cmp	r3, #32	; 0x20
+a0306564:	0a000014 	beq	a03065bc <parse_args+0x120>
+a0306568:	e51b3024 	ldr	r3, [fp, -#36]
+a030656c:	e1a02103 	mov	r2, r3, lsl #2
+a0306570:	e51b3018 	ldr	r3, [fp, -#24]
+a0306574:	e0822003 	add	r2, r2, r3
+a0306578:	e51b301c 	ldr	r3, [fp, -#28]
+a030657c:	e5823000 	str	r3, [r2]
+a0306580:	e51b3024 	ldr	r3, [fp, -#36]
+a0306584:	e2833001 	add	r3, r3, #1	; 0x1
+a0306588:	e50b3024 	str	r3, [fp, -#36]
+a030658c:	e3a03001 	mov	r3, #1	; 0x1
+a0306590:	e50b3020 	str	r3, [fp, -#32]
+a0306594:	ea000008 	b	a03065bc <parse_args+0x120>
+a0306598:	e51b301c 	ldr	r3, [fp, -#28]
+a030659c:	e5d33000 	ldrb	r3, [r3]
+a03065a0:	e3530020 	cmp	r3, #32	; 0x20
+a03065a4:	1a000004 	bne	a03065bc <parse_args+0x120>
+a03065a8:	e51b201c 	ldr	r2, [fp, -#28]
+a03065ac:	e3a03000 	mov	r3, #0	; 0x0
+a03065b0:	e5c23000 	strb	r3, [r2]
+a03065b4:	e3a03000 	mov	r3, #0	; 0x0
+a03065b8:	e50b3020 	str	r3, [fp, -#32]
+a03065bc:	e51b301c 	ldr	r3, [fp, -#28]
+a03065c0:	e2833001 	add	r3, r3, #1	; 0x1
+a03065c4:	e50b301c 	str	r3, [fp, -#28]
+a03065c8:	eaffffda 	b	a0306538 <parse_args+0x9c>
+a03065cc:	e51b2014 	ldr	r2, [fp, -#20]
+a03065d0:	e51b3024 	ldr	r3, [fp, -#36]
+a03065d4:	e5823000 	str	r3, [r2]
+a03065d8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03065dc <get_num_command_matches>:
+a03065dc:	e1a0c00d 	mov	ip, sp
+a03065e0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03065e4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03065e8:	e24dd014 	sub	sp, sp, #20	; 0x14
+a03065ec:	e50b0010 	str	r0, [fp, -#16]
+a03065f0:	e3a03000 	mov	r3, #0	; 0x0
+a03065f4:	e50b301c 	str	r3, [fp, -#28]
+a03065f8:	e51b0010 	ldr	r0, [fp, -#16]
+a03065fc:	eb001327 	bl	a030b2a0 <strlen>
+a0306600:	e1a03000 	mov	r3, r0
+a0306604:	e50b3018 	str	r3, [fp, -#24]
+a0306608:	e59f3080 	ldr	r3, [pc, #128]	; a0306690 <get_num_command_matches+0xb4>
+a030660c:	e5933000 	ldr	r3, [r3]
+a0306610:	e50b3014 	str	r3, [fp, -#20]
+a0306614:	e51b3014 	ldr	r3, [fp, -#20]
+a0306618:	e3530000 	cmp	r3, #0	; 0x0
+a030661c:	1a000000 	bne	a0306624 <get_num_command_matches+0x48>
+a0306620:	ea000016 	b	a0306680 <get_num_command_matches+0xa4>
+a0306624:	e51b3014 	ldr	r3, [fp, -#20]
+a0306628:	e5932000 	ldr	r2, [r3]
+a030662c:	e59f3060 	ldr	r3, [pc, #96]	; a0306694 <get_num_command_matches+0xb8>
+a0306630:	e1520003 	cmp	r2, r3
+a0306634:	0a000002 	beq	a0306644 <get_num_command_matches+0x68>
+a0306638:	e3e03002 	mvn	r3, #2	; 0x2
+a030663c:	e50b3020 	str	r3, [fp, -#32]
+a0306640:	ea000010 	b	a0306688 <get_num_command_matches+0xac>
+a0306644:	e51b3014 	ldr	r3, [fp, -#20]
+a0306648:	e5930004 	ldr	r0, [r3, #4]
+a030664c:	e51b1010 	ldr	r1, [fp, -#16]
+a0306650:	e51b2018 	ldr	r2, [fp, -#24]
+a0306654:	eb001327 	bl	a030b2f8 <strncmp>
+a0306658:	e1a03000 	mov	r3, r0
+a030665c:	e3530000 	cmp	r3, #0	; 0x0
+a0306660:	1a000002 	bne	a0306670 <get_num_command_matches+0x94>
+a0306664:	e51b301c 	ldr	r3, [fp, -#28]
+a0306668:	e2833001 	add	r3, r3, #1	; 0x1
+a030666c:	e50b301c 	str	r3, [fp, -#28]
+a0306670:	e51b3014 	ldr	r3, [fp, -#20]
+a0306674:	e5933010 	ldr	r3, [r3, #16]
+a0306678:	e50b3014 	str	r3, [fp, -#20]
+a030667c:	eaffffe4 	b	a0306614 <get_num_command_matches+0x38>
+a0306680:	e51b301c 	ldr	r3, [fp, -#28]
+a0306684:	e50b3020 	str	r3, [fp, -#32]
+a0306688:	e51b0020 	ldr	r0, [fp, -#32]
+a030668c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0306690:	a0310360 	eorges	r0, r1, r0, ror #6
+a0306694:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+
+a0306698 <parse_command>:
+a0306698:	e1a0c00d 	mov	ip, sp
+a030669c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03066a0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03066a4:	e24ddf46 	sub	sp, sp, #280	; 0x118
+a03066a8:	e50b0010 	str	r0, [fp, -#16]
+a03066ac:	e24b3018 	sub	r3, fp, #24	; 0x18
+a03066b0:	e24b2e12 	sub	r2, fp, #288	; 0x120
+a03066b4:	e51b0010 	ldr	r0, [fp, -#16]
+a03066b8:	e1a01003 	mov	r1, r3
+a03066bc:	ebffff76 	bl	a030649c <parse_args>
+a03066c0:	e51b3018 	ldr	r3, [fp, -#24]
+a03066c4:	e3530000 	cmp	r3, #0	; 0x0
+a03066c8:	1a000002 	bne	a03066d8 <parse_command+0x40>
+a03066cc:	e3a03000 	mov	r3, #0	; 0x0
+a03066d0:	e50b3124 	str	r3, [fp, -#292]
+a03066d4:	ea000040 	b	a03067dc <parse_command+0x144>
+a03066d8:	e51b0120 	ldr	r0, [fp, -#288]
+a03066dc:	ebffffbe 	bl	a03065dc <get_num_command_matches>
+a03066e0:	e1a03000 	mov	r3, r0
+a03066e4:	e50b301c 	str	r3, [fp, -#28]
+a03066e8:	e51b301c 	ldr	r3, [fp, -#28]
+a03066ec:	e3530000 	cmp	r3, #0	; 0x0
+a03066f0:	aa000002 	bge	a0306700 <parse_command+0x68>
+a03066f4:	e51b301c 	ldr	r3, [fp, -#28]
+a03066f8:	e50b3124 	str	r3, [fp, -#292]
+a03066fc:	ea000036 	b	a03067dc <parse_command+0x144>
+a0306700:	e51b301c 	ldr	r3, [fp, -#28]
+a0306704:	e3530000 	cmp	r3, #0	; 0x0
+a0306708:	1a000002 	bne	a0306718 <parse_command+0x80>
+a030670c:	e3e03003 	mvn	r3, #3	; 0x3
+a0306710:	e50b3124 	str	r3, [fp, -#292]
+a0306714:	ea000030 	b	a03067dc <parse_command+0x144>
+a0306718:	e51b301c 	ldr	r3, [fp, -#28]
+a030671c:	e3530001 	cmp	r3, #1	; 0x1
+a0306720:	da000002 	ble	a0306730 <parse_command+0x98>
+a0306724:	e3e0300a 	mvn	r3, #10	; 0xa
+a0306728:	e50b3124 	str	r3, [fp, -#292]
+a030672c:	ea00002a 	b	a03067dc <parse_command+0x144>
+a0306730:	e51b0120 	ldr	r0, [fp, -#288]
+a0306734:	eb0012d9 	bl	a030b2a0 <strlen>
+a0306738:	e1a03000 	mov	r3, r0
+a030673c:	e50b3020 	str	r3, [fp, -#32]
+a0306740:	e59f309c 	ldr	r3, [pc, #156]	; a03067e4 <parse_command+0x14c>
+a0306744:	e5933000 	ldr	r3, [r3]
+a0306748:	e50b3014 	str	r3, [fp, -#20]
+a030674c:	e51b3014 	ldr	r3, [fp, -#20]
+a0306750:	e3530000 	cmp	r3, #0	; 0x0
+a0306754:	1a000000 	bne	a030675c <parse_command+0xc4>
+a0306758:	ea00001d 	b	a03067d4 <parse_command+0x13c>
+a030675c:	e51b3014 	ldr	r3, [fp, -#20]
+a0306760:	e5932000 	ldr	r2, [r3]
+a0306764:	e59f307c 	ldr	r3, [pc, #124]	; a03067e8 <parse_command+0x150>
+a0306768:	e1520003 	cmp	r2, r3
+a030676c:	0a000002 	beq	a030677c <parse_command+0xe4>
+a0306770:	e3e03002 	mvn	r3, #2	; 0x2
+a0306774:	e50b3124 	str	r3, [fp, -#292]
+a0306778:	ea000017 	b	a03067dc <parse_command+0x144>
+a030677c:	e51b3014 	ldr	r3, [fp, -#20]
+a0306780:	e5930004 	ldr	r0, [r3, #4]
+a0306784:	e51b1120 	ldr	r1, [fp, -#288]
+a0306788:	e51b2020 	ldr	r2, [fp, -#32]
+a030678c:	eb0012d9 	bl	a030b2f8 <strncmp>
+a0306790:	e1a03000 	mov	r3, r0
+a0306794:	e3530000 	cmp	r3, #0	; 0x0
+a0306798:	1a000009 	bne	a03067c4 <parse_command+0x12c>
+a030679c:	e51b3014 	ldr	r3, [fp, -#20]
+a03067a0:	e24b2e12 	sub	r2, fp, #288	; 0x120
+a03067a4:	e593300c 	ldr	r3, [r3, #12]
+a03067a8:	e51b0018 	ldr	r0, [fp, -#24]
+a03067ac:	e1a01002 	mov	r1, r2
+a03067b0:	e1a0e00f 	mov	lr, pc
+a03067b4:	e1a0f003 	mov	pc, r3
+a03067b8:	e1a03000 	mov	r3, r0
+a03067bc:	e50b3124 	str	r3, [fp, -#292]
+a03067c0:	ea000005 	b	a03067dc <parse_command+0x144>
+a03067c4:	e51b3014 	ldr	r3, [fp, -#20]
+a03067c8:	e5933010 	ldr	r3, [r3, #16]
+a03067cc:	e50b3014 	str	r3, [fp, -#20]
+a03067d0:	eaffffdd 	b	a030674c <parse_command+0xb4>
+a03067d4:	e3e03003 	mvn	r3, #3	; 0x3
+a03067d8:	e50b3124 	str	r3, [fp, -#292]
+a03067dc:	e51b0124 	ldr	r0, [fp, -#292]
+a03067e0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03067e4:	a0310360 	eorges	r0, r1, r0, ror #6
+a03067e8:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+
+a03067ec <help>:
+a03067ec:	e1a0c00d 	mov	ip, sp
+a03067f0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03067f4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03067f8:	e24dd010 	sub	sp, sp, #16	; 0x10
+a03067fc:	e50b0010 	str	r0, [fp, -#16]
+a0306800:	e50b1014 	str	r1, [fp, -#20]
+a0306804:	e51b3010 	ldr	r3, [fp, -#16]
+a0306808:	e3530001 	cmp	r3, #1	; 0x1
+a030680c:	da000023 	ble	a03068a0 <help+0xb4>
+a0306810:	e59f30e4 	ldr	r3, [pc, #228]	; a03068fc <help+0x110>
+a0306814:	e5933000 	ldr	r3, [r3]
+a0306818:	e50b3018 	str	r3, [fp, -#24]
+a030681c:	e51b3018 	ldr	r3, [fp, -#24]
+a0306820:	e3530000 	cmp	r3, #0	; 0x0
+a0306824:	1a000000 	bne	a030682c <help+0x40>
+a0306828:	ea000019 	b	a0306894 <help+0xa8>
+a030682c:	e51b1018 	ldr	r1, [fp, -#24]
+a0306830:	e3a02004 	mov	r2, #4	; 0x4
+a0306834:	e51b3014 	ldr	r3, [fp, -#20]
+a0306838:	e0823003 	add	r3, r2, r3
+a030683c:	e5910004 	ldr	r0, [r1, #4]
+a0306840:	e5931000 	ldr	r1, [r3]
+a0306844:	e3a02c01 	mov	r2, #256	; 0x100
+a0306848:	eb0012aa 	bl	a030b2f8 <strncmp>
+a030684c:	e1a03000 	mov	r3, r0
+a0306850:	e3530000 	cmp	r3, #0	; 0x0
+a0306854:	1a00000a 	bne	a0306884 <help+0x98>
+a0306858:	e3a02004 	mov	r2, #4	; 0x4
+a030685c:	e51b3014 	ldr	r3, [fp, -#20]
+a0306860:	e0823003 	add	r3, r2, r3
+a0306864:	e51b2018 	ldr	r2, [fp, -#24]
+a0306868:	e59f0090 	ldr	r0, [pc, #144]	; a0306900 <help+0x114>
+a030686c:	e5931000 	ldr	r1, [r3]
+a0306870:	e5922008 	ldr	r2, [r2, #8]
+a0306874:	eb001089 	bl	a030aaa0 <printf>
+a0306878:	e3a03000 	mov	r3, #0	; 0x0
+a030687c:	e50b301c 	str	r3, [fp, -#28]
+a0306880:	ea00001b 	b	a03068f4 <help+0x108>
+a0306884:	e51b3018 	ldr	r3, [fp, -#24]
+a0306888:	e5933010 	ldr	r3, [r3, #16]
+a030688c:	e50b3018 	str	r3, [fp, -#24]
+a0306890:	eaffffe1 	b	a030681c <help+0x30>
+a0306894:	e3e03000 	mvn	r3, #0	; 0x0
+a0306898:	e50b301c 	str	r3, [fp, -#28]
+a030689c:	ea000014 	b	a03068f4 <help+0x108>
+a03068a0:	e59f005c 	ldr	r0, [pc, #92]	; a0306904 <help+0x118>
+a03068a4:	eb00107d 	bl	a030aaa0 <printf>
+a03068a8:	e59f304c 	ldr	r3, [pc, #76]	; a03068fc <help+0x110>
+a03068ac:	e5933000 	ldr	r3, [r3]
+a03068b0:	e50b3018 	str	r3, [fp, -#24]
+a03068b4:	e51b3018 	ldr	r3, [fp, -#24]
+a03068b8:	e3530000 	cmp	r3, #0	; 0x0
+a03068bc:	1a000000 	bne	a03068c4 <help+0xd8>
+a03068c0:	ea000007 	b	a03068e4 <help+0xf8>
+a03068c4:	e51b3018 	ldr	r3, [fp, -#24]
+a03068c8:	e59f0038 	ldr	r0, [pc, #56]	; a0306908 <help+0x11c>
+a03068cc:	e5931004 	ldr	r1, [r3, #4]
+a03068d0:	eb001072 	bl	a030aaa0 <printf>
+a03068d4:	e51b3018 	ldr	r3, [fp, -#24]
+a03068d8:	e5933010 	ldr	r3, [r3, #16]
+a03068dc:	e50b3018 	str	r3, [fp, -#24]
+a03068e0:	eafffff3 	b	a03068b4 <help+0xc8>
+a03068e4:	e59f0020 	ldr	r0, [pc, #32]	; a030690c <help+0x120>
+a03068e8:	eb00106c 	bl	a030aaa0 <printf>
+a03068ec:	e3a03000 	mov	r3, #0	; 0x0
+a03068f0:	e50b301c 	str	r3, [fp, -#28]
+a03068f4:	e51b001c 	ldr	r0, [fp, -#28]
+a03068f8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03068fc:	a0310360 	eorges	r0, r1, r0, ror #6
+a0306900:	a030d0bc 	ldrgeh	sp, [r0], -ip
+a0306904:	a030d0d8 	ldrgesb	sp, [r0], -r8
+a0306908:	a030d100 	eorges	sp, r0, r0, lsl #2
+a030690c:	a030d108 	eorges	sp, r0, r8, lsl #2
+
+a0306910 <DisplayPrompt>:
+a0306910:	e1a0c00d 	mov	ip, sp
+a0306914:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0306918:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030691c:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0306920:	e50b0010 	str	r0, [fp, -#16]
+a0306924:	e51b3010 	ldr	r3, [fp, -#16]
+a0306928:	e3530000 	cmp	r3, #0	; 0x0
+a030692c:	1a000002 	bne	a030693c <DisplayPrompt+0x2c>
+a0306930:	e59f0014 	ldr	r0, [pc, #20]	; a030694c <DisplayPrompt+0x3c>
+a0306934:	eb001059 	bl	a030aaa0 <printf>
+a0306938:	ea000002 	b	a0306948 <DisplayPrompt+0x38>
+a030693c:	e59f000c 	ldr	r0, [pc, #12]	; a0306950 <DisplayPrompt+0x40>
+a0306940:	e51b1010 	ldr	r1, [fp, -#16]
+a0306944:	eb001055 	bl	a030aaa0 <printf>
+a0306948:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030694c:	a030d148 	eorges	sp, r0, r8, asr #2
+a0306950:	a030d150 	eorges	sp, r0, r0, asr r1
+
+a0306954 <GetCommand>:
+a0306954:	e1a0c00d 	mov	ip, sp
+a0306958:	e92dd810 	stmdb	sp!, {r4, fp, ip, lr, pc}
+a030695c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0306960:	e24dd028 	sub	sp, sp, #40	; 0x28
+a0306964:	e50b0014 	str	r0, [fp, -#20]
+a0306968:	e50b1018 	str	r1, [fp, -#24]
+a030696c:	e50b201c 	str	r2, [fp, -#28]
+a0306970:	e51b3018 	ldr	r3, [fp, -#24]
+a0306974:	e2433001 	sub	r3, r3, #1	; 0x1
+a0306978:	e50b3034 	str	r3, [fp, -#52]
+a030697c:	eb00138a 	bl	a030b7ac <timer_overflow_clear>
+a0306980:	eb001360 	bl	a030b708 <timer_read>
+a0306984:	e1a03000 	mov	r3, r0
+a0306988:	e50b3020 	str	r3, [fp, -#32]
+a030698c:	e3a03000 	mov	r3, #0	; 0x0
+a0306990:	e50b3030 	str	r3, [fp, -#48]
+a0306994:	e3a03000 	mov	r3, #0	; 0x0
+a0306998:	e50b302c 	str	r3, [fp, -#44]
+a030699c:	e51b2030 	ldr	r2, [fp, -#48]
+a03069a0:	e51b3034 	ldr	r3, [fp, -#52]
+a03069a4:	e1520003 	cmp	r2, r3
+a03069a8:	ba000000 	blt	a03069b0 <GetCommand+0x5c>
+a03069ac:	ea00006a 	b	a0306b5c <GetCommand+0x208>
+a03069b0:	eb0010cb 	bl	a030ace4 <serial_poll>
+a03069b4:	e1a03000 	mov	r3, r0
+a03069b8:	e3530000 	cmp	r3, #0	; 0x0
+a03069bc:	0a000000 	beq	a03069c4 <GetCommand+0x70>
+a03069c0:	ea000017 	b	a0306a24 <GetCommand+0xd0>
+a03069c4:	eb00134f 	bl	a030b708 <timer_read>
+a03069c8:	e1a03000 	mov	r3, r0
+a03069cc:	e50b3024 	str	r3, [fp, -#36]
+a03069d0:	e51b2024 	ldr	r2, [fp, -#36]
+a03069d4:	e51b3020 	ldr	r3, [fp, -#32]
+a03069d8:	e0634002 	rsb	r4, r3, r2
+a03069dc:	eb001386 	bl	a030b7fc <timer_tps>
+a03069e0:	e1a02000 	mov	r2, r0
+a03069e4:	e51b301c 	ldr	r3, [fp, -#28]
+a03069e8:	e0030392 	mul	r3, r2, r3
+a03069ec:	e1540003 	cmp	r4, r3
+a03069f0:	9affffee 	bls	a03069b0 <GetCommand+0x5c>
+a03069f4:	e24b002c 	sub	r0, fp, #44	; 0x2c
+a03069f8:	e5902000 	ldr	r2, [r0]
+a03069fc:	e1a01002 	mov	r1, r2
+a0306a00:	e51b3014 	ldr	r3, [fp, -#20]
+a0306a04:	e0811003 	add	r1, r1, r3
+a0306a08:	e3a03000 	mov	r3, #0	; 0x0
+a0306a0c:	e5c13000 	strb	r3, [r1]
+a0306a10:	e2822001 	add	r2, r2, #1	; 0x1
+a0306a14:	e5802000 	str	r2, [r0]
+a0306a18:	e51b3030 	ldr	r3, [fp, -#48]
+a0306a1c:	e50b3038 	str	r3, [fp, -#56]
+a0306a20:	ea00004f 	b	a0306b64 <GetCommand+0x210>
+a0306a24:	eb001077 	bl	a030ac08 <serial_read>
+a0306a28:	e1a03000 	mov	r3, r0
+a0306a2c:	e50b3028 	str	r3, [fp, -#40]
+a0306a30:	e51b3028 	ldr	r3, [fp, -#40]
+a0306a34:	e3530000 	cmp	r3, #0	; 0x0
+a0306a38:	aa000010 	bge	a0306a80 <GetCommand+0x12c>
+a0306a3c:	e24b002c 	sub	r0, fp, #44	; 0x2c
+a0306a40:	e5902000 	ldr	r2, [r0]
+a0306a44:	e1a01002 	mov	r1, r2
+a0306a48:	e51b3014 	ldr	r3, [fp, -#20]
+a0306a4c:	e0811003 	add	r1, r1, r3
+a0306a50:	e3a03000 	mov	r3, #0	; 0x0
+a0306a54:	e5c13000 	strb	r3, [r1]
+a0306a58:	e2822001 	add	r2, r2, #1	; 0x1
+a0306a5c:	e5802000 	str	r2, [r0]
+a0306a60:	e3a0000a 	mov	r0, #10	; 0xa
+a0306a64:	eb001073 	bl	a030ac38 <serial_write>
+a0306a68:	e51b0028 	ldr	r0, [fp, -#40]
+a0306a6c:	e59f10f8 	ldr	r1, [pc, #248]	; a0306b6c <GetCommand+0x218>
+a0306a70:	eb00026b 	bl	a0307424 <printerror>
+a0306a74:	e51b3028 	ldr	r3, [fp, -#40]
+a0306a78:	e50b3038 	str	r3, [fp, -#56]
+a0306a7c:	ea000038 	b	a0306b64 <GetCommand+0x210>
+a0306a80:	e51b3028 	ldr	r3, [fp, -#40]
+a0306a84:	e353000d 	cmp	r3, #13	; 0xd
+a0306a88:	0a000003 	beq	a0306a9c <GetCommand+0x148>
+a0306a8c:	e51b3028 	ldr	r3, [fp, -#40]
+a0306a90:	e353000a 	cmp	r3, #10	; 0xa
+a0306a94:	0a000000 	beq	a0306a9c <GetCommand+0x148>
+a0306a98:	ea00000d 	b	a0306ad4 <GetCommand+0x180>
+a0306a9c:	e24b002c 	sub	r0, fp, #44	; 0x2c
+a0306aa0:	e5902000 	ldr	r2, [r0]
+a0306aa4:	e1a01002 	mov	r1, r2
+a0306aa8:	e51b3014 	ldr	r3, [fp, -#20]
+a0306aac:	e0811003 	add	r1, r1, r3
+a0306ab0:	e3a03000 	mov	r3, #0	; 0x0
+a0306ab4:	e5c13000 	strb	r3, [r1]
+a0306ab8:	e2822001 	add	r2, r2, #1	; 0x1
+a0306abc:	e5802000 	str	r2, [r0]
+a0306ac0:	e3a0000a 	mov	r0, #10	; 0xa
+a0306ac4:	eb00105b 	bl	a030ac38 <serial_write>
+a0306ac8:	e51b3030 	ldr	r3, [fp, -#48]
+a0306acc:	e50b3038 	str	r3, [fp, -#56]
+a0306ad0:	ea000023 	b	a0306b64 <GetCommand+0x210>
+a0306ad4:	e51b3028 	ldr	r3, [fp, -#40]
+a0306ad8:	e3530008 	cmp	r3, #8	; 0x8
+a0306adc:	0a000003 	beq	a0306af0 <GetCommand+0x19c>
+a0306ae0:	e51b3028 	ldr	r3, [fp, -#40]
+a0306ae4:	e353007f 	cmp	r3, #127	; 0x7f
+a0306ae8:	0a000000 	beq	a0306af0 <GetCommand+0x19c>
+a0306aec:	ea00000b 	b	a0306b20 <GetCommand+0x1cc>
+a0306af0:	e51b302c 	ldr	r3, [fp, -#44]
+a0306af4:	e3530000 	cmp	r3, #0	; 0x0
+a0306af8:	daffffa7 	ble	a030699c <GetCommand+0x48>
+a0306afc:	e51b302c 	ldr	r3, [fp, -#44]
+a0306b00:	e2433001 	sub	r3, r3, #1	; 0x1
+a0306b04:	e50b302c 	str	r3, [fp, -#44]
+a0306b08:	e51b3030 	ldr	r3, [fp, -#48]
+a0306b0c:	e2433001 	sub	r3, r3, #1	; 0x1
+a0306b10:	e50b3030 	str	r3, [fp, -#48]
+a0306b14:	e59f0054 	ldr	r0, [pc, #84]	; a0306b70 <GetCommand+0x21c>
+a0306b18:	eb000fe0 	bl	a030aaa0 <printf>
+a0306b1c:	eaffff9e 	b	a030699c <GetCommand+0x48>
+a0306b20:	e24b002c 	sub	r0, fp, #44	; 0x2c
+a0306b24:	e5902000 	ldr	r2, [r0]
+a0306b28:	e1a01002 	mov	r1, r2
+a0306b2c:	e51b3014 	ldr	r3, [fp, -#20]
+a0306b30:	e0811003 	add	r1, r1, r3
+a0306b34:	e55b3028 	ldrb	r3, [fp, -#40]
+a0306b38:	e5c13000 	strb	r3, [r1]
+a0306b3c:	e2822001 	add	r2, r2, #1	; 0x1
+a0306b40:	e5802000 	str	r2, [r0]
+a0306b44:	e51b3030 	ldr	r3, [fp, -#48]
+a0306b48:	e2833001 	add	r3, r3, #1	; 0x1
+a0306b4c:	e50b3030 	str	r3, [fp, -#48]
+a0306b50:	e51b0028 	ldr	r0, [fp, -#40]
+a0306b54:	eb001037 	bl	a030ac38 <serial_write>
+a0306b58:	eaffff8f 	b	a030699c <GetCommand+0x48>
+a0306b5c:	e51b3030 	ldr	r3, [fp, -#48]
+a0306b60:	e50b3038 	str	r3, [fp, -#56]
+a0306b64:	e51b0038 	ldr	r0, [fp, -#56]
+a0306b68:	e91ba810 	ldmdb	fp, {r4, fp, sp, pc}
+a0306b6c:	a030d154 	eorges	sp, r0, r4, asr r1
+a0306b70:	a030d168 	eorges	sp, r0, r8, ror #2
+
+a0306b74 <PrintSerialSpeed>:
+a0306b74:	e1a0c00d 	mov	ip, sp
+a0306b78:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0306b7c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0306b80:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0306b84:	e50b0010 	str	r0, [fp, -#16]
+a0306b88:	e51b3010 	ldr	r3, [fp, -#16]
+a0306b8c:	e3530008 	cmp	r3, #8	; 0x8
+a0306b90:	9a000002 	bls	a0306ba0 <PrintSerialSpeed+0x2c>
+a0306b94:	e59f0020 	ldr	r0, [pc, #32]	; a0306bbc <PrintSerialSpeed+0x48>
+a0306b98:	eb000fc0 	bl	a030aaa0 <printf>
+a0306b9c:	ea000005 	b	a0306bb8 <PrintSerialSpeed+0x44>
+a0306ba0:	e59f2018 	ldr	r2, [pc, #24]	; a0306bc0 <PrintSerialSpeed+0x4c>
+a0306ba4:	e51b3010 	ldr	r3, [fp, -#16]
+a0306ba8:	e59f0014 	ldr	r0, [pc, #20]	; a0306bc4 <PrintSerialSpeed+0x50>
+a0306bac:	e51b1010 	ldr	r1, [fp, -#16]
+a0306bb0:	e7922103 	ldr	r2, [r2, r3, lsl #2]
+a0306bb4:	eb000fb9 	bl	a030aaa0 <printf>
+a0306bb8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0306bbc:	a030d16c 	eorges	sp, r0, ip, ror #2
+a0306bc0:	a030d488 	eorges	sp, r0, r8, lsl #9
+a0306bc4:	a030d178 	eorges	sp, r0, r8, ror r1
+
+a0306bc8 <set_download_parameters>:
+a0306bc8:	e1a0c00d 	mov	ip, sp
+a0306bcc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0306bd0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0306bd4:	e24dd014 	sub	sp, sp, #20	; 0x14
+a0306bd8:	e50b0010 	str	r0, [fp, -#16]
+a0306bdc:	e50b1014 	str	r1, [fp, -#20]
+a0306be0:	e50b2018 	str	r2, [fp, -#24]
+a0306be4:	e50b301c 	str	r3, [fp, -#28]
+a0306be8:	e51b0010 	ldr	r0, [fp, -#16]
+a0306bec:	e59f119c 	ldr	r1, [pc, #412]	; a0306d90 <set_download_parameters+0x1c8>
+a0306bf0:	e3a02005 	mov	r2, #5	; 0x5
+a0306bf4:	eb0011bf 	bl	a030b2f8 <strncmp>
+a0306bf8:	e1a03000 	mov	r3, r0
+a0306bfc:	e3530000 	cmp	r3, #0	; 0x0
+a0306c00:	1a000010 	bne	a0306c48 <set_download_parameters+0x80>
+a0306c04:	e51b2014 	ldr	r2, [fp, -#20]
+a0306c08:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0306c0c:	e2833602 	add	r3, r3, #2097152	; 0x200000
+a0306c10:	e5823000 	str	r3, [r2]
+a0306c14:	e51b2018 	ldr	r2, [fp, -#24]
+a0306c18:	e3a03701 	mov	r3, #262144	; 0x40000
+a0306c1c:	e5823000 	str	r3, [r2]
+a0306c20:	e51b201c 	ldr	r2, [fp, -#28]
+a0306c24:	e59f3168 	ldr	r3, [pc, #360]	; a0306d94 <set_download_parameters+0x1cc>
+a0306c28:	e5823000 	str	r3, [r2]
+a0306c2c:	e59b2004 	ldr	r2, [fp, #4]
+a0306c30:	e59f3160 	ldr	r3, [pc, #352]	; a0306d98 <set_download_parameters+0x1d0>
+a0306c34:	e5823000 	str	r3, [r2]
+a0306c38:	e59f215c 	ldr	r2, [pc, #348]	; a0306d9c <set_download_parameters+0x1d4>
+a0306c3c:	e3a03001 	mov	r3, #1	; 0x1
+a0306c40:	e582304c 	str	r3, [r2, #76]
+a0306c44:	ea00004d 	b	a0306d80 <set_download_parameters+0x1b8>
+a0306c48:	e51b0010 	ldr	r0, [fp, -#16]
+a0306c4c:	e59f114c 	ldr	r1, [pc, #332]	; a0306da0 <set_download_parameters+0x1d8>
+a0306c50:	e3a02006 	mov	r2, #6	; 0x6
+a0306c54:	eb0011a7 	bl	a030b2f8 <strncmp>
+a0306c58:	e1a03000 	mov	r3, r0
+a0306c5c:	e3530000 	cmp	r3, #0	; 0x0
+a0306c60:	1a000010 	bne	a0306ca8 <set_download_parameters+0xe0>
+a0306c64:	e51b2014 	ldr	r2, [fp, -#20]
+a0306c68:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0306c6c:	e2833821 	add	r3, r3, #2162688	; 0x210000
+a0306c70:	e5823000 	str	r3, [r2]
+a0306c74:	e51b2018 	ldr	r2, [fp, -#24]
+a0306c78:	e3a03000 	mov	r3, #0	; 0x0
+a0306c7c:	e5823000 	str	r3, [r2]
+a0306c80:	e51b201c 	ldr	r2, [fp, -#28]
+a0306c84:	e59f3118 	ldr	r3, [pc, #280]	; a0306da4 <set_download_parameters+0x1dc>
+a0306c88:	e5823000 	str	r3, [r2]
+a0306c8c:	e59b2004 	ldr	r2, [fp, #4]
+a0306c90:	e59f3110 	ldr	r3, [pc, #272]	; a0306da8 <set_download_parameters+0x1e0>
+a0306c94:	e5823000 	str	r3, [r2]
+a0306c98:	e59f20fc 	ldr	r2, [pc, #252]	; a0306d9c <set_download_parameters+0x1d4>
+a0306c9c:	e3a03001 	mov	r3, #1	; 0x1
+a0306ca0:	e582301c 	str	r3, [r2, #28]
+a0306ca4:	ea000035 	b	a0306d80 <set_download_parameters+0x1b8>
+a0306ca8:	e51b0010 	ldr	r0, [fp, -#16]
+a0306cac:	e59f10f8 	ldr	r1, [pc, #248]	; a0306dac <set_download_parameters+0x1e4>
+a0306cb0:	e3a02007 	mov	r2, #7	; 0x7
+a0306cb4:	eb00118f 	bl	a030b2f8 <strncmp>
+a0306cb8:	e1a03000 	mov	r3, r0
+a0306cbc:	e3530000 	cmp	r3, #0	; 0x0
+a0306cc0:	1a000010 	bne	a0306d08 <set_download_parameters+0x140>
+a0306cc4:	e51b2014 	ldr	r2, [fp, -#20]
+a0306cc8:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0306ccc:	e2833902 	add	r3, r3, #32768	; 0x8000
+a0306cd0:	e5823000 	str	r3, [r2]
+a0306cd4:	e51b2018 	ldr	r2, [fp, -#24]
+a0306cd8:	e3a03602 	mov	r3, #2097152	; 0x200000
+a0306cdc:	e5823000 	str	r3, [r2]
+a0306ce0:	e51b201c 	ldr	r2, [fp, -#28]
+a0306ce4:	e59f30b0 	ldr	r3, [pc, #176]	; a0306d9c <set_download_parameters+0x1d4>
+a0306ce8:	e5823000 	str	r3, [r2]
+a0306cec:	e59b2004 	ldr	r2, [fp, #4]
+a0306cf0:	e59f30b8 	ldr	r3, [pc, #184]	; a0306db0 <set_download_parameters+0x1e8>
+a0306cf4:	e5823000 	str	r3, [r2]
+a0306cf8:	e59f209c 	ldr	r2, [pc, #156]	; a0306d9c <set_download_parameters+0x1d4>
+a0306cfc:	e3a03001 	mov	r3, #1	; 0x1
+a0306d00:	e5823004 	str	r3, [r2, #4]
+a0306d04:	ea00001d 	b	a0306d80 <set_download_parameters+0x1b8>
+a0306d08:	e51b0010 	ldr	r0, [fp, -#16]
+a0306d0c:	e59f10a0 	ldr	r1, [pc, #160]	; a0306db4 <set_download_parameters+0x1ec>
+a0306d10:	e3a02008 	mov	r2, #8	; 0x8
+a0306d14:	eb001177 	bl	a030b2f8 <strncmp>
+a0306d18:	e1a03000 	mov	r3, r0
+a0306d1c:	e3530000 	cmp	r3, #0	; 0x0
+a0306d20:	1a000010 	bne	a0306d68 <set_download_parameters+0x1a0>
+a0306d24:	e51b2014 	ldr	r2, [fp, -#20]
+a0306d28:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0306d2c:	e2833605 	add	r3, r3, #5242880	; 0x500000
+a0306d30:	e5823000 	str	r3, [r2]
+a0306d34:	e51b2018 	ldr	r2, [fp, -#24]
+a0306d38:	e3a03501 	mov	r3, #4194304	; 0x400000
+a0306d3c:	e5823000 	str	r3, [r2]
+a0306d40:	e51b201c 	ldr	r2, [fp, -#28]
+a0306d44:	e59f306c 	ldr	r3, [pc, #108]	; a0306db8 <set_download_parameters+0x1f0>
+a0306d48:	e5823000 	str	r3, [r2]
+a0306d4c:	e59b2004 	ldr	r2, [fp, #4]
+a0306d50:	e59f3064 	ldr	r3, [pc, #100]	; a0306dbc <set_download_parameters+0x1f4>
+a0306d54:	e5823000 	str	r3, [r2]
+a0306d58:	e59f203c 	ldr	r2, [pc, #60]	; a0306d9c <set_download_parameters+0x1d4>
+a0306d5c:	e3a03001 	mov	r3, #1	; 0x1
+a0306d60:	e5823034 	str	r3, [r2, #52]
+a0306d64:	ea000005 	b	a0306d80 <set_download_parameters+0x1b8>
+a0306d68:	e3e00000 	mvn	r0, #0	; 0x0
+a0306d6c:	e51b1010 	ldr	r1, [fp, -#16]
+a0306d70:	eb0001ab 	bl	a0307424 <printerror>
+a0306d74:	e3e03000 	mvn	r3, #0	; 0x0
+a0306d78:	e50b3020 	str	r3, [fp, -#32]
+a0306d7c:	ea000001 	b	a0306d88 <set_download_parameters+0x1c0>
+a0306d80:	e3a03000 	mov	r3, #0	; 0x0
+a0306d84:	e50b3020 	str	r3, [fp, -#32]
+a0306d88:	e51b0020 	ldr	r0, [fp, -#32]
+a0306d8c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0306d90:	a030d180 	eorges	sp, r0, r0, lsl #3
+a0306d94:	a030fd68 	eorges	pc, r0, r8, ror #26
+a0306d98:	a030fd70 	eorges	pc, r0, r0, ror sp
+a0306d9c:	a030fd20 	eorges	pc, r0, r0, lsr #26
+a0306da0:	a030d188 	eorges	sp, r0, r8, lsl #3
+a0306da4:	a030fd38 	eorges	pc, r0, r8, lsr sp
+a0306da8:	a030fd40 	eorges	pc, r0, r0, asr #26
+a0306dac:	a030d190 	mlages	r0, r0, r1, sp
+a0306db0:	a030fd28 	eorges	pc, r0, r8, lsr #26
+a0306db4:	a030d198 	mlages	r0, r8, r1, sp
+a0306db8:	a030fd50 	eorges	pc, r0, r0, asr sp
+a0306dbc:	a030fd58 	eorges	pc, r0, r8, asr sp
+
+a0306dc0 <do_reload>:
+a0306dc0:	e1a0c00d 	mov	ip, sp
+a0306dc4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0306dc8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0306dcc:	e24dd010 	sub	sp, sp, #16	; 0x10
+a0306dd0:	e50b0010 	str	r0, [fp, -#16]
+a0306dd4:	e3a03000 	mov	r3, #0	; 0x0
+a0306dd8:	e50b3014 	str	r3, [fp, -#20]
+a0306ddc:	e3a03000 	mov	r3, #0	; 0x0
+a0306de0:	e50b3018 	str	r3, [fp, -#24]
+a0306de4:	e51b0010 	ldr	r0, [fp, -#16]
+a0306de8:	e59f1194 	ldr	r1, [pc, #404]	; a0306f84 <do_reload+0x1c4>
+a0306dec:	e3a02005 	mov	r2, #5	; 0x5
+a0306df0:	eb001140 	bl	a030b2f8 <strncmp>
+a0306df4:	e1a03000 	mov	r3, r0
+a0306df8:	e3530000 	cmp	r3, #0	; 0x0
+a0306dfc:	1a00000f 	bne	a0306e40 <do_reload+0x80>
+a0306e00:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0306e04:	e2833602 	add	r3, r3, #2097152	; 0x200000
+a0306e08:	e50b3014 	str	r3, [fp, -#20]
+a0306e0c:	e3a03000 	mov	r3, #0	; 0x0
+a0306e10:	e50b3018 	str	r3, [fp, -#24]
+a0306e14:	e3a03801 	mov	r3, #65536	; 0x10000
+a0306e18:	e50b301c 	str	r3, [fp, -#28]
+a0306e1c:	e59f2164 	ldr	r2, [pc, #356]	; a0306f88 <do_reload+0x1c8>
+a0306e20:	e3a03000 	mov	r3, #0	; 0x0
+a0306e24:	e5823048 	str	r3, [r2, #72]
+a0306e28:	e59f2158 	ldr	r2, [pc, #344]	; a0306f88 <do_reload+0x1c8>
+a0306e2c:	e3a03000 	mov	r3, #0	; 0x0
+a0306e30:	e582304c 	str	r3, [r2, #76]
+a0306e34:	e59f0150 	ldr	r0, [pc, #336]	; a0306f8c <do_reload+0x1cc>
+a0306e38:	eb000f18 	bl	a030aaa0 <printf>
+a0306e3c:	ea000048 	b	a0306f64 <do_reload+0x1a4>
+a0306e40:	e51b0010 	ldr	r0, [fp, -#16]
+a0306e44:	e59f1144 	ldr	r1, [pc, #324]	; a0306f90 <do_reload+0x1d0>
+a0306e48:	e3a02006 	mov	r2, #6	; 0x6
+a0306e4c:	eb001129 	bl	a030b2f8 <strncmp>
+a0306e50:	e1a03000 	mov	r3, r0
+a0306e54:	e3530000 	cmp	r3, #0	; 0x0
+a0306e58:	1a00000f 	bne	a0306e9c <do_reload+0xdc>
+a0306e5c:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0306e60:	e2833821 	add	r3, r3, #2162688	; 0x210000
+a0306e64:	e50b3014 	str	r3, [fp, -#20]
+a0306e68:	e3a03701 	mov	r3, #262144	; 0x40000
+a0306e6c:	e50b3018 	str	r3, [fp, -#24]
+a0306e70:	e3a03000 	mov	r3, #0	; 0x0
+a0306e74:	e50b301c 	str	r3, [fp, -#28]
+a0306e78:	e59f2108 	ldr	r2, [pc, #264]	; a0306f88 <do_reload+0x1c8>
+a0306e7c:	e3a03000 	mov	r3, #0	; 0x0
+a0306e80:	e5823018 	str	r3, [r2, #24]
+a0306e84:	e59f20fc 	ldr	r2, [pc, #252]	; a0306f88 <do_reload+0x1c8>
+a0306e88:	e3a03000 	mov	r3, #0	; 0x0
+a0306e8c:	e582301c 	str	r3, [r2, #28]
+a0306e90:	e59f00fc 	ldr	r0, [pc, #252]	; a0306f94 <do_reload+0x1d4>
+a0306e94:	eb000f01 	bl	a030aaa0 <printf>
+a0306e98:	ea000031 	b	a0306f64 <do_reload+0x1a4>
+a0306e9c:	e51b0010 	ldr	r0, [fp, -#16]
+a0306ea0:	e59f10f0 	ldr	r1, [pc, #240]	; a0306f98 <do_reload+0x1d8>
+a0306ea4:	e3a02007 	mov	r2, #7	; 0x7
+a0306ea8:	eb001112 	bl	a030b2f8 <strncmp>
+a0306eac:	e1a03000 	mov	r3, r0
+a0306eb0:	e3530000 	cmp	r3, #0	; 0x0
+a0306eb4:	1a00000f 	bne	a0306ef8 <do_reload+0x138>
+a0306eb8:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0306ebc:	e2833902 	add	r3, r3, #32768	; 0x8000
+a0306ec0:	e50b3014 	str	r3, [fp, -#20]
+a0306ec4:	e3a03701 	mov	r3, #262144	; 0x40000
+a0306ec8:	e50b3018 	str	r3, [fp, -#24]
+a0306ecc:	e3a03702 	mov	r3, #524288	; 0x80000
+a0306ed0:	e50b301c 	str	r3, [fp, -#28]
+a0306ed4:	e59f20ac 	ldr	r2, [pc, #172]	; a0306f88 <do_reload+0x1c8>
+a0306ed8:	e3a03000 	mov	r3, #0	; 0x0
+a0306edc:	e5823000 	str	r3, [r2]
+a0306ee0:	e59f20a0 	ldr	r2, [pc, #160]	; a0306f88 <do_reload+0x1c8>
+a0306ee4:	e3a03000 	mov	r3, #0	; 0x0
+a0306ee8:	e5823004 	str	r3, [r2, #4]
+a0306eec:	e59f00a8 	ldr	r0, [pc, #168]	; a0306f9c <do_reload+0x1dc>
+a0306ef0:	eb000eea 	bl	a030aaa0 <printf>
+a0306ef4:	ea00001a 	b	a0306f64 <do_reload+0x1a4>
+a0306ef8:	e51b0010 	ldr	r0, [fp, -#16]
+a0306efc:	e59f109c 	ldr	r1, [pc, #156]	; a0306fa0 <do_reload+0x1e0>
+a0306f00:	e3a02008 	mov	r2, #8	; 0x8
+a0306f04:	eb0010fb 	bl	a030b2f8 <strncmp>
+a0306f08:	e1a03000 	mov	r3, r0
+a0306f0c:	e3530000 	cmp	r3, #0	; 0x0
+a0306f10:	1a00000f 	bne	a0306f54 <do_reload+0x194>
+a0306f14:	e3a0320a 	mov	r3, #-1610612736	; 0xa0000000
+a0306f18:	e2833605 	add	r3, r3, #5242880	; 0x500000
+a0306f1c:	e50b3014 	str	r3, [fp, -#20]
+a0306f20:	e3a03709 	mov	r3, #2359296	; 0x240000
+a0306f24:	e50b3018 	str	r3, [fp, -#24]
+a0306f28:	e3a03601 	mov	r3, #1048576	; 0x100000
+a0306f2c:	e50b301c 	str	r3, [fp, -#28]
+a0306f30:	e59f2050 	ldr	r2, [pc, #80]	; a0306f88 <do_reload+0x1c8>
+a0306f34:	e3a03000 	mov	r3, #0	; 0x0
+a0306f38:	e5823030 	str	r3, [r2, #48]
+a0306f3c:	e59f2044 	ldr	r2, [pc, #68]	; a0306f88 <do_reload+0x1c8>
+a0306f40:	e3a03000 	mov	r3, #0	; 0x0
+a0306f44:	e5823034 	str	r3, [r2, #52]
+a0306f48:	e59f0054 	ldr	r0, [pc, #84]	; a0306fa4 <do_reload+0x1e4>
+a0306f4c:	eb000ed3 	bl	a030aaa0 <printf>
+a0306f50:	ea000003 	b	a0306f64 <do_reload+0x1a4>
+a0306f54:	e3a00001 	mov	r0, #1	; 0x1
+a0306f58:	e51b1010 	ldr	r1, [fp, -#16]
+a0306f5c:	eb000130 	bl	a0307424 <printerror>
+a0306f60:	ea000005 	b	a0306f7c <do_reload+0x1bc>
+a0306f64:	e51b0014 	ldr	r0, [fp, -#20]
+a0306f68:	e51b1018 	ldr	r1, [fp, -#24]
+a0306f6c:	e51b201c 	ldr	r2, [fp, -#28]
+a0306f70:	eb00126b 	bl	a030b924 <MyMemCpy>
+a0306f74:	e59f002c 	ldr	r0, [pc, #44]	; a0306fa8 <do_reload+0x1e8>
+a0306f78:	eb000ec8 	bl	a030aaa0 <printf>
+a0306f7c:	e3a00000 	mov	r0, #0	; 0x0
+a0306f80:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0306f84:	a030d180 	eorges	sp, r0, r0, lsl #3
+a0306f88:	a030fd20 	eorges	pc, r0, r0, lsr #26
+a0306f8c:	a030d1a0 	eorges	sp, r0, r0, lsr #3
+a0306f90:	a030d188 	eorges	sp, r0, r8, lsl #3
+a0306f94:	a030d1bc 	ldrgeh	sp, [r0], -ip
+a0306f98:	a030d190 	mlages	r0, r0, r1, sp
+a0306f9c:	a030d1e0 	eorges	sp, r0, r0, ror #3
+a0306fa0:	a030d198 	mlages	r0, r8, r1, sp
+a0306fa4:	a030d1fc 	ldrgesh	sp, [r0], -ip
+a0306fa8:	a030d218 	eorges	sp, r0, r8, lsl r2
+
+a0306fac <do_md5sum>:
+a0306fac:	e1a0c00d 	mov	ip, sp
+a0306fb0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0306fb4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0306fb8:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0306fbc:	e50b0010 	str	r0, [fp, -#16]
+a0306fc0:	e50b1014 	str	r1, [fp, -#20]
+a0306fc4:	e50b2018 	str	r2, [fp, -#24]
+a0306fc8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0306fcc <SetDownloadSpeed>:
+a0306fcc:	e1a0c00d 	mov	ip, sp
+a0306fd0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0306fd4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0306fd8:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0306fdc:	e50b0010 	str	r0, [fp, -#16]
+a0306fe0:	e50b1014 	str	r1, [fp, -#20]
+a0306fe4:	e51b3010 	ldr	r3, [fp, -#16]
+a0306fe8:	e3530001 	cmp	r3, #1	; 0x1
+a0306fec:	ca000002 	bgt	a0306ffc <SetDownloadSpeed+0x30>
+a0306ff0:	e3e03001 	mvn	r3, #1	; 0x1
+a0306ff4:	e50b3018 	str	r3, [fp, -#24]
+a0306ff8:	ea0000cf 	b	a030733c <SetDownloadSpeed+0x370>
+a0306ffc:	e3a02004 	mov	r2, #4	; 0x4
+a0307000:	e51b3014 	ldr	r3, [fp, -#20]
+a0307004:	e0823003 	add	r3, r2, r3
+a0307008:	e5930000 	ldr	r0, [r3]
+a030700c:	e59f1330 	ldr	r1, [pc, #816]	; a0307344 <SetDownloadSpeed+0x378>
+a0307010:	e3a02005 	mov	r2, #5	; 0x5
+a0307014:	eb0010b7 	bl	a030b2f8 <strncmp>
+a0307018:	e1a03000 	mov	r3, r0
+a030701c:	e3530000 	cmp	r3, #0	; 0x0
+a0307020:	1a000003 	bne	a0307034 <SetDownloadSpeed+0x68>
+a0307024:	e59f231c 	ldr	r2, [pc, #796]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307028:	e3a03000 	mov	r3, #0	; 0x0
+a030702c:	e5823060 	str	r3, [r2, #96]
+a0307030:	ea0000b8 	b	a0307318 <SetDownloadSpeed+0x34c>
+a0307034:	e3a02004 	mov	r2, #4	; 0x4
+a0307038:	e51b3014 	ldr	r3, [fp, -#20]
+a030703c:	e0823003 	add	r3, r2, r3
+a0307040:	e5930000 	ldr	r0, [r3]
+a0307044:	e59f1300 	ldr	r1, [pc, #768]	; a030734c <SetDownloadSpeed+0x380>
+a0307048:	e3a02004 	mov	r2, #4	; 0x4
+a030704c:	eb0010a9 	bl	a030b2f8 <strncmp>
+a0307050:	e1a03000 	mov	r3, r0
+a0307054:	e3530000 	cmp	r3, #0	; 0x0
+a0307058:	1a000003 	bne	a030706c <SetDownloadSpeed+0xa0>
+a030705c:	e59f22e4 	ldr	r2, [pc, #740]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307060:	e3a03000 	mov	r3, #0	; 0x0
+a0307064:	e5823060 	str	r3, [r2, #96]
+a0307068:	ea0000aa 	b	a0307318 <SetDownloadSpeed+0x34c>
+a030706c:	e3a02004 	mov	r2, #4	; 0x4
+a0307070:	e51b3014 	ldr	r3, [fp, -#20]
+a0307074:	e0823003 	add	r3, r2, r3
+a0307078:	e5930000 	ldr	r0, [r3]
+a030707c:	e59f12cc 	ldr	r1, [pc, #716]	; a0307350 <SetDownloadSpeed+0x384>
+a0307080:	e3a02005 	mov	r2, #5	; 0x5
+a0307084:	eb00109b 	bl	a030b2f8 <strncmp>
+a0307088:	e1a03000 	mov	r3, r0
+a030708c:	e3530000 	cmp	r3, #0	; 0x0
+a0307090:	1a000003 	bne	a03070a4 <SetDownloadSpeed+0xd8>
+a0307094:	e59f22ac 	ldr	r2, [pc, #684]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307098:	e3a03003 	mov	r3, #3	; 0x3
+a030709c:	e5823060 	str	r3, [r2, #96]
+a03070a0:	ea00009c 	b	a0307318 <SetDownloadSpeed+0x34c>
+a03070a4:	e3a02004 	mov	r2, #4	; 0x4
+a03070a8:	e51b3014 	ldr	r3, [fp, -#20]
+a03070ac:	e0823003 	add	r3, r2, r3
+a03070b0:	e5930000 	ldr	r0, [r3]
+a03070b4:	e59f1298 	ldr	r1, [pc, #664]	; a0307354 <SetDownloadSpeed+0x388>
+a03070b8:	e3a02004 	mov	r2, #4	; 0x4
+a03070bc:	eb00108d 	bl	a030b2f8 <strncmp>
+a03070c0:	e1a03000 	mov	r3, r0
+a03070c4:	e3530000 	cmp	r3, #0	; 0x0
+a03070c8:	1a000003 	bne	a03070dc <SetDownloadSpeed+0x110>
+a03070cc:	e59f2274 	ldr	r2, [pc, #628]	; a0307348 <SetDownloadSpeed+0x37c>
+a03070d0:	e3a03003 	mov	r3, #3	; 0x3
+a03070d4:	e5823060 	str	r3, [r2, #96]
+a03070d8:	ea00008e 	b	a0307318 <SetDownloadSpeed+0x34c>
+a03070dc:	e3a02004 	mov	r2, #4	; 0x4
+a03070e0:	e51b3014 	ldr	r3, [fp, -#20]
+a03070e4:	e0823003 	add	r3, r2, r3
+a03070e8:	e5930000 	ldr	r0, [r3]
+a03070ec:	e59f1264 	ldr	r1, [pc, #612]	; a0307358 <SetDownloadSpeed+0x38c>
+a03070f0:	e3a02006 	mov	r2, #6	; 0x6
+a03070f4:	eb00107f 	bl	a030b2f8 <strncmp>
+a03070f8:	e1a03000 	mov	r3, r0
+a03070fc:	e3530000 	cmp	r3, #0	; 0x0
+a0307100:	1a000003 	bne	a0307114 <SetDownloadSpeed+0x148>
+a0307104:	e59f223c 	ldr	r2, [pc, #572]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307108:	e3a03004 	mov	r3, #4	; 0x4
+a030710c:	e5823060 	str	r3, [r2, #96]
+a0307110:	ea000080 	b	a0307318 <SetDownloadSpeed+0x34c>
+a0307114:	e3a02004 	mov	r2, #4	; 0x4
+a0307118:	e51b3014 	ldr	r3, [fp, -#20]
+a030711c:	e0823003 	add	r3, r2, r3
+a0307120:	e5930000 	ldr	r0, [r3]
+a0307124:	e59f1230 	ldr	r1, [pc, #560]	; a030735c <SetDownloadSpeed+0x390>
+a0307128:	e3a02005 	mov	r2, #5	; 0x5
+a030712c:	eb001071 	bl	a030b2f8 <strncmp>
+a0307130:	e1a03000 	mov	r3, r0
+a0307134:	e3530000 	cmp	r3, #0	; 0x0
+a0307138:	1a000003 	bne	a030714c <SetDownloadSpeed+0x180>
+a030713c:	e59f2204 	ldr	r2, [pc, #516]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307140:	e3a03004 	mov	r3, #4	; 0x4
+a0307144:	e5823060 	str	r3, [r2, #96]
+a0307148:	ea000072 	b	a0307318 <SetDownloadSpeed+0x34c>
+a030714c:	e3a02004 	mov	r2, #4	; 0x4
+a0307150:	e51b3014 	ldr	r3, [fp, -#20]
+a0307154:	e0823003 	add	r3, r2, r3
+a0307158:	e5930000 	ldr	r0, [r3]
+a030715c:	e59f11fc 	ldr	r1, [pc, #508]	; a0307360 <SetDownloadSpeed+0x394>
+a0307160:	e3a02007 	mov	r2, #7	; 0x7
+a0307164:	eb001063 	bl	a030b2f8 <strncmp>
+a0307168:	e1a03000 	mov	r3, r0
+a030716c:	e3530000 	cmp	r3, #0	; 0x0
+a0307170:	1a000003 	bne	a0307184 <SetDownloadSpeed+0x1b8>
+a0307174:	e59f21cc 	ldr	r2, [pc, #460]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307178:	e3a03005 	mov	r3, #5	; 0x5
+a030717c:	e5823060 	str	r3, [r2, #96]
+a0307180:	ea000064 	b	a0307318 <SetDownloadSpeed+0x34c>
+a0307184:	e3a02004 	mov	r2, #4	; 0x4
+a0307188:	e51b3014 	ldr	r3, [fp, -#20]
+a030718c:	e0823003 	add	r3, r2, r3
+a0307190:	e5930000 	ldr	r0, [r3]
+a0307194:	e59f11c8 	ldr	r1, [pc, #456]	; a0307364 <SetDownloadSpeed+0x398>
+a0307198:	e3a02005 	mov	r2, #5	; 0x5
+a030719c:	eb001055 	bl	a030b2f8 <strncmp>
+a03071a0:	e1a03000 	mov	r3, r0
+a03071a4:	e3530000 	cmp	r3, #0	; 0x0
+a03071a8:	1a000003 	bne	a03071bc <SetDownloadSpeed+0x1f0>
+a03071ac:	e59f2194 	ldr	r2, [pc, #404]	; a0307348 <SetDownloadSpeed+0x37c>
+a03071b0:	e3a03005 	mov	r3, #5	; 0x5
+a03071b4:	e5823060 	str	r3, [r2, #96]
+a03071b8:	ea000056 	b	a0307318 <SetDownloadSpeed+0x34c>
+a03071bc:	e3a02004 	mov	r2, #4	; 0x4
+a03071c0:	e51b3014 	ldr	r3, [fp, -#20]
+a03071c4:	e0823003 	add	r3, r2, r3
+a03071c8:	e5930000 	ldr	r0, [r3]
+a03071cc:	e59f1194 	ldr	r1, [pc, #404]	; a0307368 <SetDownloadSpeed+0x39c>
+a03071d0:	e3a02006 	mov	r2, #6	; 0x6
+a03071d4:	eb001047 	bl	a030b2f8 <strncmp>
+a03071d8:	e1a03000 	mov	r3, r0
+a03071dc:	e3530000 	cmp	r3, #0	; 0x0
+a03071e0:	1a000003 	bne	a03071f4 <SetDownloadSpeed+0x228>
+a03071e4:	e59f215c 	ldr	r2, [pc, #348]	; a0307348 <SetDownloadSpeed+0x37c>
+a03071e8:	e3a03006 	mov	r3, #6	; 0x6
+a03071ec:	e5823060 	str	r3, [r2, #96]
+a03071f0:	ea000048 	b	a0307318 <SetDownloadSpeed+0x34c>
+a03071f4:	e3a02004 	mov	r2, #4	; 0x4
+a03071f8:	e51b3014 	ldr	r3, [fp, -#20]
+a03071fc:	e0823003 	add	r3, r2, r3
+a0307200:	e5930000 	ldr	r0, [r3]
+a0307204:	e59f1160 	ldr	r1, [pc, #352]	; a030736c <SetDownloadSpeed+0x3a0>
+a0307208:	e3a02005 	mov	r2, #5	; 0x5
+a030720c:	eb001039 	bl	a030b2f8 <strncmp>
+a0307210:	e1a03000 	mov	r3, r0
+a0307214:	e3530000 	cmp	r3, #0	; 0x0
+a0307218:	1a000003 	bne	a030722c <SetDownloadSpeed+0x260>
+a030721c:	e59f2124 	ldr	r2, [pc, #292]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307220:	e3a03006 	mov	r3, #6	; 0x6
+a0307224:	e5823060 	str	r3, [r2, #96]
+a0307228:	ea00003a 	b	a0307318 <SetDownloadSpeed+0x34c>
+a030722c:	e3a02004 	mov	r2, #4	; 0x4
+a0307230:	e51b3014 	ldr	r3, [fp, -#20]
+a0307234:	e0823003 	add	r3, r2, r3
+a0307238:	e5930000 	ldr	r0, [r3]
+a030723c:	e59f112c 	ldr	r1, [pc, #300]	; a0307370 <SetDownloadSpeed+0x3a4>
+a0307240:	e3a02007 	mov	r2, #7	; 0x7
+a0307244:	eb00102b 	bl	a030b2f8 <strncmp>
+a0307248:	e1a03000 	mov	r3, r0
+a030724c:	e3530000 	cmp	r3, #0	; 0x0
+a0307250:	1a000003 	bne	a0307264 <SetDownloadSpeed+0x298>
+a0307254:	e59f20ec 	ldr	r2, [pc, #236]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307258:	e3a03007 	mov	r3, #7	; 0x7
+a030725c:	e5823060 	str	r3, [r2, #96]
+a0307260:	ea00002c 	b	a0307318 <SetDownloadSpeed+0x34c>
+a0307264:	e3a02004 	mov	r2, #4	; 0x4
+a0307268:	e51b3014 	ldr	r3, [fp, -#20]
+a030726c:	e0823003 	add	r3, r2, r3
+a0307270:	e5930000 	ldr	r0, [r3]
+a0307274:	e59f10f8 	ldr	r1, [pc, #248]	; a0307374 <SetDownloadSpeed+0x3a8>
+a0307278:	e3a02006 	mov	r2, #6	; 0x6
+a030727c:	eb00101d 	bl	a030b2f8 <strncmp>
+a0307280:	e1a03000 	mov	r3, r0
+a0307284:	e3530000 	cmp	r3, #0	; 0x0
+a0307288:	1a000003 	bne	a030729c <SetDownloadSpeed+0x2d0>
+a030728c:	e59f20b4 	ldr	r2, [pc, #180]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307290:	e3a03007 	mov	r3, #7	; 0x7
+a0307294:	e5823060 	str	r3, [r2, #96]
+a0307298:	ea00001e 	b	a0307318 <SetDownloadSpeed+0x34c>
+a030729c:	e3a02004 	mov	r2, #4	; 0x4
+a03072a0:	e51b3014 	ldr	r3, [fp, -#20]
+a03072a4:	e0823003 	add	r3, r2, r3
+a03072a8:	e5930000 	ldr	r0, [r3]
+a03072ac:	e59f10c4 	ldr	r1, [pc, #196]	; a0307378 <SetDownloadSpeed+0x3ac>
+a03072b0:	e3a02007 	mov	r2, #7	; 0x7
+a03072b4:	eb00100f 	bl	a030b2f8 <strncmp>
+a03072b8:	e1a03000 	mov	r3, r0
+a03072bc:	e3530000 	cmp	r3, #0	; 0x0
+a03072c0:	1a000003 	bne	a03072d4 <SetDownloadSpeed+0x308>
+a03072c4:	e59f207c 	ldr	r2, [pc, #124]	; a0307348 <SetDownloadSpeed+0x37c>
+a03072c8:	e3a03008 	mov	r3, #8	; 0x8
+a03072cc:	e5823060 	str	r3, [r2, #96]
+a03072d0:	ea000010 	b	a0307318 <SetDownloadSpeed+0x34c>
+a03072d4:	e3a02004 	mov	r2, #4	; 0x4
+a03072d8:	e51b3014 	ldr	r3, [fp, -#20]
+a03072dc:	e0823003 	add	r3, r2, r3
+a03072e0:	e5930000 	ldr	r0, [r3]
+a03072e4:	e59f1090 	ldr	r1, [pc, #144]	; a030737c <SetDownloadSpeed+0x3b0>
+a03072e8:	e3a02006 	mov	r2, #6	; 0x6
+a03072ec:	eb001001 	bl	a030b2f8 <strncmp>
+a03072f0:	e1a03000 	mov	r3, r0
+a03072f4:	e3530000 	cmp	r3, #0	; 0x0
+a03072f8:	1a000003 	bne	a030730c <SetDownloadSpeed+0x340>
+a03072fc:	e59f2044 	ldr	r2, [pc, #68]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307300:	e3a03008 	mov	r3, #8	; 0x8
+a0307304:	e5823060 	str	r3, [r2, #96]
+a0307308:	ea000002 	b	a0307318 <SetDownloadSpeed+0x34c>
+a030730c:	e3e03000 	mvn	r3, #0	; 0x0
+a0307310:	e50b3018 	str	r3, [fp, -#24]
+a0307314:	ea000008 	b	a030733c <SetDownloadSpeed+0x370>
+a0307318:	e59f0060 	ldr	r0, [pc, #96]	; a0307380 <SetDownloadSpeed+0x3b4>
+a030731c:	eb000ddf 	bl	a030aaa0 <printf>
+a0307320:	e59f3020 	ldr	r3, [pc, #32]	; a0307348 <SetDownloadSpeed+0x37c>
+a0307324:	e5930060 	ldr	r0, [r3, #96]
+a0307328:	ebfffe11 	bl	a0306b74 <PrintSerialSpeed>
+a030732c:	e59f0050 	ldr	r0, [pc, #80]	; a0307384 <SetDownloadSpeed+0x3b8>
+a0307330:	eb000dda 	bl	a030aaa0 <printf>
+a0307334:	e3a03000 	mov	r3, #0	; 0x0
+a0307338:	e50b3018 	str	r3, [fp, -#24]
+a030733c:	e51b0018 	ldr	r0, [fp, -#24]
+a0307340:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0307344:	a030d220 	eorges	sp, r0, r0, lsr #4
+a0307348:	a030fd20 	eorges	pc, r0, r0, lsr #26
+a030734c:	a030d228 	eorges	sp, r0, r8, lsr #4
+a0307350:	a030d22c 	eorges	sp, r0, ip, lsr #4
+a0307354:	a030d234 	eorges	sp, r0, r4, lsr r2
+a0307358:	a030d238 	eorges	sp, r0, r8, lsr r2
+a030735c:	a030d240 	eorges	sp, r0, r0, asr #4
+a0307360:	a030d248 	eorges	sp, r0, r8, asr #4
+a0307364:	a030d250 	eorges	sp, r0, r0, asr r2
+a0307368:	a030d258 	eorges	sp, r0, r8, asr r2
+a030736c:	a030d260 	eorges	sp, r0, r0, ror #4
+a0307370:	a030d268 	eorges	sp, r0, r8, ror #4
+a0307374:	a030d270 	eorges	sp, r0, r0, ror r2
+a0307378:	a030d278 	eorges	sp, r0, r8, ror r2
+a030737c:	a030d280 	eorges	sp, r0, r0, lsl #5
+a0307380:	a030d288 	eorges	sp, r0, r8, lsl #5
+a0307384:	a030d2a0 	eorges	sp, r0, r0, lsr #5
+
+a0307388 <strerror>:
+a0307388:	e1a0c00d 	mov	ip, sp
+a030738c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307390:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307394:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a0307398:	e50b0010 	str	r0, [fp, -#16]
+a030739c:	e3a0300f 	mov	r3, #15	; 0xf
+a03073a0:	e50b3014 	str	r3, [fp, -#20]
+a03073a4:	e51b3010 	ldr	r3, [fp, -#16]
+a03073a8:	e3530000 	cmp	r3, #0	; 0x0
+a03073ac:	aa000002 	bge	a03073bc <strerror+0x34>
+a03073b0:	e51b3010 	ldr	r3, [fp, -#16]
+a03073b4:	e2633000 	rsb	r3, r3, #0	; 0x0
+a03073b8:	e50b3010 	str	r3, [fp, -#16]
+a03073bc:	e51b2010 	ldr	r2, [fp, -#16]
+a03073c0:	e51b3014 	ldr	r3, [fp, -#20]
+a03073c4:	e1520003 	cmp	r2, r3
+a03073c8:	ba000003 	blt	a03073dc <strerror+0x54>
+a03073cc:	e59f3020 	ldr	r3, [pc, #32]	; a03073f4 <strerror+0x6c>
+a03073d0:	e5933000 	ldr	r3, [r3]
+a03073d4:	e50b3018 	str	r3, [fp, -#24]
+a03073d8:	ea000003 	b	a03073ec <strerror+0x64>
+a03073dc:	e59f3014 	ldr	r3, [pc, #20]	; a03073f8 <strerror+0x70>
+a03073e0:	e51b2010 	ldr	r2, [fp, -#16]
+a03073e4:	e7933102 	ldr	r3, [r3, r2, lsl #2]
+a03073e8:	e50b3018 	str	r3, [fp, -#24]
+a03073ec:	e51b0018 	ldr	r0, [fp, -#24]
+a03073f0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03073f4:	a030dc74 	eorges	sp, r0, r4, ror ip
+a03073f8:	a030dc38 	eorges	sp, r0, r8, lsr ip
+
+a03073fc <printerrprefix>:
+a03073fc:	e1a0c00d 	mov	ip, sp
+a0307400:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307404:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307408:	e59f300c 	ldr	r3, [pc, #12]	; a030741c <printerrprefix+0x20>
+a030740c:	e59f000c 	ldr	r0, [pc, #12]	; a0307420 <printerrprefix+0x24>
+a0307410:	e5931000 	ldr	r1, [r3]
+a0307414:	eb000da1 	bl	a030aaa0 <printf>
+a0307418:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030741c:	a030dc78 	eorges	sp, r0, r8, ror ip
+a0307420:	a030d3d4 	ldrgesb	sp, [r0], -r4
+
+a0307424 <printerror>:
+a0307424:	e1a0c00d 	mov	ip, sp
+a0307428:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030742c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307430:	e24dd008 	sub	sp, sp, #8	; 0x8
+a0307434:	e50b0010 	str	r0, [fp, -#16]
+a0307438:	e50b1014 	str	r1, [fp, -#20]
+a030743c:	e51b0010 	ldr	r0, [fp, -#16]
+a0307440:	ebffffd0 	bl	a0307388 <strerror>
+a0307444:	e1a02000 	mov	r2, r0
+a0307448:	e59f3030 	ldr	r3, [pc, #48]	; a0307480 <printerror+0x5c>
+a030744c:	e59f0030 	ldr	r0, [pc, #48]	; a0307484 <printerror+0x60>
+a0307450:	e5931000 	ldr	r1, [r3]
+a0307454:	eb000d91 	bl	a030aaa0 <printf>
+a0307458:	e51b3014 	ldr	r3, [fp, -#20]
+a030745c:	e3530000 	cmp	r3, #0	; 0x0
+a0307460:	0a000003 	beq	a0307474 <printerror+0x50>
+a0307464:	e59f001c 	ldr	r0, [pc, #28]	; a0307488 <printerror+0x64>
+a0307468:	e51b1014 	ldr	r1, [fp, -#20]
+a030746c:	eb000d8b 	bl	a030aaa0 <printf>
+a0307470:	ea000001 	b	a030747c <printerror+0x58>
+a0307474:	e59f0010 	ldr	r0, [pc, #16]	; a030748c <printerror+0x68>
+a0307478:	eb000d88 	bl	a030aaa0 <printf>
+a030747c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0307480:	a030dc78 	eorges	sp, r0, r8, ror ip
+a0307484:	a030d3d8 	ldrgesb	sp, [r0], -r8
+a0307488:	a030d3e0 	eorges	sp, r0, r0, ror #7
+a030748c:	a030d3e8 	eorges	sp, r0, r8, ror #7
+
+a0307490 <ether_init>:
+a0307490:	e1a0c00d 	mov	ip, sp
+a0307494:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307498:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030749c:	e59f3030 	ldr	r3, [pc, #48]	; a03074d4 <ether_init+0x44>
+a03074a0:	e5933000 	ldr	r3, [r3]
+a03074a4:	e3530000 	cmp	r3, #0	; 0x0
+a03074a8:	1a000000 	bne	a03074b0 <ether_init+0x20>
+a03074ac:	ea000007 	b	a03074d0 <ether_init+0x40>
+a03074b0:	e59f301c 	ldr	r3, [pc, #28]	; a03074d4 <ether_init+0x44>
+a03074b4:	e5932000 	ldr	r2, [r3]
+a03074b8:	e59f3014 	ldr	r3, [pc, #20]	; a03074d4 <ether_init+0x44>
+a03074bc:	e5933000 	ldr	r3, [r3]
+a03074c0:	e5922000 	ldr	r2, [r2]
+a03074c4:	e5930014 	ldr	r0, [r3, #20]
+a03074c8:	e1a0e00f 	mov	lr, pc
+a03074cc:	e1a0f002 	mov	pc, r2
+a03074d0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03074d4:	a0310380 	eorges	r0, r1, r0, lsl #7
+
+a03074d8 <ether_rcv>:
+a03074d8:	e1a0c00d 	mov	ip, sp
+a03074dc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03074e0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03074e4:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a03074e8:	e50b0010 	str	r0, [fp, -#16]
+a03074ec:	e50b1014 	str	r1, [fp, -#20]
+a03074f0:	e59f3040 	ldr	r3, [pc, #64]	; a0307538 <ether_rcv+0x60>
+a03074f4:	e5933000 	ldr	r3, [r3]
+a03074f8:	e3530000 	cmp	r3, #0	; 0x0
+a03074fc:	1a000002 	bne	a030750c <ether_rcv+0x34>
+a0307500:	e3e03000 	mvn	r3, #0	; 0x0
+a0307504:	e50b3018 	str	r3, [fp, -#24]
+a0307508:	ea000008 	b	a0307530 <ether_rcv+0x58>
+a030750c:	e59f3024 	ldr	r3, [pc, #36]	; a0307538 <ether_rcv+0x60>
+a0307510:	e5933000 	ldr	r3, [r3]
+a0307514:	e5933004 	ldr	r3, [r3, #4]
+a0307518:	e51b0010 	ldr	r0, [fp, -#16]
+a030751c:	e51b1014 	ldr	r1, [fp, -#20]
+a0307520:	e1a0e00f 	mov	lr, pc
+a0307524:	e1a0f003 	mov	pc, r3
+a0307528:	e1a03000 	mov	r3, r0
+a030752c:	e50b3018 	str	r3, [fp, -#24]
+a0307530:	e51b0018 	ldr	r0, [fp, -#24]
+a0307534:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0307538:	a0310380 	eorges	r0, r1, r0, lsl #7
+
+a030753c <ether_snd>:
+a030753c:	e1a0c00d 	mov	ip, sp
+a0307540:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307544:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307548:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a030754c:	e50b0010 	str	r0, [fp, -#16]
+a0307550:	e50b1014 	str	r1, [fp, -#20]
+a0307554:	e59f3040 	ldr	r3, [pc, #64]	; a030759c <ether_snd+0x60>
+a0307558:	e5933000 	ldr	r3, [r3]
+a030755c:	e3530000 	cmp	r3, #0	; 0x0
+a0307560:	1a000002 	bne	a0307570 <ether_snd+0x34>
+a0307564:	e3e03000 	mvn	r3, #0	; 0x0
+a0307568:	e50b3018 	str	r3, [fp, -#24]
+a030756c:	ea000008 	b	a0307594 <ether_snd+0x58>
+a0307570:	e59f3024 	ldr	r3, [pc, #36]	; a030759c <ether_snd+0x60>
+a0307574:	e5933000 	ldr	r3, [r3]
+a0307578:	e5933008 	ldr	r3, [r3, #8]
+a030757c:	e51b0010 	ldr	r0, [fp, -#16]
+a0307580:	e51b1014 	ldr	r1, [fp, -#20]
+a0307584:	e1a0e00f 	mov	lr, pc
+a0307588:	e1a0f003 	mov	pc, r3
+a030758c:	e1a03000 	mov	r3, r0
+a0307590:	e50b3018 	str	r3, [fp, -#24]
+a0307594:	e51b0018 	ldr	r0, [fp, -#24]
+a0307598:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030759c:	a0310380 	eorges	r0, r1, r0, lsl #7
+
+a03075a0 <ether_get_addr>:
+a03075a0:	e1a0c00d 	mov	ip, sp
+a03075a4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03075a8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03075ac:	e24dd008 	sub	sp, sp, #8	; 0x8
+a03075b0:	e50b0010 	str	r0, [fp, -#16]
+a03075b4:	e59f303c 	ldr	r3, [pc, #60]	; a03075f8 <ether_get_addr+0x58>
+a03075b8:	e5933000 	ldr	r3, [r3]
+a03075bc:	e3530000 	cmp	r3, #0	; 0x0
+a03075c0:	1a000002 	bne	a03075d0 <ether_get_addr+0x30>
+a03075c4:	e3e03000 	mvn	r3, #0	; 0x0
+a03075c8:	e50b3014 	str	r3, [fp, -#20]
+a03075cc:	ea000007 	b	a03075f0 <ether_get_addr+0x50>
+a03075d0:	e59f3020 	ldr	r3, [pc, #32]	; a03075f8 <ether_get_addr+0x58>
+a03075d4:	e5933000 	ldr	r3, [r3]
+a03075d8:	e5933010 	ldr	r3, [r3, #16]
+a03075dc:	e51b0010 	ldr	r0, [fp, -#16]
+a03075e0:	e1a0e00f 	mov	lr, pc
+a03075e4:	e1a0f003 	mov	pc, r3
+a03075e8:	e1a03000 	mov	r3, r0
+a03075ec:	e50b3014 	str	r3, [fp, -#20]
+a03075f0:	e51b0014 	ldr	r0, [fp, -#20]
+a03075f4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03075f8:	a0310380 	eorges	r0, r1, r0, lsl #7
+
+a03075fc <ether_set_addr>:
+a03075fc:	e1a0c00d 	mov	ip, sp
+a0307600:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307604:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307608:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030760c:	e50b0010 	str	r0, [fp, -#16]
+a0307610:	e59f304c 	ldr	r3, [pc, #76]	; a0307664 <ether_set_addr+0x68>
+a0307614:	e5933000 	ldr	r3, [r3]
+a0307618:	e3530000 	cmp	r3, #0	; 0x0
+a030761c:	1a000002 	bne	a030762c <ether_set_addr+0x30>
+a0307620:	e3e03000 	mvn	r3, #0	; 0x0
+a0307624:	e50b3014 	str	r3, [fp, -#20]
+a0307628:	ea00000b 	b	a030765c <ether_set_addr+0x60>
+a030762c:	e59f0034 	ldr	r0, [pc, #52]	; a0307668 <ether_set_addr+0x6c>
+a0307630:	e51b1010 	ldr	r1, [fp, -#16]
+a0307634:	e3a02006 	mov	r2, #6	; 0x6
+a0307638:	eb000862 	bl	a03097c8 <memcpy>
+a030763c:	e59f3020 	ldr	r3, [pc, #32]	; a0307664 <ether_set_addr+0x68>
+a0307640:	e5933000 	ldr	r3, [r3]
+a0307644:	e593300c 	ldr	r3, [r3, #12]
+a0307648:	e51b0010 	ldr	r0, [fp, -#16]
+a030764c:	e1a0e00f 	mov	lr, pc
+a0307650:	e1a0f003 	mov	pc, r3
+a0307654:	e1a03000 	mov	r3, r0
+a0307658:	e50b3014 	str	r3, [fp, -#20]
+a030765c:	e51b0014 	ldr	r0, [fp, -#20]
+a0307660:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0307664:	a0310380 	eorges	r0, r1, r0, lsl #7
+a0307668:	a030dc7c 	eorges	sp, r0, ip, ror ip
+
+a030766c <ether_get_name>:
+a030766c:	e1a0c00d 	mov	ip, sp
+a0307670:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307674:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307678:	e24dd004 	sub	sp, sp, #4	; 0x4
+a030767c:	e59f302c 	ldr	r3, [pc, #44]	; a03076b0 <ether_get_name+0x44>
+a0307680:	e5933000 	ldr	r3, [r3]
+a0307684:	e3530000 	cmp	r3, #0	; 0x0
+a0307688:	1a000002 	bne	a0307698 <ether_get_name+0x2c>
+a030768c:	e3e03000 	mvn	r3, #0	; 0x0
+a0307690:	e50b3010 	str	r3, [fp, -#16]
+a0307694:	ea000003 	b	a03076a8 <ether_get_name+0x3c>
+a0307698:	e59f3010 	ldr	r3, [pc, #16]	; a03076b0 <ether_get_name+0x44>
+a030769c:	e5933000 	ldr	r3, [r3]
+a03076a0:	e5933018 	ldr	r3, [r3, #24]
+a03076a4:	e50b3010 	str	r3, [fp, -#16]
+a03076a8:	e51b0010 	ldr	r0, [fp, -#16]
+a03076ac:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03076b0:	a0310380 	eorges	r0, r1, r0, lsl #7
+
+a03076b4 <enable_icache>:
+a03076b4:	e1a0c00d 	mov	ip, sp
+a03076b8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03076bc:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03076c0:	ee113f10 	mrc	15, 0, r3, cr1, cr0, {0}
+a03076c4:	e3833a01 	orr	r3, r3, #4096	; 0x1000
+a03076c8:	ee013f10 	mcr	15, 0, r3, cr1, cr0, {0}
+a03076cc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03076d0 <disable_icache>:
+a03076d0:	e1a0c00d 	mov	ip, sp
+a03076d4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03076d8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03076dc:	ee113f10 	mrc	15, 0, r3, cr1, cr0, {0}
+a03076e0:	e3c33a01 	bic	r3, r3, #4096	; 0x1000
+a03076e4:	ee013f10 	mcr	15, 0, r3, cr1, cr0, {0}
+a03076e8:	ee073f15 	mcr	15, 0, r3, cr7, cr5, {0}
+a03076ec:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03076f0 <call_funcs>:
+a03076f0:	e1a0c00d 	mov	ip, sp
+a03076f4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03076f8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03076fc:	e24dd014 	sub	sp, sp, #20	; 0x14
+a0307700:	e50b0010 	str	r0, [fp, -#16]
+a0307704:	e50b1014 	str	r1, [fp, -#20]
+a0307708:	e50b2018 	str	r2, [fp, -#24]
+a030770c:	e50b301c 	str	r3, [fp, -#28]
+a0307710:	e51b3010 	ldr	r3, [fp, -#16]
+a0307714:	e50b3020 	str	r3, [fp, -#32]
+a0307718:	e51b2020 	ldr	r2, [fp, -#32]
+a030771c:	e51b3014 	ldr	r3, [fp, -#20]
+a0307720:	e1520003 	cmp	r2, r3
+a0307724:	1a000000 	bne	a030772c <call_funcs+0x3c>
+a0307728:	ea000015 	b	a0307784 <call_funcs+0x94>
+a030772c:	e51b3020 	ldr	r3, [fp, -#32]
+a0307730:	e5932000 	ldr	r2, [r3]
+a0307734:	e51b3018 	ldr	r3, [fp, -#24]
+a0307738:	e1520003 	cmp	r2, r3
+a030773c:	0a000003 	beq	a0307750 <call_funcs+0x60>
+a0307740:	e3a00003 	mov	r0, #3	; 0x3
+a0307744:	e3a01000 	mov	r1, #0	; 0x0
+a0307748:	ebffff35 	bl	a0307424 <printerror>
+a030774c:	ea00000c 	b	a0307784 <call_funcs+0x94>
+a0307750:	e51b3020 	ldr	r3, [fp, -#32]
+a0307754:	e5932008 	ldr	r2, [r3, #8]
+a0307758:	e51b301c 	ldr	r3, [fp, -#28]
+a030775c:	e1520003 	cmp	r2, r3
+a0307760:	1a000003 	bne	a0307774 <call_funcs+0x84>
+a0307764:	e51b3020 	ldr	r3, [fp, -#32]
+a0307768:	e5933004 	ldr	r3, [r3, #4]
+a030776c:	e1a0e00f 	mov	lr, pc
+a0307770:	e1a0f003 	mov	pc, r3
+a0307774:	e51b3020 	ldr	r3, [fp, -#32]
+a0307778:	e283300c 	add	r3, r3, #12	; 0xc
+a030777c:	e50b3020 	str	r3, [fp, -#32]
+a0307780:	eaffffe4 	b	a0307718 <call_funcs+0x28>
+a0307784:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0307788 <init_subsystems>:
+a0307788:	e1a0c00d 	mov	ip, sp
+a030778c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307790:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307794:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0307798:	e3a03000 	mov	r3, #0	; 0x0
+a030779c:	e50b3010 	str	r3, [fp, -#16]
+a03077a0:	e51b3010 	ldr	r3, [fp, -#16]
+a03077a4:	e3530063 	cmp	r3, #99	; 0x63
+a03077a8:	da000000 	ble	a03077b0 <init_subsystems+0x28>
+a03077ac:	ea000008 	b	a03077d4 <init_subsystems+0x4c>
+a03077b0:	e59f0020 	ldr	r0, [pc, #32]	; a03077d8 <init_subsystems+0x50>
+a03077b4:	e59f1020 	ldr	r1, [pc, #32]	; a03077dc <init_subsystems+0x54>
+a03077b8:	e59f2020 	ldr	r2, [pc, #32]	; a03077e0 <init_subsystems+0x58>
+a03077bc:	e51b3010 	ldr	r3, [fp, -#16]
+a03077c0:	ebffffca 	bl	a03076f0 <call_funcs>
+a03077c4:	e51b3010 	ldr	r3, [fp, -#16]
+a03077c8:	e2833001 	add	r3, r3, #1	; 0x1
+a03077cc:	e50b3010 	str	r3, [fp, -#16]
+a03077d0:	eafffff2 	b	a03077a0 <init_subsystems+0x18>
+a03077d4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03077d8:	a030dee4 	eorges	sp, r0, r4, ror #29
+a03077dc:	a030df44 	eorges	sp, r0, r4, asr #30
+a03077e0:	496e6974 	stmmidb	lr!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+
+a03077e4 <exit_subsystems>:
+a03077e4:	e1a0c00d 	mov	ip, sp
+a03077e8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03077ec:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03077f0:	e24dd004 	sub	sp, sp, #4	; 0x4
+a03077f4:	e3a03063 	mov	r3, #99	; 0x63
+a03077f8:	e50b3010 	str	r3, [fp, -#16]
+a03077fc:	e51b3010 	ldr	r3, [fp, -#16]
+a0307800:	e3530000 	cmp	r3, #0	; 0x0
+a0307804:	aa000000 	bge	a030780c <exit_subsystems+0x28>
+a0307808:	ea000008 	b	a0307830 <exit_subsystems+0x4c>
+a030780c:	e59f0020 	ldr	r0, [pc, #32]	; a0307834 <exit_subsystems+0x50>
+a0307810:	e59f1020 	ldr	r1, [pc, #32]	; a0307838 <exit_subsystems+0x54>
+a0307814:	e59f2020 	ldr	r2, [pc, #32]	; a030783c <exit_subsystems+0x58>
+a0307818:	e51b3010 	ldr	r3, [fp, -#16]
+a030781c:	ebffffb3 	bl	a03076f0 <call_funcs>
+a0307820:	e51b3010 	ldr	r3, [fp, -#16]
+a0307824:	e2433001 	sub	r3, r3, #1	; 0x1
+a0307828:	e50b3010 	str	r3, [fp, -#16]
+a030782c:	eafffff2 	b	a03077fc <exit_subsystems+0x18>
+a0307830:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0307834:	a030df44 	eorges	sp, r0, r4, asr #30
+a0307838:	a030df50 	eorges	sp, r0, r0, asr pc
+a030783c:	45786974 	ldrmib	r6, [r8, -#2420]!
+
+a0307840 <md5_init_ctx>:
+a0307840:	e1a0c00d 	mov	ip, sp
+a0307844:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307848:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030784c:	e24dd004 	sub	sp, sp, #4	; 0x4
+a0307850:	e50b0010 	str	r0, [fp, -#16]
+a0307854:	e51b2010 	ldr	r2, [fp, -#16]
+a0307858:	e59f304c 	ldr	r3, [pc, #76]	; a03078ac <md5_init_ctx+0x6c>
+a030785c:	e5823000 	str	r3, [r2]
+a0307860:	e51b2010 	ldr	r2, [fp, -#16]
+a0307864:	e59f3044 	ldr	r3, [pc, #68]	; a03078b0 <md5_init_ctx+0x70>
+a0307868:	e5823004 	str	r3, [r2, #4]
+a030786c:	e51b2010 	ldr	r2, [fp, -#16]
+a0307870:	e59f303c 	ldr	r3, [pc, #60]	; a03078b4 <md5_init_ctx+0x74>
+a0307874:	e5823008 	str	r3, [r2, #8]
+a0307878:	e51b2010 	ldr	r2, [fp, -#16]
+a030787c:	e59f3034 	ldr	r3, [pc, #52]	; a03078b8 <md5_init_ctx+0x78>
+a0307880:	e582300c 	str	r3, [r2, #12]
+a0307884:	e51b1010 	ldr	r1, [fp, -#16]
+a0307888:	e51b2010 	ldr	r2, [fp, -#16]
+a030788c:	e3a03000 	mov	r3, #0	; 0x0
+a0307890:	e5823014 	str	r3, [r2, #20]
+a0307894:	e3a03000 	mov	r3, #0	; 0x0
+a0307898:	e5813010 	str	r3, [r1, #16]
+a030789c:	e51b2010 	ldr	r2, [fp, -#16]
+a03078a0:	e3a03000 	mov	r3, #0	; 0x0
+a03078a4:	e5823018 	str	r3, [r2, #24]
+a03078a8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03078ac:	67452301 	strvsb	r2, [r5, -r1, lsl #6]
+a03078b0:	efcdab89 	swi	0x00cdab89
+a03078b4:	98badcfe 	ldmlsia	sl!, {r1, r2, r3, r4, r5, r6, r7, sl, fp, ip, lr, pc}
+a03078b8:	10325476 	eornes	r5, r2, r6, ror r4
+
+a03078bc <md5_read_ctx>:
+a03078bc:	e1a0c00d 	mov	ip, sp
+a03078c0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03078c4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03078c8:	e24dd008 	sub	sp, sp, #8	; 0x8
+a03078cc:	e50b0010 	str	r0, [fp, -#16]
+a03078d0:	e50b1014 	str	r1, [fp, -#20]
+a03078d4:	e51b2014 	ldr	r2, [fp, -#20]
+a03078d8:	e51b3010 	ldr	r3, [fp, -#16]
+a03078dc:	e5933000 	ldr	r3, [r3]
+a03078e0:	e5823000 	str	r3, [r2]
+a03078e4:	e3a02004 	mov	r2, #4	; 0x4
+a03078e8:	e51b3014 	ldr	r3, [fp, -#20]
+a03078ec:	e0822003 	add	r2, r2, r3
+a03078f0:	e51b3010 	ldr	r3, [fp, -#16]
+a03078f4:	e5933004 	ldr	r3, [r3, #4]
+a03078f8:	e5823000 	str	r3, [r2]
+a03078fc:	e3a02008 	mov	r2, #8	; 0x8
+a0307900:	e51b3014 	ldr	r3, [fp, -#20]
+a0307904:	e0822003 	add	r2, r2, r3
+a0307908:	e51b3010 	ldr	r3, [fp, -#16]
+a030790c:	e5933008 	ldr	r3, [r3, #8]
+a0307910:	e5823000 	str	r3, [r2]
+a0307914:	e3a0200c 	mov	r2, #12	; 0xc
+a0307918:	e51b3014 	ldr	r3, [fp, -#20]
+a030791c:	e0822003 	add	r2, r2, r3
+a0307920:	e51b3010 	ldr	r3, [fp, -#16]
+a0307924:	e593300c 	ldr	r3, [r3, #12]
+a0307928:	e5823000 	str	r3, [r2]
+a030792c:	e51b3014 	ldr	r3, [fp, -#20]
+a0307930:	e1a00003 	mov	r0, r3
+a0307934:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0307938 <md5_finish_ctx>:
+a0307938:	e1a0c00d 	mov	ip, sp
+a030793c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307940:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307944:	e24dd014 	sub	sp, sp, #20	; 0x14
+a0307948:	e50b0010 	str	r0, [fp, -#16]
+a030794c:	e50b1014 	str	r1, [fp, -#20]
+a0307950:	e51b3010 	ldr	r3, [fp, -#16]
+a0307954:	e5933018 	ldr	r3, [r3, #24]
+a0307958:	e50b3018 	str	r3, [fp, -#24]
+a030795c:	e51b1010 	ldr	r1, [fp, -#16]
+a0307960:	e51b3010 	ldr	r3, [fp, -#16]
+a0307964:	e5932010 	ldr	r2, [r3, #16]
+a0307968:	e51b3018 	ldr	r3, [fp, -#24]
+a030796c:	e0823003 	add	r3, r2, r3
+a0307970:	e5813010 	str	r3, [r1, #16]
+a0307974:	e51b3010 	ldr	r3, [fp, -#16]
+a0307978:	e5932010 	ldr	r2, [r3, #16]
+a030797c:	e51b3018 	ldr	r3, [fp, -#24]
+a0307980:	e1520003 	cmp	r2, r3
+a0307984:	2a000004 	bcs	a030799c <md5_finish_ctx+0x64>
+a0307988:	e51b2010 	ldr	r2, [fp, -#16]
+a030798c:	e51b3010 	ldr	r3, [fp, -#16]
+a0307990:	e5933014 	ldr	r3, [r3, #20]
+a0307994:	e2833001 	add	r3, r3, #1	; 0x1
+a0307998:	e5823014 	str	r3, [r2, #20]
+a030799c:	e51b3018 	ldr	r3, [fp, -#24]
+a03079a0:	e3530037 	cmp	r3, #55	; 0x37
+a03079a4:	9a000003 	bls	a03079b8 <md5_finish_ctx+0x80>
+a03079a8:	e51b3018 	ldr	r3, [fp, -#24]
+a03079ac:	e2633078 	rsb	r3, r3, #120	; 0x78
+a03079b0:	e50b3020 	str	r3, [fp, -#32]
+a03079b4:	ea000002 	b	a03079c4 <md5_finish_ctx+0x8c>
+a03079b8:	e51b3018 	ldr	r3, [fp, -#24]
+a03079bc:	e2633038 	rsb	r3, r3, #56	; 0x38
+a03079c0:	e50b3020 	str	r3, [fp, -#32]
+a03079c4:	e51b3020 	ldr	r3, [fp, -#32]
+a03079c8:	e50b301c 	str	r3, [fp, -#28]
+a03079cc:	e51b2010 	ldr	r2, [fp, -#16]
+a03079d0:	e51b3018 	ldr	r3, [fp, -#24]
+a03079d4:	e0823003 	add	r3, r2, r3
+a03079d8:	e283301c 	add	r3, r3, #28	; 0x1c
+a03079dc:	e1a00003 	mov	r0, r3
+a03079e0:	e59f10ac 	ldr	r1, [pc, #172]	; a0307a94 <md5_finish_ctx+0x15c>
+a03079e4:	e51b201c 	ldr	r2, [fp, -#28]
+a03079e8:	eb000776 	bl	a03097c8 <memcpy>
+a03079ec:	e3a0101c 	mov	r1, #28	; 0x1c
+a03079f0:	e51b2018 	ldr	r2, [fp, -#24]
+a03079f4:	e51b301c 	ldr	r3, [fp, -#28]
+a03079f8:	e0822003 	add	r2, r2, r3
+a03079fc:	e51b3010 	ldr	r3, [fp, -#16]
+a0307a00:	e0823003 	add	r3, r2, r3
+a0307a04:	e0832001 	add	r2, r3, r1
+a0307a08:	e51b3010 	ldr	r3, [fp, -#16]
+a0307a0c:	e5933010 	ldr	r3, [r3, #16]
+a0307a10:	e1a03183 	mov	r3, r3, lsl #3
+a0307a14:	e5823000 	str	r3, [r2]
+a0307a18:	e3a01020 	mov	r1, #32	; 0x20
+a0307a1c:	e51b2018 	ldr	r2, [fp, -#24]
+a0307a20:	e51b301c 	ldr	r3, [fp, -#28]
+a0307a24:	e0822003 	add	r2, r2, r3
+a0307a28:	e51b3010 	ldr	r3, [fp, -#16]
+a0307a2c:	e0823003 	add	r3, r2, r3
+a0307a30:	e0831001 	add	r1, r3, r1
+a0307a34:	e51b3010 	ldr	r3, [fp, -#16]
+a0307a38:	e5933014 	ldr	r3, [r3, #20]
+a0307a3c:	e1a02183 	mov	r2, r3, lsl #3
+a0307a40:	e51b3010 	ldr	r3, [fp, -#16]
+a0307a44:	e5933010 	ldr	r3, [r3, #16]
+a0307a48:	e1a03ea3 	mov	r3, r3, lsr #29
+a0307a4c:	e1823003 	orr	r3, r2, r3
+a0307a50:	e5813000 	str	r3, [r1]
+a0307a54:	e51b3010 	ldr	r3, [fp, -#16]
+a0307a58:	e283101c 	add	r1, r3, #28	; 0x1c
+a0307a5c:	e51b2018 	ldr	r2, [fp, -#24]
+a0307a60:	e51b301c 	ldr	r3, [fp, -#28]
+a0307a64:	e0823003 	add	r3, r2, r3
+a0307a68:	e2833008 	add	r3, r3, #8	; 0x8
+a0307a6c:	e1a00001 	mov	r0, r1
+a0307a70:	e1a01003 	mov	r1, r3
+a0307a74:	e51b2010 	ldr	r2, [fp, -#16]
+a0307a78:	eb000088 	bl	a0307ca0 <md5_process_block>
+a0307a7c:	e51b0010 	ldr	r0, [fp, -#16]
+a0307a80:	e51b1014 	ldr	r1, [fp, -#20]
+a0307a84:	ebffff8c 	bl	a03078bc <md5_read_ctx>
+a0307a88:	e1a03000 	mov	r3, r0
+a0307a8c:	e1a00003 	mov	r0, r3
+a0307a90:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a0307a94:	a030d3ec 	eorges	sp, r0, ip, ror #7
+
+a0307a98 <md5_buffer>:
+a0307a98:	e1a0c00d 	mov	ip, sp
+a0307a9c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307aa0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307aa4:	e24dd0a8 	sub	sp, sp, #168	; 0xa8
+a0307aa8:	e50b0010 	str	r0, [fp, -#16]
+a0307aac:	e50b1014 	str	r1, [fp, -#20]
+a0307ab0:	e50b2018 	str	r2, [fp, -#24]
+a0307ab4:	e24b30b4 	sub	r3, fp, #180	; 0xb4
+a0307ab8:	e1a00003 	mov	r0, r3
+a0307abc:	ebffff5f 	bl	a0307840 <md5_init_ctx>
+a0307ac0:	e24b30b4 	sub	r3, fp, #180	; 0xb4
+a0307ac4:	e51b0010 	ldr	r0, [fp, -#16]
+a0307ac8:	e51b1014 	ldr	r1, [fp, -#20]
+a0307acc:	e1a02003 	mov	r2, r3
+a0307ad0:	eb000006 	bl	a0307af0 <md5_process_bytes>
+a0307ad4:	e24b30b4 	sub	r3, fp, #180	; 0xb4
+a0307ad8:	e1a00003 	mov	r0, r3
+a0307adc:	e51b1018 	ldr	r1, [fp, -#24]
+a0307ae0:	ebffff94 	bl	a0307938 <md5_finish_ctx>
+a0307ae4:	e1a03000 	mov	r3, r0
+a0307ae8:	e1a00003 	mov	r0, r3
+a0307aec:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0307af0 <md5_process_bytes>:
+a0307af0:	e1a0c00d 	mov	ip, sp
+a0307af4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a0307af8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307afc:	e24dd014 	sub	sp, sp, #20	; 0x14
+a0307b00:	e50b0010 	str	r0, [fp, -#16]
+a0307b04:	e50b1014 	str	r1, [fp, -#20]
+a0307b08:	e50b2018 	str	r2, [fp, -#24]
+a0307b0c:	e51b3018 	ldr	r3, [fp, -#24]
+a0307b10:	e5933018 	ldr	r3, [r3, #24]
+a0307b14:	e3530000 	cmp	r3, #0	; 0x0
+a0307b18:	0a000042 	beq	a0307c28 <md5_process_bytes+0x138>
+a0307b1c:	e51b3018 	ldr	r3, [fp, -#24]
+a0307b20:	e5933018 	ldr	r3, [r3, #24]
+a0307b24:	e50b301c 	str	r3, [fp, -#28]
+a0307b28:	e51b301c 	ldr	r3, [fp, -#28]
+a0307b2c:	e2632080 	rsb	r2, r3, #128	; 0x80
+a0307b30:	e51b3014 	ldr	r3, [fp, -#20]
+a0307b34:	e1520003 	cmp	r2, r3
+a0307b38:	31a03002 	movcc	r3, r2
+a0307b3c:	e50b3020 	str	r3, [fp, -#32]
+a0307b40:	e51b2018 	ldr	r2, [fp, -#24]
+a0307b44:	e51b301c 	ldr	r3, [fp, -#28]
+a0307b48:	e0823003 	add	r3, r2, r3
+a0307b4c:	e283301c 	add	r3, r3, #28	; 0x1c
+a0307b50:	e1a00003 	mov	r0, r3
+a0307b54:	e51b1010 	ldr	r1, [fp, -#16]
+a0307b58:	e51b2020 	ldr	r2, [fp, -#32]
+a0307b5c:	eb000719 	bl	a03097c8 <memcpy>
+a0307b60:	e51b1018 	ldr	r1, [fp, -#24]
+a0307b64:	e51b3018 	ldr	r3, [fp, -#24]
+a0307b68:	e5932018 	ldr	r2, [r3, #24]
+a0307b6c:	e51b3020 	ldr	r3, [fp, -#32]
+a0307b70:	e0823003 	add	r3, r2, r3
+a0307b74:	e5813018 	str	r3, [r1, #24]
+a0307b78:	e51b201c 	ldr	r2, [fp, -#28]
+a0307b7c:	e51b3020 	ldr	r3, [fp, -#32]
+a0307b80:	e0823003 	add	r3, r2, r3
+a0307b84:	e3530040 	cmp	r3, #64	; 0x40
+a0307b88:	9a00001e 	bls	a0307c08 <md5_process_bytes+0x118>
+a0307b8c:	e51b3018 	ldr	r3, [fp, -#24]
+a0307b90:	e283101c 	add	r1, r3, #28	; 0x1c
+a0307b94:	e51b201c 	ldr	r2, [fp, -#28]
+a0307b98:	e51b3020 	ldr	r3, [fp, -#32]
+a0307b9c:	e0823003 	add	r3, r2, r3
+a0307ba0:	e3c3303f 	bic	r3, r3, #63	; 0x3f
+a0307ba4:	e1a00001 	mov	r0, r1
+a0307ba8:	e1a01003 	mov	r1, r3
+a0307bac:	e51b2018 	ldr	r2, [fp, -#24]
+a0307bb0:	eb00003a 	bl	a0307ca0 <md5_process_block>
+a0307bb4:	e51b3018 	ldr	r3, [fp, -#24]
+a0307bb8:	e283001c 	add	r0, r3, #28	; 0x1c
+a0307bbc:	e51b201c 	ldr	r2, [fp, -#28]
+a0307bc0:	e51b3020 	ldr	r3, [fp, -#32]
+a0307bc4:	e0823003 	add	r3, r2, r3
+a0307bc8:	e3c3203f 	bic	r2, r3, #63	; 0x3f
+a0307bcc:	e51b3018 	ldr	r3, [fp, -#24]
+a0307bd0:	e0823003 	add	r3, r2, r3
+a0307bd4:	e283101c 	add	r1, r3, #28	; 0x1c
+a0307bd8:	e51b201c 	ldr	r2, [fp, -#28]
+a0307bdc:	e51b3020 	ldr	r3, [fp, -#32]
+a0307be0:	e0823003 	add	r3, r2, r3
+a0307be4:	e203303f 	and	r3, r3, #63	; 0x3f
+a0307be8:	e1a02003 	mov	r2, r3
+a0307bec:	eb0006f5 	bl	a03097c8 <memcpy>
+a0307bf0:	e51b1018 	ldr	r1, [fp, -#24]
+a0307bf4:	e51b201c 	ldr	r2, [fp, -#28]
+a0307bf8:	e51b3020 	ldr	r3, [fp, -#32]
+a0307bfc:	e0823003 	add	r3, r2, r3
+a0307c00:	e203303f 	and	r3, r3, #63	; 0x3f
+a0307c04:	e5813018 	str	r3, [r1, #24]
+a0307c08:	e51b2010 	ldr	r2, [fp, -#16]
+a0307c0c:	e51b3020 	ldr	r3, [fp, -#32]
+a0307c10:	e0823003 	add	r3, r2, r3
+a0307c14:	e50b3010 	str	r3, [fp, -#16]
+a0307c18:	e51b2014 	ldr	r2, [fp, -#20]
+a0307c1c:	e51b3020 	ldr	r3, [fp, -#32]
+a0307c20:	e0633002 	rsb	r3, r3, r2
+a0307c24:	e50b3014 	str	r3, [fp, -#20]
+a0307c28:	e51b3014 	ldr	r3, [fp, -#20]
+a0307c2c:	e3530040 	cmp	r3, #64	; 0x40
+a0307c30:	9a00000d 	bls	a0307c6c <md5_process_bytes+0x17c>
+a0307c34:	e51b3014 	ldr	r3, [fp, -#20]
+a0307c38:	e3c3303f 	bic	r3, r3, #63	; 0x3f
+a0307c3c:	e51b0010 	ldr	r0, [fp, -#16]
+a0307c40:	e1a01003 	mov	r1, r3
+a0307c44:	e51b2018 	ldr	r2, [fp, -#24]
+a0307c48:	eb000014 	bl	a0307ca0 <md5_process_block>
+a0307c4c:	e51b3014 	ldr	r3, [fp, -#20]
+a0307c50:	e3c3203f 	bic	r2, r3, #63	; 0x3f
+a0307c54:	e51b3010 	ldr	r3, [fp, -#16]
+a0307c58:	e0833002 	add	r3, r3, r2
+a0307c5c:	e50b3010 	str	r3, [fp, -#16]
+a0307c60:	e51b3014 	ldr	r3, [fp, -#20]
+a0307c64:	e203303f 	and	r3, r3, #63	; 0x3f
+a0307c68:	e50b3014 	str	r3, [fp, -#20]
+a0307c6c:	e51b3014 	ldr	r3, [fp, -#20]
+a0307c70:	e3530000 	cmp	r3, #0	; 0x0
+a0307c74:	0a000008 	beq	a0307c9c <md5_process_bytes+0x1ac>
+a0307c78:	e51b3018 	ldr	r3, [fp, -#24]
+a0307c7c:	e283301c 	add	r3, r3, #28	; 0x1c
+a0307c80:	e1a00003 	mov	r0, r3
+a0307c84:	e51b1010 	ldr	r1, [fp, -#16]
+a0307c88:	e51b2014 	ldr	r2, [fp, -#20]
+a0307c8c:	eb0006cd 	bl	a03097c8 <memcpy>
+a0307c90:	e51b2018 	ldr	r2, [fp, -#24]
+a0307c94:	e51b3014 	ldr	r3, [fp, -#20]
+a0307c98:	e5823018 	str	r3, [r2, #24]
+a0307c9c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a0307ca0 <md5_process_block>:
+a0307ca0:	e1a0c00d 	mov	ip, sp
+a0307ca4:	e92dd810 	stmdb	sp!, {r4, fp, ip, lr, pc}
+a0307ca8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0307cac:	e24dd07c 	sub	sp, sp, #124	; 0x7c
+a0307cb0:	e50b0014 	str	r0, [fp, -#20]
+a0307cb4:	e50b1018 	str	r1, [fp, -#24]
+a0307cb8:	e50b201c 	str	r2, [fp, -#28]
+a0307cbc:	e51b3014 	ldr	r3, [fp, -#20]
+a0307cc0:	e50b3060 	str	r3, [fp, -#96]
+a0307cc4:	e51b3018 	ldr	r3, [fp, -#24]
+a0307cc8:	e1a03123 	mov	r3, r3, lsr #2
+a0307ccc:	e50b3064 	str	r3, [fp, -#100]
+a0307cd0:	e51b3064 	ldr	r3, [fp, -#100]
+a0307cd4:	e1a02103 	mov	r2, r3, lsl #2
+a0307cd8:	e51b3060 	ldr	r3, [fp, -#96]
+a0307cdc:	e0833002 	add	r3, r3, r2
+a0307ce0:	e50b3068 	str	r3, [fp, -#104]
+a0307ce4:	e51b301c 	ldr	r3, [fp, -#28]
+a0307ce8:	e5933000 	ldr	r3, [r3]
+a0307cec:	e50b306c 	str	r3, [fp, -#108]
+a0307cf0:	e51b301c 	ldr	r3, [fp, -#28]
+a0307cf4:	e5933004 	ldr	r3, [r3, #4]
+a0307cf8:	e50b3070 	str	r3, [fp, -#112]
+a0307cfc:	e51b301c 	ldr	r3, [fp, -#28]
+a0307d00:	e5933008 	ldr	r3, [r3, #8]
+a0307d04:	e50b3074 	str	r3, [fp, -#116]
+a0307d08:	e51b301c 	ldr	r3, [fp, -#28]
+a0307d0c:	e593300c 	ldr	r3, [r3, #12]
+a0307d10:	e50b3078 	str	r3, [fp, -#120]
+a0307d14:	e51b101c 	ldr	r1, [fp, -#28]
+a0307d18:	e51b301c 	ldr	r3, [fp, -#28]
+a0307d1c:	e5932010 	ldr	r2, [r3, #16]
+a0307d20:	e51b3018 	ldr	r3, [fp, -#24]
+a0307d24:	e0823003 	add	r3, r2, r3
+a0307d28:	e5813010 	str	r3, [r1, #16]
+a0307d2c:	e51b301c 	ldr	r3, [fp, -#28]
+a0307d30:	e5932010 	ldr	r2, [r3, #16]
+a0307d34:	e51b3018 	ldr	r3, [fp, -#24]
+a0307d38:	e1520003 	cmp	r2, r3
+a0307d3c:	2a000004 	bcs	a0307d54 <md5_process_block+0xb4>
+a0307d40:	e51b201c 	ldr	r2, [fp, -#28]
+a0307d44:	e51b301c 	ldr	r3, [fp, -#28]
+a0307d48:	e5933014 	ldr	r3, [r3, #20]
+a0307d4c:	e2833001 	add	r3, r3, #1	; 0x1
+a0307d50:	e5823014 	str	r3, [r2, #20]
+a0307d54:	e1a00000 	nop			(mov r0,r0)
+a0307d58:	e51b2060 	ldr	r2, [fp, -#96]
+a0307d5c:	e51b3068 	ldr	r3, [fp, -#104]
+a0307d60:	e1520003 	cmp	r2, r3
+a0307d64:	3a000000 	bcc	a0307d6c <md5_process_block+0xcc>
+a0307d68:	ea00064b 	b	a030969c <md5_process_block+0x19fc>
+a0307d6c:	e24b305c 	sub	r3, fp, #92	; 0x5c
+a0307d70:	e50b307c 	str	r3, [fp, -#124]
+a0307d74:	e51b306c 	ldr	r3, [fp, -#108]
+a0307d78:	e50b3080 	str	r3, [fp, -#128]
+a0307d7c:	e51b3070 	ldr	r3, [fp, -#112]
+a0307d80:	e50b3084 	str	r3, [fp, -#132]
+a0307d84:	e51b3074 	ldr	r3, [fp, -#116]
+a0307d88:	e50b3088 	str	r3, [fp, -#136]
+a0307d8c:	e51b3078 	ldr	r3, [fp, -#120]
+a0307d90:	e50b308c 	str	r3, [fp, -#140]
+a0307d94:	e51b2074 	ldr	r2, [fp, -#116]
+a0307d98:	e51b3078 	ldr	r3, [fp, -#120]
+a0307d9c:	e0222003 	eor	r2, r2, r3
+a0307da0:	e51b3070 	ldr	r3, [fp, -#112]
+a0307da4:	e0022003 	and	r2, r2, r3
+a0307da8:	e51b3078 	ldr	r3, [fp, -#120]
+a0307dac:	e0220003 	eor	r0, r2, r3
+a0307db0:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a0307db4:	e5941000 	ldr	r1, [r4]
+a0307db8:	e51b3060 	ldr	r3, [fp, -#96]
+a0307dbc:	e1a02001 	mov	r2, r1
+a0307dc0:	e5933000 	ldr	r3, [r3]
+a0307dc4:	e5823000 	str	r3, [r2]
+a0307dc8:	e5923000 	ldr	r3, [r2]
+a0307dcc:	e0802003 	add	r2, r0, r3
+a0307dd0:	e51b306c 	ldr	r3, [fp, -#108]
+a0307dd4:	e0823003 	add	r3, r2, r3
+a0307dd8:	e24335a2 	sub	r3, r3, #679477248	; 0x28800000
+a0307ddc:	e2433955 	sub	r3, r3, #1392640	; 0x154000
+a0307de0:	e2433d6e 	sub	r3, r3, #7040	; 0x1b80
+a0307de4:	e2433008 	sub	r3, r3, #8	; 0x8
+a0307de8:	e50b306c 	str	r3, [fp, -#108]
+a0307dec:	e2811004 	add	r1, r1, #4	; 0x4
+a0307df0:	e5841000 	str	r1, [r4]
+a0307df4:	e51b3060 	ldr	r3, [fp, -#96]
+a0307df8:	e2833004 	add	r3, r3, #4	; 0x4
+a0307dfc:	e50b3060 	str	r3, [fp, -#96]
+a0307e00:	e51b306c 	ldr	r3, [fp, -#108]
+a0307e04:	e1a03ce3 	mov	r3, r3, ror #25
+a0307e08:	e50b306c 	str	r3, [fp, -#108]
+a0307e0c:	e51b206c 	ldr	r2, [fp, -#108]
+a0307e10:	e51b3070 	ldr	r3, [fp, -#112]
+a0307e14:	e0823003 	add	r3, r2, r3
+a0307e18:	e50b306c 	str	r3, [fp, -#108]
+a0307e1c:	e51b2070 	ldr	r2, [fp, -#112]
+a0307e20:	e51b3074 	ldr	r3, [fp, -#116]
+a0307e24:	e0222003 	eor	r2, r2, r3
+a0307e28:	e51b306c 	ldr	r3, [fp, -#108]
+a0307e2c:	e0022003 	and	r2, r2, r3
+a0307e30:	e51b3074 	ldr	r3, [fp, -#116]
+a0307e34:	e0220003 	eor	r0, r2, r3
+a0307e38:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a0307e3c:	e5941000 	ldr	r1, [r4]
+a0307e40:	e51b3060 	ldr	r3, [fp, -#96]
+a0307e44:	e1a02001 	mov	r2, r1
+a0307e48:	e5933000 	ldr	r3, [r3]
+a0307e4c:	e5823000 	str	r3, [r2]
+a0307e50:	e5923000 	ldr	r3, [r2]
+a0307e54:	e0802003 	add	r2, r0, r3
+a0307e58:	e51b3078 	ldr	r3, [fp, -#120]
+a0307e5c:	e0823003 	add	r3, r2, r3
+a0307e60:	e28334e9 	add	r3, r3, #-385875968	; 0xe9000000
+a0307e64:	e24339e1 	sub	r3, r3, #3686400	; 0x384000
+a0307e68:	e2433e8a 	sub	r3, r3, #2208	; 0x8a0
+a0307e6c:	e243300a 	sub	r3, r3, #10	; 0xa
+a0307e70:	e50b3078 	str	r3, [fp, -#120]
+a0307e74:	e2811004 	add	r1, r1, #4	; 0x4
+a0307e78:	e5841000 	str	r1, [r4]
+a0307e7c:	e51b3060 	ldr	r3, [fp, -#96]
+a0307e80:	e2833004 	add	r3, r3, #4	; 0x4
+a0307e84:	e50b3060 	str	r3, [fp, -#96]
+a0307e88:	e51b3078 	ldr	r3, [fp, -#120]
+a0307e8c:	e1a03a63 	mov	r3, r3, ror #20
+a0307e90:	e50b3078 	str	r3, [fp, -#120]
+a0307e94:	e51b2078 	ldr	r2, [fp, -#120]
+a0307e98:	e51b306c 	ldr	r3, [fp, -#108]
+a0307e9c:	e0823003 	add	r3, r2, r3
+a0307ea0:	e50b3078 	str	r3, [fp, -#120]
+a0307ea4:	e51b206c 	ldr	r2, [fp, -#108]
+a0307ea8:	e51b3070 	ldr	r3, [fp, -#112]
+a0307eac:	e0222003 	eor	r2, r2, r3
+a0307eb0:	e51b3078 	ldr	r3, [fp, -#120]
+a0307eb4:	e0022003 	and	r2, r2, r3
+a0307eb8:	e51b3070 	ldr	r3, [fp, -#112]
+a0307ebc:	e0220003 	eor	r0, r2, r3
+a0307ec0:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a0307ec4:	e5941000 	ldr	r1, [r4]
+a0307ec8:	e51b3060 	ldr	r3, [fp, -#96]
+a0307ecc:	e1a02001 	mov	r2, r1
+a0307ed0:	e5933000 	ldr	r3, [r3]
+a0307ed4:	e5823000 	str	r3, [r2]
+a0307ed8:	e5923000 	ldr	r3, [r2]
+a0307edc:	e0802003 	add	r2, r0, r3
+a0307ee0:	e51b3074 	ldr	r3, [fp, -#116]
+a0307ee4:	e0823003 	add	r3, r2, r3
+a0307ee8:	e2833309 	add	r3, r3, #603979776	; 0x24000000
+a0307eec:	e2833981 	add	r3, r3, #2113536	; 0x204000
+a0307ef0:	e2833dc3 	add	r3, r3, #12480	; 0x30c0
+a0307ef4:	e283301b 	add	r3, r3, #27	; 0x1b
+a0307ef8:	e50b3074 	str	r3, [fp, -#116]
+a0307efc:	e2811004 	add	r1, r1, #4	; 0x4
+a0307f00:	e5841000 	str	r1, [r4]
+a0307f04:	e51b3060 	ldr	r3, [fp, -#96]
+a0307f08:	e2833004 	add	r3, r3, #4	; 0x4
+a0307f0c:	e50b3060 	str	r3, [fp, -#96]
+a0307f10:	e51b3074 	ldr	r3, [fp, -#116]
+a0307f14:	e1a037e3 	mov	r3, r3, ror #15
+a0307f18:	e50b3074 	str	r3, [fp, -#116]
+a0307f1c:	e51b2074 	ldr	r2, [fp, -#116]
+a0307f20:	e51b3078 	ldr	r3, [fp, -#120]
+a0307f24:	e0823003 	add	r3, r2, r3
+a0307f28:	e50b3074 	str	r3, [fp, -#116]
+a0307f2c:	e51b2078 	ldr	r2, [fp, -#120]
+a0307f30:	e51b306c 	ldr	r3, [fp, -#108]
+a0307f34:	e0222003 	eor	r2, r2, r3
+a0307f38:	e51b3074 	ldr	r3, [fp, -#116]
+a0307f3c:	e0022003 	and	r2, r2, r3
+a0307f40:	e51b306c 	ldr	r3, [fp, -#108]
+a0307f44:	e0220003 	eor	r0, r2, r3
+a0307f48:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a0307f4c:	e5941000 	ldr	r1, [r4]
+a0307f50:	e51b3060 	ldr	r3, [fp, -#96]
+a0307f54:	e1a02001 	mov	r2, r1
+a0307f58:	e5933000 	ldr	r3, [r3]
+a0307f5c:	e5823000 	str	r3, [r2]
+a0307f60:	e5923000 	ldr	r3, [r2]
+a0307f64:	e0802003 	add	r2, r0, r3
+a0307f68:	e51b3070 	ldr	r3, [fp, -#112]
+a0307f6c:	e0823003 	add	r3, r2, r3
+a0307f70:	e24335f9 	sub	r3, r3, #1044381696	; 0x3e400000
+a0307f74:	e2433a23 	sub	r3, r3, #143360	; 0x23000
+a0307f78:	e2433e11 	sub	r3, r3, #272	; 0x110
+a0307f7c:	e2433002 	sub	r3, r3, #2	; 0x2
+a0307f80:	e50b3070 	str	r3, [fp, -#112]
+a0307f84:	e2811004 	add	r1, r1, #4	; 0x4
+a0307f88:	e5841000 	str	r1, [r4]
+a0307f8c:	e51b3060 	ldr	r3, [fp, -#96]
+a0307f90:	e2833004 	add	r3, r3, #4	; 0x4
+a0307f94:	e50b3060 	str	r3, [fp, -#96]
+a0307f98:	e51b3070 	ldr	r3, [fp, -#112]
+a0307f9c:	e1a03563 	mov	r3, r3, ror #10
+a0307fa0:	e50b3070 	str	r3, [fp, -#112]
+a0307fa4:	e51b2070 	ldr	r2, [fp, -#112]
+a0307fa8:	e51b3074 	ldr	r3, [fp, -#116]
+a0307fac:	e0823003 	add	r3, r2, r3
+a0307fb0:	e50b3070 	str	r3, [fp, -#112]
+a0307fb4:	e51b2074 	ldr	r2, [fp, -#116]
+a0307fb8:	e51b3078 	ldr	r3, [fp, -#120]
+a0307fbc:	e0222003 	eor	r2, r2, r3
+a0307fc0:	e51b3070 	ldr	r3, [fp, -#112]
+a0307fc4:	e0022003 	and	r2, r2, r3
+a0307fc8:	e51b3078 	ldr	r3, [fp, -#120]
+a0307fcc:	e0220003 	eor	r0, r2, r3
+a0307fd0:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a0307fd4:	e5941000 	ldr	r1, [r4]
+a0307fd8:	e51b3060 	ldr	r3, [fp, -#96]
+a0307fdc:	e1a02001 	mov	r2, r1
+a0307fe0:	e5933000 	ldr	r3, [r3]
+a0307fe4:	e5823000 	str	r3, [r2]
+a0307fe8:	e5923000 	ldr	r3, [r2]
+a0307fec:	e0802003 	add	r2, r0, r3
+a0307ff0:	e51b306c 	ldr	r3, [fp, -#108]
+a0307ff4:	e0823003 	add	r3, r2, r3
+a0307ff8:	e243352a 	sub	r3, r3, #176160768	; 0xa800000
+a0307ffc:	e2433a3f 	sub	r3, r3, #258048	; 0x3f000
+a0308000:	e2433051 	sub	r3, r3, #81	; 0x51
+a0308004:	e50b306c 	str	r3, [fp, -#108]
+a0308008:	e2811004 	add	r1, r1, #4	; 0x4
+a030800c:	e5841000 	str	r1, [r4]
+a0308010:	e51b3060 	ldr	r3, [fp, -#96]
+a0308014:	e2833004 	add	r3, r3, #4	; 0x4
+a0308018:	e50b3060 	str	r3, [fp, -#96]
+a030801c:	e51b306c 	ldr	r3, [fp, -#108]
+a0308020:	e1a03ce3 	mov	r3, r3, ror #25
+a0308024:	e50b306c 	str	r3, [fp, -#108]
+a0308028:	e51b206c 	ldr	r2, [fp, -#108]
+a030802c:	e51b3070 	ldr	r3, [fp, -#112]
+a0308030:	e0823003 	add	r3, r2, r3
+a0308034:	e50b306c 	str	r3, [fp, -#108]
+a0308038:	e51b2070 	ldr	r2, [fp, -#112]
+a030803c:	e51b3074 	ldr	r3, [fp, -#116]
+a0308040:	e0222003 	eor	r2, r2, r3
+a0308044:	e51b306c 	ldr	r3, [fp, -#108]
+a0308048:	e0022003 	and	r2, r2, r3
+a030804c:	e51b3074 	ldr	r3, [fp, -#116]
+a0308050:	e0220003 	eor	r0, r2, r3
+a0308054:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a0308058:	e5941000 	ldr	r1, [r4]
+a030805c:	e51b3060 	ldr	r3, [fp, -#96]
+a0308060:	e1a02001 	mov	r2, r1
+a0308064:	e5933000 	ldr	r3, [r3]
+a0308068:	e5823000 	str	r3, [r2]
+a030806c:	e5923000 	ldr	r3, [r2]
+a0308070:	e0802003 	add	r2, r0, r3
+a0308074:	e51b3078 	ldr	r3, [fp, -#120]
+a0308078:	e0823003 	add	r3, r2, r3
+a030807c:	e2833447 	add	r3, r3, #1191182336	; 0x47000000
+a0308080:	e2833887 	add	r3, r3, #8847360	; 0x870000
+a0308084:	e2833cc6 	add	r3, r3, #50688	; 0xc600
+a0308088:	e283302a 	add	r3, r3, #42	; 0x2a
+a030808c:	e50b3078 	str	r3, [fp, -#120]
+a0308090:	e2811004 	add	r1, r1, #4	; 0x4
+a0308094:	e5841000 	str	r1, [r4]
+a0308098:	e51b3060 	ldr	r3, [fp, -#96]
+a030809c:	e2833004 	add	r3, r3, #4	; 0x4
+a03080a0:	e50b3060 	str	r3, [fp, -#96]
+a03080a4:	e51b3078 	ldr	r3, [fp, -#120]
+a03080a8:	e1a03a63 	mov	r3, r3, ror #20
+a03080ac:	e50b3078 	str	r3, [fp, -#120]
+a03080b0:	e51b2078 	ldr	r2, [fp, -#120]
+a03080b4:	e51b306c 	ldr	r3, [fp, -#108]
+a03080b8:	e0823003 	add	r3, r2, r3
+a03080bc:	e50b3078 	str	r3, [fp, -#120]
+a03080c0:	e51b206c 	ldr	r2, [fp, -#108]
+a03080c4:	e51b3070 	ldr	r3, [fp, -#112]
+a03080c8:	e0222003 	eor	r2, r2, r3
+a03080cc:	e51b3078 	ldr	r3, [fp, -#120]
+a03080d0:	e0022003 	and	r2, r2, r3
+a03080d4:	e51b3070 	ldr	r3, [fp, -#112]
+a03080d8:	e0220003 	eor	r0, r2, r3
+a03080dc:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a03080e0:	e5941000 	ldr	r1, [r4]
+a03080e4:	e51b3060 	ldr	r3, [fp, -#96]
+a03080e8:	e1a02001 	mov	r2, r1
+a03080ec:	e5933000 	ldr	r3, [r3]
+a03080f0:	e5823000 	str	r3, [r2]
+a03080f4:	e5923000 	ldr	r3, [r2]
+a03080f8:	e0802003 	add	r2, r0, r3
+a03080fc:	e51b3074 	ldr	r3, [fp, -#116]
+a0308100:	e0823003 	add	r3, r2, r3
+a0308104:	e283332a 	add	r3, r3, #-1476395008	; 0xa8000000
+a0308108:	e28339c1 	add	r3, r3, #3162112	; 0x304000
+a030810c:	e2833e61 	add	r3, r3, #1552	; 0x610
+a0308110:	e2833003 	add	r3, r3, #3	; 0x3
+a0308114:	e50b3074 	str	r3, [fp, -#116]
+a0308118:	e2811004 	add	r1, r1, #4	; 0x4
+a030811c:	e5841000 	str	r1, [r4]
+a0308120:	e51b3060 	ldr	r3, [fp, -#96]
+a0308124:	e2833004 	add	r3, r3, #4	; 0x4
+a0308128:	e50b3060 	str	r3, [fp, -#96]
+a030812c:	e51b3074 	ldr	r3, [fp, -#116]
+a0308130:	e1a037e3 	mov	r3, r3, ror #15
+a0308134:	e50b3074 	str	r3, [fp, -#116]
+a0308138:	e51b2074 	ldr	r2, [fp, -#116]
+a030813c:	e51b3078 	ldr	r3, [fp, -#120]
+a0308140:	e0823003 	add	r3, r2, r3
+a0308144:	e50b3074 	str	r3, [fp, -#116]
+a0308148:	e51b2078 	ldr	r2, [fp, -#120]
+a030814c:	e51b306c 	ldr	r3, [fp, -#108]
+a0308150:	e0222003 	eor	r2, r2, r3
+a0308154:	e51b3074 	ldr	r3, [fp, -#116]
+a0308158:	e0022003 	and	r2, r2, r3
+a030815c:	e51b306c 	ldr	r3, [fp, -#108]
+a0308160:	e0220003 	eor	r0, r2, r3
+a0308164:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a0308168:	e5941000 	ldr	r1, [r4]
+a030816c:	e51b3060 	ldr	r3, [fp, -#96]
+a0308170:	e1a02001 	mov	r2, r1
+a0308174:	e5933000 	ldr	r3, [r3]
+a0308178:	e5823000 	str	r3, [r2]
+a030817c:	e5923000 	ldr	r3, [r2]
+a0308180:	e0802003 	add	r2, r0, r3
+a0308184:	e51b3070 	ldr	r3, [fp, -#112]
+a0308188:	e0823003 	add	r3, r2, r3
+a030818c:	e28334fd 	add	r3, r3, #-50331648	; 0xfd000000
+a0308190:	e2833846 	add	r3, r3, #4587520	; 0x460000
+a0308194:	e2833c95 	add	r3, r3, #38144	; 0x9500
+a0308198:	e2833001 	add	r3, r3, #1	; 0x1
+a030819c:	e50b3070 	str	r3, [fp, -#112]
+a03081a0:	e2811004 	add	r1, r1, #4	; 0x4
+a03081a4:	e5841000 	str	r1, [r4]
+a03081a8:	e51b3060 	ldr	r3, [fp, -#96]
+a03081ac:	e2833004 	add	r3, r3, #4	; 0x4
+a03081b0:	e50b3060 	str	r3, [fp, -#96]
+a03081b4:	e51b3070 	ldr	r3, [fp, -#112]
+a03081b8:	e1a03563 	mov	r3, r3, ror #10
+a03081bc:	e50b3070 	str	r3, [fp, -#112]
+a03081c0:	e51b2070 	ldr	r2, [fp, -#112]
+a03081c4:	e51b3074 	ldr	r3, [fp, -#116]
+a03081c8:	e0823003 	add	r3, r2, r3
+a03081cc:	e50b3070 	str	r3, [fp, -#112]
+a03081d0:	e51b2074 	ldr	r2, [fp, -#116]
+a03081d4:	e51b3078 	ldr	r3, [fp, -#120]
+a03081d8:	e0222003 	eor	r2, r2, r3
+a03081dc:	e51b3070 	ldr	r3, [fp, -#112]
+a03081e0:	e0022003 	and	r2, r2, r3
+a03081e4:	e51b3078 	ldr	r3, [fp, -#120]
+a03081e8:	e0220003 	eor	r0, r2, r3
+a03081ec:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a03081f0:	e5941000 	ldr	r1, [r4]
+a03081f4:	e51b3060 	ldr	r3, [fp, -#96]
+a03081f8:	e1a02001 	mov	r2, r1
+a03081fc:	e5933000 	ldr	r3, [r3]
+a0308200:	e5823000 	str	r3, [r2]
+a0308204:	e5923000 	ldr	r3, [r2]
+a0308208:	e0802003 	add	r2, r0, r3
+a030820c:	e51b306c 	ldr	r3, [fp, -#108]
+a0308210:	e0823003 	add	r3, r2, r3
+a0308214:	e2833469 	add	r3, r3, #1761607680	; 0x69000000
+a0308218:	e2833502 	add	r3, r3, #8388608	; 0x800000
+a030821c:	e2833b26 	add	r3, r3, #38912	; 0x9800
+a0308220:	e28330d8 	add	r3, r3, #216	; 0xd8
+a0308224:	e50b306c 	str	r3, [fp, -#108]
+a0308228:	e2811004 	add	r1, r1, #4	; 0x4
+a030822c:	e5841000 	str	r1, [r4]
+a0308230:	e51b3060 	ldr	r3, [fp, -#96]
+a0308234:	e2833004 	add	r3, r3, #4	; 0x4
+a0308238:	e50b3060 	str	r3, [fp, -#96]
+a030823c:	e51b306c 	ldr	r3, [fp, -#108]
+a0308240:	e1a03ce3 	mov	r3, r3, ror #25
+a0308244:	e50b306c 	str	r3, [fp, -#108]
+a0308248:	e51b206c 	ldr	r2, [fp, -#108]
+a030824c:	e51b3070 	ldr	r3, [fp, -#112]
+a0308250:	e0823003 	add	r3, r2, r3
+a0308254:	e50b306c 	str	r3, [fp, -#108]
+a0308258:	e51b2070 	ldr	r2, [fp, -#112]
+a030825c:	e51b3074 	ldr	r3, [fp, -#116]
+a0308260:	e0222003 	eor	r2, r2, r3
+a0308264:	e51b306c 	ldr	r3, [fp, -#108]
+a0308268:	e0022003 	and	r2, r2, r3
+a030826c:	e51b3074 	ldr	r3, [fp, -#116]
+a0308270:	e0220003 	eor	r0, r2, r3
+a0308274:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a0308278:	e5941000 	ldr	r1, [r4]
+a030827c:	e51b3060 	ldr	r3, [fp, -#96]
+a0308280:	e1a02001 	mov	r2, r1
+a0308284:	e5933000 	ldr	r3, [r3]
+a0308288:	e5823000 	str	r3, [r2]
+a030828c:	e5923000 	ldr	r3, [r2]
+a0308290:	e0802003 	add	r2, r0, r3
+a0308294:	e51b3078 	ldr	r3, [fp, -#120]
+a0308298:	e0823003 	add	r3, r2, r3
+a030829c:	e2433e85 	sub	r3, r3, #2128	; 0x850
+a03082a0:	e243335d 	sub	r3, r3, #1946157057	; 0x74000001
+a03082a4:	e24338bb 	sub	r3, r3, #12255232	; 0xbb0000
+a03082a8:	e50b3078 	str	r3, [fp, -#120]
+a03082ac:	e2811004 	add	r1, r1, #4	; 0x4
+a03082b0:	e5841000 	str	r1, [r4]
+a03082b4:	e51b3060 	ldr	r3, [fp, -#96]
+a03082b8:	e2833004 	add	r3, r3, #4	; 0x4
+a03082bc:	e50b3060 	str	r3, [fp, -#96]
+a03082c0:	e51b3078 	ldr	r3, [fp, -#120]
+a03082c4:	e1a03a63 	mov	r3, r3, ror #20
+a03082c8:	e50b3078 	str	r3, [fp, -#120]
+a03082cc:	e51b2078 	ldr	r2, [fp, -#120]
+a03082d0:	e51b306c 	ldr	r3, [fp, -#108]
+a03082d4:	e0823003 	add	r3, r2, r3
+a03082d8:	e50b3078 	str	r3, [fp, -#120]
+a03082dc:	e51b206c 	ldr	r2, [fp, -#108]
+a03082e0:	e51b3070 	ldr	r3, [fp, -#112]
+a03082e4:	e0222003 	eor	r2, r2, r3
+a03082e8:	e51b3078 	ldr	r3, [fp, -#120]
+a03082ec:	e0022003 	and	r2, r2, r3
+a03082f0:	e51b3070 	ldr	r3, [fp, -#112]
+a03082f4:	e0220003 	eor	r0, r2, r3
+a03082f8:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a03082fc:	e5941000 	ldr	r1, [r4]
+a0308300:	e51b3060 	ldr	r3, [fp, -#96]
+a0308304:	e1a02001 	mov	r2, r1
+a0308308:	e5933000 	ldr	r3, [r3]
+a030830c:	e5823000 	str	r3, [r2]
+a0308310:	e5923000 	ldr	r3, [r2]
+a0308314:	e0802003 	add	r2, r0, r3
+a0308318:	e51b3074 	ldr	r3, [fp, -#116]
+a030831c:	e0823003 	add	r3, r2, r3
+a0308320:	e2433b29 	sub	r3, r3, #41984	; 0xa400
+a0308324:	e243304f 	sub	r3, r3, #79	; 0x4f
+a0308328:	e50b3074 	str	r3, [fp, -#116]
+a030832c:	e2811004 	add	r1, r1, #4	; 0x4
+a0308330:	e5841000 	str	r1, [r4]
+a0308334:	e51b3060 	ldr	r3, [fp, -#96]
+a0308338:	e2833004 	add	r3, r3, #4	; 0x4
+a030833c:	e50b3060 	str	r3, [fp, -#96]
+a0308340:	e51b3074 	ldr	r3, [fp, -#116]
+a0308344:	e1a037e3 	mov	r3, r3, ror #15
+a0308348:	e50b3074 	str	r3, [fp, -#116]
+a030834c:	e51b2074 	ldr	r2, [fp, -#116]
+a0308350:	e51b3078 	ldr	r3, [fp, -#120]
+a0308354:	e0823003 	add	r3, r2, r3
+a0308358:	e50b3074 	str	r3, [fp, -#116]
+a030835c:	e51b2078 	ldr	r2, [fp, -#120]
+a0308360:	e51b306c 	ldr	r3, [fp, -#108]
+a0308364:	e0222003 	eor	r2, r2, r3
+a0308368:	e51b3074 	ldr	r3, [fp, -#116]
+a030836c:	e0022003 	and	r2, r2, r3
+a0308370:	e51b306c 	ldr	r3, [fp, -#108]
+a0308374:	e0220003 	eor	r0, r2, r3
+a0308378:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a030837c:	e5941000 	ldr	r1, [r4]
+a0308380:	e51b3060 	ldr	r3, [fp, -#96]
+a0308384:	e1a02001 	mov	r2, r1
+a0308388:	e5933000 	ldr	r3, [r3]
+a030838c:	e5823000 	str	r3, [r2]
+a0308390:	e5923000 	ldr	r3, [r2]
+a0308394:	e0802003 	add	r2, r0, r3
+a0308398:	e51b3070 	ldr	r3, [fp, -#112]
+a030839c:	e0823003 	add	r3, r2, r3
+a03083a0:	e283348a 	add	r3, r3, #-1979711488	; 0x8a000000
+a03083a4:	e24338a3 	sub	r3, r3, #10682368	; 0xa30000
+a03083a8:	e2433da1 	sub	r3, r3, #10304	; 0x2840
+a03083ac:	e2433002 	sub	r3, r3, #2	; 0x2
+a03083b0:	e50b3070 	str	r3, [fp, -#112]
+a03083b4:	e2811004 	add	r1, r1, #4	; 0x4
+a03083b8:	e5841000 	str	r1, [r4]
+a03083bc:	e51b3060 	ldr	r3, [fp, -#96]
+a03083c0:	e2833004 	add	r3, r3, #4	; 0x4
+a03083c4:	e50b3060 	str	r3, [fp, -#96]
+a03083c8:	e51b3070 	ldr	r3, [fp, -#112]
+a03083cc:	e1a03563 	mov	r3, r3, ror #10
+a03083d0:	e50b3070 	str	r3, [fp, -#112]
+a03083d4:	e51b2070 	ldr	r2, [fp, -#112]
+a03083d8:	e51b3074 	ldr	r3, [fp, -#116]
+a03083dc:	e0823003 	add	r3, r2, r3
+a03083e0:	e50b3070 	str	r3, [fp, -#112]
+a03083e4:	e51b2074 	ldr	r2, [fp, -#116]
+a03083e8:	e51b3078 	ldr	r3, [fp, -#120]
+a03083ec:	e0222003 	eor	r2, r2, r3
+a03083f0:	e51b3070 	ldr	r3, [fp, -#112]
+a03083f4:	e0022003 	and	r2, r2, r3
+a03083f8:	e51b3078 	ldr	r3, [fp, -#120]
+a03083fc:	e0220003 	eor	r0, r2, r3
+a0308400:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a0308404:	e5941000 	ldr	r1, [r4]
+a0308408:	e51b3060 	ldr	r3, [fp, -#96]
+a030840c:	e1a02001 	mov	r2, r1
+a0308410:	e5933000 	ldr	r3, [r3]
+a0308414:	e5823000 	str	r3, [r2]
+a0308418:	e5923000 	ldr	r3, [r2]
+a030841c:	e0802003 	add	r2, r0, r3
+a0308420:	e51b306c 	ldr	r3, [fp, -#108]
+a0308424:	e0823003 	add	r3, r2, r3
+a0308428:	e283346b 	add	r3, r3, #1795162112	; 0x6b000000
+a030842c:	e2833609 	add	r3, r3, #9437184	; 0x900000
+a0308430:	e2833c11 	add	r3, r3, #4352	; 0x1100
+a0308434:	e2833022 	add	r3, r3, #34	; 0x22
+a0308438:	e50b306c 	str	r3, [fp, -#108]
+a030843c:	e2811004 	add	r1, r1, #4	; 0x4
+a0308440:	e5841000 	str	r1, [r4]
+a0308444:	e51b3060 	ldr	r3, [fp, -#96]
+a0308448:	e2833004 	add	r3, r3, #4	; 0x4
+a030844c:	e50b3060 	str	r3, [fp, -#96]
+a0308450:	e51b306c 	ldr	r3, [fp, -#108]
+a0308454:	e1a03ce3 	mov	r3, r3, ror #25
+a0308458:	e50b306c 	str	r3, [fp, -#108]
+a030845c:	e51b206c 	ldr	r2, [fp, -#108]
+a0308460:	e51b3070 	ldr	r3, [fp, -#112]
+a0308464:	e0823003 	add	r3, r2, r3
+a0308468:	e50b306c 	str	r3, [fp, -#108]
+a030846c:	e51b2070 	ldr	r2, [fp, -#112]
+a0308470:	e51b3074 	ldr	r3, [fp, -#116]
+a0308474:	e0222003 	eor	r2, r2, r3
+a0308478:	e51b306c 	ldr	r3, [fp, -#108]
+a030847c:	e0022003 	and	r2, r2, r3
+a0308480:	e51b3074 	ldr	r3, [fp, -#116]
+a0308484:	e0220003 	eor	r0, r2, r3
+a0308488:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a030848c:	e5941000 	ldr	r1, [r4]
+a0308490:	e51b3060 	ldr	r3, [fp, -#96]
+a0308494:	e1a02001 	mov	r2, r1
+a0308498:	e5933000 	ldr	r3, [r3]
+a030849c:	e5823000 	str	r3, [r2]
+a03084a0:	e5923000 	ldr	r3, [r2]
+a03084a4:	e0802003 	add	r2, r0, r3
+a03084a8:	e51b3078 	ldr	r3, [fp, -#120]
+a03084ac:	e0823003 	add	r3, r2, r3
+a03084b0:	e2433799 	sub	r3, r3, #40108032	; 0x2640000
+a03084b4:	e2433be3 	sub	r3, r3, #232448	; 0x38c00
+a03084b8:	e2433f9b 	sub	r3, r3, #620	; 0x26c
+a03084bc:	e2433001 	sub	r3, r3, #1	; 0x1
+a03084c0:	e50b3078 	str	r3, [fp, -#120]
+a03084c4:	e2811004 	add	r1, r1, #4	; 0x4
+a03084c8:	e5841000 	str	r1, [r4]
+a03084cc:	e51b3060 	ldr	r3, [fp, -#96]
+a03084d0:	e2833004 	add	r3, r3, #4	; 0x4
+a03084d4:	e50b3060 	str	r3, [fp, -#96]
+a03084d8:	e51b3078 	ldr	r3, [fp, -#120]
+a03084dc:	e1a03a63 	mov	r3, r3, ror #20
+a03084e0:	e50b3078 	str	r3, [fp, -#120]
+a03084e4:	e51b2078 	ldr	r2, [fp, -#120]
+a03084e8:	e51b306c 	ldr	r3, [fp, -#108]
+a03084ec:	e0823003 	add	r3, r2, r3
+a03084f0:	e50b3078 	str	r3, [fp, -#120]
+a03084f4:	e51b206c 	ldr	r2, [fp, -#108]
+a03084f8:	e51b3070 	ldr	r3, [fp, -#112]
+a03084fc:	e0222003 	eor	r2, r2, r3
+a0308500:	e51b3078 	ldr	r3, [fp, -#120]
+a0308504:	e0022003 	and	r2, r2, r3
+a0308508:	e51b3070 	ldr	r3, [fp, -#112]
+a030850c:	e0220003 	eor	r0, r2, r3
+a0308510:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a0308514:	e5941000 	ldr	r1, [r4]
+a0308518:	e51b3060 	ldr	r3, [fp, -#96]
+a030851c:	e1a02001 	mov	r2, r1
+a0308520:	e5933000 	ldr	r3, [r3]
+a0308524:	e5823000 	str	r3, [r2]
+a0308528:	e5923000 	ldr	r3, [r2]
+a030852c:	e0802003 	add	r2, r0, r3
+a0308530:	e51b3074 	ldr	r3, [fp, -#116]
+a0308534:	e0823003 	add	r3, r2, r3
+a0308538:	e28334a6 	add	r3, r3, #-1509949440	; 0xa6000000
+a030853c:	e2833879 	add	r3, r3, #7929856	; 0x790000
+a0308540:	e2833c43 	add	r3, r3, #17152	; 0x4300
+a0308544:	e283308e 	add	r3, r3, #142	; 0x8e
+a0308548:	e50b3074 	str	r3, [fp, -#116]
+a030854c:	e2811004 	add	r1, r1, #4	; 0x4
+a0308550:	e5841000 	str	r1, [r4]
+a0308554:	e51b3060 	ldr	r3, [fp, -#96]
+a0308558:	e2833004 	add	r3, r3, #4	; 0x4
+a030855c:	e50b3060 	str	r3, [fp, -#96]
+a0308560:	e51b3074 	ldr	r3, [fp, -#116]
+a0308564:	e1a037e3 	mov	r3, r3, ror #15
+a0308568:	e50b3074 	str	r3, [fp, -#116]
+a030856c:	e51b2074 	ldr	r2, [fp, -#116]
+a0308570:	e51b3078 	ldr	r3, [fp, -#120]
+a0308574:	e0823003 	add	r3, r2, r3
+a0308578:	e50b3074 	str	r3, [fp, -#116]
+a030857c:	e51b2078 	ldr	r2, [fp, -#120]
+a0308580:	e51b306c 	ldr	r3, [fp, -#108]
+a0308584:	e0222003 	eor	r2, r2, r3
+a0308588:	e51b3074 	ldr	r3, [fp, -#116]
+a030858c:	e0022003 	and	r2, r2, r3
+a0308590:	e51b306c 	ldr	r3, [fp, -#108]
+a0308594:	e0220003 	eor	r0, r2, r3
+a0308598:	e24b407c 	sub	r4, fp, #124	; 0x7c
+a030859c:	e5941000 	ldr	r1, [r4]
+a03085a0:	e51b3060 	ldr	r3, [fp, -#96]
+a03085a4:	e1a02001 	mov	r2, r1
+a03085a8:	e5933000 	ldr	r3, [r3]
+a03085ac:	e5823000 	str	r3, [r2]
+a03085b0:	e5923000 	ldr	r3, [r2]
+a03085b4:	e0802003 	add	r2, r0, r3
+a03085b8:	e51b3070 	ldr	r3, [fp, -#112]
+a03085bc:	e0823003 	add	r3, r2, r3
+a03085c0:	e2833e82 	add	r3, r3, #2080	; 0x820
+a03085c4:	e2833352 	add	r3, r3, #1207959553	; 0x48000001
+a03085c8:	e283376d 	add	r3, r3, #28573696	; 0x1b40000
+a03085cc:	e50b3070 	str	r3, [fp, -#112]
+a03085d0:	e2811004 	add	r1, r1, #4	; 0x4
+a03085d4:	e5841000 	str	r1, [r4]
+a03085d8:	e51b3060 	ldr	r3, [fp, -#96]
+a03085dc:	e2833004 	add	r3, r3, #4	; 0x4
+a03085e0:	e50b3060 	str	r3, [fp, -#96]
+a03085e4:	e51b3070 	ldr	r3, [fp, -#112]
+a03085e8:	e1a03563 	mov	r3, r3, ror #10
+a03085ec:	e50b3070 	str	r3, [fp, -#112]
+a03085f0:	e51b2070 	ldr	r2, [fp, -#112]
+a03085f4:	e51b3074 	ldr	r3, [fp, -#116]
+a03085f8:	e0823003 	add	r3, r2, r3
+a03085fc:	e50b3070 	str	r3, [fp, -#112]
+a0308600:	e51b2070 	ldr	r2, [fp, -#112]
+a0308604:	e51b3074 	ldr	r3, [fp, -#116]
+a0308608:	e0222003 	eor	r2, r2, r3
+a030860c:	e51b3078 	ldr	r3, [fp, -#120]
+a0308610:	e0022003 	and	r2, r2, r3
+a0308614:	e51b3074 	ldr	r3, [fp, -#116]
+a0308618:	e0222003 	eor	r2, r2, r3
+a030861c:	e51b3058 	ldr	r3, [fp, -#88]
+a0308620:	e0822003 	add	r2, r2, r3
+a0308624:	e51b306c 	ldr	r3, [fp, -#108]
+a0308628:	e0823003 	add	r3, r2, r3
+a030862c:	e28334f6 	add	r3, r3, #-167772160	; 0xf6000000
+a0308630:	e283381e 	add	r3, r3, #1966080	; 0x1e0000
+a0308634:	e2833d95 	add	r3, r3, #9536	; 0x2540
+a0308638:	e2833022 	add	r3, r3, #34	; 0x22
+a030863c:	e50b306c 	str	r3, [fp, -#108]
+a0308640:	e51b306c 	ldr	r3, [fp, -#108]
+a0308644:	e1a03de3 	mov	r3, r3, ror #27
+a0308648:	e50b306c 	str	r3, [fp, -#108]
+a030864c:	e51b206c 	ldr	r2, [fp, -#108]
+a0308650:	e51b3070 	ldr	r3, [fp, -#112]
+a0308654:	e0823003 	add	r3, r2, r3
+a0308658:	e50b306c 	str	r3, [fp, -#108]
+a030865c:	e51b206c 	ldr	r2, [fp, -#108]
+a0308660:	e51b3070 	ldr	r3, [fp, -#112]
+a0308664:	e0222003 	eor	r2, r2, r3
+a0308668:	e51b3074 	ldr	r3, [fp, -#116]
+a030866c:	e0022003 	and	r2, r2, r3
+a0308670:	e51b3070 	ldr	r3, [fp, -#112]
+a0308674:	e0222003 	eor	r2, r2, r3
+a0308678:	e51b3044 	ldr	r3, [fp, -#68]
+a030867c:	e0822003 	add	r2, r2, r3
+a0308680:	e51b3078 	ldr	r3, [fp, -#120]
+a0308684:	e0823003 	add	r3, r2, r3
+a0308688:	e2833103 	add	r3, r3, #-1073741824	; 0xc0000000
+a030868c:	e2833501 	add	r3, r3, #4194304	; 0x400000
+a0308690:	e2833cb3 	add	r3, r3, #45824	; 0xb300
+a0308694:	e2833040 	add	r3, r3, #64	; 0x40
+a0308698:	e50b3078 	str	r3, [fp, -#120]
+a030869c:	e51b3078 	ldr	r3, [fp, -#120]
+a03086a0:	e1a03be3 	mov	r3, r3, ror #23
+a03086a4:	e50b3078 	str	r3, [fp, -#120]
+a03086a8:	e51b2078 	ldr	r2, [fp, -#120]
+a03086ac:	e51b306c 	ldr	r3, [fp, -#108]
+a03086b0:	e0823003 	add	r3, r2, r3
+a03086b4:	e50b3078 	str	r3, [fp, -#120]
+a03086b8:	e51b2078 	ldr	r2, [fp, -#120]
+a03086bc:	e51b306c 	ldr	r3, [fp, -#108]
+a03086c0:	e0222003 	eor	r2, r2, r3
+a03086c4:	e51b3070 	ldr	r3, [fp, -#112]
+a03086c8:	e0022003 	and	r2, r2, r3
+a03086cc:	e51b306c 	ldr	r3, [fp, -#108]
+a03086d0:	e0222003 	eor	r2, r2, r3
+a03086d4:	e51b3030 	ldr	r3, [fp, -#48]
+a03086d8:	e0822003 	add	r2, r2, r3
+a03086dc:	e51b3074 	ldr	r3, [fp, -#116]
+a03086e0:	e0823003 	add	r3, r2, r3
+a03086e4:	e2833599 	add	r3, r3, #641728512	; 0x26400000
+a03086e8:	e2833979 	add	r3, r3, #1982464	; 0x1e4000
+a03086ec:	e2833d69 	add	r3, r3, #6720	; 0x1a40
+a03086f0:	e2833011 	add	r3, r3, #17	; 0x11
+a03086f4:	e50b3074 	str	r3, [fp, -#116]
+a03086f8:	e51b3074 	ldr	r3, [fp, -#116]
+a03086fc:	e1a03963 	mov	r3, r3, ror #18
+a0308700:	e50b3074 	str	r3, [fp, -#116]
+a0308704:	e51b2074 	ldr	r2, [fp, -#116]
+a0308708:	e51b3078 	ldr	r3, [fp, -#120]
+a030870c:	e0823003 	add	r3, r2, r3
+a0308710:	e50b3074 	str	r3, [fp, -#116]
+a0308714:	e51b2074 	ldr	r2, [fp, -#116]
+a0308718:	e51b3078 	ldr	r3, [fp, -#120]
+a030871c:	e0222003 	eor	r2, r2, r3
+a0308720:	e51b306c 	ldr	r3, [fp, -#108]
+a0308724:	e0022003 	and	r2, r2, r3
+a0308728:	e51b3078 	ldr	r3, [fp, -#120]
+a030872c:	e0222003 	eor	r2, r2, r3
+a0308730:	e51b305c 	ldr	r3, [fp, -#92]
+a0308734:	e0822003 	add	r2, r2, r3
+a0308738:	e51b3070 	ldr	r3, [fp, -#112]
+a030873c:	e0823003 	add	r3, r2, r3
+a0308740:	e2433559 	sub	r3, r3, #373293056	; 0x16400000
+a0308744:	e2433a93 	sub	r3, r3, #602112	; 0x93000
+a0308748:	e2433e85 	sub	r3, r3, #2128	; 0x850
+a030874c:	e2433006 	sub	r3, r3, #6	; 0x6
+a0308750:	e50b3070 	str	r3, [fp, -#112]
+a0308754:	e51b3070 	ldr	r3, [fp, -#112]
+a0308758:	e1a03663 	mov	r3, r3, ror #12
+a030875c:	e50b3070 	str	r3, [fp, -#112]
+a0308760:	e51b2070 	ldr	r2, [fp, -#112]
+a0308764:	e51b3074 	ldr	r3, [fp, -#116]
+a0308768:	e0823003 	add	r3, r2, r3
+a030876c:	e50b3070 	str	r3, [fp, -#112]
+a0308770:	e51b2070 	ldr	r2, [fp, -#112]
+a0308774:	e51b3074 	ldr	r3, [fp, -#116]
+a0308778:	e0222003 	eor	r2, r2, r3
+a030877c:	e51b3078 	ldr	r3, [fp, -#120]
+a0308780:	e0022003 	and	r2, r2, r3
+a0308784:	e51b3074 	ldr	r3, [fp, -#116]
+a0308788:	e0222003 	eor	r2, r2, r3
+a030878c:	e51b3048 	ldr	r3, [fp, -#72]
+a0308790:	e0822003 	add	r2, r2, r3
+a0308794:	e51b306c 	ldr	r3, [fp, -#108]
+a0308798:	e0823003 	add	r3, r2, r3
+a030879c:	e28334d6 	add	r3, r3, #-704643072	; 0xd6000000
+a03087a0:	e283382f 	add	r3, r3, #3080192	; 0x2f0000
+a03087a4:	e2833d41 	add	r3, r3, #4160	; 0x1040
+a03087a8:	e283301d 	add	r3, r3, #29	; 0x1d
+a03087ac:	e50b306c 	str	r3, [fp, -#108]
+a03087b0:	e51b306c 	ldr	r3, [fp, -#108]
+a03087b4:	e1a03de3 	mov	r3, r3, ror #27
+a03087b8:	e50b306c 	str	r3, [fp, -#108]
+a03087bc:	e51b206c 	ldr	r2, [fp, -#108]
+a03087c0:	e51b3070 	ldr	r3, [fp, -#112]
+a03087c4:	e0823003 	add	r3, r2, r3
+a03087c8:	e50b306c 	str	r3, [fp, -#108]
+a03087cc:	e51b206c 	ldr	r2, [fp, -#108]
+a03087d0:	e51b3070 	ldr	r3, [fp, -#112]
+a03087d4:	e0222003 	eor	r2, r2, r3
+a03087d8:	e51b3074 	ldr	r3, [fp, -#116]
+a03087dc:	e0022003 	and	r2, r2, r3
+a03087e0:	e51b3070 	ldr	r3, [fp, -#112]
+a03087e4:	e0222003 	eor	r2, r2, r3
+a03087e8:	e51b3034 	ldr	r3, [fp, -#52]
+a03087ec:	e0822003 	add	r2, r2, r3
+a03087f0:	e51b3078 	ldr	r3, [fp, -#120]
+a03087f4:	e0823003 	add	r3, r2, r3
+a03087f8:	e2833791 	add	r3, r3, #38010880	; 0x2440000
+a03087fc:	e2833d51 	add	r3, r3, #5184	; 0x1440
+a0308800:	e2833013 	add	r3, r3, #19	; 0x13
+a0308804:	e50b3078 	str	r3, [fp, -#120]
+a0308808:	e51b3078 	ldr	r3, [fp, -#120]
+a030880c:	e1a03be3 	mov	r3, r3, ror #23
+a0308810:	e50b3078 	str	r3, [fp, -#120]
+a0308814:	e51b2078 	ldr	r2, [fp, -#120]
+a0308818:	e51b306c 	ldr	r3, [fp, -#108]
+a030881c:	e0823003 	add	r3, r2, r3
+a0308820:	e50b3078 	str	r3, [fp, -#120]
+a0308824:	e51b2078 	ldr	r2, [fp, -#120]
+a0308828:	e51b306c 	ldr	r3, [fp, -#108]
+a030882c:	e0222003 	eor	r2, r2, r3
+a0308830:	e51b3070 	ldr	r3, [fp, -#112]
+a0308834:	e0022003 	and	r2, r2, r3
+a0308838:	e51b306c 	ldr	r3, [fp, -#108]
+a030883c:	e0222003 	eor	r2, r2, r3
+a0308840:	e51b3020 	ldr	r3, [fp, -#32]
+a0308844:	e0822003 	add	r2, r2, r3
+a0308848:	e51b3074 	ldr	r3, [fp, -#116]
+a030884c:	e0823003 	add	r3, r2, r3
+a0308850:	e2833336 	add	r3, r3, #-671088640	; 0xd8000000
+a0308854:	e28338a1 	add	r3, r3, #10551296	; 0xa10000
+a0308858:	e2833ce6 	add	r3, r3, #58880	; 0xe600
+a030885c:	e2833081 	add	r3, r3, #129	; 0x81
+a0308860:	e50b3074 	str	r3, [fp, -#116]
+a0308864:	e51b3074 	ldr	r3, [fp, -#116]
+a0308868:	e1a03963 	mov	r3, r3, ror #18
+a030886c:	e50b3074 	str	r3, [fp, -#116]
+a0308870:	e51b2074 	ldr	r2, [fp, -#116]
+a0308874:	e51b3078 	ldr	r3, [fp, -#120]
+a0308878:	e0823003 	add	r3, r2, r3
+a030887c:	e50b3074 	str	r3, [fp, -#116]
+a0308880:	e51b2074 	ldr	r2, [fp, -#116]
+a0308884:	e51b3078 	ldr	r3, [fp, -#120]
+a0308888:	e0222003 	eor	r2, r2, r3
+a030888c:	e51b306c 	ldr	r3, [fp, -#108]
+a0308890:	e0022003 	and	r2, r2, r3
+a0308894:	e51b3078 	ldr	r3, [fp, -#120]
+a0308898:	e0222003 	eor	r2, r2, r3
+a030889c:	e51b304c 	ldr	r3, [fp, -#76]
+a03088a0:	e0822003 	add	r2, r2, r3
+a03088a4:	e51b3070 	ldr	r3, [fp, -#112]
+a03088a8:	e0823003 	add	r3, r2, r3
+a03088ac:	e283333a 	add	r3, r3, #-402653184	; 0xe8000000
+a03088b0:	e243370b 	sub	r3, r3, #2883584	; 0x2c0000
+a03088b4:	e2433e43 	sub	r3, r3, #1072	; 0x430
+a03088b8:	e2433008 	sub	r3, r3, #8	; 0x8
+a03088bc:	e50b3070 	str	r3, [fp, -#112]
+a03088c0:	e51b3070 	ldr	r3, [fp, -#112]
+a03088c4:	e1a03663 	mov	r3, r3, ror #12
+a03088c8:	e50b3070 	str	r3, [fp, -#112]
+a03088cc:	e51b2070 	ldr	r2, [fp, -#112]
+a03088d0:	e51b3074 	ldr	r3, [fp, -#116]
+a03088d4:	e0823003 	add	r3, r2, r3
+a03088d8:	e50b3070 	str	r3, [fp, -#112]
+a03088dc:	e51b2070 	ldr	r2, [fp, -#112]
+a03088e0:	e51b3074 	ldr	r3, [fp, -#116]
+a03088e4:	e0222003 	eor	r2, r2, r3
+a03088e8:	e51b3078 	ldr	r3, [fp, -#120]
+a03088ec:	e0022003 	and	r2, r2, r3
+a03088f0:	e51b3074 	ldr	r3, [fp, -#116]
+a03088f4:	e0222003 	eor	r2, r2, r3
+a03088f8:	e51b3038 	ldr	r3, [fp, -#56]
+a03088fc:	e0822003 	add	r2, r2, r3
+a0308900:	e51b306c 	ldr	r3, [fp, -#108]
+a0308904:	e0823003 	add	r3, r2, r3
+a0308908:	e2833587 	add	r3, r3, #566231040	; 0x21c00000
+a030890c:	e2833987 	add	r3, r3, #2211840	; 0x21c000
+a0308910:	e2833ede 	add	r3, r3, #3552	; 0xde0
+a0308914:	e2833006 	add	r3, r3, #6	; 0x6
+a0308918:	e50b306c 	str	r3, [fp, -#108]
+a030891c:	e51b306c 	ldr	r3, [fp, -#108]
+a0308920:	e1a03de3 	mov	r3, r3, ror #27
+a0308924:	e50b306c 	str	r3, [fp, -#108]
+a0308928:	e51b206c 	ldr	r2, [fp, -#108]
+a030892c:	e51b3070 	ldr	r3, [fp, -#112]
+a0308930:	e0823003 	add	r3, r2, r3
+a0308934:	e50b306c 	str	r3, [fp, -#108]
+a0308938:	e51b206c 	ldr	r2, [fp, -#108]
+a030893c:	e51b3070 	ldr	r3, [fp, -#112]
+a0308940:	e0222003 	eor	r2, r2, r3
+a0308944:	e51b3074 	ldr	r3, [fp, -#116]
+a0308948:	e0022003 	and	r2, r2, r3
+a030894c:	e51b3070 	ldr	r3, [fp, -#112]
+a0308950:	e0222003 	eor	r2, r2, r3
+a0308954:	e51b3024 	ldr	r3, [fp, -#36]
+a0308958:	e0822003 	add	r2, r2, r3
+a030895c:	e51b3078 	ldr	r3, [fp, -#120]
+a0308960:	e0823003 	add	r3, r2, r3
+a0308964:	e24335f3 	sub	r3, r3, #1019215872	; 0x3cc00000
+a0308968:	e2433a8f 	sub	r3, r3, #585728	; 0x8f000
+a030896c:	e2433e82 	sub	r3, r3, #2080	; 0x820
+a0308970:	e243300a 	sub	r3, r3, #10	; 0xa
+a0308974:	e50b3078 	str	r3, [fp, -#120]
+a0308978:	e51b3078 	ldr	r3, [fp, -#120]
+a030897c:	e1a03be3 	mov	r3, r3, ror #23
+a0308980:	e50b3078 	str	r3, [fp, -#120]
+a0308984:	e51b2078 	ldr	r2, [fp, -#120]
+a0308988:	e51b306c 	ldr	r3, [fp, -#108]
+a030898c:	e0823003 	add	r3, r2, r3
+a0308990:	e50b3078 	str	r3, [fp, -#120]
+a0308994:	e51b2078 	ldr	r2, [fp, -#120]
+a0308998:	e51b306c 	ldr	r3, [fp, -#108]
+a030899c:	e0222003 	eor	r2, r2, r3
+a03089a0:	e51b3070 	ldr	r3, [fp, -#112]
+a03089a4:	e0022003 	and	r2, r2, r3
+a03089a8:	e51b306c 	ldr	r3, [fp, -#108]
+a03089ac:	e0222003 	eor	r2, r2, r3
+a03089b0:	e51b3050 	ldr	r3, [fp, -#80]
+a03089b4:	e0822003 	add	r2, r2, r3
+a03089b8:	e51b3074 	ldr	r3, [fp, -#116]
+a03089bc:	e0823003 	add	r3, r2, r3
+a03089c0:	e24336b2 	sub	r3, r3, #186646528	; 0xb200000
+a03089c4:	e2433aaf 	sub	r3, r3, #716800	; 0xaf000
+a03089c8:	e2433f9e 	sub	r3, r3, #632	; 0x278
+a03089cc:	e2433001 	sub	r3, r3, #1	; 0x1
+a03089d0:	e50b3074 	str	r3, [fp, -#116]
+a03089d4:	e51b3074 	ldr	r3, [fp, -#116]
+a03089d8:	e1a03963 	mov	r3, r3, ror #18
+a03089dc:	e50b3074 	str	r3, [fp, -#116]
+a03089e0:	e51b2074 	ldr	r2, [fp, -#116]
+a03089e4:	e51b3078 	ldr	r3, [fp, -#120]
+a03089e8:	e0823003 	add	r3, r2, r3
+a03089ec:	e50b3074 	str	r3, [fp, -#116]
+a03089f0:	e51b2074 	ldr	r2, [fp, -#116]
+a03089f4:	e51b3078 	ldr	r3, [fp, -#120]
+a03089f8:	e0222003 	eor	r2, r2, r3
+a03089fc:	e51b306c 	ldr	r3, [fp, -#108]
+a0308a00:	e0022003 	and	r2, r2, r3
+a0308a04:	e51b3078 	ldr	r3, [fp, -#120]
+a0308a08:	e0222003 	eor	r2, r2, r3
+a0308a0c:	e51b303c 	ldr	r3, [fp, -#60]
+a0308a10:	e0822003 	add	r2, r2, r3
+a0308a14:	e51b3070 	ldr	r3, [fp, -#112]
+a0308a18:	e0823003 	add	r3, r2, r3
+a0308a1c:	e2833445 	add	r3, r3, #1157627904	; 0x45000000
+a0308a20:	e283385a 	add	r3, r3, #5898240	; 0x5a0000
+a0308a24:	e2833d53 	add	r3, r3, #5312	; 0x14c0
+a0308a28:	e283302d 	add	r3, r3, #45	; 0x2d
+a0308a2c:	e50b3070 	str	r3, [fp, -#112]
+a0308a30:	e51b3070 	ldr	r3, [fp, -#112]
+a0308a34:	e1a03663 	mov	r3, r3, ror #12
+a0308a38:	e50b3070 	str	r3, [fp, -#112]
+a0308a3c:	e51b2070 	ldr	r2, [fp, -#112]
+a0308a40:	e51b3074 	ldr	r3, [fp, -#116]
+a0308a44:	e0823003 	add	r3, r2, r3
+a0308a48:	e50b3070 	str	r3, [fp, -#112]
+a0308a4c:	e51b2070 	ldr	r2, [fp, -#112]
+a0308a50:	e51b3074 	ldr	r3, [fp, -#116]
+a0308a54:	e0222003 	eor	r2, r2, r3
+a0308a58:	e51b3078 	ldr	r3, [fp, -#120]
+a0308a5c:	e0022003 	and	r2, r2, r3
+a0308a60:	e51b3074 	ldr	r3, [fp, -#116]
+a0308a64:	e0222003 	eor	r2, r2, r3
+a0308a68:	e51b3028 	ldr	r3, [fp, -#40]
+a0308a6c:	e0822003 	add	r2, r2, r3
+a0308a70:	e51b306c 	ldr	r3, [fp, -#108]
+a0308a74:	e0823003 	add	r3, r2, r3
+a0308a78:	e28334a9 	add	r3, r3, #-1459617792	; 0xa9000000
+a0308a7c:	e28338e3 	add	r3, r3, #14876672	; 0xe30000
+a0308a80:	e2833ce9 	add	r3, r3, #59648	; 0xe900
+a0308a84:	e2833005 	add	r3, r3, #5	; 0x5
+a0308a88:	e50b306c 	str	r3, [fp, -#108]
+a0308a8c:	e51b306c 	ldr	r3, [fp, -#108]
+a0308a90:	e1a03de3 	mov	r3, r3, ror #27
+a0308a94:	e50b306c 	str	r3, [fp, -#108]
+a0308a98:	e51b206c 	ldr	r2, [fp, -#108]
+a0308a9c:	e51b3070 	ldr	r3, [fp, -#112]
+a0308aa0:	e0823003 	add	r3, r2, r3
+a0308aa4:	e50b306c 	str	r3, [fp, -#108]
+a0308aa8:	e51b206c 	ldr	r2, [fp, -#108]
+a0308aac:	e51b3070 	ldr	r3, [fp, -#112]
+a0308ab0:	e0222003 	eor	r2, r2, r3
+a0308ab4:	e51b3074 	ldr	r3, [fp, -#116]
+a0308ab8:	e0022003 	and	r2, r2, r3
+a0308abc:	e51b3070 	ldr	r3, [fp, -#112]
+a0308ac0:	e0222003 	eor	r2, r2, r3
+a0308ac4:	e51b3054 	ldr	r3, [fp, -#84]
+a0308ac8:	e0822003 	add	r2, r2, r3
+a0308acc:	e51b3078 	ldr	r3, [fp, -#120]
+a0308ad0:	e0823003 	add	r3, r2, r3
+a0308ad4:	e2433631 	sub	r3, r3, #51380224	; 0x3100000
+a0308ad8:	e2433b17 	sub	r3, r3, #23552	; 0x5c00
+a0308adc:	e2433008 	sub	r3, r3, #8	; 0x8
+a0308ae0:	e50b3078 	str	r3, [fp, -#120]
+a0308ae4:	e51b3078 	ldr	r3, [fp, -#120]
+a0308ae8:	e1a03be3 	mov	r3, r3, ror #23
+a0308aec:	e50b3078 	str	r3, [fp, -#120]
+a0308af0:	e51b2078 	ldr	r2, [fp, -#120]
+a0308af4:	e51b306c 	ldr	r3, [fp, -#108]
+a0308af8:	e0823003 	add	r3, r2, r3
+a0308afc:	e50b3078 	str	r3, [fp, -#120]
+a0308b00:	e51b2078 	ldr	r2, [fp, -#120]
+a0308b04:	e51b306c 	ldr	r3, [fp, -#108]
+a0308b08:	e0222003 	eor	r2, r2, r3
+a0308b0c:	e51b3070 	ldr	r3, [fp, -#112]
+a0308b10:	e0022003 	and	r2, r2, r3
+a0308b14:	e51b306c 	ldr	r3, [fp, -#108]
+a0308b18:	e0222003 	eor	r2, r2, r3
+a0308b1c:	e51b3040 	ldr	r3, [fp, -#64]
+a0308b20:	e0822003 	add	r2, r2, r3
+a0308b24:	e51b3074 	ldr	r3, [fp, -#116]
+a0308b28:	e0823003 	add	r3, r2, r3
+a0308b2c:	e283331a 	add	r3, r3, #1744830464	; 0x68000000
+a0308b30:	e2433609 	sub	r3, r3, #9437184	; 0x900000
+a0308b34:	e2433cfd 	sub	r3, r3, #64768	; 0xfd00
+a0308b38:	e2433027 	sub	r3, r3, #39	; 0x27
+a0308b3c:	e50b3074 	str	r3, [fp, -#116]
+a0308b40:	e51b3074 	ldr	r3, [fp, -#116]
+a0308b44:	e1a03963 	mov	r3, r3, ror #18
+a0308b48:	e50b3074 	str	r3, [fp, -#116]
+a0308b4c:	e51b2074 	ldr	r2, [fp, -#116]
+a0308b50:	e51b3078 	ldr	r3, [fp, -#120]
+a0308b54:	e0823003 	add	r3, r2, r3
+a0308b58:	e50b3074 	str	r3, [fp, -#116]
+a0308b5c:	e51b2074 	ldr	r2, [fp, -#116]
+a0308b60:	e51b3078 	ldr	r3, [fp, -#120]
+a0308b64:	e0222003 	eor	r2, r2, r3
+a0308b68:	e51b306c 	ldr	r3, [fp, -#108]
+a0308b6c:	e0022003 	and	r2, r2, r3
+a0308b70:	e51b3078 	ldr	r3, [fp, -#120]
+a0308b74:	e0222003 	eor	r2, r2, r3
+a0308b78:	e51b302c 	ldr	r3, [fp, -#44]
+a0308b7c:	e0822003 	add	r2, r2, r3
+a0308b80:	e51b3070 	ldr	r3, [fp, -#112]
+a0308b84:	e0823003 	add	r3, r2, r3
+a0308b88:	e283348d 	add	r3, r3, #-1929379840	; 0x8d000000
+a0308b8c:	e28339a9 	add	r3, r3, #2768896	; 0x2a4000
+a0308b90:	e2833d32 	add	r3, r3, #3200	; 0xc80
+a0308b94:	e283300a 	add	r3, r3, #10	; 0xa
+a0308b98:	e50b3070 	str	r3, [fp, -#112]
+a0308b9c:	e51b3070 	ldr	r3, [fp, -#112]
+a0308ba0:	e1a03663 	mov	r3, r3, ror #12
+a0308ba4:	e50b3070 	str	r3, [fp, -#112]
+a0308ba8:	e51b2070 	ldr	r2, [fp, -#112]
+a0308bac:	e51b3074 	ldr	r3, [fp, -#116]
+a0308bb0:	e0823003 	add	r3, r2, r3
+a0308bb4:	e50b3070 	str	r3, [fp, -#112]
+a0308bb8:	e51b2070 	ldr	r2, [fp, -#112]
+a0308bbc:	e51b3074 	ldr	r3, [fp, -#116]
+a0308bc0:	e0222003 	eor	r2, r2, r3
+a0308bc4:	e51b3078 	ldr	r3, [fp, -#120]
+a0308bc8:	e0222003 	eor	r2, r2, r3
+a0308bcc:	e51b3048 	ldr	r3, [fp, -#72]
+a0308bd0:	e0822003 	add	r2, r2, r3
+a0308bd4:	e51b306c 	ldr	r3, [fp, -#108]
+a0308bd8:	e0823003 	add	r3, r2, r3
+a0308bdc:	e2433917 	sub	r3, r3, #376832	; 0x5c000
+a0308be0:	e2433e6b 	sub	r3, r3, #1712	; 0x6b0
+a0308be4:	e243300e 	sub	r3, r3, #14	; 0xe
+a0308be8:	e50b306c 	str	r3, [fp, -#108]
+a0308bec:	e51b306c 	ldr	r3, [fp, -#108]
+a0308bf0:	e1a03e63 	mov	r3, r3, ror #28
+a0308bf4:	e50b306c 	str	r3, [fp, -#108]
+a0308bf8:	e51b206c 	ldr	r2, [fp, -#108]
+a0308bfc:	e51b3070 	ldr	r3, [fp, -#112]
+a0308c00:	e0823003 	add	r3, r2, r3
+a0308c04:	e50b306c 	str	r3, [fp, -#108]
+a0308c08:	e51b206c 	ldr	r2, [fp, -#108]
+a0308c0c:	e51b3070 	ldr	r3, [fp, -#112]
+a0308c10:	e0222003 	eor	r2, r2, r3
+a0308c14:	e51b3074 	ldr	r3, [fp, -#116]
+a0308c18:	e0222003 	eor	r2, r2, r3
+a0308c1c:	e51b303c 	ldr	r3, [fp, -#60]
+a0308c20:	e0822003 	add	r2, r2, r3
+a0308c24:	e51b3078 	ldr	r3, [fp, -#120]
+a0308c28:	e0823003 	add	r3, r2, r3
+a0308c2c:	e2833487 	add	r3, r3, #-2030043136	; 0x87000000
+a0308c30:	e2833871 	add	r3, r3, #7405568	; 0x710000
+a0308c34:	e2833cf6 	add	r3, r3, #62976	; 0xf600
+a0308c38:	e2833081 	add	r3, r3, #129	; 0x81
+a0308c3c:	e50b3078 	str	r3, [fp, -#120]
+a0308c40:	e51b3078 	ldr	r3, [fp, -#120]
+a0308c44:	e1a03ae3 	mov	r3, r3, ror #21
+a0308c48:	e50b3078 	str	r3, [fp, -#120]
+a0308c4c:	e51b2078 	ldr	r2, [fp, -#120]
+a0308c50:	e51b306c 	ldr	r3, [fp, -#108]
+a0308c54:	e0823003 	add	r3, r2, r3
+a0308c58:	e50b3078 	str	r3, [fp, -#120]
+a0308c5c:	e51b2078 	ldr	r2, [fp, -#120]
+a0308c60:	e51b306c 	ldr	r3, [fp, -#108]
+a0308c64:	e0222003 	eor	r2, r2, r3
+a0308c68:	e51b3070 	ldr	r3, [fp, -#112]
+a0308c6c:	e0222003 	eor	r2, r2, r3
+a0308c70:	e51b3030 	ldr	r3, [fp, -#48]
+a0308c74:	e0822003 	add	r2, r2, r3
+a0308c78:	e51b3074 	ldr	r3, [fp, -#116]
+a0308c7c:	e0823003 	add	r3, r2, r3
+a0308c80:	e283346d 	add	r3, r3, #1828716544	; 0x6d000000
+a0308c84:	e283389d 	add	r3, r3, #10289152	; 0x9d0000
+a0308c88:	e2833c61 	add	r3, r3, #24832	; 0x6100
+a0308c8c:	e2833022 	add	r3, r3, #34	; 0x22
+a0308c90:	e50b3074 	str	r3, [fp, -#116]
+a0308c94:	e51b3074 	ldr	r3, [fp, -#116]
+a0308c98:	e1a03863 	mov	r3, r3, ror #16
+a0308c9c:	e50b3074 	str	r3, [fp, -#116]
+a0308ca0:	e51b2074 	ldr	r2, [fp, -#116]
+a0308ca4:	e51b3078 	ldr	r3, [fp, -#120]
+a0308ca8:	e0823003 	add	r3, r2, r3
+a0308cac:	e50b3074 	str	r3, [fp, -#116]
+a0308cb0:	e51b2074 	ldr	r2, [fp, -#116]
+a0308cb4:	e51b3078 	ldr	r3, [fp, -#120]
+a0308cb8:	e0222003 	eor	r2, r2, r3
+a0308cbc:	e51b306c 	ldr	r3, [fp, -#108]
+a0308cc0:	e0222003 	eor	r2, r2, r3
+a0308cc4:	e51b3024 	ldr	r3, [fp, -#36]
+a0308cc8:	e0822003 	add	r2, r2, r3
+a0308ccc:	e51b3070 	ldr	r3, [fp, -#112]
+a0308cd0:	e0823003 	add	r3, r2, r3
+a0308cd4:	e2433786 	sub	r3, r3, #35127296	; 0x2180000
+a0308cd8:	e2433bb1 	sub	r3, r3, #181248	; 0x2c400
+a0308cdc:	e2433ffd 	sub	r3, r3, #1012	; 0x3f4
+a0308ce0:	e50b3070 	str	r3, [fp, -#112]
+a0308ce4:	e51b3070 	ldr	r3, [fp, -#112]
+a0308ce8:	e1a034e3 	mov	r3, r3, ror #9
+a0308cec:	e50b3070 	str	r3, [fp, -#112]
+a0308cf0:	e51b2070 	ldr	r2, [fp, -#112]
+a0308cf4:	e51b3074 	ldr	r3, [fp, -#116]
+a0308cf8:	e0823003 	add	r3, r2, r3
+a0308cfc:	e50b3070 	str	r3, [fp, -#112]
+a0308d00:	e51b2070 	ldr	r2, [fp, -#112]
+a0308d04:	e51b3074 	ldr	r3, [fp, -#116]
+a0308d08:	e0222003 	eor	r2, r2, r3
+a0308d0c:	e51b3078 	ldr	r3, [fp, -#120]
+a0308d10:	e0222003 	eor	r2, r2, r3
+a0308d14:	e51b3058 	ldr	r3, [fp, -#88]
+a0308d18:	e0822003 	add	r2, r2, r3
+a0308d1c:	e51b306c 	ldr	r3, [fp, -#108]
+a0308d20:	e0823003 	add	r3, r2, r3
+a0308d24:	e2833329 	add	r3, r3, #-1543503872	; 0xa4000000
+a0308d28:	e28338be 	add	r3, r3, #12451840	; 0xbe0000
+a0308d2c:	e2833cea 	add	r3, r3, #59904	; 0xea00
+a0308d30:	e2833044 	add	r3, r3, #68	; 0x44
+a0308d34:	e50b306c 	str	r3, [fp, -#108]
+a0308d38:	e51b306c 	ldr	r3, [fp, -#108]
+a0308d3c:	e1a03e63 	mov	r3, r3, ror #28
+a0308d40:	e50b306c 	str	r3, [fp, -#108]
+a0308d44:	e51b206c 	ldr	r2, [fp, -#108]
+a0308d48:	e51b3070 	ldr	r3, [fp, -#112]
+a0308d4c:	e0823003 	add	r3, r2, r3
+a0308d50:	e50b306c 	str	r3, [fp, -#108]
+a0308d54:	e51b206c 	ldr	r2, [fp, -#108]
+a0308d58:	e51b3070 	ldr	r3, [fp, -#112]
+a0308d5c:	e0222003 	eor	r2, r2, r3
+a0308d60:	e51b3074 	ldr	r3, [fp, -#116]
+a0308d64:	e0222003 	eor	r2, r2, r3
+a0308d68:	e51b304c 	ldr	r3, [fp, -#76]
+a0308d6c:	e0822003 	add	r2, r2, r3
+a0308d70:	e51b3078 	ldr	r3, [fp, -#120]
+a0308d74:	e0823003 	add	r3, r2, r3
+a0308d78:	e2833313 	add	r3, r3, #1275068416	; 0x4c000000
+a0308d7c:	e2433821 	sub	r3, r3, #2162688	; 0x210000
+a0308d80:	e2433dc1 	sub	r3, r3, #12352	; 0x3040
+a0308d84:	e2433017 	sub	r3, r3, #23	; 0x17
+a0308d88:	e50b3078 	str	r3, [fp, -#120]
+a0308d8c:	e51b3078 	ldr	r3, [fp, -#120]
+a0308d90:	e1a03ae3 	mov	r3, r3, ror #21
+a0308d94:	e50b3078 	str	r3, [fp, -#120]
+a0308d98:	e51b2078 	ldr	r2, [fp, -#120]
+a0308d9c:	e51b306c 	ldr	r3, [fp, -#108]
+a0308da0:	e0823003 	add	r3, r2, r3
+a0308da4:	e50b3078 	str	r3, [fp, -#120]
+a0308da8:	e51b2078 	ldr	r2, [fp, -#120]
+a0308dac:	e51b306c 	ldr	r3, [fp, -#108]
+a0308db0:	e0222003 	eor	r2, r2, r3
+a0308db4:	e51b3070 	ldr	r3, [fp, -#112]
+a0308db8:	e0222003 	eor	r2, r2, r3
+a0308dbc:	e51b3040 	ldr	r3, [fp, -#64]
+a0308dc0:	e0822003 	add	r2, r2, r3
+a0308dc4:	e51b3074 	ldr	r3, [fp, -#116]
+a0308dc8:	e0823003 	add	r3, r2, r3
+a0308dcc:	e2433525 	sub	r3, r3, #155189248	; 0x9400000
+a0308dd0:	e2433a4b 	sub	r3, r3, #307200	; 0x4b000
+a0308dd4:	e2433e4a 	sub	r3, r3, #1184	; 0x4a0
+a0308dd8:	e50b3074 	str	r3, [fp, -#116]
+a0308ddc:	e51b3074 	ldr	r3, [fp, -#116]
+a0308de0:	e1a03863 	mov	r3, r3, ror #16
+a0308de4:	e50b3074 	str	r3, [fp, -#116]
+a0308de8:	e51b2074 	ldr	r2, [fp, -#116]
+a0308dec:	e51b3078 	ldr	r3, [fp, -#120]
+a0308df0:	e0823003 	add	r3, r2, r3
+a0308df4:	e50b3074 	str	r3, [fp, -#116]
+a0308df8:	e51b2074 	ldr	r2, [fp, -#116]
+a0308dfc:	e51b3078 	ldr	r3, [fp, -#120]
+a0308e00:	e0222003 	eor	r2, r2, r3
+a0308e04:	e51b306c 	ldr	r3, [fp, -#108]
+a0308e08:	e0222003 	eor	r2, r2, r3
+a0308e0c:	e51b3034 	ldr	r3, [fp, -#52]
+a0308e10:	e0822003 	add	r2, r2, r3
+a0308e14:	e51b3070 	ldr	r3, [fp, -#112]
+a0308e18:	e0823003 	add	r3, r2, r3
+a0308e1c:	e28334bf 	add	r3, r3, #-1090519040	; 0xbf000000
+a0308e20:	e2433501 	sub	r3, r3, #4194304	; 0x400000
+a0308e24:	e2433c43 	sub	r3, r3, #17152	; 0x4300
+a0308e28:	e2433090 	sub	r3, r3, #144	; 0x90
+a0308e2c:	e50b3070 	str	r3, [fp, -#112]
+a0308e30:	e51b3070 	ldr	r3, [fp, -#112]
+a0308e34:	e1a034e3 	mov	r3, r3, ror #9
+a0308e38:	e50b3070 	str	r3, [fp, -#112]
+a0308e3c:	e51b2070 	ldr	r2, [fp, -#112]
+a0308e40:	e51b3074 	ldr	r3, [fp, -#116]
+a0308e44:	e0823003 	add	r3, r2, r3
+a0308e48:	e50b3070 	str	r3, [fp, -#112]
+a0308e4c:	e51b2070 	ldr	r2, [fp, -#112]
+a0308e50:	e51b3074 	ldr	r3, [fp, -#116]
+a0308e54:	e0222003 	eor	r2, r2, r3
+a0308e58:	e51b3078 	ldr	r3, [fp, -#120]
+a0308e5c:	e0222003 	eor	r2, r2, r3
+a0308e60:	e51b3028 	ldr	r3, [fp, -#40]
+a0308e64:	e0822003 	add	r2, r2, r3
+a0308e68:	e51b306c 	ldr	r3, [fp, -#108]
+a0308e6c:	e0823003 	add	r3, r2, r3
+a0308e70:	e2833429 	add	r3, r3, #687865856	; 0x29000000
+a0308e74:	e2433719 	sub	r3, r3, #6553600	; 0x640000
+a0308e78:	e2433c81 	sub	r3, r3, #33024	; 0x8100
+a0308e7c:	e243303a 	sub	r3, r3, #58	; 0x3a
+a0308e80:	e50b306c 	str	r3, [fp, -#108]
+a0308e84:	e51b306c 	ldr	r3, [fp, -#108]
+a0308e88:	e1a03e63 	mov	r3, r3, ror #28
+a0308e8c:	e50b306c 	str	r3, [fp, -#108]
+a0308e90:	e51b206c 	ldr	r2, [fp, -#108]
+a0308e94:	e51b3070 	ldr	r3, [fp, -#112]
+a0308e98:	e0823003 	add	r3, r2, r3
+a0308e9c:	e50b306c 	str	r3, [fp, -#108]
+a0308ea0:	e51b206c 	ldr	r2, [fp, -#108]
+a0308ea4:	e51b3070 	ldr	r3, [fp, -#112]
+a0308ea8:	e0222003 	eor	r2, r2, r3
+a0308eac:	e51b3074 	ldr	r3, [fp, -#116]
+a0308eb0:	e0222003 	eor	r2, r2, r3
+a0308eb4:	e51b305c 	ldr	r3, [fp, -#92]
+a0308eb8:	e0822003 	add	r2, r2, r3
+a0308ebc:	e51b3078 	ldr	r3, [fp, -#120]
+a0308ec0:	e0823003 	add	r3, r2, r3
+a0308ec4:	e2433555 	sub	r3, r3, #356515840	; 0x15400000
+a0308ec8:	e243397b 	sub	r3, r3, #2015232	; 0x1ec000
+a0308ecc:	e2433b06 	sub	r3, r3, #6144	; 0x1800
+a0308ed0:	e2433006 	sub	r3, r3, #6	; 0x6
+a0308ed4:	e50b3078 	str	r3, [fp, -#120]
+a0308ed8:	e51b3078 	ldr	r3, [fp, -#120]
+a0308edc:	e1a03ae3 	mov	r3, r3, ror #21
+a0308ee0:	e50b3078 	str	r3, [fp, -#120]
+a0308ee4:	e51b2078 	ldr	r2, [fp, -#120]
+a0308ee8:	e51b306c 	ldr	r3, [fp, -#108]
+a0308eec:	e0823003 	add	r3, r2, r3
+a0308ef0:	e50b3078 	str	r3, [fp, -#120]
+a0308ef4:	e51b2078 	ldr	r2, [fp, -#120]
+a0308ef8:	e51b306c 	ldr	r3, [fp, -#108]
+a0308efc:	e0222003 	eor	r2, r2, r3
+a0308f00:	e51b3070 	ldr	r3, [fp, -#112]
+a0308f04:	e0222003 	eor	r2, r2, r3
+a0308f08:	e51b3050 	ldr	r3, [fp, -#80]
+a0308f0c:	e0822003 	add	r2, r2, r3
+a0308f10:	e51b3074 	ldr	r3, [fp, -#116]
+a0308f14:	e0823003 	add	r3, r2, r3
+a0308f18:	e2833335 	add	r3, r3, #-738197504	; 0xd4000000
+a0308f1c:	e28338ef 	add	r3, r3, #15663104	; 0xef0000
+a0308f20:	e2833dc2 	add	r3, r3, #12416	; 0x3080
+a0308f24:	e2833005 	add	r3, r3, #5	; 0x5
+a0308f28:	e50b3074 	str	r3, [fp, -#116]
+a0308f2c:	e51b3074 	ldr	r3, [fp, -#116]
+a0308f30:	e1a03863 	mov	r3, r3, ror #16
+a0308f34:	e50b3074 	str	r3, [fp, -#116]
+a0308f38:	e51b2074 	ldr	r2, [fp, -#116]
+a0308f3c:	e51b3078 	ldr	r3, [fp, -#120]
+a0308f40:	e0823003 	add	r3, r2, r3
+a0308f44:	e50b3074 	str	r3, [fp, -#116]
+a0308f48:	e51b2074 	ldr	r2, [fp, -#116]
+a0308f4c:	e51b3078 	ldr	r3, [fp, -#120]
+a0308f50:	e0222003 	eor	r2, r2, r3
+a0308f54:	e51b306c 	ldr	r3, [fp, -#108]
+a0308f58:	e0222003 	eor	r2, r2, r3
+a0308f5c:	e51b3044 	ldr	r3, [fp, -#68]
+a0308f60:	e0822003 	add	r2, r2, r3
+a0308f64:	e51b3070 	ldr	r3, [fp, -#112]
+a0308f68:	e0823003 	add	r3, r2, r3
+a0308f6c:	e2833512 	add	r3, r3, #75497472	; 0x4800000
+a0308f70:	e2833a81 	add	r3, r3, #528384	; 0x81000
+a0308f74:	e2833c0d 	add	r3, r3, #3328	; 0xd00
+a0308f78:	e2833005 	add	r3, r3, #5	; 0x5
+a0308f7c:	e50b3070 	str	r3, [fp, -#112]
+a0308f80:	e51b3070 	ldr	r3, [fp, -#112]
+a0308f84:	e1a034e3 	mov	r3, r3, ror #9
+a0308f88:	e50b3070 	str	r3, [fp, -#112]
+a0308f8c:	e51b2070 	ldr	r2, [fp, -#112]
+a0308f90:	e51b3074 	ldr	r3, [fp, -#116]
+a0308f94:	e0823003 	add	r3, r2, r3
+a0308f98:	e50b3070 	str	r3, [fp, -#112]
+a0308f9c:	e51b2070 	ldr	r2, [fp, -#112]
+a0308fa0:	e51b3074 	ldr	r3, [fp, -#116]
+a0308fa4:	e0222003 	eor	r2, r2, r3
+a0308fa8:	e51b3078 	ldr	r3, [fp, -#120]
+a0308fac:	e0222003 	eor	r2, r2, r3
+a0308fb0:	e51b3038 	ldr	r3, [fp, -#56]
+a0308fb4:	e0822003 	add	r2, r2, r3
+a0308fb8:	e51b306c 	ldr	r3, [fp, -#108]
+a0308fbc:	e0823003 	add	r3, r2, r3
+a0308fc0:	e28334d9 	add	r3, r3, #-654311424	; 0xd9000000
+a0308fc4:	e2833735 	add	r3, r3, #13893632	; 0xd40000
+a0308fc8:	e2833a0d 	add	r3, r3, #53248	; 0xd000
+a0308fcc:	e2833039 	add	r3, r3, #57	; 0x39
+a0308fd0:	e50b306c 	str	r3, [fp, -#108]
+a0308fd4:	e51b306c 	ldr	r3, [fp, -#108]
+a0308fd8:	e1a03e63 	mov	r3, r3, ror #28
+a0308fdc:	e50b306c 	str	r3, [fp, -#108]
+a0308fe0:	e51b206c 	ldr	r2, [fp, -#108]
+a0308fe4:	e51b3070 	ldr	r3, [fp, -#112]
+a0308fe8:	e0823003 	add	r3, r2, r3
+a0308fec:	e50b306c 	str	r3, [fp, -#108]
+a0308ff0:	e51b206c 	ldr	r2, [fp, -#108]
+a0308ff4:	e51b3070 	ldr	r3, [fp, -#112]
+a0308ff8:	e0222003 	eor	r2, r2, r3
+a0308ffc:	e51b3074 	ldr	r3, [fp, -#116]
+a0309000:	e0222003 	eor	r2, r2, r3
+a0309004:	e51b302c 	ldr	r3, [fp, -#44]
+a0309008:	e0822003 	add	r2, r2, r3
+a030900c:	e51b3078 	ldr	r3, [fp, -#120]
+a0309010:	e0823003 	add	r3, r2, r3
+a0309014:	e28334e7 	add	r3, r3, #-419430400	; 0xe7000000
+a0309018:	e2433991 	sub	r3, r3, #2375680	; 0x244000
+a030901c:	e2433c26 	sub	r3, r3, #9728	; 0x2600
+a0309020:	e243301b 	sub	r3, r3, #27	; 0x1b
+a0309024:	e50b3078 	str	r3, [fp, -#120]
+a0309028:	e51b3078 	ldr	r3, [fp, -#120]
+a030902c:	e1a03ae3 	mov	r3, r3, ror #21
+a0309030:	e50b3078 	str	r3, [fp, -#120]
+a0309034:	e51b2078 	ldr	r2, [fp, -#120]
+a0309038:	e51b306c 	ldr	r3, [fp, -#108]
+a030903c:	e0823003 	add	r3, r2, r3
+a0309040:	e50b3078 	str	r3, [fp, -#120]
+a0309044:	e51b2078 	ldr	r2, [fp, -#120]
+a0309048:	e51b306c 	ldr	r3, [fp, -#108]
+a030904c:	e0222003 	eor	r2, r2, r3
+a0309050:	e51b3070 	ldr	r3, [fp, -#112]
+a0309054:	e0222003 	eor	r2, r2, r3
+a0309058:	e51b3020 	ldr	r3, [fp, -#32]
+a030905c:	e0822003 	add	r2, r2, r3
+a0309060:	e51b3074 	ldr	r3, [fp, -#116]
+a0309064:	e0823003 	add	r3, r2, r3
+a0309068:	e243328e 	sub	r3, r3, #-536870904	; 0xe0000008
+a030906c:	e243385d 	sub	r3, r3, #6094848	; 0x5d0000
+a0309070:	e2433c83 	sub	r3, r3, #33536	; 0x8300
+a0309074:	e50b3074 	str	r3, [fp, -#116]
+a0309078:	e51b3074 	ldr	r3, [fp, -#116]
+a030907c:	e1a03863 	mov	r3, r3, ror #16
+a0309080:	e50b3074 	str	r3, [fp, -#116]
+a0309084:	e51b2074 	ldr	r2, [fp, -#116]
+a0309088:	e51b3078 	ldr	r3, [fp, -#120]
+a030908c:	e0823003 	add	r3, r2, r3
+a0309090:	e50b3074 	str	r3, [fp, -#116]
+a0309094:	e51b2074 	ldr	r2, [fp, -#116]
+a0309098:	e51b3078 	ldr	r3, [fp, -#120]
+a030909c:	e0222003 	eor	r2, r2, r3
+a03090a0:	e51b306c 	ldr	r3, [fp, -#108]
+a03090a4:	e0222003 	eor	r2, r2, r3
+a03090a8:	e51b3054 	ldr	r3, [fp, -#84]
+a03090ac:	e0822003 	add	r2, r2, r3
+a03090b0:	e51b3070 	ldr	r3, [fp, -#112]
+a03090b4:	e0823003 	add	r3, r2, r3
+a03090b8:	e2833331 	add	r3, r3, #-1006632960	; 0xc4000000
+a03090bc:	e283372b 	add	r3, r3, #11272192	; 0xac0000
+a03090c0:	e2833c56 	add	r3, r3, #22016	; 0x5600
+a03090c4:	e2833065 	add	r3, r3, #101	; 0x65
+a03090c8:	e50b3070 	str	r3, [fp, -#112]
+a03090cc:	e51b3070 	ldr	r3, [fp, -#112]
+a03090d0:	e1a034e3 	mov	r3, r3, ror #9
+a03090d4:	e50b3070 	str	r3, [fp, -#112]
+a03090d8:	e51b2070 	ldr	r2, [fp, -#112]
+a03090dc:	e51b3074 	ldr	r3, [fp, -#116]
+a03090e0:	e0823003 	add	r3, r2, r3
+a03090e4:	e50b3070 	str	r3, [fp, -#112]
+a03090e8:	e51b3078 	ldr	r3, [fp, -#120]
+a03090ec:	e1e02003 	mvn	r2, r3
+a03090f0:	e51b3070 	ldr	r3, [fp, -#112]
+a03090f4:	e1822003 	orr	r2, r2, r3
+a03090f8:	e51b3074 	ldr	r3, [fp, -#116]
+a03090fc:	e0222003 	eor	r2, r2, r3
+a0309100:	e51b305c 	ldr	r3, [fp, -#92]
+a0309104:	e0822003 	add	r2, r2, r3
+a0309108:	e51b306c 	ldr	r3, [fp, -#108]
+a030910c:	e0823003 	add	r3, r2, r3
+a0309110:	e283333d 	add	r3, r3, #-201326592	; 0xf4000000
+a0309114:	e2833829 	add	r3, r3, #2686976	; 0x290000
+a0309118:	e2833d89 	add	r3, r3, #8768	; 0x2240
+a030911c:	e2833004 	add	r3, r3, #4	; 0x4
+a0309120:	e50b306c 	str	r3, [fp, -#108]
+a0309124:	e51b306c 	ldr	r3, [fp, -#108]
+a0309128:	e1a03d63 	mov	r3, r3, ror #26
+a030912c:	e50b306c 	str	r3, [fp, -#108]
+a0309130:	e51b206c 	ldr	r2, [fp, -#108]
+a0309134:	e51b3070 	ldr	r3, [fp, -#112]
+a0309138:	e0823003 	add	r3, r2, r3
+a030913c:	e50b306c 	str	r3, [fp, -#108]
+a0309140:	e51b3074 	ldr	r3, [fp, -#116]
+a0309144:	e1e02003 	mvn	r2, r3
+a0309148:	e51b306c 	ldr	r3, [fp, -#108]
+a030914c:	e1822003 	orr	r2, r2, r3
+a0309150:	e51b3070 	ldr	r3, [fp, -#112]
+a0309154:	e0222003 	eor	r2, r2, r3
+a0309158:	e51b3040 	ldr	r3, [fp, -#64]
+a030915c:	e0822003 	add	r2, r2, r3
+a0309160:	e51b3078 	ldr	r3, [fp, -#120]
+a0309164:	e0823003 	add	r3, r2, r3
+a0309168:	e2833311 	add	r3, r3, #1140850688	; 0x44000000
+a030916c:	e24338d5 	sub	r3, r3, #13959168	; 0xd50000
+a0309170:	e2433069 	sub	r3, r3, #105	; 0x69
+a0309174:	e50b3078 	str	r3, [fp, -#120]
+a0309178:	e51b3078 	ldr	r3, [fp, -#120]
+a030917c:	e1a03b63 	mov	r3, r3, ror #22
+a0309180:	e50b3078 	str	r3, [fp, -#120]
+a0309184:	e51b2078 	ldr	r2, [fp, -#120]
+a0309188:	e51b306c 	ldr	r3, [fp, -#108]
+a030918c:	e0823003 	add	r3, r2, r3
+a0309190:	e50b3078 	str	r3, [fp, -#120]
+a0309194:	e51b3070 	ldr	r3, [fp, -#112]
+a0309198:	e1e02003 	mvn	r2, r3
+a030919c:	e51b3078 	ldr	r3, [fp, -#120]
+a03091a0:	e1822003 	orr	r2, r2, r3
+a03091a4:	e51b306c 	ldr	r3, [fp, -#108]
+a03091a8:	e0222003 	eor	r2, r2, r3
+a03091ac:	e51b3024 	ldr	r3, [fp, -#36]
+a03091b0:	e0822003 	add	r2, r2, r3
+a03091b4:	e51b3074 	ldr	r3, [fp, -#116]
+a03091b8:	e0823003 	add	r3, r2, r3
+a03091bc:	e28334ab 	add	r3, r3, #-1426063360	; 0xab000000
+a03091c0:	e2833725 	add	r3, r3, #9699328	; 0x940000
+a03091c4:	e2833d8e 	add	r3, r3, #9088	; 0x2380
+a03091c8:	e2833027 	add	r3, r3, #39	; 0x27
+a03091cc:	e50b3074 	str	r3, [fp, -#116]
+a03091d0:	e51b3074 	ldr	r3, [fp, -#116]
+a03091d4:	e1a038e3 	mov	r3, r3, ror #17
+a03091d8:	e50b3074 	str	r3, [fp, -#116]
+a03091dc:	e51b2074 	ldr	r2, [fp, -#116]
+a03091e0:	e51b3078 	ldr	r3, [fp, -#120]
+a03091e4:	e0823003 	add	r3, r2, r3
+a03091e8:	e50b3074 	str	r3, [fp, -#116]
+a03091ec:	e51b306c 	ldr	r3, [fp, -#108]
+a03091f0:	e1e02003 	mvn	r2, r3
+a03091f4:	e51b3074 	ldr	r3, [fp, -#116]
+a03091f8:	e1822003 	orr	r2, r2, r3
+a03091fc:	e51b3078 	ldr	r3, [fp, -#120]
+a0309200:	e0222003 	eor	r2, r2, r3
+a0309204:	e51b3048 	ldr	r3, [fp, -#72]
+a0309208:	e0822003 	add	r2, r2, r3
+a030920c:	e51b3070 	ldr	r3, [fp, -#112]
+a0309210:	e0823003 	add	r3, r2, r3
+a0309214:	e283333f 	add	r3, r3, #-67108864	; 0xfc000000
+a0309218:	e2833893 	add	r3, r3, #9633792	; 0x930000
+a030921c:	e2833a0a 	add	r3, r3, #40960	; 0xa000
+a0309220:	e2833039 	add	r3, r3, #57	; 0x39
+a0309224:	e50b3070 	str	r3, [fp, -#112]
+a0309228:	e51b3070 	ldr	r3, [fp, -#112]
+a030922c:	e1a035e3 	mov	r3, r3, ror #11
+a0309230:	e50b3070 	str	r3, [fp, -#112]
+a0309234:	e51b2070 	ldr	r2, [fp, -#112]
+a0309238:	e51b3074 	ldr	r3, [fp, -#116]
+a030923c:	e0823003 	add	r3, r2, r3
+a0309240:	e50b3070 	str	r3, [fp, -#112]
+a0309244:	e51b3078 	ldr	r3, [fp, -#120]
+a0309248:	e1e02003 	mvn	r2, r3
+a030924c:	e51b3070 	ldr	r3, [fp, -#112]
+a0309250:	e1822003 	orr	r2, r2, r3
+a0309254:	e51b3074 	ldr	r3, [fp, -#116]
+a0309258:	e0222003 	eor	r2, r2, r3
+a030925c:	e51b302c 	ldr	r3, [fp, -#44]
+a0309260:	e0822003 	add	r2, r2, r3
+a0309264:	e51b306c 	ldr	r3, [fp, -#108]
+a0309268:	e0823003 	add	r3, r2, r3
+a030926c:	e2833466 	add	r3, r3, #1711276032	; 0x66000000
+a0309270:	e2433729 	sub	r3, r3, #10747904	; 0xa40000
+a0309274:	e2433ca6 	sub	r3, r3, #42496	; 0xa600
+a0309278:	e243303d 	sub	r3, r3, #61	; 0x3d
+a030927c:	e50b306c 	str	r3, [fp, -#108]
+a0309280:	e51b306c 	ldr	r3, [fp, -#108]
+a0309284:	e1a03d63 	mov	r3, r3, ror #26
+a0309288:	e50b306c 	str	r3, [fp, -#108]
+a030928c:	e51b206c 	ldr	r2, [fp, -#108]
+a0309290:	e51b3070 	ldr	r3, [fp, -#112]
+a0309294:	e0823003 	add	r3, r2, r3
+a0309298:	e50b306c 	str	r3, [fp, -#108]
+a030929c:	e51b3074 	ldr	r3, [fp, -#116]
+a03092a0:	e1e02003 	mvn	r2, r3
+a03092a4:	e51b306c 	ldr	r3, [fp, -#108]
+a03092a8:	e1822003 	orr	r2, r2, r3
+a03092ac:	e51b3070 	ldr	r3, [fp, -#112]
+a03092b0:	e0222003 	eor	r2, r2, r3
+a03092b4:	e51b3050 	ldr	r3, [fp, -#80]
+a03092b8:	e0822003 	add	r2, r2, r3
+a03092bc:	e51b3078 	ldr	r3, [fp, -#120]
+a03092c0:	e0823003 	add	r3, r2, r3
+a03092c4:	e283348f 	add	r3, r3, #-1895825408	; 0x8f000000
+a03092c8:	e2833933 	add	r3, r3, #835584	; 0xcc000
+a03092cc:	e2833ec9 	add	r3, r3, #3216	; 0xc90
+a03092d0:	e2833002 	add	r3, r3, #2	; 0x2
+a03092d4:	e50b3078 	str	r3, [fp, -#120]
+a03092d8:	e51b3078 	ldr	r3, [fp, -#120]
+a03092dc:	e1a03b63 	mov	r3, r3, ror #22
+a03092e0:	e50b3078 	str	r3, [fp, -#120]
+a03092e4:	e51b2078 	ldr	r2, [fp, -#120]
+a03092e8:	e51b306c 	ldr	r3, [fp, -#108]
+a03092ec:	e0823003 	add	r3, r2, r3
+a03092f0:	e50b3078 	str	r3, [fp, -#120]
+a03092f4:	e51b3070 	ldr	r3, [fp, -#112]
+a03092f8:	e1e02003 	mvn	r2, r3
+a03092fc:	e51b3078 	ldr	r3, [fp, -#120]
+a0309300:	e1822003 	orr	r2, r2, r3
+a0309304:	e51b306c 	ldr	r3, [fp, -#108]
+a0309308:	e0222003 	eor	r2, r2, r3
+a030930c:	e51b3034 	ldr	r3, [fp, -#52]
+a0309310:	e0822003 	add	r2, r2, r3
+a0309314:	e51b3074 	ldr	r3, [fp, -#116]
+a0309318:	e0823003 	add	r3, r2, r3
+a030931c:	e2433601 	sub	r3, r3, #1048576	; 0x100000
+a0309320:	e2433d2e 	sub	r3, r3, #2944	; 0xb80
+a0309324:	e2433003 	sub	r3, r3, #3	; 0x3
+a0309328:	e50b3074 	str	r3, [fp, -#116]
+a030932c:	e51b3074 	ldr	r3, [fp, -#116]
+a0309330:	e1a038e3 	mov	r3, r3, ror #17
+a0309334:	e50b3074 	str	r3, [fp, -#116]
+a0309338:	e51b2074 	ldr	r2, [fp, -#116]
+a030933c:	e51b3078 	ldr	r3, [fp, -#120]
+a0309340:	e0823003 	add	r3, r2, r3
+a0309344:	e50b3074 	str	r3, [fp, -#116]
+a0309348:	e51b306c 	ldr	r3, [fp, -#108]
+a030934c:	e1e02003 	mvn	r2, r3
+a0309350:	e51b3074 	ldr	r3, [fp, -#116]
+a0309354:	e1822003 	orr	r2, r2, r3
+a0309358:	e51b3078 	ldr	r3, [fp, -#120]
+a030935c:	e0222003 	eor	r2, r2, r3
+a0309360:	e51b3058 	ldr	r3, [fp, -#88]
+a0309364:	e0822003 	add	r2, r2, r3
+a0309368:	e51b3070 	ldr	r3, [fp, -#112]
+a030936c:	e0823003 	add	r3, r2, r3
+a0309370:	e2833485 	add	r3, r3, #-2063597568	; 0x85000000
+a0309374:	e2833721 	add	r3, r3, #8650752	; 0x840000
+a0309378:	e2833c5d 	add	r3, r3, #23808	; 0x5d00
+a030937c:	e28330d1 	add	r3, r3, #209	; 0xd1
+a0309380:	e50b3070 	str	r3, [fp, -#112]
+a0309384:	e51b3070 	ldr	r3, [fp, -#112]
+a0309388:	e1a035e3 	mov	r3, r3, ror #11
+a030938c:	e50b3070 	str	r3, [fp, -#112]
+a0309390:	e51b2070 	ldr	r2, [fp, -#112]
+a0309394:	e51b3074 	ldr	r3, [fp, -#116]
+a0309398:	e0823003 	add	r3, r2, r3
+a030939c:	e50b3070 	str	r3, [fp, -#112]
+a03093a0:	e51b3078 	ldr	r3, [fp, -#120]
+a03093a4:	e1e02003 	mvn	r2, r3
+a03093a8:	e51b3070 	ldr	r3, [fp, -#112]
+a03093ac:	e1822003 	orr	r2, r2, r3
+a03093b0:	e51b3074 	ldr	r3, [fp, -#116]
+a03093b4:	e0222003 	eor	r2, r2, r3
+a03093b8:	e51b303c 	ldr	r3, [fp, -#60]
+a03093bc:	e0822003 	add	r2, r2, r3
+a03093c0:	e51b306c 	ldr	r3, [fp, -#108]
+a03093c4:	e0823003 	add	r3, r2, r3
+a03093c8:	e2833207 	add	r3, r3, #1879048192	; 0x70000000
+a03093cc:	e2433857 	sub	r3, r3, #5701632	; 0x570000
+a03093d0:	e2433c81 	sub	r3, r3, #33024	; 0x8100
+a03093d4:	e24330b1 	sub	r3, r3, #177	; 0xb1
+a03093d8:	e50b306c 	str	r3, [fp, -#108]
+a03093dc:	e51b306c 	ldr	r3, [fp, -#108]
+a03093e0:	e1a03d63 	mov	r3, r3, ror #26
+a03093e4:	e50b306c 	str	r3, [fp, -#108]
+a03093e8:	e51b206c 	ldr	r2, [fp, -#108]
+a03093ec:	e51b3070 	ldr	r3, [fp, -#112]
+a03093f0:	e0823003 	add	r3, r2, r3
+a03093f4:	e50b306c 	str	r3, [fp, -#108]
+a03093f8:	e51b3074 	ldr	r3, [fp, -#116]
+a03093fc:	e1e02003 	mvn	r2, r3
+a0309400:	e51b306c 	ldr	r3, [fp, -#108]
+a0309404:	e1822003 	orr	r2, r2, r3
+a0309408:	e51b3070 	ldr	r3, [fp, -#112]
+a030940c:	e0222003 	eor	r2, r2, r3
+a0309410:	e51b3020 	ldr	r3, [fp, -#32]
+a0309414:	e0822003 	add	r2, r2, r3
+a0309418:	e51b3078 	ldr	r3, [fp, -#120]
+a030941c:	e0823003 	add	r3, r2, r3
+a0309420:	e243361d 	sub	r3, r3, #30408704	; 0x1d00000
+a0309424:	e2433bc6 	sub	r3, r3, #202752	; 0x31800
+a0309428:	e2433e12 	sub	r3, r3, #288	; 0x120
+a030942c:	e50b3078 	str	r3, [fp, -#120]
+a0309430:	e51b3078 	ldr	r3, [fp, -#120]
+a0309434:	e1a03b63 	mov	r3, r3, ror #22
+a0309438:	e50b3078 	str	r3, [fp, -#120]
+a030943c:	e51b2078 	ldr	r2, [fp, -#120]
+a0309440:	e51b306c 	ldr	r3, [fp, -#108]
+a0309444:	e0823003 	add	r3, r2, r3
+a0309448:	e50b3078 	str	r3, [fp, -#120]
+a030944c:	e51b3070 	ldr	r3, [fp, -#112]
+a0309450:	e1e02003 	mvn	r2, r3
+a0309454:	e51b3078 	ldr	r3, [fp, -#120]
+a0309458:	e1822003 	orr	r2, r2, r3
+a030945c:	e51b306c 	ldr	r3, [fp, -#108]
+a0309460:	e0222003 	eor	r2, r2, r3
+a0309464:	e51b3044 	ldr	r3, [fp, -#68]
+a0309468:	e0822003 	add	r2, r2, r3
+a030946c:	e51b3074 	ldr	r3, [fp, -#116]
+a0309470:	e0823003 	add	r3, r2, r3
+a0309474:	e28334a3 	add	r3, r3, #-1560281088	; 0xa3000000
+a0309478:	e2833905 	add	r3, r3, #81920	; 0x14000
+a030947c:	e2833fc5 	add	r3, r3, #788	; 0x314
+a0309480:	e50b3074 	str	r3, [fp, -#116]
+a0309484:	e51b3074 	ldr	r3, [fp, -#116]
+a0309488:	e1a038e3 	mov	r3, r3, ror #17
+a030948c:	e50b3074 	str	r3, [fp, -#116]
+a0309490:	e51b2074 	ldr	r2, [fp, -#116]
+a0309494:	e51b3078 	ldr	r3, [fp, -#120]
+a0309498:	e0823003 	add	r3, r2, r3
+a030949c:	e50b3074 	str	r3, [fp, -#116]
+a03094a0:	e51b306c 	ldr	r3, [fp, -#108]
+a03094a4:	e1e02003 	mvn	r2, r3
+a03094a8:	e51b3074 	ldr	r3, [fp, -#116]
+a03094ac:	e1822003 	orr	r2, r2, r3
+a03094b0:	e51b3078 	ldr	r3, [fp, -#120]
+a03094b4:	e0222003 	eor	r2, r2, r3
+a03094b8:	e51b3028 	ldr	r3, [fp, -#40]
+a03094bc:	e0822003 	add	r2, r2, r3
+a03094c0:	e51b3070 	ldr	r3, [fp, -#112]
+a03094c4:	e0823003 	add	r3, r2, r3
+a03094c8:	e283344e 	add	r3, r3, #1308622848	; 0x4e000000
+a03094cc:	e2833a81 	add	r3, r3, #528384	; 0x81000
+a03094d0:	e2833e1a 	add	r3, r3, #416	; 0x1a0
+a03094d4:	e2833001 	add	r3, r3, #1	; 0x1
+a03094d8:	e50b3070 	str	r3, [fp, -#112]
+a03094dc:	e51b3070 	ldr	r3, [fp, -#112]
+a03094e0:	e1a035e3 	mov	r3, r3, ror #11
+a03094e4:	e50b3070 	str	r3, [fp, -#112]
+a03094e8:	e51b2070 	ldr	r2, [fp, -#112]
+a03094ec:	e51b3074 	ldr	r3, [fp, -#116]
+a03094f0:	e0823003 	add	r3, r2, r3
+a03094f4:	e50b3070 	str	r3, [fp, -#112]
+a03094f8:	e51b3078 	ldr	r3, [fp, -#120]
+a03094fc:	e1e02003 	mvn	r2, r3
+a0309500:	e51b3070 	ldr	r3, [fp, -#112]
+a0309504:	e1822003 	orr	r2, r2, r3
+a0309508:	e51b3074 	ldr	r3, [fp, -#116]
+a030950c:	e0222003 	eor	r2, r2, r3
+a0309510:	e51b304c 	ldr	r3, [fp, -#76]
+a0309514:	e0822003 	add	r2, r2, r3
+a0309518:	e51b306c 	ldr	r3, [fp, -#108]
+a030951c:	e0823003 	add	r3, r2, r3
+a0309520:	e243368a 	sub	r3, r3, #144703488	; 0x8a00000
+a0309524:	e2433932 	sub	r3, r3, #819200	; 0xc8000
+a0309528:	e2433f5f 	sub	r3, r3, #380	; 0x17c
+a030952c:	e2433002 	sub	r3, r3, #2	; 0x2
+a0309530:	e50b306c 	str	r3, [fp, -#108]
+a0309534:	e51b306c 	ldr	r3, [fp, -#108]
+a0309538:	e1a03d63 	mov	r3, r3, ror #26
+a030953c:	e50b306c 	str	r3, [fp, -#108]
+a0309540:	e51b206c 	ldr	r2, [fp, -#108]
+a0309544:	e51b3070 	ldr	r3, [fp, -#112]
+a0309548:	e0823003 	add	r3, r2, r3
+a030954c:	e50b306c 	str	r3, [fp, -#108]
+a0309550:	e51b3074 	ldr	r3, [fp, -#116]
+a0309554:	e1e02003 	mvn	r2, r3
+a0309558:	e51b306c 	ldr	r3, [fp, -#108]
+a030955c:	e1822003 	orr	r2, r2, r3
+a0309560:	e51b3070 	ldr	r3, [fp, -#112]
+a0309564:	e0222003 	eor	r2, r2, r3
+a0309568:	e51b3030 	ldr	r3, [fp, -#48]
+a030956c:	e0822003 	add	r2, r2, r3
+a0309570:	e51b3078 	ldr	r3, [fp, -#120]
+a0309574:	e0823003 	add	r3, r2, r3
+a0309578:	e28334be 	add	r3, r3, #-1107296256	; 0xbe000000
+a030957c:	e24338c5 	sub	r3, r3, #12910592	; 0xc50000
+a0309580:	e2433d37 	sub	r3, r3, #3520	; 0xdc0
+a0309584:	e243300b 	sub	r3, r3, #11	; 0xb
+a0309588:	e50b3078 	str	r3, [fp, -#120]
+a030958c:	e51b3078 	ldr	r3, [fp, -#120]
+a0309590:	e1a03b63 	mov	r3, r3, ror #22
+a0309594:	e50b3078 	str	r3, [fp, -#120]
+a0309598:	e51b2078 	ldr	r2, [fp, -#120]
+a030959c:	e51b306c 	ldr	r3, [fp, -#108]
+a03095a0:	e0823003 	add	r3, r2, r3
+a03095a4:	e50b3078 	str	r3, [fp, -#120]
+a03095a8:	e51b3070 	ldr	r3, [fp, -#112]
+a03095ac:	e1e02003 	mvn	r2, r3
+a03095b0:	e51b3078 	ldr	r3, [fp, -#120]
+a03095b4:	e1822003 	orr	r2, r2, r3
+a03095b8:	e51b306c 	ldr	r3, [fp, -#108]
+a03095bc:	e0222003 	eor	r2, r2, r3
+a03095c0:	e51b3054 	ldr	r3, [fp, -#84]
+a03095c4:	e0822003 	add	r2, r2, r3
+a03095c8:	e51b3074 	ldr	r3, [fp, -#116]
+a03095cc:	e0823003 	add	r3, r2, r3
+a03095d0:	e283342b 	add	r3, r3, #721420288	; 0x2b000000
+a03095d4:	e243370a 	sub	r3, r3, #2621440	; 0x280000
+a03095d8:	e2433db5 	sub	r3, r3, #11584	; 0x2d40
+a03095dc:	e2433005 	sub	r3, r3, #5	; 0x5
+a03095e0:	e50b3074 	str	r3, [fp, -#116]
+a03095e4:	e51b3074 	ldr	r3, [fp, -#116]
+a03095e8:	e1a038e3 	mov	r3, r3, ror #17
+a03095ec:	e50b3074 	str	r3, [fp, -#116]
+a03095f0:	e51b2074 	ldr	r2, [fp, -#116]
+a03095f4:	e51b3078 	ldr	r3, [fp, -#120]
+a03095f8:	e0823003 	add	r3, r2, r3
+a03095fc:	e50b3074 	str	r3, [fp, -#116]
+a0309600:	e51b306c 	ldr	r3, [fp, -#108]
+a0309604:	e1e02003 	mvn	r2, r3
+a0309608:	e51b3074 	ldr	r3, [fp, -#116]
+a030960c:	e1822003 	orr	r2, r2, r3
+a0309610:	e51b3078 	ldr	r3, [fp, -#120]
+a0309614:	e0222003 	eor	r2, r2, r3
+a0309618:	e51b3038 	ldr	r3, [fp, -#56]
+a030961c:	e0822003 	add	r2, r2, r3
+a0309620:	e51b3070 	ldr	r3, [fp, -#112]
+a0309624:	e0823003 	add	r3, r2, r3
+a0309628:	e2433551 	sub	r3, r3, #339738624	; 0x14400000
+a030962c:	e2433839 	sub	r3, r3, #3735552	; 0x390000
+a0309630:	e2433db1 	sub	r3, r3, #11328	; 0x2c40
+a0309634:	e243302f 	sub	r3, r3, #47	; 0x2f
+a0309638:	e50b3070 	str	r3, [fp, -#112]
+a030963c:	e51b3070 	ldr	r3, [fp, -#112]
+a0309640:	e1a035e3 	mov	r3, r3, ror #11
+a0309644:	e50b3070 	str	r3, [fp, -#112]
+a0309648:	e51b2070 	ldr	r2, [fp, -#112]
+a030964c:	e51b3074 	ldr	r3, [fp, -#116]
+a0309650:	e0823003 	add	r3, r2, r3
+a0309654:	e50b3070 	str	r3, [fp, -#112]
+a0309658:	e51b206c 	ldr	r2, [fp, -#108]
+a030965c:	e51b3080 	ldr	r3, [fp, -#128]
+a0309660:	e0823003 	add	r3, r2, r3
+a0309664:	e50b306c 	str	r3, [fp, -#108]
+a0309668:	e51b2070 	ldr	r2, [fp, -#112]
+a030966c:	e51b3084 	ldr	r3, [fp, -#132]
+a0309670:	e0823003 	add	r3, r2, r3
+a0309674:	e50b3070 	str	r3, [fp, -#112]
+a0309678:	e51b2074 	ldr	r2, [fp, -#116]
+a030967c:	e51b3088 	ldr	r3, [fp, -#136]
+a0309680:	e0823003 	add	r3, r2, r3
+a0309684:	e50b3074 	str	r3, [fp, -#116]
+a0309688:	e51b2078 	ldr	r2, [fp, -#120]
+a030968c:	e51b308c 	ldr	r3, [fp, -#140]
+a0309690:	e0823003 	add	r3, r2, r3
+a0309694:	e50b3078 	str	r3, [fp, -#120]
+a0309698:	eafff9ae 	b	a0307d58 <md5_process_block+0xb8>
+a030969c:	e51b201c 	ldr	r2, [fp, -#28]
+a03096a0:	e51b306c 	ldr	r3, [fp, -#108]
+a03096a4:	e5823000 	str	r3, [r2]
+a03096a8:	e51b201c 	ldr	r2, [fp, -#28]
+a03096ac:	e51b3070 	ldr	r3, [fp, -#112]
+a03096b0:	e5823004 	str	r3, [r2, #4]
+a03096b4:	e51b201c 	ldr	r2, [fp, -#28]
+a03096b8:	e51b3074 	ldr	r3, [fp, -#116]
+a03096bc:	e5823008 	str	r3, [r2, #8]
+a03096c0:	e51b201c 	ldr	r2, [fp, -#28]
+a03096c4:	e51b3078 	ldr	r3, [fp, -#120]
+a03096c8:	e582300c 	str	r3, [r2, #12]
+a03096cc:	e91ba810 	ldmdb	fp, {r4, fp, sp, pc}
+
+a03096d0 <print_md5_digest>:
+a03096d0:	e1a0c00d 	mov	ip, sp
+a03096d4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a03096d8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03096dc:	e24dd010 	sub	sp, sp, #16	; 0x10
+a03096e0:	e50b0010 	str	r0, [fp, -#16]
+a03096e4:	e51b3010 	ldr	r3, [fp, -#16]
+a03096e8:	e50b301c 	str	r3, [fp, -#28]
+a03096ec:	e3a03000 	mov	r3, #0	; 0x0
+a03096f0:	e50b3014 	str	r3, [fp, -#20]
+a03096f4:	e51b3014 	ldr	r3, [fp, -#20]
+a03096f8:	e353000f 	cmp	r3, #15	; 0xf
+a03096fc:	da000000 	ble	a0309704 <print_md5_digest+0x34>
+a0309700:	ea00002c 	b	a03097b8 <print_md5_digest+0xe8>
+a0309704:	e51b201c 	ldr	r2, [fp, -#28]
+a0309708:	e51b3014 	ldr	r3, [fp, -#20]
+a030970c:	e0823003 	add	r3, r2, r3
+a0309710:	e5d33000 	ldrb	r3, [r3]
+a0309714:	e1a03223 	mov	r3, r3, lsr #4
+a0309718:	e203300f 	and	r3, r3, #15	; 0xf
+a030971c:	e20330ff 	and	r3, r3, #255	; 0xff
+a0309720:	e50b3018 	str	r3, [fp, -#24]
+a0309724:	e51b3018 	ldr	r3, [fp, -#24]
+a0309728:	e3530009 	cmp	r3, #9	; 0x9
+a030972c:	da000003 	ble	a0309740 <print_md5_digest+0x70>
+a0309730:	e51b3018 	ldr	r3, [fp, -#24]
+a0309734:	e2833057 	add	r3, r3, #87	; 0x57
+a0309738:	e50b3018 	str	r3, [fp, -#24]
+a030973c:	ea000002 	b	a030974c <print_md5_digest+0x7c>
+a0309740:	e51b3018 	ldr	r3, [fp, -#24]
+a0309744:	e2833030 	add	r3, r3, #48	; 0x30
+a0309748:	e50b3018 	str	r3, [fp, -#24]
+a030974c:	e59f0070 	ldr	r0, [pc, #112]	; a03097c4 <print_md5_digest+0xf4>
+a0309750:	e51b1018 	ldr	r1, [fp, -#24]
+a0309754:	eb0004d1 	bl	a030aaa0 <printf>
+a0309758:	e51b201c 	ldr	r2, [fp, -#28]
+a030975c:	e51b3014 	ldr	r3, [fp, -#20]
+a0309760:	e0823003 	add	r3, r2, r3
+a0309764:	e5d33000 	ldrb	r3, [r3]
+a0309768:	e203300f 	and	r3, r3, #15	; 0xf
+a030976c:	e20330ff 	and	r3, r3, #255	; 0xff
+a0309770:	e50b3018 	str	r3, [fp, -#24]
+a0309774:	e51b3018 	ldr	r3, [fp, -#24]
+a0309778:	e3530009 	cmp	r3, #9	; 0x9
+a030977c:	da000003 	ble	a0309790 <print_md5_digest+0xc0>
+a0309780:	e51b3018 	ldr	r3, [fp, -#24]
+a0309784:	e2833057 	add	r3, r3, #87	; 0x57
+a0309788:	e50b3018 	str	r3, [fp, -#24]
+a030978c:	ea000002 	b	a030979c <print_md5_digest+0xcc>
+a0309790:	e51b3018 	ldr	r3, [fp, -#24]
+a0309794:	e2833030 	add	r3, r3, #48	; 0x30
+a0309798:	e50b3018 	str	r3, [fp, -#24]
+a030979c:	e59f0020 	ldr	r0, [pc, #32]	; a03097c4 <print_md5_digest+0xf4>
+a03097a0:	e51b1018 	ldr	r1, [fp, -#24]
+a03097a4:	eb0004bd 	bl	a030aaa0 <printf>
+a03097a8:	e51b3014 	ldr	r3, [fp, -#20]
+a03097ac:	e2833001 	add	r3, r3, #1	; 0x1
+a03097b0:	e50b3014 	str	r3, [fp, -#20]
+a03097b4:	eaffffce 	b	a03096f4 <print_md5_digest+0x24>
+a03097b8:	e51b3014 	ldr	r3, [fp, -#20]
+a03097bc:	e1a00003 	mov	r0, r3
+a03097c0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a03097c4:	a030d42c 	eorges	sp, r0, ip, lsr #8
+
+a03097c8 <memcpy>:
+a03097c8:	e1a0c00d 	mov	ip, sp
+a03097cc:	e92dd830 	stmdb	sp!, {r4, r5, fp, ip, lr, pc}
+a03097d0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03097d4:	e24dd014 	sub	sp, sp, #20	; 0x14
+a03097d8:	e50b0018 	str	r0, [fp, -#24]
+a03097dc:	e50b101c 	str	r1, [fp, -#28]
+a03097e0:	e50b2020 	str	r2, [fp, -#32]
+a03097e4:	e51b301c 	ldr	r3, [fp, -#28]
+a03097e8:	e50b3024 	str	r3, [fp, -#36]
+a03097ec:	e51b3018 	ldr	r3, [fp, -#24]
+a03097f0:	e50b3028 	str	r3, [fp, -#40]
+a03097f4:	e24b3020 	sub	r3, fp, #32	; 0x20
+a03097f8:	e5932000 	ldr	r2, [r3]
+a03097fc:	e1a01002 	mov	r1, r2
+a0309800:	e2422001 	sub	r2, r2, #1	; 0x1
+a0309804:	e5832000 	str	r2, [r3]
+a0309808:	e3510000 	cmp	r1, #0	; 0x0
+a030980c:	1a000000 	bne	a0309814 <memcpy+0x4c>
+a0309810:	ea00000c 	b	a0309848 <memcpy+0x80>
+a0309814:	e24b5028 	sub	r5, fp, #40	; 0x28
+a0309818:	e5951000 	ldr	r1, [r5]
+a030981c:	e24b4024 	sub	r4, fp, #36	; 0x24
+a0309820:	e5942000 	ldr	r2, [r4]
+a0309824:	e1a00001 	mov	r0, r1
+a0309828:	e1a03002 	mov	r3, r2
+a030982c:	e5d33000 	ldrb	r3, [r3]
+a0309830:	e5c03000 	strb	r3, [r0]
+a0309834:	e2822001 	add	r2, r2, #1	; 0x1
+a0309838:	e5842000 	str	r2, [r4]
+a030983c:	e2811001 	add	r1, r1, #1	; 0x1
+a0309840:	e5851000 	str	r1, [r5]
+a0309844:	eaffffea 	b	a03097f4 <memcpy+0x2c>
+a0309848:	e51b3018 	ldr	r3, [fp, -#24]
+a030984c:	e1a00003 	mov	r0, r3
+a0309850:	e91ba830 	ldmdb	fp, {r4, r5, fp, sp, pc}
+
+a0309854 <skip_atoi>:
+a0309854:	e1a0c00d 	mov	ip, sp
+a0309858:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030985c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0309860:	e24dd008 	sub	sp, sp, #8	; 0x8
+a0309864:	e50b0010 	str	r0, [fp, -#16]
+a0309868:	e3a03000 	mov	r3, #0	; 0x0
+a030986c:	e50b3014 	str	r3, [fp, -#20]
+a0309870:	e51b3010 	ldr	r3, [fp, -#16]
+a0309874:	e5933000 	ldr	r3, [r3]
+a0309878:	e5d33000 	ldrb	r3, [r3]
+a030987c:	e1a00003 	mov	r0, r3
+a0309880:	eb00049a 	bl	a030aaf0 <isdigit>
+a0309884:	e1a03000 	mov	r3, r0
+a0309888:	e3530000 	cmp	r3, #0	; 0x0
+a030988c:	1a000000 	bne	a0309894 <skip_atoi+0x40>
+a0309890:	ea00000e 	b	a03098d0 <skip_atoi+0x7c>
+a0309894:	e51b2014 	ldr	r2, [fp, -#20]
+a0309898:	e1a03002 	mov	r3, r2
+a030989c:	e1a03103 	mov	r3, r3, lsl #2
+a03098a0:	e0833002 	add	r3, r3, r2
+a03098a4:	e1a01083 	mov	r1, r3, lsl #1
+a03098a8:	e51b0010 	ldr	r0, [fp, -#16]
+a03098ac:	e5902000 	ldr	r2, [r0]
+a03098b0:	e1a03002 	mov	r3, r2
+a03098b4:	e5d33000 	ldrb	r3, [r3]
+a03098b8:	e0813003 	add	r3, r1, r3
+a03098bc:	e2433030 	sub	r3, r3, #48	; 0x30
+a03098c0:	e50b3014 	str	r3, [fp, -#20]
+a03098c4:	e2822001 	add	r2, r2, #1	; 0x1
+a03098c8:	e5802000 	str	r2, [r0]
+a03098cc:	eaffffe7 	b	a0309870 <skip_atoi+0x1c>
+a03098d0:	e51b3014 	ldr	r3, [fp, -#20]
+a03098d4:	e1a00003 	mov	r0, r3
+a03098d8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a03098dc <number>:
+a03098dc:	e1a0c00d 	mov	ip, sp
+a03098e0:	e92dd870 	stmdb	sp!, {r4, r5, r6, fp, ip, lr, pc}
+a03098e4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a03098e8:	e24dd0c4 	sub	sp, sp, #196	; 0xc4
+a03098ec:	e50b001c 	str	r0, [fp, -#28]
+a03098f0:	e50b1020 	str	r1, [fp, -#32]
+a03098f4:	e3e0100f 	mvn	r1, #15	; 0xf
+a03098f8:	e24b0018 	sub	r0, fp, #24	; 0x18
+a03098fc:	e0801001 	add	r1, r0, r1
+a0309900:	e881000c 	stmia	r1, {r2, r3}
+a0309904:	e59f3604 	ldr	r3, [pc, #1540]	; a0309f10 <number+0x634>
+a0309908:	e24b409c 	sub	r4, fp, #156	; 0x9c
+a030990c:	e1a0c003 	mov	ip, r3
+a0309910:	e8bc000f 	ldmia	ip!, {r0, r1, r2, r3}
+a0309914:	e8a4000f 	stmia	r4!, {r0, r1, r2, r3}
+a0309918:	e8bc000f 	ldmia	ip!, {r0, r1, r2, r3}
+a030991c:	e8a4000f 	stmia	r4!, {r0, r1, r2, r3}
+a0309920:	e89c0003 	ldmia	ip, {r0, r1}
+a0309924:	e5840000 	str	r0, [r4]
+a0309928:	e2844004 	add	r4, r4, #4	; 0x4
+a030992c:	e5c41000 	strb	r1, [r4]
+a0309930:	e59f35dc 	ldr	r3, [pc, #1500]	; a0309f14 <number+0x638>
+a0309934:	e24b40c4 	sub	r4, fp, #196	; 0xc4
+a0309938:	e1a0c003 	mov	ip, r3
+a030993c:	e8bc000f 	ldmia	ip!, {r0, r1, r2, r3}
+a0309940:	e8a4000f 	stmia	r4!, {r0, r1, r2, r3}
+a0309944:	e8bc000f 	ldmia	ip!, {r0, r1, r2, r3}
+a0309948:	e8a4000f 	stmia	r4!, {r0, r1, r2, r3}
+a030994c:	e89c0003 	ldmia	ip, {r0, r1}
+a0309950:	e5840000 	str	r0, [r4]
+a0309954:	e2844004 	add	r4, r4, #4	; 0x4
+a0309958:	e5c41000 	strb	r1, [r4]
+a030995c:	e59b3010 	ldr	r3, [fp, #16]
+a0309960:	e2033040 	and	r3, r3, #64	; 0x40
+a0309964:	e3530000 	cmp	r3, #0	; 0x0
+a0309968:	0a000002 	beq	a0309978 <number+0x9c>
+a030996c:	e24b10c4 	sub	r1, fp, #196	; 0xc4
+a0309970:	e50b10d4 	str	r1, [fp, -#212]
+a0309974:	ea000001 	b	a0309980 <number+0xa4>
+a0309978:	e24b209c 	sub	r2, fp, #156	; 0x9c
+a030997c:	e50b20d4 	str	r2, [fp, -#212]
+a0309980:	e51b30d4 	ldr	r3, [fp, -#212]
+a0309984:	e50b3074 	str	r3, [fp, -#116]
+a0309988:	e59b3010 	ldr	r3, [fp, #16]
+a030998c:	e2033010 	and	r3, r3, #16	; 0x10
+a0309990:	e3530000 	cmp	r3, #0	; 0x0
+a0309994:	0a000002 	beq	a03099a4 <number+0xc8>
+a0309998:	e59b3010 	ldr	r3, [fp, #16]
+a030999c:	e3c33001 	bic	r3, r3, #1	; 0x1
+a03099a0:	e58b3010 	str	r3, [fp, #16]
+a03099a4:	e59b3004 	ldr	r3, [fp, #4]
+a03099a8:	e3530001 	cmp	r3, #1	; 0x1
+a03099ac:	da000003 	ble	a03099c0 <number+0xe4>
+a03099b0:	e59b3004 	ldr	r3, [fp, #4]
+a03099b4:	e3530024 	cmp	r3, #36	; 0x24
+a03099b8:	ca000000 	bgt	a03099c0 <number+0xe4>
+a03099bc:	ea000002 	b	a03099cc <number+0xf0>
+a03099c0:	e3a0c000 	mov	ip, #0	; 0x0
+a03099c4:	e50bc0d0 	str	ip, [fp, -#208]
+a03099c8:	ea00014e 	b	a0309f08 <number+0x62c>
+a03099cc:	e59b3010 	ldr	r3, [fp, #16]
+a03099d0:	e2033001 	and	r3, r3, #1	; 0x1
+a03099d4:	e3530000 	cmp	r3, #0	; 0x0
+a03099d8:	0a000002 	beq	a03099e8 <number+0x10c>
+a03099dc:	e3a03030 	mov	r3, #48	; 0x30
+a03099e0:	e54b30d5 	strb	r3, [fp, -#213]
+a03099e4:	ea000001 	b	a03099f0 <number+0x114>
+a03099e8:	e3a03020 	mov	r3, #32	; 0x20
+a03099ec:	e54b30d5 	strb	r3, [fp, -#213]
+a03099f0:	e55b00d5 	ldrb	r0, [fp, -#213]
+a03099f4:	e54b0029 	strb	r0, [fp, -#41]
+a03099f8:	e3a03000 	mov	r3, #0	; 0x0
+a03099fc:	e54b302a 	strb	r3, [fp, -#42]
+a0309a00:	e59b3010 	ldr	r3, [fp, #16]
+a0309a04:	e2033002 	and	r3, r3, #2	; 0x2
+a0309a08:	e3530000 	cmp	r3, #0	; 0x0
+a0309a0c:	0a000033 	beq	a0309ae0 <number+0x204>
+a0309a10:	e3e0300f 	mvn	r3, #15	; 0xf
+a0309a14:	e24b1018 	sub	r1, fp, #24	; 0x18
+a0309a18:	e0811003 	add	r1, r1, r3
+a0309a1c:	e50b10dc 	str	r1, [fp, -#220]
+a0309a20:	e51b20dc 	ldr	r2, [fp, -#220]
+a0309a24:	e5923004 	ldr	r3, [r2, #4]
+a0309a28:	e3530000 	cmp	r3, #0	; 0x0
+a0309a2c:	ba000008 	blt	a0309a54 <number+0x178>
+a0309a30:	e51b00dc 	ldr	r0, [fp, -#220]
+a0309a34:	e5903004 	ldr	r3, [r0, #4]
+a0309a38:	e3530000 	cmp	r3, #0	; 0x0
+a0309a3c:	1a000014 	bne	a0309a94 <number+0x1b8>
+a0309a40:	e51b10dc 	ldr	r1, [fp, -#220]
+a0309a44:	e5913000 	ldr	r3, [r1]
+a0309a48:	e3530000 	cmp	r3, #0	; 0x0
+a0309a4c:	3a000000 	bcc	a0309a54 <number+0x178>
+a0309a50:	ea00000f 	b	a0309a94 <number+0x1b8>
+a0309a54:	e3a0302d 	mov	r3, #45	; 0x2d
+a0309a58:	e54b302a 	strb	r3, [fp, -#42]
+a0309a5c:	e3e0300f 	mvn	r3, #15	; 0xf
+a0309a60:	e24bc018 	sub	ip, fp, #24	; 0x18
+a0309a64:	e08c2003 	add	r2, ip, r3
+a0309a68:	e3e0300f 	mvn	r3, #15	; 0xf
+a0309a6c:	e24b0018 	sub	r0, fp, #24	; 0x18
+a0309a70:	e0803003 	add	r3, r0, r3
+a0309a74:	e8930018 	ldmia	r3, {r3, r4}
+a0309a78:	e2733000 	rsbs	r3, r3, #0	; 0x0
+a0309a7c:	e2e44000 	rsc	r4, r4, #0	; 0x0
+a0309a80:	e8820018 	stmia	r2, {r3, r4}
+a0309a84:	e59b3008 	ldr	r3, [fp, #8]
+a0309a88:	e2433001 	sub	r3, r3, #1	; 0x1
+a0309a8c:	e58b3008 	str	r3, [fp, #8]
+a0309a90:	ea000012 	b	a0309ae0 <number+0x204>
+a0309a94:	e59b3010 	ldr	r3, [fp, #16]
+a0309a98:	e2033004 	and	r3, r3, #4	; 0x4
+a0309a9c:	e3530000 	cmp	r3, #0	; 0x0
+a0309aa0:	0a000005 	beq	a0309abc <number+0x1e0>
+a0309aa4:	e3a0302b 	mov	r3, #43	; 0x2b
+a0309aa8:	e54b302a 	strb	r3, [fp, -#42]
+a0309aac:	e59b3008 	ldr	r3, [fp, #8]
+a0309ab0:	e2433001 	sub	r3, r3, #1	; 0x1
+a0309ab4:	e58b3008 	str	r3, [fp, #8]
+a0309ab8:	ea000008 	b	a0309ae0 <number+0x204>
+a0309abc:	e59b3010 	ldr	r3, [fp, #16]
+a0309ac0:	e2033008 	and	r3, r3, #8	; 0x8
+a0309ac4:	e3530000 	cmp	r3, #0	; 0x0
+a0309ac8:	0a000004 	beq	a0309ae0 <number+0x204>
+a0309acc:	e3a03020 	mov	r3, #32	; 0x20
+a0309ad0:	e54b302a 	strb	r3, [fp, -#42]
+a0309ad4:	e59b3008 	ldr	r3, [fp, #8]
+a0309ad8:	e2433001 	sub	r3, r3, #1	; 0x1
+a0309adc:	e58b3008 	str	r3, [fp, #8]
+a0309ae0:	e59b3010 	ldr	r3, [fp, #16]
+a0309ae4:	e2033020 	and	r3, r3, #32	; 0x20
+a0309ae8:	e3530000 	cmp	r3, #0	; 0x0
+a0309aec:	0a00000c 	beq	a0309b24 <number+0x248>
+a0309af0:	e59b3004 	ldr	r3, [fp, #4]
+a0309af4:	e3530010 	cmp	r3, #16	; 0x10
+a0309af8:	1a000003 	bne	a0309b0c <number+0x230>
+a0309afc:	e59b3008 	ldr	r3, [fp, #8]
+a0309b00:	e2433002 	sub	r3, r3, #2	; 0x2
+a0309b04:	e58b3008 	str	r3, [fp, #8]
+a0309b08:	ea000005 	b	a0309b24 <number+0x248>
+a0309b0c:	e59b3004 	ldr	r3, [fp, #4]
+a0309b10:	e3530008 	cmp	r3, #8	; 0x8
+a0309b14:	1a000002 	bne	a0309b24 <number+0x248>
+a0309b18:	e59b3008 	ldr	r3, [fp, #8]
+a0309b1c:	e2433001 	sub	r3, r3, #1	; 0x1
+a0309b20:	e58b3008 	str	r3, [fp, #8]
+a0309b24:	e3a03000 	mov	r3, #0	; 0x0
+a0309b28:	e50b30c8 	str	r3, [fp, -#200]
+a0309b2c:	e3e0300f 	mvn	r3, #15	; 0xf
+a0309b30:	e24b1018 	sub	r1, fp, #24	; 0x18
+a0309b34:	e0812003 	add	r2, r1, r3
+a0309b38:	e5923000 	ldr	r3, [r2]
+a0309b3c:	e5922004 	ldr	r2, [r2, #4]
+a0309b40:	e1833002 	orr	r3, r3, r2
+a0309b44:	e3530000 	cmp	r3, #0	; 0x0
+a0309b48:	1a00000b 	bne	a0309b7c <number+0x2a0>
+a0309b4c:	e24b00c8 	sub	r0, fp, #200	; 0xc8
+a0309b50:	e5902000 	ldr	r2, [r0]
+a0309b54:	e3e01057 	mvn	r1, #87	; 0x57
+a0309b58:	e1a03002 	mov	r3, r2
+a0309b5c:	e24bc018 	sub	ip, fp, #24	; 0x18
+a0309b60:	e083300c 	add	r3, r3, ip
+a0309b64:	e0831001 	add	r1, r3, r1
+a0309b68:	e3a03030 	mov	r3, #48	; 0x30
+a0309b6c:	e5c13000 	strb	r3, [r1]
+a0309b70:	e2822001 	add	r2, r2, #1	; 0x1
+a0309b74:	e5802000 	str	r2, [r0]
+a0309b78:	ea00002d 	b	a0309c34 <number+0x358>
+a0309b7c:	e1a00000 	nop			(mov r0,r0)
+a0309b80:	e3e0300f 	mvn	r3, #15	; 0xf
+a0309b84:	e24b0018 	sub	r0, fp, #24	; 0x18
+a0309b88:	e0802003 	add	r2, r0, r3
+a0309b8c:	e5923000 	ldr	r3, [r2]
+a0309b90:	e5922004 	ldr	r2, [r2, #4]
+a0309b94:	e1833002 	orr	r3, r3, r2
+a0309b98:	e3530000 	cmp	r3, #0	; 0x0
+a0309b9c:	1a000000 	bne	a0309ba4 <number+0x2c8>
+a0309ba0:	ea000023 	b	a0309c34 <number+0x358>
+a0309ba4:	e24b50c8 	sub	r5, fp, #200	; 0xc8
+a0309ba8:	e5954000 	ldr	r4, [r5]
+a0309bac:	e3e02057 	mvn	r2, #87	; 0x57
+a0309bb0:	e1a03004 	mov	r3, r4
+a0309bb4:	e24b1018 	sub	r1, fp, #24	; 0x18
+a0309bb8:	e0833001 	add	r3, r3, r1
+a0309bbc:	e0836002 	add	r6, r3, r2
+a0309bc0:	e3e0300f 	mvn	r3, #15	; 0xf
+a0309bc4:	e24b2018 	sub	r2, fp, #24	; 0x18
+a0309bc8:	e0823003 	add	r3, r2, r3
+a0309bcc:	e5933000 	ldr	r3, [r3]
+a0309bd0:	e1a00003 	mov	r0, r3
+a0309bd4:	e59b1004 	ldr	r1, [fp, #4]
+a0309bd8:	eb0008fb 	bl	a030bfcc <__umodsi3>
+a0309bdc:	e1a03000 	mov	r3, r0
+a0309be0:	e50b30cc 	str	r3, [fp, -#204]
+a0309be4:	e2844001 	add	r4, r4, #1	; 0x1
+a0309be8:	e5854000 	str	r4, [r5]
+a0309bec:	e3e0300f 	mvn	r3, #15	; 0xf
+a0309bf0:	e24bc018 	sub	ip, fp, #24	; 0x18
+a0309bf4:	e08c5003 	add	r5, ip, r3
+a0309bf8:	e3e0300f 	mvn	r3, #15	; 0xf
+a0309bfc:	e24b0018 	sub	r0, fp, #24	; 0x18
+a0309c00:	e0803003 	add	r3, r0, r3
+a0309c04:	e5930000 	ldr	r0, [r3]
+a0309c08:	e59b1004 	ldr	r1, [fp, #4]
+a0309c0c:	eb0008c8 	bl	a030bf34 <__udivsi3>
+a0309c10:	e1a03000 	mov	r3, r0
+a0309c14:	e3a04000 	mov	r4, #0	; 0x0
+a0309c18:	e8850018 	stmia	r5, {r3, r4}
+a0309c1c:	e51b20cc 	ldr	r2, [fp, -#204]
+a0309c20:	e51b3074 	ldr	r3, [fp, -#116]
+a0309c24:	e0823003 	add	r3, r2, r3
+a0309c28:	e5d33000 	ldrb	r3, [r3]
+a0309c2c:	e5c63000 	strb	r3, [r6]
+a0309c30:	eaffffd2 	b	a0309b80 <number+0x2a4>
+a0309c34:	e51b20c8 	ldr	r2, [fp, -#200]
+a0309c38:	e59b300c 	ldr	r3, [fp, #12]
+a0309c3c:	e1520003 	cmp	r2, r3
+a0309c40:	da000001 	ble	a0309c4c <number+0x370>
+a0309c44:	e51b30c8 	ldr	r3, [fp, -#200]
+a0309c48:	e58b300c 	str	r3, [fp, #12]
+a0309c4c:	e59b2008 	ldr	r2, [fp, #8]
+a0309c50:	e59b300c 	ldr	r3, [fp, #12]
+a0309c54:	e0633002 	rsb	r3, r3, r2
+a0309c58:	e58b3008 	str	r3, [fp, #8]
+a0309c5c:	e59b3010 	ldr	r3, [fp, #16]
+a0309c60:	e2033011 	and	r3, r3, #17	; 0x11
+a0309c64:	e3530000 	cmp	r3, #0	; 0x0
+a0309c68:	1a000012 	bne	a0309cb8 <number+0x3dc>
+a0309c6c:	e28b3008 	add	r3, fp, #8	; 0x8
+a0309c70:	e5932000 	ldr	r2, [r3]
+a0309c74:	e1a01002 	mov	r1, r2
+a0309c78:	e2422001 	sub	r2, r2, #1	; 0x1
+a0309c7c:	e5832000 	str	r2, [r3]
+a0309c80:	e3510000 	cmp	r1, #0	; 0x0
+a0309c84:	ca000000 	bgt	a0309c8c <number+0x3b0>
+a0309c88:	ea00000a 	b	a0309cb8 <number+0x3dc>
+a0309c8c:	e51b201c 	ldr	r2, [fp, -#28]
+a0309c90:	e51b3020 	ldr	r3, [fp, -#32]
+a0309c94:	e1520003 	cmp	r2, r3
+a0309c98:	8a000002 	bhi	a0309ca8 <number+0x3cc>
+a0309c9c:	e51b301c 	ldr	r3, [fp, -#28]
+a0309ca0:	e3a02020 	mov	r2, #32	; 0x20
+a0309ca4:	e5c32000 	strb	r2, [r3]
+a0309ca8:	e51b301c 	ldr	r3, [fp, -#28]
+a0309cac:	e2833001 	add	r3, r3, #1	; 0x1
+a0309cb0:	e50b301c 	str	r3, [fp, -#28]
+a0309cb4:	eaffffec 	b	a0309c6c <number+0x390>
+a0309cb8:	e55b302a 	ldrb	r3, [fp, -#42]
+a0309cbc:	e3530000 	cmp	r3, #0	; 0x0
+a0309cc0:	0a000009 	beq	a0309cec <number+0x410>
+a0309cc4:	e51b201c 	ldr	r2, [fp, -#28]
+a0309cc8:	e51b3020 	ldr	r3, [fp, -#32]
+a0309ccc:	e1520003 	cmp	r2, r3
+a0309cd0:	8a000002 	bhi	a0309ce0 <number+0x404>
+a0309cd4:	e51b201c 	ldr	r2, [fp, -#28]
+a0309cd8:	e55b302a 	ldrb	r3, [fp, -#42]
+a0309cdc:	e5c23000 	strb	r3, [r2]
+a0309ce0:	e51b301c 	ldr	r3, [fp, -#28]
+a0309ce4:	e2833001 	add	r3, r3, #1	; 0x1
+a0309ce8:	e50b301c 	str	r3, [fp, -#28]
+a0309cec:	e59b3010 	ldr	r3, [fp, #16]
+a0309cf0:	e2033020 	and	r3, r3, #32	; 0x20
+a0309cf4:	e3530000 	cmp	r3, #0	; 0x0
+a0309cf8:	0a000027 	beq	a0309d9c <number+0x4c0>
+a0309cfc:	e59b3004 	ldr	r3, [fp, #4]
+a0309d00:	e3530008 	cmp	r3, #8	; 0x8
+a0309d04:	1a00000a 	bne	a0309d34 <number+0x458>
+a0309d08:	e51b201c 	ldr	r2, [fp, -#28]
+a0309d0c:	e51b3020 	ldr	r3, [fp, -#32]
+a0309d10:	e1520003 	cmp	r2, r3
+a0309d14:	8a000002 	bhi	a0309d24 <number+0x448>
+a0309d18:	e51b301c 	ldr	r3, [fp, -#28]
+a0309d1c:	e3a02030 	mov	r2, #48	; 0x30
+a0309d20:	e5c32000 	strb	r2, [r3]
+a0309d24:	e51b301c 	ldr	r3, [fp, -#28]
+a0309d28:	e2833001 	add	r3, r3, #1	; 0x1
+a0309d2c:	e50b301c 	str	r3, [fp, -#28]
+a0309d30:	ea000019 	b	a0309d9c <number+0x4c0>
+a0309d34:	e59b3004 	ldr	r3, [fp, #4]
+a0309d38:	e3530010 	cmp	r3, #16	; 0x10
+a0309d3c:	1a000016 	bne	a0309d9c <number+0x4c0>
+a0309d40:	e51b201c 	ldr	r2, [fp, -#28]
+a0309d44:	e51b3020 	ldr	r3, [fp, -#32]
+a0309d48:	e1520003 	cmp	r2, r3
+a0309d4c:	8a000002 	bhi	a0309d5c <number+0x480>
+a0309d50:	e51b301c 	ldr	r3, [fp, -#28]
+a0309d54:	e3a02030 	mov	r2, #48	; 0x30
+a0309d58:	e5c32000 	strb	r2, [r3]
+a0309d5c:	e51b301c 	ldr	r3, [fp, -#28]
+a0309d60:	e2833001 	add	r3, r3, #1	; 0x1
+a0309d64:	e50b301c 	str	r3, [fp, -#28]
+a0309d68:	e51b201c 	ldr	r2, [fp, -#28]
+a0309d6c:	e51b3020 	ldr	r3, [fp, -#32]
+a0309d70:	e1520003 	cmp	r2, r3
+a0309d74:	8a000005 	bhi	a0309d90 <number+0x4b4>
+a0309d78:	e51b101c 	ldr	r1, [fp, -#28]
+a0309d7c:	e3a02021 	mov	r2, #33	; 0x21
+a0309d80:	e51b3074 	ldr	r3, [fp, -#116]
+a0309d84:	e0823003 	add	r3, r2, r3
+a0309d88:	e5d33000 	ldrb	r3, [r3]
+a0309d8c:	e5c13000 	strb	r3, [r1]
+a0309d90:	e51b301c 	ldr	r3, [fp, -#28]
+a0309d94:	e2833001 	add	r3, r3, #1	; 0x1
+a0309d98:	e50b301c 	str	r3, [fp, -#28]
+a0309d9c:	e59b3010 	ldr	r3, [fp, #16]
+a0309da0:	e2033010 	and	r3, r3, #16	; 0x10
+a0309da4:	e3530000 	cmp	r3, #0	; 0x0
+a0309da8:	1a000012 	bne	a0309df8 <number+0x51c>
+a0309dac:	e28b3008 	add	r3, fp, #8	; 0x8
+a0309db0:	e5932000 	ldr	r2, [r3]
+a0309db4:	e1a01002 	mov	r1, r2
+a0309db8:	e2422001 	sub	r2, r2, #1	; 0x1
+a0309dbc:	e5832000 	str	r2, [r3]
+a0309dc0:	e3510000 	cmp	r1, #0	; 0x0
+a0309dc4:	ca000000 	bgt	a0309dcc <number+0x4f0>
+a0309dc8:	ea00000a 	b	a0309df8 <number+0x51c>
+a0309dcc:	e51b201c 	ldr	r2, [fp, -#28]
+a0309dd0:	e51b3020 	ldr	r3, [fp, -#32]
+a0309dd4:	e1520003 	cmp	r2, r3
+a0309dd8:	8a000002 	bhi	a0309de8 <number+0x50c>
+a0309ddc:	e51b201c 	ldr	r2, [fp, -#28]
+a0309de0:	e55b3029 	ldrb	r3, [fp, -#41]
+a0309de4:	e5c23000 	strb	r3, [r2]
+a0309de8:	e51b301c 	ldr	r3, [fp, -#28]
+a0309dec:	e2833001 	add	r3, r3, #1	; 0x1
+a0309df0:	e50b301c 	str	r3, [fp, -#28]
+a0309df4:	eaffffec 	b	a0309dac <number+0x4d0>
+a0309df8:	e1a00000 	nop			(mov r0,r0)
+a0309dfc:	e28b200c 	add	r2, fp, #12	; 0xc
+a0309e00:	e5923000 	ldr	r3, [r2]
+a0309e04:	e1a01003 	mov	r1, r3
+a0309e08:	e2433001 	sub	r3, r3, #1	; 0x1
+a0309e0c:	e5823000 	str	r3, [r2]
+a0309e10:	e51b30c8 	ldr	r3, [fp, -#200]
+a0309e14:	e1510003 	cmp	r1, r3
+a0309e18:	ca000000 	bgt	a0309e20 <number+0x544>
+a0309e1c:	ea00000a 	b	a0309e4c <number+0x570>
+a0309e20:	e51b201c 	ldr	r2, [fp, -#28]
+a0309e24:	e51b3020 	ldr	r3, [fp, -#32]
+a0309e28:	e1520003 	cmp	r2, r3
+a0309e2c:	8a000002 	bhi	a0309e3c <number+0x560>
+a0309e30:	e51b301c 	ldr	r3, [fp, -#28]
+a0309e34:	e3a02030 	mov	r2, #48	; 0x30
+a0309e38:	e5c32000 	strb	r2, [r3]
+a0309e3c:	e51b301c 	ldr	r3, [fp, -#28]
+a0309e40:	e2833001 	add	r3, r3, #1	; 0x1
+a0309e44:	e50b301c 	str	r3, [fp, -#28]
+a0309e48:	eaffffeb 	b	a0309dfc <number+0x520>
+a0309e4c:	e1a00000 	nop			(mov r0,r0)
+a0309e50:	e24b30c8 	sub	r3, fp, #200	; 0xc8
+a0309e54:	e5932000 	ldr	r2, [r3]
+a0309e58:	e1a01002 	mov	r1, r2
+a0309e5c:	e2422001 	sub	r2, r2, #1	; 0x1
+a0309e60:	e5832000 	str	r2, [r3]
+a0309e64:	e3510000 	cmp	r1, #0	; 0x0
+a0309e68:	ca000000 	bgt	a0309e70 <number+0x594>
+a0309e6c:	ea00000f 	b	a0309eb0 <number+0x5d4>
+a0309e70:	e51b201c 	ldr	r2, [fp, -#28]
+a0309e74:	e51b3020 	ldr	r3, [fp, -#32]
+a0309e78:	e1520003 	cmp	r2, r3
+a0309e7c:	8a000007 	bhi	a0309ea0 <number+0x5c4>
+a0309e80:	e51b101c 	ldr	r1, [fp, -#28]
+a0309e84:	e3e02057 	mvn	r2, #87	; 0x57
+a0309e88:	e51b30c8 	ldr	r3, [fp, -#200]
+a0309e8c:	e24bc018 	sub	ip, fp, #24	; 0x18
+a0309e90:	e08c3003 	add	r3, ip, r3
+a0309e94:	e0833002 	add	r3, r3, r2
+a0309e98:	e5d33000 	ldrb	r3, [r3]
+a0309e9c:	e5c13000 	strb	r3, [r1]
+a0309ea0:	e51b301c 	ldr	r3, [fp, -#28]
+a0309ea4:	e2833001 	add	r3, r3, #1	; 0x1
+a0309ea8:	e50b301c 	str	r3, [fp, -#28]
+a0309eac:	eaffffe7 	b	a0309e50 <number+0x574>
+a0309eb0:	e1a00000 	nop			(mov r0,r0)
+a0309eb4:	e28b3008 	add	r3, fp, #8	; 0x8
+a0309eb8:	e5932000 	ldr	r2, [r3]
+a0309ebc:	e1a01002 	mov	r1, r2
+a0309ec0:	e2422001 	sub	r2, r2, #1	; 0x1
+a0309ec4:	e5832000 	str	r2, [r3]
+a0309ec8:	e3510000 	cmp	r1, #0	; 0x0
+a0309ecc:	ca000000 	bgt	a0309ed4 <number+0x5f8>
+a0309ed0:	ea00000a 	b	a0309f00 <number+0x624>
+a0309ed4:	e51b201c 	ldr	r2, [fp, -#28]
+a0309ed8:	e51b3020 	ldr	r3, [fp, -#32]
+a0309edc:	e1520003 	cmp	r2, r3
+a0309ee0:	8a000002 	bhi	a0309ef0 <number+0x614>
+a0309ee4:	e51b301c 	ldr	r3, [fp, -#28]
+a0309ee8:	e3a02020 	mov	r2, #32	; 0x20
+a0309eec:	e5c32000 	strb	r2, [r3]
+a0309ef0:	e51b301c 	ldr	r3, [fp, -#28]
+a0309ef4:	e2833001 	add	r3, r3, #1	; 0x1
+a0309ef8:	e50b301c 	str	r3, [fp, -#28]
+a0309efc:	eaffffec 	b	a0309eb4 <number+0x5d8>
+a0309f00:	e51b301c 	ldr	r3, [fp, -#28]
+a0309f04:	e50b30d0 	str	r3, [fp, -#208]
+a0309f08:	e51b00d0 	ldr	r0, [fp, -#208]
+a0309f0c:	e91ba870 	ldmdb	fp, {r4, r5, r6, fp, sp, pc}
+a0309f10:	a030d430 	eorges	sp, r0, r0, lsr r4
+a0309f14:	a030d458 	eorges	sp, r0, r8, asr r4
+
+a0309f18 <vsnprintf>:
+a0309f18:	e1a0c00d 	mov	ip, sp
+a0309f1c:	e92dd830 	stmdb	sp!, {r4, r5, fp, ip, lr, pc}
+a0309f20:	e24cb004 	sub	fp, ip, #4	; 0x4
+a0309f24:	e24dd058 	sub	sp, sp, #88	; 0x58
+a0309f28:	e50b0018 	str	r0, [fp, -#24]
+a0309f2c:	e50b101c 	str	r1, [fp, -#28]
+a0309f30:	e50b2020 	str	r2, [fp, -#32]
+a0309f34:	e50b3024 	str	r3, [fp, -#36]
+a0309f38:	e51b3018 	ldr	r3, [fp, -#24]
+a0309f3c:	e50b303c 	str	r3, [fp, -#60]
+a0309f40:	e51b2018 	ldr	r2, [fp, -#24]
+a0309f44:	e51b301c 	ldr	r3, [fp, -#28]
+a0309f48:	e0823003 	add	r3, r2, r3
+a0309f4c:	e2433001 	sub	r3, r3, #1	; 0x1
+a0309f50:	e50b3040 	str	r3, [fp, -#64]
+a0309f54:	e51b3018 	ldr	r3, [fp, -#24]
+a0309f58:	e2432001 	sub	r2, r3, #1	; 0x1
+a0309f5c:	e51b3040 	ldr	r3, [fp, -#64]
+a0309f60:	e1530002 	cmp	r3, r2
+a0309f64:	2a000006 	bcs	a0309f84 <vsnprintf+0x6c>
+a0309f68:	e3e03000 	mvn	r3, #0	; 0x0
+a0309f6c:	e50b3040 	str	r3, [fp, -#64]
+a0309f70:	e51b2040 	ldr	r2, [fp, -#64]
+a0309f74:	e51b3018 	ldr	r3, [fp, -#24]
+a0309f78:	e0633002 	rsb	r3, r3, r2
+a0309f7c:	e2833001 	add	r3, r3, #1	; 0x1
+a0309f80:	e50b301c 	str	r3, [fp, -#28]
+a0309f84:	e1a00000 	nop			(mov r0,r0)
+a0309f88:	e51b3020 	ldr	r3, [fp, -#32]
+a0309f8c:	e5d33000 	ldrb	r3, [r3]
+a0309f90:	e3530000 	cmp	r3, #0	; 0x0
+a0309f94:	1a000000 	bne	a0309f9c <vsnprintf+0x84>
+a0309f98:	ea000299 	b	a030aa04 <vsnprintf+0xaec>
+a0309f9c:	e51b3020 	ldr	r3, [fp, -#32]
+a0309fa0:	e5d33000 	ldrb	r3, [r3]
+a0309fa4:	e3530025 	cmp	r3, #37	; 0x25
+a0309fa8:	0a00000b 	beq	a0309fdc <vsnprintf+0xc4>
+a0309fac:	e51b203c 	ldr	r2, [fp, -#60]
+a0309fb0:	e51b3040 	ldr	r3, [fp, -#64]
+a0309fb4:	e1520003 	cmp	r2, r3
+a0309fb8:	8a000003 	bhi	a0309fcc <vsnprintf+0xb4>
+a0309fbc:	e51b303c 	ldr	r3, [fp, -#60]
+a0309fc0:	e51b2020 	ldr	r2, [fp, -#32]
+a0309fc4:	e5d22000 	ldrb	r2, [r2]
+a0309fc8:	e5c32000 	strb	r2, [r3]
+a0309fcc:	e51b303c 	ldr	r3, [fp, -#60]
+a0309fd0:	e2833001 	add	r3, r3, #1	; 0x1
+a0309fd4:	e50b303c 	str	r3, [fp, -#60]
+a0309fd8:	ea000285 	b	a030a9f4 <vsnprintf+0xadc>
+a0309fdc:	e3a03000 	mov	r3, #0	; 0x0
+a0309fe0:	e50b304c 	str	r3, [fp, -#76]
+a0309fe4:	e51b3020 	ldr	r3, [fp, -#32]
+a0309fe8:	e2833001 	add	r3, r3, #1	; 0x1
+a0309fec:	e50b3020 	str	r3, [fp, -#32]
+a0309ff0:	e51b3020 	ldr	r3, [fp, -#32]
+a0309ff4:	e5d33000 	ldrb	r3, [r3]
+a0309ff8:	e2433020 	sub	r3, r3, #32	; 0x20
+a0309ffc:	e3530010 	cmp	r3, #16	; 0x10
+a030a000:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
+a030a004:	ea000024 	b	a030a09c <vsnprintf+0x184>
+a030a008:	a030a06c 	eorges	sl, r0, ip, rrx
+a030a00c:	a030a09c 	mlages	r0, ip, r0, sl
+a030a010:	a030a09c 	mlages	r0, ip, r0, sl
+a030a014:	a030a07c 	eorges	sl, r0, ip, ror r0
+a030a018:	a030a09c 	mlages	r0, ip, r0, sl
+a030a01c:	a030a09c 	mlages	r0, ip, r0, sl
+a030a020:	a030a09c 	mlages	r0, ip, r0, sl
+a030a024:	a030a09c 	mlages	r0, ip, r0, sl
+a030a028:	a030a09c 	mlages	r0, ip, r0, sl
+a030a02c:	a030a09c 	mlages	r0, ip, r0, sl
+a030a030:	a030a09c 	mlages	r0, ip, r0, sl
+a030a034:	a030a05c 	eorges	sl, r0, ip, asr r0
+a030a038:	a030a09c 	mlages	r0, ip, r0, sl
+a030a03c:	a030a04c 	eorges	sl, r0, ip, asr #32
+a030a040:	a030a09c 	mlages	r0, ip, r0, sl
+a030a044:	a030a09c 	mlages	r0, ip, r0, sl
+a030a048:	a030a08c 	eorges	sl, r0, ip, lsl #1
+a030a04c:	e51b304c 	ldr	r3, [fp, -#76]
+a030a050:	e3833010 	orr	r3, r3, #16	; 0x10
+a030a054:	e50b304c 	str	r3, [fp, -#76]
+a030a058:	eaffffe1 	b	a0309fe4 <vsnprintf+0xcc>
+a030a05c:	e51b304c 	ldr	r3, [fp, -#76]
+a030a060:	e3833004 	orr	r3, r3, #4	; 0x4
+a030a064:	e50b304c 	str	r3, [fp, -#76]
+a030a068:	eaffffdd 	b	a0309fe4 <vsnprintf+0xcc>
+a030a06c:	e51b304c 	ldr	r3, [fp, -#76]
+a030a070:	e3833008 	orr	r3, r3, #8	; 0x8
+a030a074:	e50b304c 	str	r3, [fp, -#76]
+a030a078:	eaffffd9 	b	a0309fe4 <vsnprintf+0xcc>
+a030a07c:	e51b304c 	ldr	r3, [fp, -#76]
+a030a080:	e3833020 	orr	r3, r3, #32	; 0x20
+a030a084:	e50b304c 	str	r3, [fp, -#76]
+a030a088:	eaffffd5 	b	a0309fe4 <vsnprintf+0xcc>
+a030a08c:	e51b304c 	ldr	r3, [fp, -#76]
+a030a090:	e3833001 	orr	r3, r3, #1	; 0x1
+a030a094:	e50b304c 	str	r3, [fp, -#76]
+a030a098:	eaffffd1 	b	a0309fe4 <vsnprintf+0xcc>
+a030a09c:	e3e03000 	mvn	r3, #0	; 0x0
+a030a0a0:	e50b3050 	str	r3, [fp, -#80]
+a030a0a4:	e51b3020 	ldr	r3, [fp, -#32]
+a030a0a8:	e5d33000 	ldrb	r3, [r3]
+a030a0ac:	e1a00003 	mov	r0, r3
+a030a0b0:	eb00028e 	bl	a030aaf0 <isdigit>
+a030a0b4:	e1a03000 	mov	r3, r0
+a030a0b8:	e3530000 	cmp	r3, #0	; 0x0
+a030a0bc:	0a000005 	beq	a030a0d8 <vsnprintf+0x1c0>
+a030a0c0:	e24b3020 	sub	r3, fp, #32	; 0x20
+a030a0c4:	e1a00003 	mov	r0, r3
+a030a0c8:	ebfffde1 	bl	a0309854 <skip_atoi>
+a030a0cc:	e1a03000 	mov	r3, r0
+a030a0d0:	e50b3050 	str	r3, [fp, -#80]
+a030a0d4:	ea000015 	b	a030a130 <vsnprintf+0x218>
+a030a0d8:	e51b3020 	ldr	r3, [fp, -#32]
+a030a0dc:	e5d33000 	ldrb	r3, [r3]
+a030a0e0:	e353002a 	cmp	r3, #42	; 0x2a
+a030a0e4:	1a000011 	bne	a030a130 <vsnprintf+0x218>
+a030a0e8:	e51b3020 	ldr	r3, [fp, -#32]
+a030a0ec:	e2833001 	add	r3, r3, #1	; 0x1
+a030a0f0:	e50b3020 	str	r3, [fp, -#32]
+a030a0f4:	e51b2024 	ldr	r2, [fp, -#36]
+a030a0f8:	e51b3024 	ldr	r3, [fp, -#36]
+a030a0fc:	e2833004 	add	r3, r3, #4	; 0x4
+a030a100:	e50b3024 	str	r3, [fp, -#36]
+a030a104:	e5923000 	ldr	r3, [r2]
+a030a108:	e50b3050 	str	r3, [fp, -#80]
+a030a10c:	e51b3050 	ldr	r3, [fp, -#80]
+a030a110:	e3530000 	cmp	r3, #0	; 0x0
+a030a114:	aa000005 	bge	a030a130 <vsnprintf+0x218>
+a030a118:	e51b3050 	ldr	r3, [fp, -#80]
+a030a11c:	e2633000 	rsb	r3, r3, #0	; 0x0
+a030a120:	e50b3050 	str	r3, [fp, -#80]
+a030a124:	e51b304c 	ldr	r3, [fp, -#76]
+a030a128:	e3833010 	orr	r3, r3, #16	; 0x10
+a030a12c:	e50b304c 	str	r3, [fp, -#76]
+a030a130:	e3e03000 	mvn	r3, #0	; 0x0
+a030a134:	e50b3054 	str	r3, [fp, -#84]
+a030a138:	e51b3020 	ldr	r3, [fp, -#32]
+a030a13c:	e5d33000 	ldrb	r3, [r3]
+a030a140:	e353002e 	cmp	r3, #46	; 0x2e
+a030a144:	1a000021 	bne	a030a1d0 <vsnprintf+0x2b8>
+a030a148:	e51b3020 	ldr	r3, [fp, -#32]
+a030a14c:	e2833001 	add	r3, r3, #1	; 0x1
+a030a150:	e50b3020 	str	r3, [fp, -#32]
+a030a154:	e51b3020 	ldr	r3, [fp, -#32]
+a030a158:	e5d33000 	ldrb	r3, [r3]
+a030a15c:	e1a00003 	mov	r0, r3
+a030a160:	eb000262 	bl	a030aaf0 <isdigit>
+a030a164:	e1a03000 	mov	r3, r0
+a030a168:	e3530000 	cmp	r3, #0	; 0x0
+a030a16c:	0a000005 	beq	a030a188 <vsnprintf+0x270>
+a030a170:	e24b3020 	sub	r3, fp, #32	; 0x20
+a030a174:	e1a00003 	mov	r0, r3
+a030a178:	ebfffdb5 	bl	a0309854 <skip_atoi>
+a030a17c:	e1a03000 	mov	r3, r0
+a030a180:	e50b3054 	str	r3, [fp, -#84]
+a030a184:	ea00000c 	b	a030a1bc <vsnprintf+0x2a4>
+a030a188:	e51b3020 	ldr	r3, [fp, -#32]
+a030a18c:	e5d33000 	ldrb	r3, [r3]
+a030a190:	e353002a 	cmp	r3, #42	; 0x2a
+a030a194:	1a000008 	bne	a030a1bc <vsnprintf+0x2a4>
+a030a198:	e51b3020 	ldr	r3, [fp, -#32]
+a030a19c:	e2833001 	add	r3, r3, #1	; 0x1
+a030a1a0:	e50b3020 	str	r3, [fp, -#32]
+a030a1a4:	e51b2024 	ldr	r2, [fp, -#36]
+a030a1a8:	e51b3024 	ldr	r3, [fp, -#36]
+a030a1ac:	e2833004 	add	r3, r3, #4	; 0x4
+a030a1b0:	e50b3024 	str	r3, [fp, -#36]
+a030a1b4:	e5923000 	ldr	r3, [r2]
+a030a1b8:	e50b3054 	str	r3, [fp, -#84]
+a030a1bc:	e51b3054 	ldr	r3, [fp, -#84]
+a030a1c0:	e3530000 	cmp	r3, #0	; 0x0
+a030a1c4:	aa000001 	bge	a030a1d0 <vsnprintf+0x2b8>
+a030a1c8:	e3a03000 	mov	r3, #0	; 0x0
+a030a1cc:	e50b3054 	str	r3, [fp, -#84]
+a030a1d0:	e3e03000 	mvn	r3, #0	; 0x0
+a030a1d4:	e50b3058 	str	r3, [fp, -#88]
+a030a1d8:	e51b3020 	ldr	r3, [fp, -#32]
+a030a1dc:	e5d33000 	ldrb	r3, [r3]
+a030a1e0:	e3530068 	cmp	r3, #104	; 0x68
+a030a1e4:	0a00000c 	beq	a030a21c <vsnprintf+0x304>
+a030a1e8:	e51b3020 	ldr	r3, [fp, -#32]
+a030a1ec:	e5d33000 	ldrb	r3, [r3]
+a030a1f0:	e353006c 	cmp	r3, #108	; 0x6c
+a030a1f4:	0a000008 	beq	a030a21c <vsnprintf+0x304>
+a030a1f8:	e51b3020 	ldr	r3, [fp, -#32]
+a030a1fc:	e5d33000 	ldrb	r3, [r3]
+a030a200:	e353004c 	cmp	r3, #76	; 0x4c
+a030a204:	0a000004 	beq	a030a21c <vsnprintf+0x304>
+a030a208:	e51b3020 	ldr	r3, [fp, -#32]
+a030a20c:	e5d33000 	ldrb	r3, [r3]
+a030a210:	e353005a 	cmp	r3, #90	; 0x5a
+a030a214:	0a000000 	beq	a030a21c <vsnprintf+0x304>
+a030a218:	ea000011 	b	a030a264 <vsnprintf+0x34c>
+a030a21c:	e51b3020 	ldr	r3, [fp, -#32]
+a030a220:	e5d33000 	ldrb	r3, [r3]
+a030a224:	e50b3058 	str	r3, [fp, -#88]
+a030a228:	e51b3020 	ldr	r3, [fp, -#32]
+a030a22c:	e2833001 	add	r3, r3, #1	; 0x1
+a030a230:	e50b3020 	str	r3, [fp, -#32]
+a030a234:	e51b3058 	ldr	r3, [fp, -#88]
+a030a238:	e353006c 	cmp	r3, #108	; 0x6c
+a030a23c:	1a000008 	bne	a030a264 <vsnprintf+0x34c>
+a030a240:	e51b3020 	ldr	r3, [fp, -#32]
+a030a244:	e5d33000 	ldrb	r3, [r3]
+a030a248:	e353006c 	cmp	r3, #108	; 0x6c
+a030a24c:	1a000004 	bne	a030a264 <vsnprintf+0x34c>
+a030a250:	e3a0304c 	mov	r3, #76	; 0x4c
+a030a254:	e50b3058 	str	r3, [fp, -#88]
+a030a258:	e51b3020 	ldr	r3, [fp, -#32]
+a030a25c:	e2833001 	add	r3, r3, #1	; 0x1
+a030a260:	e50b3020 	str	r3, [fp, -#32]
+a030a264:	e3a0300a 	mov	r3, #10	; 0xa
+a030a268:	e50b3038 	str	r3, [fp, -#56]
+a030a26c:	e51b3020 	ldr	r3, [fp, -#32]
+a030a270:	e5d33000 	ldrb	r3, [r3]
+a030a274:	e2433025 	sub	r3, r3, #37	; 0x25
+a030a278:	e3530053 	cmp	r3, #83	; 0x53
+a030a27c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
+a030a280:	ea000140 	b	a030a788 <vsnprintf+0x870>
+a030a284:	a030a728 	eorges	sl, r0, r8, lsr #14
+a030a288:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a28c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a290:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a294:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a298:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a29c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2a0:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2a4:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2a8:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2ac:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2b0:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2b4:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2b8:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2bc:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2c0:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2c4:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2c8:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2cc:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2d0:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2d4:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2d8:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2dc:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2e0:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2e4:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2e8:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2ec:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2f0:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2f4:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2f8:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a2fc:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a300:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a304:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a308:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a30c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a310:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a314:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a318:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a31c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a320:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a324:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a328:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a32c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a330:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a334:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a338:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a33c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a340:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a344:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a348:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a34c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a350:	a030a760 	eorges	sl, r0, r0, ror #14
+a030a354:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a358:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a35c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a360:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a364:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a368:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a36c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a370:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a374:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a378:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a37c:	a030a3d4 	ldrgesb	sl, [r0], -r4
+a030a380:	a030a778 	eorges	sl, r0, r8, ror r7
+a030a384:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a388:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a38c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a390:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a394:	a030a778 	eorges	sl, r0, r8, ror r7
+a030a398:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a39c:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a3a0:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a3a4:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a3a8:	a030a680 	eorges	sl, r0, r0, lsl #13
+a030a3ac:	a030a754 	eorges	sl, r0, r4, asr r7
+a030a3b0:	a030a604 	eorges	sl, r0, r4, lsl #12
+a030a3b4:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a3b8:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a3bc:	a030a4ac 	eorges	sl, r0, ip, lsr #9
+a030a3c0:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a3c4:	a030a800 	eorges	sl, r0, r0, lsl #16
+a030a3c8:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a3cc:	a030a788 	eorges	sl, r0, r8, lsl #15
+a030a3d0:	a030a76c 	eorges	sl, r0, ip, ror #14
+a030a3d4:	e51b304c 	ldr	r3, [fp, -#76]
+a030a3d8:	e2033010 	and	r3, r3, #16	; 0x10
+a030a3dc:	e3530000 	cmp	r3, #0	; 0x0
+a030a3e0:	1a000010 	bne	a030a428 <vsnprintf+0x510>
+a030a3e4:	e51b3050 	ldr	r3, [fp, -#80]
+a030a3e8:	e2433001 	sub	r3, r3, #1	; 0x1
+a030a3ec:	e50b3050 	str	r3, [fp, -#80]
+a030a3f0:	e3530000 	cmp	r3, #0	; 0x0
+a030a3f4:	ca000000 	bgt	a030a3fc <vsnprintf+0x4e4>
+a030a3f8:	ea00000a 	b	a030a428 <vsnprintf+0x510>
+a030a3fc:	e51b203c 	ldr	r2, [fp, -#60]
+a030a400:	e51b3040 	ldr	r3, [fp, -#64]
+a030a404:	e1520003 	cmp	r2, r3
+a030a408:	8a000002 	bhi	a030a418 <vsnprintf+0x500>
+a030a40c:	e51b303c 	ldr	r3, [fp, -#60]
+a030a410:	e3a02020 	mov	r2, #32	; 0x20
+a030a414:	e5c32000 	strb	r2, [r3]
+a030a418:	e51b303c 	ldr	r3, [fp, -#60]
+a030a41c:	e2833001 	add	r3, r3, #1	; 0x1
+a030a420:	e50b303c 	str	r3, [fp, -#60]
+a030a424:	eaffffee 	b	a030a3e4 <vsnprintf+0x4cc>
+a030a428:	e51b2024 	ldr	r2, [fp, -#36]
+a030a42c:	e51b3024 	ldr	r3, [fp, -#36]
+a030a430:	e2833004 	add	r3, r3, #4	; 0x4
+a030a434:	e50b3024 	str	r3, [fp, -#36]
+a030a438:	e5d23000 	ldrb	r3, [r2]
+a030a43c:	e54b3041 	strb	r3, [fp, -#65]
+a030a440:	e51b203c 	ldr	r2, [fp, -#60]
+a030a444:	e51b3040 	ldr	r3, [fp, -#64]
+a030a448:	e1520003 	cmp	r2, r3
+a030a44c:	8a000002 	bhi	a030a45c <vsnprintf+0x544>
+a030a450:	e51b203c 	ldr	r2, [fp, -#60]
+a030a454:	e55b3041 	ldrb	r3, [fp, -#65]
+a030a458:	e5c23000 	strb	r3, [r2]
+a030a45c:	e51b303c 	ldr	r3, [fp, -#60]
+a030a460:	e2833001 	add	r3, r3, #1	; 0x1
+a030a464:	e50b303c 	str	r3, [fp, -#60]
+a030a468:	e51b3050 	ldr	r3, [fp, -#80]
+a030a46c:	e2433001 	sub	r3, r3, #1	; 0x1
+a030a470:	e50b3050 	str	r3, [fp, -#80]
+a030a474:	e3530000 	cmp	r3, #0	; 0x0
+a030a478:	ca000000 	bgt	a030a480 <vsnprintf+0x568>
+a030a47c:	ea00015c 	b	a030a9f4 <vsnprintf+0xadc>
+a030a480:	e51b203c 	ldr	r2, [fp, -#60]
+a030a484:	e51b3040 	ldr	r3, [fp, -#64]
+a030a488:	e1520003 	cmp	r2, r3
+a030a48c:	8a000002 	bhi	a030a49c <vsnprintf+0x584>
+a030a490:	e51b303c 	ldr	r3, [fp, -#60]
+a030a494:	e3a02020 	mov	r2, #32	; 0x20
+a030a498:	e5c32000 	strb	r2, [r3]
+a030a49c:	e51b303c 	ldr	r3, [fp, -#60]
+a030a4a0:	e2833001 	add	r3, r3, #1	; 0x1
+a030a4a4:	e50b303c 	str	r3, [fp, -#60]
+a030a4a8:	eaffffee 	b	a030a468 <vsnprintf+0x550>
+a030a4ac:	e51b2024 	ldr	r2, [fp, -#36]
+a030a4b0:	e51b3024 	ldr	r3, [fp, -#36]
+a030a4b4:	e2833004 	add	r3, r3, #4	; 0x4
+a030a4b8:	e50b3024 	str	r3, [fp, -#36]
+a030a4bc:	e5923000 	ldr	r3, [r2]
+a030a4c0:	e50b3048 	str	r3, [fp, -#72]
+a030a4c4:	e51b3048 	ldr	r3, [fp, -#72]
+a030a4c8:	e3530000 	cmp	r3, #0	; 0x0
+a030a4cc:	1a000001 	bne	a030a4d8 <vsnprintf+0x5c0>
+a030a4d0:	e59f3578 	ldr	r3, [pc, #1400]	; a030aa50 <vsnprintf+0xb38>
+a030a4d4:	e50b3048 	str	r3, [fp, -#72]
+a030a4d8:	e51b0048 	ldr	r0, [fp, -#72]
+a030a4dc:	e51b1054 	ldr	r1, [fp, -#84]
+a030a4e0:	eb000195 	bl	a030ab3c <strnlen>
+a030a4e4:	e1a03000 	mov	r3, r0
+a030a4e8:	e50b3028 	str	r3, [fp, -#40]
+a030a4ec:	e51b304c 	ldr	r3, [fp, -#76]
+a030a4f0:	e2033010 	and	r3, r3, #16	; 0x10
+a030a4f4:	e3530000 	cmp	r3, #0	; 0x0
+a030a4f8:	1a000013 	bne	a030a54c <vsnprintf+0x634>
+a030a4fc:	e24b2050 	sub	r2, fp, #80	; 0x50
+a030a500:	e5923000 	ldr	r3, [r2]
+a030a504:	e1a01003 	mov	r1, r3
+a030a508:	e2433001 	sub	r3, r3, #1	; 0x1
+a030a50c:	e5823000 	str	r3, [r2]
+a030a510:	e51b3028 	ldr	r3, [fp, -#40]
+a030a514:	e1510003 	cmp	r1, r3
+a030a518:	ca000000 	bgt	a030a520 <vsnprintf+0x608>
+a030a51c:	ea00000a 	b	a030a54c <vsnprintf+0x634>
+a030a520:	e51b203c 	ldr	r2, [fp, -#60]
+a030a524:	e51b3040 	ldr	r3, [fp, -#64]
+a030a528:	e1520003 	cmp	r2, r3
+a030a52c:	8a000002 	bhi	a030a53c <vsnprintf+0x624>
+a030a530:	e51b303c 	ldr	r3, [fp, -#60]
+a030a534:	e3a02020 	mov	r2, #32	; 0x20
+a030a538:	e5c32000 	strb	r2, [r3]
+a030a53c:	e51b303c 	ldr	r3, [fp, -#60]
+a030a540:	e2833001 	add	r3, r3, #1	; 0x1
+a030a544:	e50b303c 	str	r3, [fp, -#60]
+a030a548:	eaffffeb 	b	a030a4fc <vsnprintf+0x5e4>
+a030a54c:	e3a03000 	mov	r3, #0	; 0x0
+a030a550:	e50b3034 	str	r3, [fp, -#52]
+a030a554:	e51b2034 	ldr	r2, [fp, -#52]
+a030a558:	e51b3028 	ldr	r3, [fp, -#40]
+a030a55c:	e1520003 	cmp	r2, r3
+a030a560:	ba000000 	blt	a030a568 <vsnprintf+0x650>
+a030a564:	ea000011 	b	a030a5b0 <vsnprintf+0x698>
+a030a568:	e51b203c 	ldr	r2, [fp, -#60]
+a030a56c:	e51b3040 	ldr	r3, [fp, -#64]
+a030a570:	e1520003 	cmp	r2, r3
+a030a574:	8a000003 	bhi	a030a588 <vsnprintf+0x670>
+a030a578:	e51b303c 	ldr	r3, [fp, -#60]
+a030a57c:	e51b2048 	ldr	r2, [fp, -#72]
+a030a580:	e5d22000 	ldrb	r2, [r2]
+a030a584:	e5c32000 	strb	r2, [r3]
+a030a588:	e51b303c 	ldr	r3, [fp, -#60]
+a030a58c:	e2833001 	add	r3, r3, #1	; 0x1
+a030a590:	e50b303c 	str	r3, [fp, -#60]
+a030a594:	e51b3048 	ldr	r3, [fp, -#72]
+a030a598:	e2833001 	add	r3, r3, #1	; 0x1
+a030a59c:	e50b3048 	str	r3, [fp, -#72]
+a030a5a0:	e51b3034 	ldr	r3, [fp, -#52]
+a030a5a4:	e2833001 	add	r3, r3, #1	; 0x1
+a030a5a8:	e50b3034 	str	r3, [fp, -#52]
+a030a5ac:	eaffffe8 	b	a030a554 <vsnprintf+0x63c>
+a030a5b0:	e1a00000 	nop			(mov r0,r0)
+a030a5b4:	e24b2050 	sub	r2, fp, #80	; 0x50
+a030a5b8:	e5923000 	ldr	r3, [r2]
+a030a5bc:	e1a01003 	mov	r1, r3
+a030a5c0:	e2433001 	sub	r3, r3, #1	; 0x1
+a030a5c4:	e5823000 	str	r3, [r2]
+a030a5c8:	e51b3028 	ldr	r3, [fp, -#40]
+a030a5cc:	e1510003 	cmp	r1, r3
+a030a5d0:	ca000000 	bgt	a030a5d8 <vsnprintf+0x6c0>
+a030a5d4:	ea000106 	b	a030a9f4 <vsnprintf+0xadc>
+a030a5d8:	e51b203c 	ldr	r2, [fp, -#60]
+a030a5dc:	e51b3040 	ldr	r3, [fp, -#64]
+a030a5e0:	e1520003 	cmp	r2, r3
+a030a5e4:	8a000002 	bhi	a030a5f4 <vsnprintf+0x6dc>
+a030a5e8:	e51b303c 	ldr	r3, [fp, -#60]
+a030a5ec:	e3a02020 	mov	r2, #32	; 0x20
+a030a5f0:	e5c32000 	strb	r2, [r3]
+a030a5f4:	e51b303c 	ldr	r3, [fp, -#60]
+a030a5f8:	e2833001 	add	r3, r3, #1	; 0x1
+a030a5fc:	e50b303c 	str	r3, [fp, -#60]
+a030a600:	eaffffeb 	b	a030a5b4 <vsnprintf+0x69c>
+a030a604:	e51b3050 	ldr	r3, [fp, -#80]
+a030a608:	e3730001 	cmn	r3, #1	; 0x1
+a030a60c:	1a000004 	bne	a030a624 <vsnprintf+0x70c>
+a030a610:	e3a03008 	mov	r3, #8	; 0x8
+a030a614:	e50b3050 	str	r3, [fp, -#80]
+a030a618:	e51b304c 	ldr	r3, [fp, -#76]
+a030a61c:	e3833001 	orr	r3, r3, #1	; 0x1
+a030a620:	e50b304c 	str	r3, [fp, -#76]
+a030a624:	e51b2024 	ldr	r2, [fp, -#36]
+a030a628:	e51b3024 	ldr	r3, [fp, -#36]
+a030a62c:	e2833004 	add	r3, r3, #4	; 0x4
+a030a630:	e50b3024 	str	r3, [fp, -#36]
+a030a634:	e5923000 	ldr	r3, [r2]
+a030a638:	e1a04003 	mov	r4, r3
+a030a63c:	e3a05000 	mov	r5, #0	; 0x0
+a030a640:	e3a03010 	mov	r3, #16	; 0x10
+a030a644:	e58d3000 	str	r3, [sp]
+a030a648:	e51b3050 	ldr	r3, [fp, -#80]
+a030a64c:	e58d3004 	str	r3, [sp, #4]
+a030a650:	e51b3054 	ldr	r3, [fp, -#84]
+a030a654:	e58d3008 	str	r3, [sp, #8]
+a030a658:	e51b304c 	ldr	r3, [fp, -#76]
+a030a65c:	e58d300c 	str	r3, [sp, #12]
+a030a660:	e51b003c 	ldr	r0, [fp, -#60]
+a030a664:	e51b1040 	ldr	r1, [fp, -#64]
+a030a668:	e1a03005 	mov	r3, r5
+a030a66c:	e1a02004 	mov	r2, r4
+a030a670:	ebfffc99 	bl	a03098dc <number>
+a030a674:	e1a03000 	mov	r3, r0
+a030a678:	e50b303c 	str	r3, [fp, -#60]
+a030a67c:	ea0000dc 	b	a030a9f4 <vsnprintf+0xadc>
+a030a680:	e51b3058 	ldr	r3, [fp, -#88]
+a030a684:	e353006c 	cmp	r3, #108	; 0x6c
+a030a688:	1a00000b 	bne	a030a6bc <vsnprintf+0x7a4>
+a030a68c:	e51b2024 	ldr	r2, [fp, -#36]
+a030a690:	e51b3024 	ldr	r3, [fp, -#36]
+a030a694:	e2833004 	add	r3, r3, #4	; 0x4
+a030a698:	e50b3024 	str	r3, [fp, -#36]
+a030a69c:	e5923000 	ldr	r3, [r2]
+a030a6a0:	e50b305c 	str	r3, [fp, -#92]
+a030a6a4:	e51b105c 	ldr	r1, [fp, -#92]
+a030a6a8:	e51b203c 	ldr	r2, [fp, -#60]
+a030a6ac:	e51b3018 	ldr	r3, [fp, -#24]
+a030a6b0:	e0633002 	rsb	r3, r3, r2
+a030a6b4:	e5813000 	str	r3, [r1]
+a030a6b8:	ea0000cd 	b	a030a9f4 <vsnprintf+0xadc>
+a030a6bc:	e51b3058 	ldr	r3, [fp, -#88]
+a030a6c0:	e353005a 	cmp	r3, #90	; 0x5a
+a030a6c4:	1a00000b 	bne	a030a6f8 <vsnprintf+0x7e0>
+a030a6c8:	e51b2024 	ldr	r2, [fp, -#36]
+a030a6cc:	e51b3024 	ldr	r3, [fp, -#36]
+a030a6d0:	e2833004 	add	r3, r3, #4	; 0x4
+a030a6d4:	e50b3024 	str	r3, [fp, -#36]
+a030a6d8:	e5923000 	ldr	r3, [r2]
+a030a6dc:	e50b305c 	str	r3, [fp, -#92]
+a030a6e0:	e51b105c 	ldr	r1, [fp, -#92]
+a030a6e4:	e51b203c 	ldr	r2, [fp, -#60]
+a030a6e8:	e51b3018 	ldr	r3, [fp, -#24]
+a030a6ec:	e0633002 	rsb	r3, r3, r2
+a030a6f0:	e5813000 	str	r3, [r1]
+a030a6f4:	ea0000be 	b	a030a9f4 <vsnprintf+0xadc>
+a030a6f8:	e51b2024 	ldr	r2, [fp, -#36]
+a030a6fc:	e51b3024 	ldr	r3, [fp, -#36]
+a030a700:	e2833004 	add	r3, r3, #4	; 0x4
+a030a704:	e50b3024 	str	r3, [fp, -#36]
+a030a708:	e5923000 	ldr	r3, [r2]
+a030a70c:	e50b305c 	str	r3, [fp, -#92]
+a030a710:	e51b105c 	ldr	r1, [fp, -#92]
+a030a714:	e51b203c 	ldr	r2, [fp, -#60]
+a030a718:	e51b3018 	ldr	r3, [fp, -#24]
+a030a71c:	e0633002 	rsb	r3, r3, r2
+a030a720:	e5813000 	str	r3, [r1]
+a030a724:	ea0000b2 	b	a030a9f4 <vsnprintf+0xadc>
+a030a728:	e51b203c 	ldr	r2, [fp, -#60]
+a030a72c:	e51b3040 	ldr	r3, [fp, -#64]
+a030a730:	e1520003 	cmp	r2, r3
+a030a734:	8a000002 	bhi	a030a744 <vsnprintf+0x82c>
+a030a738:	e51b303c 	ldr	r3, [fp, -#60]
+a030a73c:	e3a02025 	mov	r2, #37	; 0x25
+a030a740:	e5c32000 	strb	r2, [r3]
+a030a744:	e51b303c 	ldr	r3, [fp, -#60]
+a030a748:	e2833001 	add	r3, r3, #1	; 0x1
+a030a74c:	e50b303c 	str	r3, [fp, -#60]
+a030a750:	ea0000a7 	b	a030a9f4 <vsnprintf+0xadc>
+a030a754:	e3a03008 	mov	r3, #8	; 0x8
+a030a758:	e50b3038 	str	r3, [fp, -#56]
+a030a75c:	ea000027 	b	a030a800 <vsnprintf+0x8e8>
+a030a760:	e51b304c 	ldr	r3, [fp, -#76]
+a030a764:	e3833040 	orr	r3, r3, #64	; 0x40
+a030a768:	e50b304c 	str	r3, [fp, -#76]
+a030a76c:	e3a03010 	mov	r3, #16	; 0x10
+a030a770:	e50b3038 	str	r3, [fp, -#56]
+a030a774:	ea000021 	b	a030a800 <vsnprintf+0x8e8>
+a030a778:	e51b304c 	ldr	r3, [fp, -#76]
+a030a77c:	e3833002 	orr	r3, r3, #2	; 0x2
+a030a780:	e50b304c 	str	r3, [fp, -#76]
+a030a784:	ea00001d 	b	a030a800 <vsnprintf+0x8e8>
+a030a788:	e51b203c 	ldr	r2, [fp, -#60]
+a030a78c:	e51b3040 	ldr	r3, [fp, -#64]
+a030a790:	e1520003 	cmp	r2, r3
+a030a794:	8a000002 	bhi	a030a7a4 <vsnprintf+0x88c>
+a030a798:	e51b303c 	ldr	r3, [fp, -#60]
+a030a79c:	e3a02025 	mov	r2, #37	; 0x25
+a030a7a0:	e5c32000 	strb	r2, [r3]
+a030a7a4:	e51b303c 	ldr	r3, [fp, -#60]
+a030a7a8:	e2833001 	add	r3, r3, #1	; 0x1
+a030a7ac:	e50b303c 	str	r3, [fp, -#60]
+a030a7b0:	e51b3020 	ldr	r3, [fp, -#32]
+a030a7b4:	e5d33000 	ldrb	r3, [r3]
+a030a7b8:	e3530000 	cmp	r3, #0	; 0x0
+a030a7bc:	0a00000b 	beq	a030a7f0 <vsnprintf+0x8d8>
+a030a7c0:	e51b203c 	ldr	r2, [fp, -#60]
+a030a7c4:	e51b3040 	ldr	r3, [fp, -#64]
+a030a7c8:	e1520003 	cmp	r2, r3
+a030a7cc:	8a000003 	bhi	a030a7e0 <vsnprintf+0x8c8>
+a030a7d0:	e51b303c 	ldr	r3, [fp, -#60]
+a030a7d4:	e51b2020 	ldr	r2, [fp, -#32]
+a030a7d8:	e5d22000 	ldrb	r2, [r2]
+a030a7dc:	e5c32000 	strb	r2, [r3]
+a030a7e0:	e51b303c 	ldr	r3, [fp, -#60]
+a030a7e4:	e2833001 	add	r3, r3, #1	; 0x1
+a030a7e8:	e50b303c 	str	r3, [fp, -#60]
+a030a7ec:	ea000080 	b	a030a9f4 <vsnprintf+0xadc>
+a030a7f0:	e51b3020 	ldr	r3, [fp, -#32]
+a030a7f4:	e2433001 	sub	r3, r3, #1	; 0x1
+a030a7f8:	e50b3020 	str	r3, [fp, -#32]
+a030a7fc:	ea00007c 	b	a030a9f4 <vsnprintf+0xadc>
+a030a800:	e51b3058 	ldr	r3, [fp, -#88]
+a030a804:	e353004c 	cmp	r3, #76	; 0x4c
+a030a808:	1a000009 	bne	a030a834 <vsnprintf+0x91c>
+a030a80c:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a810:	e24b2014 	sub	r2, fp, #20	; 0x14
+a030a814:	e0821003 	add	r1, r2, r3
+a030a818:	e51b2024 	ldr	r2, [fp, -#36]
+a030a81c:	e51b3024 	ldr	r3, [fp, -#36]
+a030a820:	e2833008 	add	r3, r3, #8	; 0x8
+a030a824:	e50b3024 	str	r3, [fp, -#36]
+a030a828:	e8920018 	ldmia	r2, {r3, r4}
+a030a82c:	e8810018 	stmia	r1, {r3, r4}
+a030a830:	ea00005e 	b	a030a9b0 <vsnprintf+0xa98>
+a030a834:	e51b3058 	ldr	r3, [fp, -#88]
+a030a838:	e353006c 	cmp	r3, #108	; 0x6c
+a030a83c:	1a000017 	bne	a030a8a0 <vsnprintf+0x988>
+a030a840:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a844:	e24b4014 	sub	r4, fp, #20	; 0x14
+a030a848:	e0841003 	add	r1, r4, r3
+a030a84c:	e51b2024 	ldr	r2, [fp, -#36]
+a030a850:	e51b3024 	ldr	r3, [fp, -#36]
+a030a854:	e2833004 	add	r3, r3, #4	; 0x4
+a030a858:	e50b3024 	str	r3, [fp, -#36]
+a030a85c:	e5923000 	ldr	r3, [r2]
+a030a860:	e3a04000 	mov	r4, #0	; 0x0
+a030a864:	e8810018 	stmia	r1, {r3, r4}
+a030a868:	e51b304c 	ldr	r3, [fp, -#76]
+a030a86c:	e2033002 	and	r3, r3, #2	; 0x2
+a030a870:	e3530000 	cmp	r3, #0	; 0x0
+a030a874:	0a00004d 	beq	a030a9b0 <vsnprintf+0xa98>
+a030a878:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a87c:	e24b1014 	sub	r1, fp, #20	; 0x14
+a030a880:	e0812003 	add	r2, r1, r3
+a030a884:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a888:	e24b4014 	sub	r4, fp, #20	; 0x14
+a030a88c:	e0843003 	add	r3, r4, r3
+a030a890:	e5933000 	ldr	r3, [r3]
+a030a894:	e1a04fc3 	mov	r4, r3, asr #31
+a030a898:	e8820018 	stmia	r2, {r3, r4}
+a030a89c:	ea000043 	b	a030a9b0 <vsnprintf+0xa98>
+a030a8a0:	e51b3058 	ldr	r3, [fp, -#88]
+a030a8a4:	e353005a 	cmp	r3, #90	; 0x5a
+a030a8a8:	1a00000a 	bne	a030a8d8 <vsnprintf+0x9c0>
+a030a8ac:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a8b0:	e24b2014 	sub	r2, fp, #20	; 0x14
+a030a8b4:	e0821003 	add	r1, r2, r3
+a030a8b8:	e51b2024 	ldr	r2, [fp, -#36]
+a030a8bc:	e51b3024 	ldr	r3, [fp, -#36]
+a030a8c0:	e2833004 	add	r3, r3, #4	; 0x4
+a030a8c4:	e50b3024 	str	r3, [fp, -#36]
+a030a8c8:	e5923000 	ldr	r3, [r2]
+a030a8cc:	e3a04000 	mov	r4, #0	; 0x0
+a030a8d0:	e8810018 	stmia	r1, {r3, r4}
+a030a8d4:	ea000035 	b	a030a9b0 <vsnprintf+0xa98>
+a030a8d8:	e51b3058 	ldr	r3, [fp, -#88]
+a030a8dc:	e3530068 	cmp	r3, #104	; 0x68
+a030a8e0:	1a00001b 	bne	a030a954 <vsnprintf+0xa3c>
+a030a8e4:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a8e8:	e24b4014 	sub	r4, fp, #20	; 0x14
+a030a8ec:	e0842003 	add	r2, r4, r3
+a030a8f0:	e51b1024 	ldr	r1, [fp, -#36]
+a030a8f4:	e51b3024 	ldr	r3, [fp, -#36]
+a030a8f8:	e2833004 	add	r3, r3, #4	; 0x4
+a030a8fc:	e50b3024 	str	r3, [fp, -#36]
+a030a900:	e1d130b0 	ldrh	r3, [r1]
+a030a904:	e5823000 	str	r3, [r2]
+a030a908:	e5923000 	ldr	r3, [r2]
+a030a90c:	e3a04000 	mov	r4, #0	; 0x0
+a030a910:	e8820018 	stmia	r2, {r3, r4}
+a030a914:	e51b304c 	ldr	r3, [fp, -#76]
+a030a918:	e2033002 	and	r3, r3, #2	; 0x2
+a030a91c:	e3530000 	cmp	r3, #0	; 0x0
+a030a920:	0a000022 	beq	a030a9b0 <vsnprintf+0xa98>
+a030a924:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a928:	e24b1014 	sub	r1, fp, #20	; 0x14
+a030a92c:	e0812003 	add	r2, r1, r3
+a030a930:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a934:	e24b4014 	sub	r4, fp, #20	; 0x14
+a030a938:	e0843003 	add	r3, r4, r3
+a030a93c:	e1d330f0 	ldrsh	r3, [r3]
+a030a940:	e5823000 	str	r3, [r2]
+a030a944:	e5923000 	ldr	r3, [r2]
+a030a948:	e1a04fc3 	mov	r4, r3, asr #31
+a030a94c:	e8820018 	stmia	r2, {r3, r4}
+a030a950:	ea000016 	b	a030a9b0 <vsnprintf+0xa98>
+a030a954:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a958:	e24b2014 	sub	r2, fp, #20	; 0x14
+a030a95c:	e0821003 	add	r1, r2, r3
+a030a960:	e51b2024 	ldr	r2, [fp, -#36]
+a030a964:	e51b3024 	ldr	r3, [fp, -#36]
+a030a968:	e2833004 	add	r3, r3, #4	; 0x4
+a030a96c:	e50b3024 	str	r3, [fp, -#36]
+a030a970:	e5923000 	ldr	r3, [r2]
+a030a974:	e3a04000 	mov	r4, #0	; 0x0
+a030a978:	e8810018 	stmia	r1, {r3, r4}
+a030a97c:	e51b304c 	ldr	r3, [fp, -#76]
+a030a980:	e2033002 	and	r3, r3, #2	; 0x2
+a030a984:	e3530000 	cmp	r3, #0	; 0x0
+a030a988:	0a000008 	beq	a030a9b0 <vsnprintf+0xa98>
+a030a98c:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a990:	e24b4014 	sub	r4, fp, #20	; 0x14
+a030a994:	e0842003 	add	r2, r4, r3
+a030a998:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a99c:	e24b1014 	sub	r1, fp, #20	; 0x14
+a030a9a0:	e0813003 	add	r3, r1, r3
+a030a9a4:	e5933000 	ldr	r3, [r3]
+a030a9a8:	e1a04fc3 	mov	r4, r3, asr #31
+a030a9ac:	e8820018 	stmia	r2, {r3, r4}
+a030a9b0:	e3e0301b 	mvn	r3, #27	; 0x1b
+a030a9b4:	e24b4014 	sub	r4, fp, #20	; 0x14
+a030a9b8:	e0842003 	add	r2, r4, r3
+a030a9bc:	e51b3038 	ldr	r3, [fp, -#56]
+a030a9c0:	e58d3000 	str	r3, [sp]
+a030a9c4:	e51b3050 	ldr	r3, [fp, -#80]
+a030a9c8:	e58d3004 	str	r3, [sp, #4]
+a030a9cc:	e51b3054 	ldr	r3, [fp, -#84]
+a030a9d0:	e58d3008 	str	r3, [sp, #8]
+a030a9d4:	e51b304c 	ldr	r3, [fp, -#76]
+a030a9d8:	e58d300c 	str	r3, [sp, #12]
+a030a9dc:	e51b003c 	ldr	r0, [fp, -#60]
+a030a9e0:	e51b1040 	ldr	r1, [fp, -#64]
+a030a9e4:	e892000c 	ldmia	r2, {r2, r3}
+a030a9e8:	ebfffbbb 	bl	a03098dc <number>
+a030a9ec:	e1a03000 	mov	r3, r0
+a030a9f0:	e50b303c 	str	r3, [fp, -#60]
+a030a9f4:	e51b3020 	ldr	r3, [fp, -#32]
+a030a9f8:	e2833001 	add	r3, r3, #1	; 0x1
+a030a9fc:	e50b3020 	str	r3, [fp, -#32]
+a030aa00:	eafffd60 	b	a0309f88 <vsnprintf+0x70>
+a030aa04:	e51b203c 	ldr	r2, [fp, -#60]
+a030aa08:	e51b3040 	ldr	r3, [fp, -#64]
+a030aa0c:	e1520003 	cmp	r2, r3
+a030aa10:	8a000003 	bhi	a030aa24 <vsnprintf+0xb0c>
+a030aa14:	e51b303c 	ldr	r3, [fp, -#60]
+a030aa18:	e3a02000 	mov	r2, #0	; 0x0
+a030aa1c:	e5c32000 	strb	r2, [r3]
+a030aa20:	ea000005 	b	a030aa3c <vsnprintf+0xb24>
+a030aa24:	e51b301c 	ldr	r3, [fp, -#28]
+a030aa28:	e3530000 	cmp	r3, #0	; 0x0
+a030aa2c:	0a000002 	beq	a030aa3c <vsnprintf+0xb24>
+a030aa30:	e51b3040 	ldr	r3, [fp, -#64]
+a030aa34:	e3a02000 	mov	r2, #0	; 0x0
+a030aa38:	e5c32000 	strb	r2, [r3]
+a030aa3c:	e51b203c 	ldr	r2, [fp, -#60]
+a030aa40:	e51b3018 	ldr	r3, [fp, -#24]
+a030aa44:	e0633002 	rsb	r3, r3, r2
+a030aa48:	e1a00003 	mov	r0, r3
+a030aa4c:	e91ba830 	ldmdb	fp, {r4, r5, fp, sp, pc}
+a030aa50:	a030d480 	eorges	sp, r0, r0, lsl #9
+
+a030aa54 <snprintf>:
+a030aa54:	e1a0c00d 	mov	ip, sp
+a030aa58:	e92d000c 	stmdb	sp!, {r2, r3}
+a030aa5c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030aa60:	e24cb00c 	sub	fp, ip, #12	; 0xc
+a030aa64:	e24dd010 	sub	sp, sp, #16	; 0x10
+a030aa68:	e50b0010 	str	r0, [fp, -#16]
+a030aa6c:	e50b1014 	str	r1, [fp, -#20]
+a030aa70:	e28b3008 	add	r3, fp, #8	; 0x8
+a030aa74:	e50b3018 	str	r3, [fp, -#24]
+a030aa78:	e51b0010 	ldr	r0, [fp, -#16]
+a030aa7c:	e51b1014 	ldr	r1, [fp, -#20]
+a030aa80:	e59b2004 	ldr	r2, [fp, #4]
+a030aa84:	e51b3018 	ldr	r3, [fp, -#24]
+a030aa88:	ebfffd22 	bl	a0309f18 <vsnprintf>
+a030aa8c:	e1a03000 	mov	r3, r0
+a030aa90:	e50b301c 	str	r3, [fp, -#28]
+a030aa94:	e51b301c 	ldr	r3, [fp, -#28]
+a030aa98:	e1a00003 	mov	r0, r3
+a030aa9c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030aaa0 <printf>:
+a030aaa0:	e1a0c00d 	mov	ip, sp
+a030aaa4:	e92d000f 	stmdb	sp!, {r0, r1, r2, r3}
+a030aaa8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030aaac:	e24cb014 	sub	fp, ip, #20	; 0x14
+a030aab0:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030aab4:	e28b3008 	add	r3, fp, #8	; 0x8
+a030aab8:	e50b3010 	str	r3, [fp, -#16]
+a030aabc:	e59f0028 	ldr	r0, [pc, #40]	; a030aaec <printf+0x4c>
+a030aac0:	e3a01b01 	mov	r1, #1024	; 0x400
+a030aac4:	e59b2004 	ldr	r2, [fp, #4]
+a030aac8:	e51b3010 	ldr	r3, [fp, -#16]
+a030aacc:	ebfffd11 	bl	a0309f18 <vsnprintf>
+a030aad0:	e1a03000 	mov	r3, r0
+a030aad4:	e50b3014 	str	r3, [fp, -#20]
+a030aad8:	e59f000c 	ldr	r0, [pc, #12]	; a030aaec <printf+0x4c>
+a030aadc:	eb0000a4 	bl	a030ad74 <SerialOutputString>
+a030aae0:	e51b3014 	ldr	r3, [fp, -#20]
+a030aae4:	e1a00003 	mov	r0, r3
+a030aae8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030aaec:	a030f8c4 	eorges	pc, r0, r4, asr #17
+
+a030aaf0 <isdigit>:
+a030aaf0:	e1a0c00d 	mov	ip, sp
+a030aaf4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030aaf8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030aafc:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030ab00:	e1a03000 	mov	r3, r0
+a030ab04:	e54b300d 	strb	r3, [fp, -#13]
+a030ab08:	e55b300d 	ldrb	r3, [fp, -#13]
+a030ab0c:	e353002f 	cmp	r3, #47	; 0x2f
+a030ab10:	9a000005 	bls	a030ab2c <isdigit+0x3c>
+a030ab14:	e55b300d 	ldrb	r3, [fp, -#13]
+a030ab18:	e3530039 	cmp	r3, #57	; 0x39
+a030ab1c:	8a000002 	bhi	a030ab2c <isdigit+0x3c>
+a030ab20:	e3a03001 	mov	r3, #1	; 0x1
+a030ab24:	e50b3014 	str	r3, [fp, -#20]
+a030ab28:	ea000001 	b	a030ab34 <isdigit+0x44>
+a030ab2c:	e3a03000 	mov	r3, #0	; 0x0
+a030ab30:	e50b3014 	str	r3, [fp, -#20]
+a030ab34:	e51b0014 	ldr	r0, [fp, -#20]
+a030ab38:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030ab3c <strnlen>:
+a030ab3c:	e1a0c00d 	mov	ip, sp
+a030ab40:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030ab44:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030ab48:	e24dd010 	sub	sp, sp, #16	; 0x10
+a030ab4c:	e50b0010 	str	r0, [fp, -#16]
+a030ab50:	e50b1014 	str	r1, [fp, -#20]
+a030ab54:	e51b0010 	ldr	r0, [fp, -#16]
+a030ab58:	eb0001d0 	bl	a030b2a0 <strlen>
+a030ab5c:	e1a03000 	mov	r3, r0
+a030ab60:	e50b3018 	str	r3, [fp, -#24]
+a030ab64:	e51b2018 	ldr	r2, [fp, -#24]
+a030ab68:	e51b3014 	ldr	r3, [fp, -#20]
+a030ab6c:	e1520003 	cmp	r2, r3
+a030ab70:	9a000002 	bls	a030ab80 <strnlen+0x44>
+a030ab74:	e51b3014 	ldr	r3, [fp, -#20]
+a030ab78:	e50b301c 	str	r3, [fp, -#28]
+a030ab7c:	ea000001 	b	a030ab88 <strnlen+0x4c>
+a030ab80:	e51b3018 	ldr	r3, [fp, -#24]
+a030ab84:	e50b301c 	str	r3, [fp, -#28]
+a030ab88:	e51b001c 	ldr	r0, [fp, -#28]
+a030ab8c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030ab90 <reboot_system>:
+a030ab90:	e1a0c00d 	mov	ip, sp
+a030ab94:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030ab98:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030ab9c:	e59f3024 	ldr	r3, [pc, #36]	; a030abc8 <reboot_system+0x38>
+a030aba0:	e5933000 	ldr	r3, [r3]
+a030aba4:	e3530000 	cmp	r3, #0	; 0x0
+a030aba8:	1a000000 	bne	a030abb0 <reboot_system+0x20>
+a030abac:	ea000004 	b	a030abc4 <reboot_system+0x34>
+a030abb0:	e59f3010 	ldr	r3, [pc, #16]	; a030abc8 <reboot_system+0x38>
+a030abb4:	e5933000 	ldr	r3, [r3]
+a030abb8:	e5933000 	ldr	r3, [r3]
+a030abbc:	e1a0e00f 	mov	lr, pc
+a030abc0:	e1a0f003 	mov	pc, r3
+a030abc4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030abc8:	a03103a0 	eorges	r0, r1, r0, lsr #7
+
+a030abcc <serial_init>:
+a030abcc:	e1a0c00d 	mov	ip, sp
+a030abd0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030abd4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030abd8:	e24dd004 	sub	sp, sp, #4	; 0x4
+a030abdc:	e50b0010 	str	r0, [fp, -#16]
+a030abe0:	e59f301c 	ldr	r3, [pc, #28]	; a030ac04 <serial_init+0x38>
+a030abe4:	e5933000 	ldr	r3, [r3]
+a030abe8:	e5933000 	ldr	r3, [r3]
+a030abec:	e51b0010 	ldr	r0, [fp, -#16]
+a030abf0:	e1a0e00f 	mov	lr, pc
+a030abf4:	e1a0f003 	mov	pc, r3
+a030abf8:	e1a03000 	mov	r3, r0
+a030abfc:	e1a00003 	mov	r0, r3
+a030ac00:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030ac04:	a03103c0 	eorges	r0, r1, r0, asr #7
+
+a030ac08 <serial_read>:
+a030ac08:	e1a0c00d 	mov	ip, sp
+a030ac0c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030ac10:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030ac14:	e59f3018 	ldr	r3, [pc, #24]	; a030ac34 <serial_read+0x2c>
+a030ac18:	e5933000 	ldr	r3, [r3]
+a030ac1c:	e5933004 	ldr	r3, [r3, #4]
+a030ac20:	e1a0e00f 	mov	lr, pc
+a030ac24:	e1a0f003 	mov	pc, r3
+a030ac28:	e1a03000 	mov	r3, r0
+a030ac2c:	e1a00003 	mov	r0, r3
+a030ac30:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030ac34:	a03103c0 	eorges	r0, r1, r0, asr #7
+
+a030ac38 <serial_write>:
+a030ac38:	e1a0c00d 	mov	ip, sp
+a030ac3c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030ac40:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030ac44:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030ac48:	e50b0010 	str	r0, [fp, -#16]
+a030ac4c:	e59f3050 	ldr	r3, [pc, #80]	; a030aca4 <serial_write+0x6c>
+a030ac50:	e5933000 	ldr	r3, [r3]
+a030ac54:	e5933008 	ldr	r3, [r3, #8]
+a030ac58:	e51b0010 	ldr	r0, [fp, -#16]
+a030ac5c:	e1a0e00f 	mov	lr, pc
+a030ac60:	e1a0f003 	mov	pc, r3
+a030ac64:	e1a03000 	mov	r3, r0
+a030ac68:	e50b3014 	str	r3, [fp, -#20]
+a030ac6c:	e51b3010 	ldr	r3, [fp, -#16]
+a030ac70:	e353000a 	cmp	r3, #10	; 0xa
+a030ac74:	1a000007 	bne	a030ac98 <serial_write+0x60>
+a030ac78:	e59f3024 	ldr	r3, [pc, #36]	; a030aca4 <serial_write+0x6c>
+a030ac7c:	e5933000 	ldr	r3, [r3]
+a030ac80:	e5933008 	ldr	r3, [r3, #8]
+a030ac84:	e3a0000d 	mov	r0, #13	; 0xd
+a030ac88:	e1a0e00f 	mov	lr, pc
+a030ac8c:	e1a0f003 	mov	pc, r3
+a030ac90:	e1a03000 	mov	r3, r0
+a030ac94:	e50b3014 	str	r3, [fp, -#20]
+a030ac98:	e51b3014 	ldr	r3, [fp, -#20]
+a030ac9c:	e1a00003 	mov	r0, r3
+a030aca0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030aca4:	a03103c0 	eorges	r0, r1, r0, asr #7
+
+a030aca8 <serial_write_raw>:
+a030aca8:	e1a0c00d 	mov	ip, sp
+a030acac:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030acb0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030acb4:	e24dd004 	sub	sp, sp, #4	; 0x4
+a030acb8:	e50b0010 	str	r0, [fp, -#16]
+a030acbc:	e59f301c 	ldr	r3, [pc, #28]	; a030ace0 <serial_write_raw+0x38>
+a030acc0:	e5933000 	ldr	r3, [r3]
+a030acc4:	e5933008 	ldr	r3, [r3, #8]
+a030acc8:	e51b0010 	ldr	r0, [fp, -#16]
+a030accc:	e1a0e00f 	mov	lr, pc
+a030acd0:	e1a0f003 	mov	pc, r3
+a030acd4:	e1a03000 	mov	r3, r0
+a030acd8:	e1a00003 	mov	r0, r3
+a030acdc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030ace0:	a03103c0 	eorges	r0, r1, r0, asr #7
+
+a030ace4 <serial_poll>:
+a030ace4:	e1a0c00d 	mov	ip, sp
+a030ace8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030acec:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030acf0:	e59f3018 	ldr	r3, [pc, #24]	; a030ad10 <serial_poll+0x2c>
+a030acf4:	e5933000 	ldr	r3, [r3]
+a030acf8:	e593300c 	ldr	r3, [r3, #12]
+a030acfc:	e1a0e00f 	mov	lr, pc
+a030ad00:	e1a0f003 	mov	pc, r3
+a030ad04:	e1a03000 	mov	r3, r0
+a030ad08:	e1a00003 	mov	r0, r3
+a030ad0c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030ad10:	a03103c0 	eorges	r0, r1, r0, asr #7
+
+a030ad14 <serial_flush_input>:
+a030ad14:	e1a0c00d 	mov	ip, sp
+a030ad18:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030ad1c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030ad20:	e59f3018 	ldr	r3, [pc, #24]	; a030ad40 <serial_flush_input+0x2c>
+a030ad24:	e5933000 	ldr	r3, [r3]
+a030ad28:	e5933010 	ldr	r3, [r3, #16]
+a030ad2c:	e1a0e00f 	mov	lr, pc
+a030ad30:	e1a0f003 	mov	pc, r3
+a030ad34:	e1a03000 	mov	r3, r0
+a030ad38:	e1a00003 	mov	r0, r3
+a030ad3c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030ad40:	a03103c0 	eorges	r0, r1, r0, asr #7
+
+a030ad44 <serial_flush_output>:
+a030ad44:	e1a0c00d 	mov	ip, sp
+a030ad48:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030ad4c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030ad50:	e59f3018 	ldr	r3, [pc, #24]	; a030ad70 <serial_flush_output+0x2c>
+a030ad54:	e5933000 	ldr	r3, [r3]
+a030ad58:	e5933014 	ldr	r3, [r3, #20]
+a030ad5c:	e1a0e00f 	mov	lr, pc
+a030ad60:	e1a0f003 	mov	pc, r3
+a030ad64:	e1a03000 	mov	r3, r0
+a030ad68:	e1a00003 	mov	r0, r3
+a030ad6c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030ad70:	a03103c0 	eorges	r0, r1, r0, asr #7
+
+a030ad74 <SerialOutputString>:
+a030ad74:	e1a0c00d 	mov	ip, sp
+a030ad78:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030ad7c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030ad80:	e24dd004 	sub	sp, sp, #4	; 0x4
+a030ad84:	e50b0010 	str	r0, [fp, -#16]
+a030ad88:	e51b3010 	ldr	r3, [fp, -#16]
+a030ad8c:	e5d33000 	ldrb	r3, [r3]
+a030ad90:	e3530000 	cmp	r3, #0	; 0x0
+a030ad94:	1a000000 	bne	a030ad9c <SerialOutputString+0x28>
+a030ad98:	ea000008 	b	a030adc0 <SerialOutputString+0x4c>
+a030ad9c:	e24b1010 	sub	r1, fp, #16	; 0x10
+a030ada0:	e5913000 	ldr	r3, [r1]
+a030ada4:	e1a02003 	mov	r2, r3
+a030ada8:	e5d22000 	ldrb	r2, [r2]
+a030adac:	e2833001 	add	r3, r3, #1	; 0x1
+a030adb0:	e5813000 	str	r3, [r1]
+a030adb4:	e1a00002 	mov	r0, r2
+a030adb8:	ebffff9e 	bl	a030ac38 <serial_write>
+a030adbc:	eafffff1 	b	a030ad88 <SerialOutputString+0x14>
+a030adc0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030adc4 <SerialOutputHex>:
+a030adc4:	e1a0c00d 	mov	ip, sp
+a030adc8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030adcc:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030add0:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a030add4:	e50b0010 	str	r0, [fp, -#16]
+a030add8:	e3a03007 	mov	r3, #7	; 0x7
+a030addc:	e50b3018 	str	r3, [fp, -#24]
+a030ade0:	e51b3018 	ldr	r3, [fp, -#24]
+a030ade4:	e3530000 	cmp	r3, #0	; 0x0
+a030ade8:	aa000000 	bge	a030adf0 <SerialOutputHex+0x2c>
+a030adec:	ea000016 	b	a030ae4c <SerialOutputHex+0x88>
+a030adf0:	e51b3018 	ldr	r3, [fp, -#24]
+a030adf4:	e1a02103 	mov	r2, r3, lsl #2
+a030adf8:	e51b3010 	ldr	r3, [fp, -#16]
+a030adfc:	e1a03233 	mov	r3, r3, lsr r2
+a030ae00:	e203300f 	and	r3, r3, #15	; 0xf
+a030ae04:	e54b3011 	strb	r3, [fp, -#17]
+a030ae08:	e55b3011 	ldrb	r3, [fp, -#17]
+a030ae0c:	e3530009 	cmp	r3, #9	; 0x9
+a030ae10:	9a000003 	bls	a030ae24 <SerialOutputHex+0x60>
+a030ae14:	e55b3011 	ldrb	r3, [fp, -#17]
+a030ae18:	e2833057 	add	r3, r3, #87	; 0x57
+a030ae1c:	e54b3011 	strb	r3, [fp, -#17]
+a030ae20:	ea000002 	b	a030ae30 <SerialOutputHex+0x6c>
+a030ae24:	e55b3011 	ldrb	r3, [fp, -#17]
+a030ae28:	e2833030 	add	r3, r3, #48	; 0x30
+a030ae2c:	e54b3011 	strb	r3, [fp, -#17]
+a030ae30:	e55b3011 	ldrb	r3, [fp, -#17]
+a030ae34:	e1a00003 	mov	r0, r3
+a030ae38:	ebffff7e 	bl	a030ac38 <serial_write>
+a030ae3c:	e51b3018 	ldr	r3, [fp, -#24]
+a030ae40:	e2433001 	sub	r3, r3, #1	; 0x1
+a030ae44:	e50b3018 	str	r3, [fp, -#24]
+a030ae48:	eaffffe4 	b	a030ade0 <SerialOutputHex+0x1c>
+a030ae4c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030ae50 <SerialOutputDec>:
+a030ae50:	e1a0c00d 	mov	ip, sp
+a030ae54:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030ae58:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030ae5c:	e24dd014 	sub	sp, sp, #20	; 0x14
+a030ae60:	e50b0010 	str	r0, [fp, -#16]
+a030ae64:	e3a03001 	mov	r3, #1	; 0x1
+a030ae68:	e50b3014 	str	r3, [fp, -#20]
+a030ae6c:	e51b3010 	ldr	r3, [fp, -#16]
+a030ae70:	e50b3020 	str	r3, [fp, -#32]
+a030ae74:	e3a035ee 	mov	r3, #998244352	; 0x3b800000
+a030ae78:	e283396b 	add	r3, r3, #1753088	; 0x1ac000
+a030ae7c:	e2833c0a 	add	r3, r3, #2560	; 0xa00
+a030ae80:	e50b3018 	str	r3, [fp, -#24]
+a030ae84:	e51b3018 	ldr	r3, [fp, -#24]
+a030ae88:	e3530000 	cmp	r3, #0	; 0x0
+a030ae8c:	1a000000 	bne	a030ae94 <SerialOutputDec+0x44>
+a030ae90:	ea000020 	b	a030af18 <SerialOutputDec+0xc8>
+a030ae94:	e51b0020 	ldr	r0, [fp, -#32]
+a030ae98:	e51b1018 	ldr	r1, [fp, -#24]
+a030ae9c:	eb000424 	bl	a030bf34 <__udivsi3>
+a030aea0:	e1a03000 	mov	r3, r0
+a030aea4:	e50b301c 	str	r3, [fp, -#28]
+a030aea8:	e51b3020 	ldr	r3, [fp, -#32]
+a030aeac:	e1a00003 	mov	r0, r3
+a030aeb0:	e51b1018 	ldr	r1, [fp, -#24]
+a030aeb4:	eb000444 	bl	a030bfcc <__umodsi3>
+a030aeb8:	e1a03000 	mov	r3, r0
+a030aebc:	e50b3020 	str	r3, [fp, -#32]
+a030aec0:	e51b301c 	ldr	r3, [fp, -#28]
+a030aec4:	e3530000 	cmp	r3, #0	; 0x0
+a030aec8:	1a000003 	bne	a030aedc <SerialOutputDec+0x8c>
+a030aecc:	e51b3018 	ldr	r3, [fp, -#24]
+a030aed0:	e3530001 	cmp	r3, #1	; 0x1
+a030aed4:	0a000000 	beq	a030aedc <SerialOutputDec+0x8c>
+a030aed8:	ea000001 	b	a030aee4 <SerialOutputDec+0x94>
+a030aedc:	e3a03000 	mov	r3, #0	; 0x0
+a030aee0:	e50b3014 	str	r3, [fp, -#20]
+a030aee4:	e51b3014 	ldr	r3, [fp, -#20]
+a030aee8:	e3530000 	cmp	r3, #0	; 0x0
+a030aeec:	1a000003 	bne	a030af00 <SerialOutputDec+0xb0>
+a030aef0:	e55b301c 	ldrb	r3, [fp, -#28]
+a030aef4:	e2833030 	add	r3, r3, #48	; 0x30
+a030aef8:	e1a00003 	mov	r0, r3
+a030aefc:	ebffff4d 	bl	a030ac38 <serial_write>
+a030af00:	e51b2018 	ldr	r2, [fp, -#24]
+a030af04:	e59f3010 	ldr	r3, [pc, #16]	; a030af1c <SerialOutputDec+0xcc>
+a030af08:	e0831392 	umull	r1, r3, r2, r3
+a030af0c:	e1a031a3 	mov	r3, r3, lsr #3
+a030af10:	e50b3018 	str	r3, [fp, -#24]
+a030af14:	eaffffda 	b	a030ae84 <SerialOutputDec+0x34>
+a030af18:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030af1c:	cccccccd 	stcgtl	12, cr12, [ip], #820
+
+a030af20 <SerialOutputBlock>:
+a030af20:	e1a0c00d 	mov	ip, sp
+a030af24:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030af28:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030af2c:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030af30:	e50b0010 	str	r0, [fp, -#16]
+a030af34:	e50b1014 	str	r1, [fp, -#20]
+a030af38:	e51b3014 	ldr	r3, [fp, -#20]
+a030af3c:	e2433001 	sub	r3, r3, #1	; 0x1
+a030af40:	e50b3014 	str	r3, [fp, -#20]
+a030af44:	e3730001 	cmn	r3, #1	; 0x1
+a030af48:	1a000000 	bne	a030af50 <SerialOutputBlock+0x30>
+a030af4c:	ea000008 	b	a030af74 <SerialOutputBlock+0x54>
+a030af50:	e24b1010 	sub	r1, fp, #16	; 0x10
+a030af54:	e5913000 	ldr	r3, [r1]
+a030af58:	e1a02003 	mov	r2, r3
+a030af5c:	e5d22000 	ldrb	r2, [r2]
+a030af60:	e2833001 	add	r3, r3, #1	; 0x1
+a030af64:	e5813000 	str	r3, [r1]
+a030af68:	e1a00002 	mov	r0, r2
+a030af6c:	ebffff31 	bl	a030ac38 <serial_write>
+a030af70:	eafffff0 	b	a030af38 <SerialOutputBlock+0x18>
+a030af74:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030af78 <SerialOutputChar>:
+a030af78:	e1a0c00d 	mov	ip, sp
+a030af7c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030af80:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030af84:	e24dd004 	sub	sp, sp, #4	; 0x4
+a030af88:	e1a03000 	mov	r3, r0
+a030af8c:	e54b300d 	strb	r3, [fp, -#13]
+a030af90:	e55b300d 	ldrb	r3, [fp, -#13]
+a030af94:	e1a00003 	mov	r0, r3
+a030af98:	ebffff26 	bl	a030ac38 <serial_write>
+a030af9c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030afa0 <SerialInputString>:
+a030afa0:	e1a0c00d 	mov	ip, sp
+a030afa4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030afa8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030afac:	e24dd02c 	sub	sp, sp, #44	; 0x2c
+a030afb0:	e50b0010 	str	r0, [fp, -#16]
+a030afb4:	e50b1014 	str	r1, [fp, -#20]
+a030afb8:	e50b2018 	str	r2, [fp, -#24]
+a030afbc:	e3a03001 	mov	r3, #1	; 0x1
+a030afc0:	e50b3030 	str	r3, [fp, -#48]
+a030afc4:	e51b3014 	ldr	r3, [fp, -#20]
+a030afc8:	e2433001 	sub	r3, r3, #1	; 0x1
+a030afcc:	e50b3034 	str	r3, [fp, -#52]
+a030afd0:	eb000209 	bl	a030b7fc <timer_tps>
+a030afd4:	e1a02000 	mov	r2, r0
+a030afd8:	e51b3018 	ldr	r3, [fp, -#24]
+a030afdc:	e0030392 	mul	r3, r2, r3
+a030afe0:	e50b3018 	str	r3, [fp, -#24]
+a030afe4:	eb0001c7 	bl	a030b708 <timer_read>
+a030afe8:	e1a03000 	mov	r3, r0
+a030afec:	e50b301c 	str	r3, [fp, -#28]
+a030aff0:	e3a03000 	mov	r3, #0	; 0x0
+a030aff4:	e50b302c 	str	r3, [fp, -#44]
+a030aff8:	e3a03000 	mov	r3, #0	; 0x0
+a030affc:	e50b3028 	str	r3, [fp, -#40]
+a030b000:	e51b202c 	ldr	r2, [fp, -#44]
+a030b004:	e51b3034 	ldr	r3, [fp, -#52]
+a030b008:	e1520003 	cmp	r2, r3
+a030b00c:	ba000000 	blt	a030b014 <SerialInputString+0x74>
+a030b010:	ea000059 	b	a030b17c <SerialInputString+0x1dc>
+a030b014:	ebffff32 	bl	a030ace4 <serial_poll>
+a030b018:	e1a03000 	mov	r3, r0
+a030b01c:	e3530000 	cmp	r3, #0	; 0x0
+a030b020:	0a000000 	beq	a030b028 <SerialInputString+0x88>
+a030b024:	ea000014 	b	a030b07c <SerialInputString+0xdc>
+a030b028:	eb0001b6 	bl	a030b708 <timer_read>
+a030b02c:	e1a03000 	mov	r3, r0
+a030b030:	e50b3020 	str	r3, [fp, -#32]
+a030b034:	e51b2020 	ldr	r2, [fp, -#32]
+a030b038:	e51b301c 	ldr	r3, [fp, -#28]
+a030b03c:	e0632002 	rsb	r2, r3, r2
+a030b040:	e51b3018 	ldr	r3, [fp, -#24]
+a030b044:	e1520003 	cmp	r2, r3
+a030b048:	9afffff1 	bls	a030b014 <SerialInputString+0x74>
+a030b04c:	e24b0028 	sub	r0, fp, #40	; 0x28
+a030b050:	e5902000 	ldr	r2, [r0]
+a030b054:	e1a01002 	mov	r1, r2
+a030b058:	e51b3010 	ldr	r3, [fp, -#16]
+a030b05c:	e0811003 	add	r1, r1, r3
+a030b060:	e3a03000 	mov	r3, #0	; 0x0
+a030b064:	e5c13000 	strb	r3, [r1]
+a030b068:	e2822001 	add	r2, r2, #1	; 0x1
+a030b06c:	e5802000 	str	r2, [r0]
+a030b070:	e51b302c 	ldr	r3, [fp, -#44]
+a030b074:	e50b3038 	str	r3, [fp, -#56]
+a030b078:	ea000041 	b	a030b184 <SerialInputString+0x1e4>
+a030b07c:	ebfffee1 	bl	a030ac08 <serial_read>
+a030b080:	e1a03000 	mov	r3, r0
+a030b084:	e50b3024 	str	r3, [fp, -#36]
+a030b088:	e51b3024 	ldr	r3, [fp, -#36]
+a030b08c:	e3530000 	cmp	r3, #0	; 0x0
+a030b090:	aa00000b 	bge	a030b0c4 <SerialInputString+0x124>
+a030b094:	e24b0028 	sub	r0, fp, #40	; 0x28
+a030b098:	e5902000 	ldr	r2, [r0]
+a030b09c:	e1a01002 	mov	r1, r2
+a030b0a0:	e51b3010 	ldr	r3, [fp, -#16]
+a030b0a4:	e0811003 	add	r1, r1, r3
+a030b0a8:	e3a03000 	mov	r3, #0	; 0x0
+a030b0ac:	e5c13000 	strb	r3, [r1]
+a030b0b0:	e2822001 	add	r2, r2, #1	; 0x1
+a030b0b4:	e5802000 	str	r2, [r0]
+a030b0b8:	e51b3024 	ldr	r3, [fp, -#36]
+a030b0bc:	e50b3038 	str	r3, [fp, -#56]
+a030b0c0:	ea00002f 	b	a030b184 <SerialInputString+0x1e4>
+a030b0c4:	e51b3030 	ldr	r3, [fp, -#48]
+a030b0c8:	e3530001 	cmp	r3, #1	; 0x1
+a030b0cc:	1a000007 	bne	a030b0f0 <SerialInputString+0x150>
+a030b0d0:	e51b3024 	ldr	r3, [fp, -#36]
+a030b0d4:	e353000d 	cmp	r3, #13	; 0xd
+a030b0d8:	0a000004 	beq	a030b0f0 <SerialInputString+0x150>
+a030b0dc:	e51b3024 	ldr	r3, [fp, -#36]
+a030b0e0:	e353000a 	cmp	r3, #10	; 0xa
+a030b0e4:	0a000001 	beq	a030b0f0 <SerialInputString+0x150>
+a030b0e8:	e3a03000 	mov	r3, #0	; 0x0
+a030b0ec:	e50b3030 	str	r3, [fp, -#48]
+a030b0f0:	e51b3030 	ldr	r3, [fp, -#48]
+a030b0f4:	e3530000 	cmp	r3, #0	; 0x0
+a030b0f8:	1affffc0 	bne	a030b000 <SerialInputString+0x60>
+a030b0fc:	e51b3024 	ldr	r3, [fp, -#36]
+a030b100:	e353000d 	cmp	r3, #13	; 0xd
+a030b104:	0a000003 	beq	a030b118 <SerialInputString+0x178>
+a030b108:	e51b3024 	ldr	r3, [fp, -#36]
+a030b10c:	e353000a 	cmp	r3, #10	; 0xa
+a030b110:	0a000000 	beq	a030b118 <SerialInputString+0x178>
+a030b114:	ea00000b 	b	a030b148 <SerialInputString+0x1a8>
+a030b118:	e24b0028 	sub	r0, fp, #40	; 0x28
+a030b11c:	e5902000 	ldr	r2, [r0]
+a030b120:	e1a01002 	mov	r1, r2
+a030b124:	e51b3010 	ldr	r3, [fp, -#16]
+a030b128:	e0811003 	add	r1, r1, r3
+a030b12c:	e3a03000 	mov	r3, #0	; 0x0
+a030b130:	e5c13000 	strb	r3, [r1]
+a030b134:	e2822001 	add	r2, r2, #1	; 0x1
+a030b138:	e5802000 	str	r2, [r0]
+a030b13c:	e51b302c 	ldr	r3, [fp, -#44]
+a030b140:	e50b3038 	str	r3, [fp, -#56]
+a030b144:	ea00000e 	b	a030b184 <SerialInputString+0x1e4>
+a030b148:	e24b0028 	sub	r0, fp, #40	; 0x28
+a030b14c:	e5902000 	ldr	r2, [r0]
+a030b150:	e1a01002 	mov	r1, r2
+a030b154:	e51b3010 	ldr	r3, [fp, -#16]
+a030b158:	e0811003 	add	r1, r1, r3
+a030b15c:	e55b3024 	ldrb	r3, [fp, -#36]
+a030b160:	e5c13000 	strb	r3, [r1]
+a030b164:	e2822001 	add	r2, r2, #1	; 0x1
+a030b168:	e5802000 	str	r2, [r0]
+a030b16c:	e51b302c 	ldr	r3, [fp, -#44]
+a030b170:	e2833001 	add	r3, r3, #1	; 0x1
+a030b174:	e50b302c 	str	r3, [fp, -#44]
+a030b178:	eaffffa0 	b	a030b000 <SerialInputString+0x60>
+a030b17c:	e51b302c 	ldr	r3, [fp, -#44]
+a030b180:	e50b3038 	str	r3, [fp, -#56]
+a030b184:	e51b0038 	ldr	r0, [fp, -#56]
+a030b188:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030b18c <SerialInputBlock>:
+a030b18c:	e1a0c00d 	mov	ip, sp
+a030b190:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b194:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b198:	e24dd028 	sub	sp, sp, #40	; 0x28
+a030b19c:	e50b0010 	str	r0, [fp, -#16]
+a030b1a0:	e50b1014 	str	r1, [fp, -#20]
+a030b1a4:	e50b2018 	str	r2, [fp, -#24]
+a030b1a8:	e51b3014 	ldr	r3, [fp, -#20]
+a030b1ac:	e50b3030 	str	r3, [fp, -#48]
+a030b1b0:	eb000191 	bl	a030b7fc <timer_tps>
+a030b1b4:	e1a02000 	mov	r2, r0
+a030b1b8:	e51b3018 	ldr	r3, [fp, -#24]
+a030b1bc:	e0030392 	mul	r3, r2, r3
+a030b1c0:	e50b3018 	str	r3, [fp, -#24]
+a030b1c4:	eb00014f 	bl	a030b708 <timer_read>
+a030b1c8:	e1a03000 	mov	r3, r0
+a030b1cc:	e50b301c 	str	r3, [fp, -#28]
+a030b1d0:	e3a03000 	mov	r3, #0	; 0x0
+a030b1d4:	e50b302c 	str	r3, [fp, -#44]
+a030b1d8:	e3a03000 	mov	r3, #0	; 0x0
+a030b1dc:	e50b3028 	str	r3, [fp, -#40]
+a030b1e0:	e51b202c 	ldr	r2, [fp, -#44]
+a030b1e4:	e51b3030 	ldr	r3, [fp, -#48]
+a030b1e8:	e1520003 	cmp	r2, r3
+a030b1ec:	ba000000 	blt	a030b1f4 <SerialInputBlock+0x68>
+a030b1f0:	ea000026 	b	a030b290 <SerialInputBlock+0x104>
+a030b1f4:	ebfffeba 	bl	a030ace4 <serial_poll>
+a030b1f8:	e1a03000 	mov	r3, r0
+a030b1fc:	e3530000 	cmp	r3, #0	; 0x0
+a030b200:	0a000000 	beq	a030b208 <SerialInputBlock+0x7c>
+a030b204:	ea00000b 	b	a030b238 <SerialInputBlock+0xac>
+a030b208:	eb00013e 	bl	a030b708 <timer_read>
+a030b20c:	e1a03000 	mov	r3, r0
+a030b210:	e50b3020 	str	r3, [fp, -#32]
+a030b214:	e51b2020 	ldr	r2, [fp, -#32]
+a030b218:	e51b301c 	ldr	r3, [fp, -#28]
+a030b21c:	e0632002 	rsb	r2, r3, r2
+a030b220:	e51b3018 	ldr	r3, [fp, -#24]
+a030b224:	e1520003 	cmp	r2, r3
+a030b228:	9afffff1 	bls	a030b1f4 <SerialInputBlock+0x68>
+a030b22c:	e51b302c 	ldr	r3, [fp, -#44]
+a030b230:	e50b3034 	str	r3, [fp, -#52]
+a030b234:	ea000017 	b	a030b298 <SerialInputBlock+0x10c>
+a030b238:	ebfffe72 	bl	a030ac08 <serial_read>
+a030b23c:	e1a03000 	mov	r3, r0
+a030b240:	e50b3024 	str	r3, [fp, -#36]
+a030b244:	e51b3024 	ldr	r3, [fp, -#36]
+a030b248:	e3530000 	cmp	r3, #0	; 0x0
+a030b24c:	aa000002 	bge	a030b25c <SerialInputBlock+0xd0>
+a030b250:	e51b3024 	ldr	r3, [fp, -#36]
+a030b254:	e50b3034 	str	r3, [fp, -#52]
+a030b258:	ea00000e 	b	a030b298 <SerialInputBlock+0x10c>
+a030b25c:	e24b0028 	sub	r0, fp, #40	; 0x28
+a030b260:	e5902000 	ldr	r2, [r0]
+a030b264:	e1a01002 	mov	r1, r2
+a030b268:	e51b3010 	ldr	r3, [fp, -#16]
+a030b26c:	e0811003 	add	r1, r1, r3
+a030b270:	e55b3024 	ldrb	r3, [fp, -#36]
+a030b274:	e5c13000 	strb	r3, [r1]
+a030b278:	e2822001 	add	r2, r2, #1	; 0x1
+a030b27c:	e5802000 	str	r2, [r0]
+a030b280:	e51b302c 	ldr	r3, [fp, -#44]
+a030b284:	e2833001 	add	r3, r3, #1	; 0x1
+a030b288:	e50b302c 	str	r3, [fp, -#44]
+a030b28c:	eaffffd3 	b	a030b1e0 <SerialInputBlock+0x54>
+a030b290:	e51b302c 	ldr	r3, [fp, -#44]
+a030b294:	e50b3034 	str	r3, [fp, -#52]
+a030b298:	e51b0034 	ldr	r0, [fp, -#52]
+a030b29c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030b2a0 <strlen>:
+a030b2a0:	e1a0c00d 	mov	ip, sp
+a030b2a4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b2a8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b2ac:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030b2b0:	e50b0010 	str	r0, [fp, -#16]
+a030b2b4:	e3a03000 	mov	r3, #0	; 0x0
+a030b2b8:	e50b3014 	str	r3, [fp, -#20]
+a030b2bc:	e51b3010 	ldr	r3, [fp, -#16]
+a030b2c0:	e5d33000 	ldrb	r3, [r3]
+a030b2c4:	e3530000 	cmp	r3, #0	; 0x0
+a030b2c8:	1a000000 	bne	a030b2d0 <strlen+0x30>
+a030b2cc:	ea000006 	b	a030b2ec <strlen+0x4c>
+a030b2d0:	e51b3014 	ldr	r3, [fp, -#20]
+a030b2d4:	e2833001 	add	r3, r3, #1	; 0x1
+a030b2d8:	e50b3014 	str	r3, [fp, -#20]
+a030b2dc:	e51b3010 	ldr	r3, [fp, -#16]
+a030b2e0:	e2833001 	add	r3, r3, #1	; 0x1
+a030b2e4:	e50b3010 	str	r3, [fp, -#16]
+a030b2e8:	eafffff3 	b	a030b2bc <strlen+0x1c>
+a030b2ec:	e51b3014 	ldr	r3, [fp, -#20]
+a030b2f0:	e1a00003 	mov	r0, r3
+a030b2f4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030b2f8 <strncmp>:
+a030b2f8:	e1a0c00d 	mov	ip, sp
+a030b2fc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b300:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b304:	e24dd014 	sub	sp, sp, #20	; 0x14
+a030b308:	e50b0010 	str	r0, [fp, -#16]
+a030b30c:	e50b1014 	str	r1, [fp, -#20]
+a030b310:	e50b2018 	str	r2, [fp, -#24]
+a030b314:	e3a03000 	mov	r3, #0	; 0x0
+a030b318:	e50b301c 	str	r3, [fp, -#28]
+a030b31c:	e51b201c 	ldr	r2, [fp, -#28]
+a030b320:	e51b3018 	ldr	r3, [fp, -#24]
+a030b324:	e1520003 	cmp	r2, r3
+a030b328:	3a000000 	bcc	a030b330 <strncmp+0x38>
+a030b32c:	ea000021 	b	a030b3b8 <strncmp+0xc0>
+a030b330:	e51b2010 	ldr	r2, [fp, -#16]
+a030b334:	e51b301c 	ldr	r3, [fp, -#28]
+a030b338:	e0821003 	add	r1, r2, r3
+a030b33c:	e51b2014 	ldr	r2, [fp, -#20]
+a030b340:	e51b301c 	ldr	r3, [fp, -#28]
+a030b344:	e0823003 	add	r3, r2, r3
+a030b348:	e5d12000 	ldrb	r2, [r1]
+a030b34c:	e5d33000 	ldrb	r3, [r3]
+a030b350:	e1520003 	cmp	r2, r3
+a030b354:	0a00000a 	beq	a030b384 <strncmp+0x8c>
+a030b358:	e51b2010 	ldr	r2, [fp, -#16]
+a030b35c:	e51b301c 	ldr	r3, [fp, -#28]
+a030b360:	e0823003 	add	r3, r2, r3
+a030b364:	e5d32000 	ldrb	r2, [r3]
+a030b368:	e51b1014 	ldr	r1, [fp, -#20]
+a030b36c:	e51b301c 	ldr	r3, [fp, -#28]
+a030b370:	e0813003 	add	r3, r1, r3
+a030b374:	e5d33000 	ldrb	r3, [r3]
+a030b378:	e0632002 	rsb	r2, r3, r2
+a030b37c:	e50b2020 	str	r2, [fp, -#32]
+a030b380:	ea00000e 	b	a030b3c0 <strncmp+0xc8>
+a030b384:	e51b2010 	ldr	r2, [fp, -#16]
+a030b388:	e51b301c 	ldr	r3, [fp, -#28]
+a030b38c:	e0823003 	add	r3, r2, r3
+a030b390:	e5d33000 	ldrb	r3, [r3]
+a030b394:	e3530000 	cmp	r3, #0	; 0x0
+a030b398:	1a000002 	bne	a030b3a8 <strncmp+0xb0>
+a030b39c:	e3a03000 	mov	r3, #0	; 0x0
+a030b3a0:	e50b3020 	str	r3, [fp, -#32]
+a030b3a4:	ea000005 	b	a030b3c0 <strncmp+0xc8>
+a030b3a8:	e51b301c 	ldr	r3, [fp, -#28]
+a030b3ac:	e2833001 	add	r3, r3, #1	; 0x1
+a030b3b0:	e50b301c 	str	r3, [fp, -#28]
+a030b3b4:	eaffffd8 	b	a030b31c <strncmp+0x24>
+a030b3b8:	e3a03000 	mov	r3, #0	; 0x0
+a030b3bc:	e50b3020 	str	r3, [fp, -#32]
+a030b3c0:	e51b0020 	ldr	r0, [fp, -#32]
+a030b3c4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030b3c8 <strncpy>:
+a030b3c8:	e1a0c00d 	mov	ip, sp
+a030b3cc:	e92dd830 	stmdb	sp!, {r4, r5, fp, ip, lr, pc}
+a030b3d0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b3d4:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a030b3d8:	e50b0018 	str	r0, [fp, -#24]
+a030b3dc:	e50b101c 	str	r1, [fp, -#28]
+a030b3e0:	e50b2020 	str	r2, [fp, -#32]
+a030b3e4:	e51b3020 	ldr	r3, [fp, -#32]
+a030b3e8:	e3530000 	cmp	r3, #0	; 0x0
+a030b3ec:	1a000000 	bne	a030b3f4 <strncpy+0x2c>
+a030b3f0:	ea000012 	b	a030b440 <strncpy+0x78>
+a030b3f4:	e51b3020 	ldr	r3, [fp, -#32]
+a030b3f8:	e2433001 	sub	r3, r3, #1	; 0x1
+a030b3fc:	e50b3020 	str	r3, [fp, -#32]
+a030b400:	e24b5018 	sub	r5, fp, #24	; 0x18
+a030b404:	e5951000 	ldr	r1, [r5]
+a030b408:	e24b401c 	sub	r4, fp, #28	; 0x1c
+a030b40c:	e5942000 	ldr	r2, [r4]
+a030b410:	e1a00001 	mov	r0, r1
+a030b414:	e1a03002 	mov	r3, r2
+a030b418:	e5d33000 	ldrb	r3, [r3]
+a030b41c:	e5c03000 	strb	r3, [r0]
+a030b420:	e5d03000 	ldrb	r3, [r0]
+a030b424:	e2822001 	add	r2, r2, #1	; 0x1
+a030b428:	e5842000 	str	r2, [r4]
+a030b42c:	e2811001 	add	r1, r1, #1	; 0x1
+a030b430:	e5851000 	str	r1, [r5]
+a030b434:	e20330ff 	and	r3, r3, #255	; 0xff
+a030b438:	e3530000 	cmp	r3, #0	; 0x0
+a030b43c:	1affffe8 	bne	a030b3e4 <strncpy+0x1c>
+a030b440:	e51b3018 	ldr	r3, [fp, -#24]
+a030b444:	e1a00003 	mov	r0, r3
+a030b448:	e91ba830 	ldmdb	fp, {r4, r5, fp, sp, pc}
+
+a030b44c <strlcpy>:
+a030b44c:	e1a0c00d 	mov	ip, sp
+a030b450:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b454:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b458:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a030b45c:	e50b0010 	str	r0, [fp, -#16]
+a030b460:	e50b1014 	str	r1, [fp, -#20]
+a030b464:	e50b2018 	str	r2, [fp, -#24]
+a030b468:	e51b0010 	ldr	r0, [fp, -#16]
+a030b46c:	e51b1014 	ldr	r1, [fp, -#20]
+a030b470:	e51b2018 	ldr	r2, [fp, -#24]
+a030b474:	ebffffd3 	bl	a030b3c8 <strncpy>
+a030b478:	e51b3018 	ldr	r3, [fp, -#24]
+a030b47c:	e3530000 	cmp	r3, #0	; 0x0
+a030b480:	0a000005 	beq	a030b49c <strlcpy+0x50>
+a030b484:	e51b2010 	ldr	r2, [fp, -#16]
+a030b488:	e51b3018 	ldr	r3, [fp, -#24]
+a030b48c:	e0823003 	add	r3, r2, r3
+a030b490:	e2432001 	sub	r2, r3, #1	; 0x1
+a030b494:	e3a03000 	mov	r3, #0	; 0x0
+a030b498:	e5c23000 	strb	r3, [r2]
+a030b49c:	e51b3010 	ldr	r3, [fp, -#16]
+a030b4a0:	e1a00003 	mov	r0, r3
+a030b4a4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030b4a8 <digitvalue>:
+a030b4a8:	e1a0c00d 	mov	ip, sp
+a030b4ac:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b4b0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b4b4:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030b4b8:	e1a03000 	mov	r3, r0
+a030b4bc:	e54b300d 	strb	r3, [fp, -#13]
+a030b4c0:	e55b300d 	ldrb	r3, [fp, -#13]
+a030b4c4:	e353002f 	cmp	r3, #47	; 0x2f
+a030b4c8:	9a000006 	bls	a030b4e8 <digitvalue+0x40>
+a030b4cc:	e55b300d 	ldrb	r3, [fp, -#13]
+a030b4d0:	e3530039 	cmp	r3, #57	; 0x39
+a030b4d4:	8a000003 	bhi	a030b4e8 <digitvalue+0x40>
+a030b4d8:	e55b300d 	ldrb	r3, [fp, -#13]
+a030b4dc:	e2433030 	sub	r3, r3, #48	; 0x30
+a030b4e0:	e50b3014 	str	r3, [fp, -#20]
+a030b4e4:	ea000001 	b	a030b4f0 <digitvalue+0x48>
+a030b4e8:	e3e03000 	mvn	r3, #0	; 0x0
+a030b4ec:	e50b3014 	str	r3, [fp, -#20]
+a030b4f0:	e51b0014 	ldr	r0, [fp, -#20]
+a030b4f4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030b4f8 <xdigitvalue>:
+a030b4f8:	e1a0c00d 	mov	ip, sp
+a030b4fc:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b500:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b504:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030b508:	e1a03000 	mov	r3, r0
+a030b50c:	e54b300d 	strb	r3, [fp, -#13]
+a030b510:	e55b300d 	ldrb	r3, [fp, -#13]
+a030b514:	e353002f 	cmp	r3, #47	; 0x2f
+a030b518:	9a000006 	bls	a030b538 <xdigitvalue+0x40>
+a030b51c:	e55b300d 	ldrb	r3, [fp, -#13]
+a030b520:	e3530039 	cmp	r3, #57	; 0x39
+a030b524:	8a000003 	bhi	a030b538 <xdigitvalue+0x40>
+a030b528:	e55b300d 	ldrb	r3, [fp, -#13]
+a030b52c:	e2433030 	sub	r3, r3, #48	; 0x30
+a030b530:	e50b3014 	str	r3, [fp, -#20]
+a030b534:	ea00000b 	b	a030b568 <xdigitvalue+0x70>
+a030b538:	e55b300d 	ldrb	r3, [fp, -#13]
+a030b53c:	e3530060 	cmp	r3, #96	; 0x60
+a030b540:	9a000006 	bls	a030b560 <xdigitvalue+0x68>
+a030b544:	e55b300d 	ldrb	r3, [fp, -#13]
+a030b548:	e3530066 	cmp	r3, #102	; 0x66
+a030b54c:	8a000003 	bhi	a030b560 <xdigitvalue+0x68>
+a030b550:	e55b300d 	ldrb	r3, [fp, -#13]
+a030b554:	e2433057 	sub	r3, r3, #87	; 0x57
+a030b558:	e50b3014 	str	r3, [fp, -#20]
+a030b55c:	ea000001 	b	a030b568 <xdigitvalue+0x70>
+a030b560:	e3e03000 	mvn	r3, #0	; 0x0
+a030b564:	e50b3014 	str	r3, [fp, -#20]
+a030b568:	e51b0014 	ldr	r0, [fp, -#20]
+a030b56c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030b570 <strtou32>:
+a030b570:	e1a0c00d 	mov	ip, sp
+a030b574:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b578:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b57c:	e24dd010 	sub	sp, sp, #16	; 0x10
+a030b580:	e50b0010 	str	r0, [fp, -#16]
+a030b584:	e50b1014 	str	r1, [fp, -#20]
+a030b588:	e51b3014 	ldr	r3, [fp, -#20]
+a030b58c:	e3a02000 	mov	r2, #0	; 0x0
+a030b590:	e5832000 	str	r2, [r3]
+a030b594:	e51b0010 	ldr	r0, [fp, -#16]
+a030b598:	e59f1118 	ldr	r1, [pc, #280]	; a030b6b8 <strtou32+0x148>
+a030b59c:	e3a02002 	mov	r2, #2	; 0x2
+a030b5a0:	ebffff54 	bl	a030b2f8 <strncmp>
+a030b5a4:	e1a03000 	mov	r3, r0
+a030b5a8:	e3530000 	cmp	r3, #0	; 0x0
+a030b5ac:	1a00001e 	bne	a030b62c <strtou32+0xbc>
+a030b5b0:	e51b3010 	ldr	r3, [fp, -#16]
+a030b5b4:	e2833002 	add	r3, r3, #2	; 0x2
+a030b5b8:	e50b3010 	str	r3, [fp, -#16]
+a030b5bc:	e51b3010 	ldr	r3, [fp, -#16]
+a030b5c0:	e5d33000 	ldrb	r3, [r3]
+a030b5c4:	e3530000 	cmp	r3, #0	; 0x0
+a030b5c8:	1a000000 	bne	a030b5d0 <strtou32+0x60>
+a030b5cc:	ea000035 	b	a030b6a8 <strtou32+0x138>
+a030b5d0:	e51b3010 	ldr	r3, [fp, -#16]
+a030b5d4:	e5d33000 	ldrb	r3, [r3]
+a030b5d8:	e1a00003 	mov	r0, r3
+a030b5dc:	ebffffc5 	bl	a030b4f8 <xdigitvalue>
+a030b5e0:	e1a03000 	mov	r3, r0
+a030b5e4:	e50b3018 	str	r3, [fp, -#24]
+a030b5e8:	e51b3018 	ldr	r3, [fp, -#24]
+a030b5ec:	e3530000 	cmp	r3, #0	; 0x0
+a030b5f0:	aa000002 	bge	a030b600 <strtou32+0x90>
+a030b5f4:	e3e03000 	mvn	r3, #0	; 0x0
+a030b5f8:	e50b301c 	str	r3, [fp, -#28]
+a030b5fc:	ea00002b 	b	a030b6b0 <strtou32+0x140>
+a030b600:	e51b1014 	ldr	r1, [fp, -#20]
+a030b604:	e51b3014 	ldr	r3, [fp, -#20]
+a030b608:	e5933000 	ldr	r3, [r3]
+a030b60c:	e1a02203 	mov	r2, r3, lsl #4
+a030b610:	e51b3018 	ldr	r3, [fp, -#24]
+a030b614:	e1823003 	orr	r3, r2, r3
+a030b618:	e5813000 	str	r3, [r1]
+a030b61c:	e51b3010 	ldr	r3, [fp, -#16]
+a030b620:	e2833001 	add	r3, r3, #1	; 0x1
+a030b624:	e50b3010 	str	r3, [fp, -#16]
+a030b628:	eaffffe3 	b	a030b5bc <strtou32+0x4c>
+a030b62c:	e51b3010 	ldr	r3, [fp, -#16]
+a030b630:	e5d33000 	ldrb	r3, [r3]
+a030b634:	e3530000 	cmp	r3, #0	; 0x0
+a030b638:	1a000000 	bne	a030b640 <strtou32+0xd0>
+a030b63c:	ea000019 	b	a030b6a8 <strtou32+0x138>
+a030b640:	e51b3010 	ldr	r3, [fp, -#16]
+a030b644:	e5d33000 	ldrb	r3, [r3]
+a030b648:	e1a00003 	mov	r0, r3
+a030b64c:	ebffff95 	bl	a030b4a8 <digitvalue>
+a030b650:	e1a03000 	mov	r3, r0
+a030b654:	e50b3018 	str	r3, [fp, -#24]
+a030b658:	e51b3018 	ldr	r3, [fp, -#24]
+a030b65c:	e3530000 	cmp	r3, #0	; 0x0
+a030b660:	aa000002 	bge	a030b670 <strtou32+0x100>
+a030b664:	e3e03000 	mvn	r3, #0	; 0x0
+a030b668:	e50b301c 	str	r3, [fp, -#28]
+a030b66c:	ea00000f 	b	a030b6b0 <strtou32+0x140>
+a030b670:	e51b1014 	ldr	r1, [fp, -#20]
+a030b674:	e51b3014 	ldr	r3, [fp, -#20]
+a030b678:	e5932000 	ldr	r2, [r3]
+a030b67c:	e1a03002 	mov	r3, r2
+a030b680:	e1a03103 	mov	r3, r3, lsl #2
+a030b684:	e0833002 	add	r3, r3, r2
+a030b688:	e1a02083 	mov	r2, r3, lsl #1
+a030b68c:	e51b3018 	ldr	r3, [fp, -#24]
+a030b690:	e0823003 	add	r3, r2, r3
+a030b694:	e5813000 	str	r3, [r1]
+a030b698:	e51b3010 	ldr	r3, [fp, -#16]
+a030b69c:	e2833001 	add	r3, r3, #1	; 0x1
+a030b6a0:	e50b3010 	str	r3, [fp, -#16]
+a030b6a4:	eaffffe0 	b	a030b62c <strtou32+0xbc>
+a030b6a8:	e3a03000 	mov	r3, #0	; 0x0
+a030b6ac:	e50b301c 	str	r3, [fp, -#28]
+a030b6b0:	e51b001c 	ldr	r0, [fp, -#28]
+a030b6b4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030b6b8:	a030d4ac 	eorges	sp, r0, ip, lsr #9
+
+a030b6bc <timer_init>:
+a030b6bc:	e1a0c00d 	mov	ip, sp
+a030b6c0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b6c4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b6c8:	e59f3030 	ldr	r3, [pc, #48]	; a030b700 <timer_init+0x44>
+a030b6cc:	e5933000 	ldr	r3, [r3]
+a030b6d0:	e3530000 	cmp	r3, #0	; 0x0
+a030b6d4:	1a000000 	bne	a030b6dc <timer_init+0x20>
+a030b6d8:	ea000007 	b	a030b6fc <timer_init+0x40>
+a030b6dc:	e59f301c 	ldr	r3, [pc, #28]	; a030b700 <timer_init+0x44>
+a030b6e0:	e5933000 	ldr	r3, [r3]
+a030b6e4:	e5933000 	ldr	r3, [r3]
+a030b6e8:	e1a0e00f 	mov	lr, pc
+a030b6ec:	e1a0f003 	mov	pc, r3
+a030b6f0:	e59f200c 	ldr	r2, [pc, #12]	; a030b704 <timer_init+0x48>
+a030b6f4:	e3a03000 	mov	r3, #0	; 0x0
+a030b6f8:	e5823000 	str	r3, [r2]
+a030b6fc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030b700:	a03103e0 	eorges	r0, r1, r0, ror #7
+a030b704:	a030fcc4 	eorges	pc, r0, r4, asr #25
+
+a030b708 <timer_read>:
+a030b708:	e1a0c00d 	mov	ip, sp
+a030b70c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b710:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b714:	e24dd004 	sub	sp, sp, #4	; 0x4
+a030b718:	e59f3058 	ldr	r3, [pc, #88]	; a030b778 <timer_read+0x70>
+a030b71c:	e5933000 	ldr	r3, [r3]
+a030b720:	e5933004 	ldr	r3, [r3, #4]
+a030b724:	e1a0e00f 	mov	lr, pc
+a030b728:	e1a0f003 	mov	pc, r3
+a030b72c:	e1a03000 	mov	r3, r0
+a030b730:	e50b3010 	str	r3, [fp, -#16]
+a030b734:	e59f303c 	ldr	r3, [pc, #60]	; a030b778 <timer_read+0x70>
+a030b738:	e5932000 	ldr	r2, [r3]
+a030b73c:	e51b3010 	ldr	r3, [fp, -#16]
+a030b740:	e1a00003 	mov	r0, r3
+a030b744:	e5921010 	ldr	r1, [r2, #16]
+a030b748:	eb00021f 	bl	a030bfcc <__umodsi3>
+a030b74c:	e1a02000 	mov	r2, r0
+a030b750:	e59f3020 	ldr	r3, [pc, #32]	; a030b778 <timer_read+0x70>
+a030b754:	e5933000 	ldr	r3, [r3]
+a030b758:	e5933010 	ldr	r3, [r3, #16]
+a030b75c:	e1a033c3 	mov	r3, r3, asr #7
+a030b760:	e1520003 	cmp	r2, r3
+a030b764:	2a000000 	bcs	a030b76c <timer_read+0x64>
+a030b768:	eb0001a9 	bl	a030be14 <led_on>
+a030b76c:	e51b3010 	ldr	r3, [fp, -#16]
+a030b770:	e1a00003 	mov	r0, r3
+a030b774:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030b778:	a03103e0 	eorges	r0, r1, r0, ror #7
+
+a030b77c <timer_overflow>:
+a030b77c:	e1a0c00d 	mov	ip, sp
+a030b780:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b784:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b788:	e59f3018 	ldr	r3, [pc, #24]	; a030b7a8 <timer_overflow+0x2c>
+a030b78c:	e5933000 	ldr	r3, [r3]
+a030b790:	e5933008 	ldr	r3, [r3, #8]
+a030b794:	e1a0e00f 	mov	lr, pc
+a030b798:	e1a0f003 	mov	pc, r3
+a030b79c:	e1a03000 	mov	r3, r0
+a030b7a0:	e1a00003 	mov	r0, r3
+a030b7a4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030b7a8:	a03103e0 	eorges	r0, r1, r0, ror #7
+
+a030b7ac <timer_overflow_clear>:
+a030b7ac:	e1a0c00d 	mov	ip, sp
+a030b7b0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b7b4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b7b8:	ebffffef 	bl	a030b77c <timer_overflow>
+a030b7bc:	e1a03000 	mov	r3, r0
+a030b7c0:	e3530000 	cmp	r3, #0	; 0x0
+a030b7c4:	0a000004 	beq	a030b7dc <timer_overflow_clear+0x30>
+a030b7c8:	e59f2024 	ldr	r2, [pc, #36]	; a030b7f4 <timer_overflow_clear+0x48>
+a030b7cc:	e59f3020 	ldr	r3, [pc, #32]	; a030b7f4 <timer_overflow_clear+0x48>
+a030b7d0:	e5933000 	ldr	r3, [r3]
+a030b7d4:	e2833001 	add	r3, r3, #1	; 0x1
+a030b7d8:	e5823000 	str	r3, [r2]
+a030b7dc:	e59f3014 	ldr	r3, [pc, #20]	; a030b7f8 <timer_overflow_clear+0x4c>
+a030b7e0:	e5933000 	ldr	r3, [r3]
+a030b7e4:	e593300c 	ldr	r3, [r3, #12]
+a030b7e8:	e1a0e00f 	mov	lr, pc
+a030b7ec:	e1a0f003 	mov	pc, r3
+a030b7f0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030b7f4:	a030fcc4 	eorges	pc, r0, r4, asr #25
+a030b7f8:	a03103e0 	eorges	r0, r1, r0, ror #7
+
+a030b7fc <timer_tps>:
+a030b7fc:	e1a0c00d 	mov	ip, sp
+a030b800:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b804:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b808:	e59f300c 	ldr	r3, [pc, #12]	; a030b81c <timer_tps+0x20>
+a030b80c:	e5933000 	ldr	r3, [r3]
+a030b810:	e5933010 	ldr	r3, [r3, #16]
+a030b814:	e1a00003 	mov	r0, r3
+a030b818:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030b81c:	a03103e0 	eorges	r0, r1, r0, ror #7
+
+a030b820 <msleep>:
+a030b820:	e1a0c00d 	mov	ip, sp
+a030b824:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b828:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b82c:	e24dd01c 	sub	sp, sp, #28	; 0x1c
+a030b830:	e50b0010 	str	r0, [fp, -#16]
+a030b834:	e3a03000 	mov	r3, #0	; 0x0
+a030b838:	e50b3020 	str	r3, [fp, -#32]
+a030b83c:	e3a03000 	mov	r3, #0	; 0x0
+a030b840:	e50b3024 	str	r3, [fp, -#36]
+a030b844:	e3a03000 	mov	r3, #0	; 0x0
+a030b848:	e50b3028 	str	r3, [fp, -#40]
+a030b84c:	e51b3010 	ldr	r3, [fp, -#16]
+a030b850:	e3530000 	cmp	r3, #0	; 0x0
+a030b854:	1a000000 	bne	a030b85c <msleep+0x3c>
+a030b858:	ea00002e 	b	a030b918 <msleep+0xf8>
+a030b85c:	e59f30b8 	ldr	r3, [pc, #184]	; a030b91c <msleep+0xfc>
+a030b860:	e5933000 	ldr	r3, [r3]
+a030b864:	e5932010 	ldr	r2, [r3, #16]
+a030b868:	e51b3010 	ldr	r3, [fp, -#16]
+a030b86c:	e0020293 	mul	r2, r3, r2
+a030b870:	e59f30a8 	ldr	r3, [pc, #168]	; a030b920 <msleep+0x100>
+a030b874:	e0831392 	umull	r1, r3, r2, r3
+a030b878:	e1a03323 	mov	r3, r3, lsr #6
+a030b87c:	e50b3014 	str	r3, [fp, -#20]
+a030b880:	ebffffa0 	bl	a030b708 <timer_read>
+a030b884:	e1a03000 	mov	r3, r0
+a030b888:	e50b3018 	str	r3, [fp, -#24]
+a030b88c:	e51b2018 	ldr	r2, [fp, -#24]
+a030b890:	e51b3014 	ldr	r3, [fp, -#20]
+a030b894:	e0823003 	add	r3, r2, r3
+a030b898:	e50b301c 	str	r3, [fp, -#28]
+a030b89c:	e51b201c 	ldr	r2, [fp, -#28]
+a030b8a0:	e51b3018 	ldr	r3, [fp, -#24]
+a030b8a4:	e1520003 	cmp	r2, r3
+a030b8a8:	2a000002 	bcs	a030b8b8 <msleep+0x98>
+a030b8ac:	ebffffbe 	bl	a030b7ac <timer_overflow_clear>
+a030b8b0:	e3a03001 	mov	r3, #1	; 0x1
+a030b8b4:	e50b3020 	str	r3, [fp, -#32]
+a030b8b8:	e1a00000 	nop			(mov r0,r0)
+a030b8bc:	e51b3020 	ldr	r3, [fp, -#32]
+a030b8c0:	e3530000 	cmp	r3, #0	; 0x0
+a030b8c4:	0a000009 	beq	a030b8f0 <msleep+0xd0>
+a030b8c8:	e51b3024 	ldr	r3, [fp, -#36]
+a030b8cc:	e3530000 	cmp	r3, #0	; 0x0
+a030b8d0:	1a000006 	bne	a030b8f0 <msleep+0xd0>
+a030b8d4:	ebffffa8 	bl	a030b77c <timer_overflow>
+a030b8d8:	e1a03000 	mov	r3, r0
+a030b8dc:	e3530000 	cmp	r3, #0	; 0x0
+a030b8e0:	0a000009 	beq	a030b90c <msleep+0xec>
+a030b8e4:	e3a03001 	mov	r3, #1	; 0x1
+a030b8e8:	e50b3024 	str	r3, [fp, -#36]
+a030b8ec:	ea000006 	b	a030b90c <msleep+0xec>
+a030b8f0:	ebffff84 	bl	a030b708 <timer_read>
+a030b8f4:	e1a02000 	mov	r2, r0
+a030b8f8:	e51b301c 	ldr	r3, [fp, -#28]
+a030b8fc:	e1520003 	cmp	r2, r3
+a030b900:	3a000001 	bcc	a030b90c <msleep+0xec>
+a030b904:	e3a03001 	mov	r3, #1	; 0x1
+a030b908:	e50b3028 	str	r3, [fp, -#40]
+a030b90c:	e51b3028 	ldr	r3, [fp, -#40]
+a030b910:	e3530000 	cmp	r3, #0	; 0x0
+a030b914:	0affffe8 	beq	a030b8bc <msleep+0x9c>
+a030b918:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030b91c:	a03103e0 	eorges	r0, r1, r0, ror #7
+a030b920:	10624dd3 	ldrned	r4, [r2], -#211
+
+a030b924 <MyMemCpy>:
+a030b924:	e1a0c00d 	mov	ip, sp
+a030b928:	e92dd830 	stmdb	sp!, {r4, r5, fp, ip, lr, pc}
+a030b92c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b930:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a030b934:	e50b0018 	str	r0, [fp, -#24]
+a030b938:	e50b101c 	str	r1, [fp, -#28]
+a030b93c:	e50b2020 	str	r2, [fp, -#32]
+a030b940:	e51b3020 	ldr	r3, [fp, -#32]
+a030b944:	e2433001 	sub	r3, r3, #1	; 0x1
+a030b948:	e50b3020 	str	r3, [fp, -#32]
+a030b94c:	e3730001 	cmn	r3, #1	; 0x1
+a030b950:	1a000000 	bne	a030b958 <MyMemCpy+0x34>
+a030b954:	ea000013 	b	a030b9a8 <MyMemCpy+0x84>
+a030b958:	e51b3020 	ldr	r3, [fp, -#32]
+a030b95c:	e1a03803 	mov	r3, r3, lsl #16
+a030b960:	e1a03823 	mov	r3, r3, lsr #16
+a030b964:	e3530000 	cmp	r3, #0	; 0x0
+a030b968:	1a000001 	bne	a030b974 <MyMemCpy+0x50>
+a030b96c:	e59f0038 	ldr	r0, [pc, #56]	; a030b9ac <MyMemCpy+0x88>
+a030b970:	ebfffc4a 	bl	a030aaa0 <printf>
+a030b974:	e24b5018 	sub	r5, fp, #24	; 0x18
+a030b978:	e5951000 	ldr	r1, [r5]
+a030b97c:	e24b401c 	sub	r4, fp, #28	; 0x1c
+a030b980:	e5942000 	ldr	r2, [r4]
+a030b984:	e1a00001 	mov	r0, r1
+a030b988:	e1a03002 	mov	r3, r2
+a030b98c:	e5933000 	ldr	r3, [r3]
+a030b990:	e5803000 	str	r3, [r0]
+a030b994:	e2822004 	add	r2, r2, #4	; 0x4
+a030b998:	e5842000 	str	r2, [r4]
+a030b99c:	e2811004 	add	r1, r1, #4	; 0x4
+a030b9a0:	e5851000 	str	r1, [r5]
+a030b9a4:	eaffffe5 	b	a030b940 <MyMemCpy+0x1c>
+a030b9a8:	e91ba830 	ldmdb	fp, {r4, r5, fp, sp, pc}
+a030b9ac:	a030d4b0 	ldrgeh	sp, [r0], -r0
+
+a030b9b0 <pxa_reboot>:
+a030b9b0:	e1a0c00d 	mov	ip, sp
+a030b9b4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b9b8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b9bc:	e59f0010 	ldr	r0, [pc, #16]	; a030b9d4 <pxa_reboot+0x24>
+a030b9c0:	ebfffc36 	bl	a030aaa0 <printf>
+a030b9c4:	e59f000c 	ldr	r0, [pc, #12]	; a030b9d8 <pxa_reboot+0x28>
+a030b9c8:	ebfffc34 	bl	a030aaa0 <printf>
+a030b9cc:	ebfffcdc 	bl	a030ad44 <serial_flush_output>
+a030b9d0:	eafffffe 	b	a030b9d0 <pxa_reboot+0x20>
+a030b9d4:	a030d4b4 	ldrgeh	sp, [r0], -r4
+a030b9d8:	a030d4dc 	ldrgesb	sp, [r0], -ip
+
+a030b9dc <pxa_serial_flush_input>:
+a030b9dc:	e1a0c00d 	mov	ip, sp
+a030b9e0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030b9e4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030b9e8:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030b9ec:	e1a00000 	nop			(mov r0,r0)
+a030b9f0:	e3a03151 	mov	r3, #1073741844	; 0x40000014
+a030b9f4:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030b9f8:	e5933000 	ldr	r3, [r3]
+a030b9fc:	e2033001 	and	r3, r3, #1	; 0x1
+a030ba00:	e3530000 	cmp	r3, #0	; 0x0
+a030ba04:	1a000000 	bne	a030ba0c <pxa_serial_flush_input+0x30>
+a030ba08:	ea00000d 	b	a030ba44 <pxa_serial_flush_input+0x68>
+a030ba0c:	e3a03151 	mov	r3, #1073741844	; 0x40000014
+a030ba10:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030ba14:	e5933000 	ldr	r3, [r3]
+a030ba18:	e203300e 	and	r3, r3, #14	; 0xe
+a030ba1c:	e3530000 	cmp	r3, #0	; 0x0
+a030ba20:	0a000002 	beq	a030ba30 <pxa_serial_flush_input+0x54>
+a030ba24:	e3e0300d 	mvn	r3, #13	; 0xd
+a030ba28:	e50b3014 	str	r3, [fp, -#20]
+a030ba2c:	ea000006 	b	a030ba4c <pxa_serial_flush_input+0x70>
+a030ba30:	e3a03101 	mov	r3, #1073741824	; 0x40000000
+a030ba34:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030ba38:	e5933000 	ldr	r3, [r3]
+a030ba3c:	e50b3010 	str	r3, [fp, -#16]
+a030ba40:	eaffffea 	b	a030b9f0 <pxa_serial_flush_input+0x14>
+a030ba44:	e3a03000 	mov	r3, #0	; 0x0
+a030ba48:	e50b3014 	str	r3, [fp, -#20]
+a030ba4c:	e51b0014 	ldr	r0, [fp, -#20]
+a030ba50:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030ba54 <pxa_serial_flush_output>:
+a030ba54:	e1a0c00d 	mov	ip, sp
+a030ba58:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030ba5c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030ba60:	e1a00000 	nop			(mov r0,r0)
+a030ba64:	e3a03151 	mov	r3, #1073741844	; 0x40000014
+a030ba68:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030ba6c:	e5933000 	ldr	r3, [r3]
+a030ba70:	e3c33020 	bic	r3, r3, #32	; 0x20
+a030ba74:	e3530000 	cmp	r3, #0	; 0x0
+a030ba78:	1afffff9 	bne	a030ba64 <pxa_serial_flush_output+0x10>
+a030ba7c:	e3a03000 	mov	r3, #0	; 0x0
+a030ba80:	e1a00003 	mov	r0, r3
+a030ba84:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030ba88 <pxa_serial_init>:
+a030ba88:	e1a0c00d 	mov	ip, sp
+a030ba8c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030ba90:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030ba94:	e24dd00c 	sub	sp, sp, #12	; 0xc
+a030ba98:	e50b0010 	str	r0, [fp, -#16]
+a030ba9c:	e3a02111 	mov	r2, #1073741828	; 0x40000004
+a030baa0:	e2822613 	add	r2, r2, #19922944	; 0x1300000
+a030baa4:	e3a03111 	mov	r3, #1073741828	; 0x40000004
+a030baa8:	e2833613 	add	r3, r3, #19922944	; 0x1300000
+a030baac:	e5933000 	ldr	r3, [r3]
+a030bab0:	e3833020 	orr	r3, r3, #32	; 0x20
+a030bab4:	e5823000 	str	r3, [r2]
+a030bab8:	e51b3010 	ldr	r3, [fp, -#16]
+a030babc:	e3530008 	cmp	r3, #8	; 0x8
+a030bac0:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
+a030bac4:	ea00001d 	b	a030bb40 <pxa_serial_init+0xb8>
+a030bac8:	a030baec 	eorges	fp, r0, ip, ror #21
+a030bacc:	a030bb40 	eorges	fp, r0, r0, asr #22
+a030bad0:	a030bb40 	eorges	fp, r0, r0, asr #22
+a030bad4:	a030baf8 	ldrgesh	fp, [r0], -r8
+a030bad8:	a030bb04 	eorges	fp, r0, r4, lsl #22
+a030badc:	a030bb10 	eorges	fp, r0, r0, lsl fp
+a030bae0:	a030bb1c 	eorges	fp, r0, ip, lsl fp
+a030bae4:	a030bb28 	eorges	fp, r0, r8, lsr #22
+a030bae8:	a030bb34 	eorges	fp, r0, r4, lsr fp
+a030baec:	e3a03c03 	mov	r3, #768	; 0x300
+a030baf0:	e50b3014 	str	r3, [fp, -#20]
+a030baf4:	ea000014 	b	a030bb4c <pxa_serial_init+0xc4>
+a030baf8:	e3a03060 	mov	r3, #96	; 0x60
+a030bafc:	e50b3014 	str	r3, [fp, -#20]
+a030bb00:	ea000011 	b	a030bb4c <pxa_serial_init+0xc4>
+a030bb04:	e3a03030 	mov	r3, #48	; 0x30
+a030bb08:	e50b3014 	str	r3, [fp, -#20]
+a030bb0c:	ea00000e 	b	a030bb4c <pxa_serial_init+0xc4>
+a030bb10:	e3a03018 	mov	r3, #24	; 0x18
+a030bb14:	e50b3014 	str	r3, [fp, -#20]
+a030bb18:	ea00000b 	b	a030bb4c <pxa_serial_init+0xc4>
+a030bb1c:	e3a03010 	mov	r3, #16	; 0x10
+a030bb20:	e50b3014 	str	r3, [fp, -#20]
+a030bb24:	ea000008 	b	a030bb4c <pxa_serial_init+0xc4>
+a030bb28:	e3a03008 	mov	r3, #8	; 0x8
+a030bb2c:	e50b3014 	str	r3, [fp, -#20]
+a030bb30:	ea000005 	b	a030bb4c <pxa_serial_init+0xc4>
+a030bb34:	e3a03004 	mov	r3, #4	; 0x4
+a030bb38:	e50b3014 	str	r3, [fp, -#20]
+a030bb3c:	ea000002 	b	a030bb4c <pxa_serial_init+0xc4>
+a030bb40:	e3e03006 	mvn	r3, #6	; 0x6
+a030bb44:	e50b3018 	str	r3, [fp, -#24]
+a030bb48:	ea000024 	b	a030bbe0 <pxa_serial_init+0x158>
+a030bb4c:	e3a03131 	mov	r3, #1073741836	; 0x4000000c
+a030bb50:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bb54:	e3a02000 	mov	r2, #0	; 0x0
+a030bb58:	e5832000 	str	r2, [r3]
+a030bb5c:	e3a03111 	mov	r3, #1073741828	; 0x40000004
+a030bb60:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bb64:	e3a02000 	mov	r2, #0	; 0x0
+a030bb68:	e5832000 	str	r2, [r3]
+a030bb6c:	e3a03121 	mov	r3, #1073741832	; 0x40000008
+a030bb70:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bb74:	e3a02000 	mov	r2, #0	; 0x0
+a030bb78:	e5832000 	str	r2, [r3]
+a030bb7c:	e3a03131 	mov	r3, #1073741836	; 0x4000000c
+a030bb80:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bb84:	e3a02083 	mov	r2, #131	; 0x83
+a030bb88:	e5832000 	str	r2, [r3]
+a030bb8c:	e3a03101 	mov	r3, #1073741824	; 0x40000000
+a030bb90:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bb94:	e51b2014 	ldr	r2, [fp, -#20]
+a030bb98:	e20220ff 	and	r2, r2, #255	; 0xff
+a030bb9c:	e5832000 	str	r2, [r3]
+a030bba0:	e3a02111 	mov	r2, #1073741828	; 0x40000004
+a030bba4:	e2822607 	add	r2, r2, #7340032	; 0x700000
+a030bba8:	e51b3014 	ldr	r3, [fp, -#20]
+a030bbac:	e1a03423 	mov	r3, r3, lsr #8
+a030bbb0:	e20330ff 	and	r3, r3, #255	; 0xff
+a030bbb4:	e5823000 	str	r3, [r2]
+a030bbb8:	e3a03131 	mov	r3, #1073741836	; 0x4000000c
+a030bbbc:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bbc0:	e3a02003 	mov	r2, #3	; 0x3
+a030bbc4:	e5832000 	str	r2, [r3]
+a030bbc8:	e3a03111 	mov	r3, #1073741828	; 0x40000004
+a030bbcc:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bbd0:	e3a02040 	mov	r2, #64	; 0x40
+a030bbd4:	e5832000 	str	r2, [r3]
+a030bbd8:	e3a03000 	mov	r3, #0	; 0x0
+a030bbdc:	e50b3018 	str	r3, [fp, -#24]
+a030bbe0:	e51b0018 	ldr	r0, [fp, -#24]
+a030bbe4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030bbe8 <pxa_serial_poll>:
+a030bbe8:	e1a0c00d 	mov	ip, sp
+a030bbec:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030bbf0:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bbf4:	e24dd004 	sub	sp, sp, #4	; 0x4
+a030bbf8:	e3a03151 	mov	r3, #1073741844	; 0x40000014
+a030bbfc:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bc00:	e5933000 	ldr	r3, [r3]
+a030bc04:	e203300e 	and	r3, r3, #14	; 0xe
+a030bc08:	e3530000 	cmp	r3, #0	; 0x0
+a030bc0c:	0a000002 	beq	a030bc1c <pxa_serial_poll+0x34>
+a030bc10:	e3e0300d 	mvn	r3, #13	; 0xd
+a030bc14:	e50b3010 	str	r3, [fp, -#16]
+a030bc18:	ea00000a 	b	a030bc48 <pxa_serial_poll+0x60>
+a030bc1c:	e3a03151 	mov	r3, #1073741844	; 0x40000014
+a030bc20:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bc24:	e5933000 	ldr	r3, [r3]
+a030bc28:	e2033001 	and	r3, r3, #1	; 0x1
+a030bc2c:	e3530000 	cmp	r3, #0	; 0x0
+a030bc30:	0a000002 	beq	a030bc40 <pxa_serial_poll+0x58>
+a030bc34:	e3a03001 	mov	r3, #1	; 0x1
+a030bc38:	e50b3010 	str	r3, [fp, -#16]
+a030bc3c:	ea000001 	b	a030bc48 <pxa_serial_poll+0x60>
+a030bc40:	e3a03000 	mov	r3, #0	; 0x0
+a030bc44:	e50b3010 	str	r3, [fp, -#16]
+a030bc48:	e51b0010 	ldr	r0, [fp, -#16]
+a030bc4c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030bc50 <pxa_serial_read>:
+a030bc50:	e1a0c00d 	mov	ip, sp
+a030bc54:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030bc58:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bc5c:	e24dd008 	sub	sp, sp, #8	; 0x8
+a030bc60:	e1a00000 	nop			(mov r0,r0)
+a030bc64:	ebffffdf 	bl	a030bbe8 <pxa_serial_poll>
+a030bc68:	e1a03000 	mov	r3, r0
+a030bc6c:	e50b3010 	str	r3, [fp, -#16]
+a030bc70:	e51b3010 	ldr	r3, [fp, -#16]
+a030bc74:	e3530000 	cmp	r3, #0	; 0x0
+a030bc78:	aa000002 	bge	a030bc88 <pxa_serial_read+0x38>
+a030bc7c:	e51b3010 	ldr	r3, [fp, -#16]
+a030bc80:	e50b3014 	str	r3, [fp, -#20]
+a030bc84:	ea000007 	b	a030bca8 <pxa_serial_read+0x58>
+a030bc88:	e51b3010 	ldr	r3, [fp, -#16]
+a030bc8c:	e3530000 	cmp	r3, #0	; 0x0
+a030bc90:	dafffff3 	ble	a030bc64 <pxa_serial_read+0x14>
+a030bc94:	e3a03101 	mov	r3, #1073741824	; 0x40000000
+a030bc98:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bc9c:	e5933000 	ldr	r3, [r3]
+a030bca0:	e20330ff 	and	r3, r3, #255	; 0xff
+a030bca4:	e50b3014 	str	r3, [fp, -#20]
+a030bca8:	e51b0014 	ldr	r0, [fp, -#20]
+a030bcac:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030bcb0 <pxa_serial_write>:
+a030bcb0:	e1a0c00d 	mov	ip, sp
+a030bcb4:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030bcb8:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bcbc:	e24dd004 	sub	sp, sp, #4	; 0x4
+a030bcc0:	e50b0010 	str	r0, [fp, -#16]
+a030bcc4:	e3a03151 	mov	r3, #1073741844	; 0x40000014
+a030bcc8:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bccc:	e5933000 	ldr	r3, [r3]
+a030bcd0:	e2033020 	and	r3, r3, #32	; 0x20
+a030bcd4:	e3530000 	cmp	r3, #0	; 0x0
+a030bcd8:	0afffff9 	beq	a030bcc4 <pxa_serial_write+0x14>
+a030bcdc:	e3a03101 	mov	r3, #1073741824	; 0x40000000
+a030bce0:	e2833607 	add	r3, r3, #7340032	; 0x700000
+a030bce4:	e51b2010 	ldr	r2, [fp, -#16]
+a030bce8:	e20220ff 	and	r2, r2, #255	; 0xff
+a030bcec:	e5832000 	str	r2, [r3]
+a030bcf0:	e3a03000 	mov	r3, #0	; 0x0
+a030bcf4:	e1a00003 	mov	r0, r3
+a030bcf8:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030bcfc <intelarm_timer_init>:
+a030bcfc:	e1a0c00d 	mov	ip, sp
+a030bd00:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030bd04:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bd08:	e3a03141 	mov	r3, #1073741840	; 0x40000010
+a030bd0c:	e283360a 	add	r3, r3, #10485760	; 0xa00000
+a030bd10:	e3a02000 	mov	r2, #0	; 0x0
+a030bd14:	e5832000 	str	r2, [r3]
+a030bd18:	e3a03171 	mov	r3, #1073741852	; 0x4000001c
+a030bd1c:	e283360a 	add	r3, r3, #10485760	; 0xa00000
+a030bd20:	e3a02000 	mov	r2, #0	; 0x0
+a030bd24:	e5832000 	str	r2, [r3]
+a030bd28:	e3a03141 	mov	r3, #1073741840	; 0x40000010
+a030bd2c:	e283360a 	add	r3, r3, #10485760	; 0xa00000
+a030bd30:	e5933000 	ldr	r3, [r3]
+a030bd34:	e3530000 	cmp	r3, #0	; 0x0
+a030bd38:	0afffffa 	beq	a030bd28 <intelarm_timer_init+0x2c>
+a030bd3c:	e3a03101 	mov	r3, #1073741824	; 0x40000000
+a030bd40:	e283360a 	add	r3, r3, #10485760	; 0xa00000
+a030bd44:	e3a02000 	mov	r2, #0	; 0x0
+a030bd48:	e5832000 	str	r2, [r3]
+a030bd4c:	e3a03151 	mov	r3, #1073741844	; 0x40000014
+a030bd50:	e283360a 	add	r3, r3, #10485760	; 0xa00000
+a030bd54:	e3a02001 	mov	r2, #1	; 0x1
+a030bd58:	e5832000 	str	r2, [r3]
+a030bd5c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030bd60 <intelarm_timer_read>:
+a030bd60:	e1a0c00d 	mov	ip, sp
+a030bd64:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030bd68:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bd6c:	e3a03141 	mov	r3, #1073741840	; 0x40000010
+a030bd70:	e283360a 	add	r3, r3, #10485760	; 0xa00000
+a030bd74:	e5933000 	ldr	r3, [r3]
+a030bd78:	e1a00003 	mov	r0, r3
+a030bd7c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030bd80 <intelarm_timer_overflow>:
+a030bd80:	e1a0c00d 	mov	ip, sp
+a030bd84:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030bd88:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bd8c:	e3a03151 	mov	r3, #1073741844	; 0x40000014
+a030bd90:	e283360a 	add	r3, r3, #10485760	; 0xa00000
+a030bd94:	e5933000 	ldr	r3, [r3]
+a030bd98:	e2033001 	and	r3, r3, #1	; 0x1
+a030bd9c:	e1a00003 	mov	r0, r3
+a030bda0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030bda4 <intelarm_timer_overflow_clear>:
+a030bda4:	e1a0c00d 	mov	ip, sp
+a030bda8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030bdac:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bdb0:	e3a03151 	mov	r3, #1073741844	; 0x40000014
+a030bdb4:	e283360a 	add	r3, r3, #10485760	; 0xa00000
+a030bdb8:	e3a02001 	mov	r2, #1	; 0x1
+a030bdbc:	e5832000 	str	r2, [r3]
+a030bdc0:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+
+a030bdc4 <led_init>:
+a030bdc4:	e1a0c00d 	mov	ip, sp
+a030bdc8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030bdcc:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bdd0:	e59f3038 	ldr	r3, [pc, #56]	; a030be10 <led_init+0x4c>
+a030bdd4:	e5933000 	ldr	r3, [r3]
+a030bdd8:	e3530000 	cmp	r3, #0	; 0x0
+a030bddc:	1a000000 	bne	a030bde4 <led_init+0x20>
+a030bde0:	ea000009 	b	a030be0c <led_init+0x48>
+a030bde4:	e59f3024 	ldr	r3, [pc, #36]	; a030be10 <led_init+0x4c>
+a030bde8:	e5933000 	ldr	r3, [r3]
+a030bdec:	e5933010 	ldr	r3, [r3, #16]
+a030bdf0:	e1a0e00f 	mov	lr, pc
+a030bdf4:	e1a0f003 	mov	pc, r3
+a030bdf8:	e59f3010 	ldr	r3, [pc, #16]	; a030be10 <led_init+0x4c>
+a030bdfc:	e5933000 	ldr	r3, [r3]
+a030be00:	e5933000 	ldr	r3, [r3]
+a030be04:	e1a0e00f 	mov	lr, pc
+a030be08:	e1a0f003 	mov	pc, r3
+a030be0c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030be10:	a0310400 	eorges	r0, r1, r0, lsl #8
+
+a030be14 <led_on>:
+a030be14:	e1a0c00d 	mov	ip, sp
+a030be18:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030be1c:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030be20:	e24dd004 	sub	sp, sp, #4	; 0x4
+a030be24:	e59f3038 	ldr	r3, [pc, #56]	; a030be64 <led_on+0x50>
+a030be28:	e5933000 	ldr	r3, [r3]
+a030be2c:	e3530000 	cmp	r3, #0	; 0x0
+a030be30:	1a000002 	bne	a030be40 <led_on+0x2c>
+a030be34:	e3e03000 	mvn	r3, #0	; 0x0
+a030be38:	e50b3010 	str	r3, [fp, -#16]
+a030be3c:	ea000006 	b	a030be5c <led_on+0x48>
+a030be40:	e59f301c 	ldr	r3, [pc, #28]	; a030be64 <led_on+0x50>
+a030be44:	e5933000 	ldr	r3, [r3]
+a030be48:	e5933000 	ldr	r3, [r3]
+a030be4c:	e1a0e00f 	mov	lr, pc
+a030be50:	e1a0f003 	mov	pc, r3
+a030be54:	e3a03000 	mov	r3, #0	; 0x0
+a030be58:	e50b3010 	str	r3, [fp, -#16]
+a030be5c:	e51b0010 	ldr	r0, [fp, -#16]
+a030be60:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030be64:	a0310400 	eorges	r0, r1, r0, lsl #8
+
+a030be68 <led_off>:
+a030be68:	e1a0c00d 	mov	ip, sp
+a030be6c:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030be70:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030be74:	e24dd004 	sub	sp, sp, #4	; 0x4
+a030be78:	e59f3038 	ldr	r3, [pc, #56]	; a030beb8 <led_off+0x50>
+a030be7c:	e5933000 	ldr	r3, [r3]
+a030be80:	e3530000 	cmp	r3, #0	; 0x0
+a030be84:	1a000002 	bne	a030be94 <led_off+0x2c>
+a030be88:	e3e03000 	mvn	r3, #0	; 0x0
+a030be8c:	e50b3010 	str	r3, [fp, -#16]
+a030be90:	ea000006 	b	a030beb0 <led_off+0x48>
+a030be94:	e59f301c 	ldr	r3, [pc, #28]	; a030beb8 <led_off+0x50>
+a030be98:	e5933000 	ldr	r3, [r3]
+a030be9c:	e5933004 	ldr	r3, [r3, #4]
+a030bea0:	e1a0e00f 	mov	lr, pc
+a030bea4:	e1a0f003 	mov	pc, r3
+a030bea8:	e3a03000 	mov	r3, #0	; 0x0
+a030beac:	e50b3010 	str	r3, [fp, -#16]
+a030beb0:	e51b0010 	ldr	r0, [fp, -#16]
+a030beb4:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030beb8:	a0310400 	eorges	r0, r1, r0, lsl #8
+
+a030bebc <led_toggle>:
+a030bebc:	e1a0c00d 	mov	ip, sp
+a030bec0:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030bec4:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bec8:	e59f3010 	ldr	r3, [pc, #16]	; a030bee0 <led_toggle+0x24>
+a030becc:	e5933000 	ldr	r3, [r3]
+a030bed0:	e5933008 	ldr	r3, [r3, #8]
+a030bed4:	e1a0e00f 	mov	lr, pc
+a030bed8:	e1a0f003 	mov	pc, r3
+a030bedc:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030bee0:	a0310400 	eorges	r0, r1, r0, lsl #8
+
+a030bee4 <led_lock>:
+a030bee4:	e1a0c00d 	mov	ip, sp
+a030bee8:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030beec:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bef0:	e59f3010 	ldr	r3, [pc, #16]	; a030bf08 <led_lock+0x24>
+a030bef4:	e5933000 	ldr	r3, [r3]
+a030bef8:	e593300c 	ldr	r3, [r3, #12]
+a030befc:	e1a0e00f 	mov	lr, pc
+a030bf00:	e1a0f003 	mov	pc, r3
+a030bf04:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030bf08:	a0310400 	eorges	r0, r1, r0, lsl #8
+
+a030bf0c <led_unlock>:
+a030bf0c:	e1a0c00d 	mov	ip, sp
+a030bf10:	e92dd800 	stmdb	sp!, {fp, ip, lr, pc}
+a030bf14:	e24cb004 	sub	fp, ip, #4	; 0x4
+a030bf18:	e59f3010 	ldr	r3, [pc, #16]	; a030bf30 <led_unlock+0x24>
+a030bf1c:	e5933000 	ldr	r3, [r3]
+a030bf20:	e5933010 	ldr	r3, [r3, #16]
+a030bf24:	e1a0e00f 	mov	lr, pc
+a030bf28:	e1a0f003 	mov	pc, r3
+a030bf2c:	e91ba800 	ldmdb	fp, {fp, sp, pc}
+a030bf30:	a0310400 	eorges	r0, r1, r0, lsl #8
+
+a030bf34 <__udivsi3>:
+a030bf34:	e3510000 	cmp	r1, #0	; 0x0
+a030bf38:	0a00001f 	beq	a030bfbc <Ldiv0>
+a030bf3c:	e3a03001 	mov	r3, #1	; 0x1
+a030bf40:	e3a02000 	mov	r2, #0	; 0x0
+a030bf44:	e1500001 	cmp	r0, r1
+a030bf48:	3a000019 	bcc	a030bfb4 <Lgot_result>
+
+a030bf4c <Loop1>:
+a030bf4c:	e3510201 	cmp	r1, #268435456	; 0x10000000
+a030bf50:	31510000 	cmpcc	r1, r0
+a030bf54:	31a01201 	movcc	r1, r1, lsl #4
+a030bf58:	31a03203 	movcc	r3, r3, lsl #4
+a030bf5c:	3afffffa 	bcc	a030bf4c <Loop1>
+
+a030bf60 <Lbignum>:
+a030bf60:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
+a030bf64:	31510000 	cmpcc	r1, r0
+a030bf68:	31a01081 	movcc	r1, r1, lsl #1
+a030bf6c:	31a03083 	movcc	r3, r3, lsl #1
+a030bf70:	3afffffa 	bcc	a030bf60 <Lbignum>
+
+a030bf74 <Loop3>:
+a030bf74:	e1500001 	cmp	r0, r1
+a030bf78:	20400001 	subcs	r0, r0, r1
+a030bf7c:	21822003 	orrcs	r2, r2, r3
+a030bf80:	e15000a1 	cmp	r0, r1, lsr #1
+a030bf84:	204000a1 	subcs	r0, r0, r1, lsr #1
+a030bf88:	218220a3 	orrcs	r2, r2, r3, lsr #1
+a030bf8c:	e1500121 	cmp	r0, r1, lsr #2
+a030bf90:	20400121 	subcs	r0, r0, r1, lsr #2
+a030bf94:	21822123 	orrcs	r2, r2, r3, lsr #2
+a030bf98:	e15001a1 	cmp	r0, r1, lsr #3
+a030bf9c:	204001a1 	subcs	r0, r0, r1, lsr #3
+a030bfa0:	218221a3 	orrcs	r2, r2, r3, lsr #3
+a030bfa4:	e3500000 	cmp	r0, #0	; 0x0
+a030bfa8:	11b03223 	movnes	r3, r3, lsr #4
+a030bfac:	11a01221 	movne	r1, r1, lsr #4
+a030bfb0:	1affffef 	bne	a030bf74 <Loop3>
+
+a030bfb4 <Lgot_result>:
+a030bfb4:	e1a00002 	mov	r0, r2
+a030bfb8:	e1a0f00e 	mov	pc, lr
+
+a030bfbc <Ldiv0>:
+a030bfbc:	e52de004 	str	lr, [sp, -#4]!
+a030bfc0:	eb000031 	bl	a030c08c <__div0>
+a030bfc4:	e3a00000 	mov	r0, #0	; 0x0
+a030bfc8:	e8bd8000 	ldmia	sp!, {pc}
+
+a030bfcc <__umodsi3>:
+a030bfcc:	e3510000 	cmp	r1, #0	; 0x0
+a030bfd0:	0a000029 	beq	a030c07c <Ldiv0>
+a030bfd4:	e3510001 	cmp	r1, #1	; 0x1
+a030bfd8:	11500001 	cmpne	r0, r1
+a030bfdc:	03a00000 	moveq	r0, #0	; 0x0
+a030bfe0:	31a0f00e 	movcc	pc, lr
+a030bfe4:	e3a03001 	mov	r3, #1	; 0x1
+
+a030bfe8 <Loop1>:
+a030bfe8:	e3510201 	cmp	r1, #268435456	; 0x10000000
+a030bfec:	31510000 	cmpcc	r1, r0
+a030bff0:	31a01201 	movcc	r1, r1, lsl #4
+a030bff4:	31a03203 	movcc	r3, r3, lsl #4
+a030bff8:	3afffffa 	bcc	a030bfe8 <Loop1>
+
+a030bffc <Lbignum>:
+a030bffc:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
+a030c000:	31510000 	cmpcc	r1, r0
+a030c004:	31a01081 	movcc	r1, r1, lsl #1
+a030c008:	31a03083 	movcc	r3, r3, lsl #1
+a030c00c:	3afffffa 	bcc	a030bffc <Lbignum>
+
+a030c010 <Loop3>:
+a030c010:	e3a02000 	mov	r2, #0	; 0x0
+a030c014:	e1500001 	cmp	r0, r1
+a030c018:	20400001 	subcs	r0, r0, r1
+a030c01c:	e15000a1 	cmp	r0, r1, lsr #1
+a030c020:	204000a1 	subcs	r0, r0, r1, lsr #1
+a030c024:	218220e3 	orrcs	r2, r2, r3, ror #1
+a030c028:	e1500121 	cmp	r0, r1, lsr #2
+a030c02c:	20400121 	subcs	r0, r0, r1, lsr #2
+a030c030:	21822163 	orrcs	r2, r2, r3, ror #2
+a030c034:	e15001a1 	cmp	r0, r1, lsr #3
+a030c038:	204001a1 	subcs	r0, r0, r1, lsr #3
+a030c03c:	218221e3 	orrcs	r2, r2, r3, ror #3
+a030c040:	e1a0c003 	mov	ip, r3
+a030c044:	e3500000 	cmp	r0, #0	; 0x0
+a030c048:	11b03223 	movnes	r3, r3, lsr #4
+a030c04c:	11a01221 	movne	r1, r1, lsr #4
+a030c050:	1affffee 	bne	a030c010 <Loop3>
+
+a030c054 <Lfixup_dividend>:
+a030c054:	e212220e 	ands	r2, r2, #-536870912	; 0xe0000000
+a030c058:	131c0007 	tstne	ip, #7	; 0x7
+a030c05c:	0a000005 	beq	a030c078 <Lgot_result>
+a030c060:	e11201ec 	tst	r2, ip, ror #3
+a030c064:	108001a1 	addne	r0, r0, r1, lsr #3
+a030c068:	e112016c 	tst	r2, ip, ror #2
+a030c06c:	10800121 	addne	r0, r0, r1, lsr #2
+a030c070:	e11200ec 	tst	r2, ip, ror #1
+a030c074:	108000a1 	addne	r0, r0, r1, lsr #1
+
+a030c078 <Lgot_result>:
+a030c078:	e1a0f00e 	mov	pc, lr
+
+a030c07c <Ldiv0>:
+a030c07c:	e52de004 	str	lr, [sp, -#4]!
+a030c080:	eb000001 	bl	a030c08c <__div0>
+a030c084:	e3a00000 	mov	r0, #0	; 0x0
+a030c088:	e8bd8000 	ldmia	sp!, {pc}
+
+a030c08c <__div0>:
+a030c08c:	e92d4002 	stmdb	sp!, {r1, lr}
+a030c090:	ef900014 	swi	0x00900014
+a030c094:	e3700ffa 	cmn	r0, #1000	; 0x3e8
+a030c098:	28bd8002 	ldmcsia	sp!, {r1, pc}
+a030c09c:	e3a01008 	mov	r1, #8	; 0x8
+a030c0a0:	ef900025 	swi	0x00900025
+a030c0a4:	e8bd8002 	ldmia	sp!, {r1, pc}
+Disassembly of section .glue_7:
+Disassembly of section .glue_7t:
+Disassembly of section .rodata:
+
+a030c0a8 <__rodata_start>:
+a030c0a8:	65736572 	ldrvsb	r6, [r3, -#1394]!
+a030c0ac:	00000074 	andeq	r0, r0, r4, ror r0
+a030c0b0:	6f626572 	swivs	0x00626572
+a030c0b4:	0000746f 	andeq	r7, r0, pc, ror #8
+a030c0b8:	6f676f62 	swivs	0x00676f62
+a030c0bc:	7370696d 	cmnvc	r0, #1785856	; 0x1b4000
+a030c0c0:	00000000 	andeq	r0, r0, r0
+a030c0c4:	6c6c6163 	stfvse	f6, [ip], -#396
+a030c0c8:	00000000 	andeq	r0, r0, r0
+a030c0cc:	62676863 	rsbvs	r6, r7, #6488064	; 0x630000
+a030c0d0:	00007469 	andeq	r7, r0, r9, ror #8
+a030c0d4:	6d6d7564 	cfstr64vs	mvdx7, [sp, -#400]!
+a030c0d8:	00000079 	andeq	r0, r0, r9, ror r0
+a030c0dc:	706d7564 	rsbvc	r7, sp, r4, ror #10
+a030c0e0:	00000000 	andeq	r0, r0, r0
+a030c0e4:	6335646d 	teqvs	r5, #1828716544	; 0x6d000000
+a030c0e8:	00006b68 	andeq	r6, r0, r8, ror #22
+a030c0ec:	636d656d 	cmnvs	sp, #457179136	; 0x1b400000
+a030c0f0:	00007970 	andeq	r7, r0, r0, ror r9
+a030c0f4:	656b6f70 	strvsb	r6, [fp, -#3952]!
+a030c0f8:	00000000 	andeq	r0, r0, r0
+a030c0fc:	6b656570 	blvs	a1c656c4 <__bss_end+0x19532c0>
+a030c100:	00000000 	andeq	r0, r0, r0
+a030c104:	776f6478 	undefined
+a030c108:	616f6c6e 	cmnvs	pc, lr, ror #24
+a030c10c:	00000064 	andeq	r0, r0, r4, rrx
+a030c110:	73616c46 	cmnvc	r1, #17920	; 0x4600
+a030c114:	616d2068 	cmnvs	sp, r8, rrx
+a030c118:	000a3a70 	andeq	r3, sl, r0, ror sl
+a030c11c:	000a6425 	andeq	r6, sl, r5, lsr #8
+a030c120:	696e490a 	stmvsdb	lr!, {r1, r3, r8, fp, lr}^
+a030c124:	6c616974 	stcvsl	9, cr6, [r1], -#464
+a030c128:	6e697a69 	fnmulsvs	s15, s18, s19
+a030c12c:	6c462067 	mcrrvs	0, 6, r2, r6, cr7
+a030c130:	0a687361 	beq	a1d28ebc <__bss_end+0x1a16ab8>
+a030c134:	00000000 	andeq	r0, r0, r0
+a030c138:	65646e75 	strvsb	r6, [r4, -#3701]!
+a030c13c:	656e6966 	strvsb	r6, [lr, -#2406]!
+a030c140:	6c662064 	stcvsl	0, cr2, [r6], -#400
+a030c144:	5f687361 	swipl	0x00687361
+a030c148:	63736564 	cmnvs	r3, #419430400	; 0x19000000
+a030c14c:	74706972 	ldrvcbt	r6, [r0], -#2418
+a030c150:	0a73726f 	beq	a1fe8b14 <__bss_end+0x1cd6710>
+a030c154:	00000000 	andeq	r0, r0, r0
+a030c158:	65646e75 	strvsb	r6, [r4, -#3701]!
+a030c15c:	656e6966 	strvsb	r6, [lr, -#2406]!
+a030c160:	6c662064 	stcvsl	0, cr2, [r6], -#400
+a030c164:	5f687361 	swipl	0x00687361
+a030c168:	76697264 	strvcbt	r7, [r9], -r4, ror #4
+a030c16c:	000a7265 	andeq	r7, sl, r5, ror #4
+a030c170:	76697264 	strvcbt	r7, [r9], -r4, ror #4
+a030c174:	64207265 	strvst	r7, [r0], -#613
+a030c178:	2073656f 	rsbcss	r6, r3, pc, ror #10
+a030c17c:	20746f6e 	rsbcss	r6, r4, lr, ror #30
+a030c180:	70707573 	rsbvcs	r7, r0, r3, ror r5
+a030c184:	2074726f 	rsbcss	r7, r4, pc, ror #4
+a030c188:	72657571 	rsbvc	r7, r5, #473956352	; 0x1c400000
+a030c18c:	65645f79 	strvsb	r5, [r4, -#3961]!
+a030c190:	69726373 	ldmvsdb	r2!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
+a030c194:	726f7470 	rsbvc	r7, pc, #1879048192	; 0x70000000
+a030c198:	00000a73 	andeq	r0, r0, r3, ror sl
+a030c19c:	76697264 	strvcbt	r7, [r9], -r4, ror #4
+a030c1a0:	66207265 	strvst	r7, [r0], -r5, ror #4
+a030c1a4:	656c6961 	strvsb	r6, [ip, -#2401]!
+a030c1a8:	6f742064 	swivs	0x00742064
+a030c1ac:	65757120 	ldrvsb	r7, [r5, -#288]!
+a030c1b0:	66207972 	undefined
+a030c1b4:	6873616c 	ldmvsda	r3!, {r2, r3, r5, r6, r8, sp, lr}^
+a030c1b8:	726f6620 	rsbvc	r6, pc, #33554432	; 0x2000000
+a030c1bc:	73656420 	cmnvc	r5, #536870912	; 0x20000000
+a030c1c0:	70697263 	rsbvc	r7, r9, r3, ror #4
+a030c1c4:	73726f74 	cmnvc	r2, #464	; 0x1d0
+a030c1c8:	0000000a 	andeq	r0, r0, sl
+a030c1cc:	78206925 	stmvcda	r0!, {r0, r2, r5, r8, fp, sp, lr}
+a030c1d0:	25783020 	ldrcsb	r3, [r8, -#32]!
+a030c1d4:	2c783830 	ldccsl	8, cr3, [r8], -#192
+a030c1d8:	00000020 	andeq	r0, r0, r0, lsr #32
+a030c1dc:	20746f6e 	rsbcss	r6, r4, lr, ror #30
+a030c1e0:	00000000 	andeq	r0, r0, r0
+a030c1e4:	6b636f6c 	blvs	a1be7f9c <__bss_end+0x18d5b98>
+a030c1e8:	656c6261 	strvsb	r6, [ip, -#609]!
+a030c1ec:	0000000a 	andeq	r0, r0, sl
+a030c1f0:	20746f6e 	rsbcss	r6, r4, lr, ror #30
+a030c1f4:	756f6e65 	strvcb	r6, [pc, #-3685]!	; a030b397 <strncmp+0x9f>
+a030c1f8:	66206867 	strvst	r6, [r0], -r7, ror #16
+a030c1fc:	6873616c 	ldmvsda	r3!, {r2, r3, r5, r6, r8, sp, lr}^
+a030c200:	6f6c625f 	swivs	0x006c625f
+a030c204:	0a736b63 	beq	a1fe6f98 <__bss_end+0x1cd4b94>
+a030c208:	00000000 	andeq	r0, r0, r0
+a030c20c:	73617265 	cmnvc	r1, #1342177286	; 0x50000006
+a030c210:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030c214:	30257830 	eorcc	r7, r5, r0, lsr r8
+a030c218:	28207838 	stmcsda	r0!, {r3, r4, r5, fp, ip, sp, lr}
+a030c21c:	20296425 	eorcs	r6, r9, r5, lsr #8
+a030c220:	64726f77 	ldrvsbt	r6, [r2], -#3959
+a030c224:	74612073 	strvcbt	r2, [r1], -#115
+a030c228:	25783020 	ldrcsb	r3, [r8, -#32]!
+a030c22c:	0a783830 	beq	a211a2f4 <__bss_end+0x1e07ef0>
+a030c230:	00000000 	andeq	r0, r0, r0
+a030c234:	6f6c6e75 	swivs	0x006c6e75
+a030c238:	6e696b63 	cdpvs	11, 6, cr6, cr9, cr3, {3}
+a030c23c:	69642067 	stmvsdb	r4!, {r0, r1, r2, r5, r6, sp}^
+a030c240:	20797472 	rsbcss	r7, r9, r2, ror r4
+a030c244:	636f6c62 	cmnvs	pc, #25088	; 0x6200
+a030c248:	7461206b 	strvcbt	r2, [r1], -#107
+a030c24c:	25783020 	ldrcsb	r3, [r8, -#32]!
+a030c250:	0a783830 	beq	a211a318 <__bss_end+0x1e07f14>
+a030c254:	00000000 	andeq	r0, r0, r0
+a030c258:	73617265 	cmnvc	r1, #1342177286	; 0x50000006
+a030c25c:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030c260:	74726964 	ldrvcbt	r6, [r2], -#2404
+a030c264:	6c622079 	stcvsl	0, cr2, [r2], -#484
+a030c268:	206b636f 	rsbcs	r6, fp, pc, ror #6
+a030c26c:	30207461 	eorcc	r7, r0, r1, ror #8
+a030c270:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030c274:	00000a78 	andeq	r0, r0, r8, ror sl
+a030c278:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030c27c:	72652068 	rsbvc	r2, r5, #104	; 0x68
+a030c280:	20657361 	rsbcs	r7, r5, r1, ror #6
+a030c284:	6f727265 	swivs	0x00727265
+a030c288:	74612072 	strvcbt	r2, [r1], -#114
+a030c28c:	25783020 	ldrcsb	r3, [r8, -#32]!
+a030c290:	0a783830 	beq	a211a358 <__bss_end+0x1e07f54>
+a030c294:	00000000 	andeq	r0, r0, r0
+a030c298:	2023200a 	eorcs	r2, r3, sl
+a030c29c:	636f6c42 	cmnvs	pc, #16896	; 0x4200
+a030c2a0:	6620736b 	strvst	r7, [r0], -fp, ror #6
+a030c2a4:	646e756f 	strvsbt	r7, [lr], -#1391
+a030c2a8:	25203d20 	strcs	r3, [r0, -#3360]!
+a030c2ac:	2f000a64 	swics	0x00000a64
+a030c2b0:	007c5c2d 	rsbeqs	r5, ip, sp, lsr #24
+a030c2b4:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030c2b8:	676e6968 	strvsb	r6, [lr, -r8, ror #18]!
+a030c2bc:	25783020 	ldrcsb	r3, [r8, -#32]!
+a030c2c0:	20783830 	rsbcss	r3, r8, r0, lsr r8
+a030c2c4:	29642528 	stmcsdb	r4!, {r3, r5, r8, sl, sp}^
+a030c2c8:	726f7720 	rsbvc	r7, pc, #8388608	; 0x800000
+a030c2cc:	66207364 	strvst	r7, [r0], -r4, ror #6
+a030c2d0:	206d6f72 	rsbcs	r6, sp, r2, ror pc
+a030c2d4:	30257830 	eorcc	r7, r5, r0, lsr r8
+a030c2d8:	74207838 	strvct	r7, [r0], -#2104
+a030c2dc:	7830206f 	ldmvcda	r0!, {r0, r1, r2, r3, r5, r6, sp}
+a030c2e0:	78383025 	ldmvcda	r8!, {r0, r2, r5, ip, sp}
+a030c2e4:	0000000a 	andeq	r0, r0, sl
+a030c2e8:	73617265 	cmnvc	r1, #1342177286	; 0x50000006
+a030c2ec:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030c2f0:	30207461 	eorcc	r7, r0, r1, ror #8
+a030c2f4:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030c2f8:	2e2e2e78 	mcrcs	14, 1, r2, cr14, cr8, {3}
+a030c2fc:	00000000 	andeq	r0, r0, r0
+a030c300:	72726520 	rsbvcs	r6, r2, #134217728	; 0x8000000
+a030c304:	000a726f 	andeq	r7, sl, pc, ror #4
+a030c308:	61637320 	cmnvs	r3, r0, lsr #6
+a030c30c:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
+a030c310:	6f642067 	swivs	0x00642067
+a030c314:	2e2e6e77 	mcrcs	14, 1, r6, cr14, cr7, {3}
+a030c318:	0000002e 	andeq	r0, r0, lr, lsr #32
+a030c31c:	73657220 	cmnvc	r5, #2	; 0x2
+a030c320:	20656d75 	rsbcs	r6, r5, r5, ror sp
+a030c324:	74697277 	strvcbt	r7, [r9], -#631
+a030c328:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030c32c:	30207461 	eorcc	r7, r0, r1, ror #8
+a030c330:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030c334:	00000a78 	andeq	r0, r0, r8, ror sl
+a030c338:	206f6f74 	rsbcs	r6, pc, r4, ror pc
+a030c33c:	796e616d 	stmvcdb	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}^
+a030c340:	616c6620 	cmnvs	ip, r0, lsr #12
+a030c344:	65206873 	strvs	r6, [r0, -#2163]!
+a030c348:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
+a030c34c:	70202c73 	eorvc	r2, r0, r3, ror ip
+a030c350:	61626f72 	cmnvs	r2, r2, ror pc
+a030c354:	20796c62 	rsbcss	r6, r9, r2, ror #24
+a030c358:	64726168 	ldrvsbt	r6, [r2], -#360
+a030c35c:	65726177 	ldrvsb	r6, [r2, -#375]!
+a030c360:	72726520 	rsbvcs	r6, r2, #134217728	; 0x8000000
+a030c364:	000a726f 	andeq	r7, sl, pc, ror #4
+a030c368:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030c36c:	00000000 	andeq	r0, r0, r0
+a030c370:	61726170 	cmnvs	r2, r0, ror r1
+a030c374:	0000006d 	andeq	r0, r0, sp, rrx
+a030c378:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
+a030c37c:	00006c65 	andeq	r6, r0, r5, ror #24
+a030c380:	646d6172 	strvsbt	r6, [sp], -#370
+a030c384:	006b7369 	rsbeq	r7, fp, r9, ror #6
+a030c388:	6e207325 	cdpvs	3, 2, cr7, cr0, cr5, {1}
+a030c38c:	6420746f 	strvst	r7, [r0], -#1135
+a030c390:	6c6e776f 	stcvsl	7, cr7, [lr], -#444
+a030c394:	6564616f 	strvsb	r6, [r4, -#367]!
+a030c398:	00000a64 	andeq	r0, r0, r4, ror #20
+a030c39c:	67616d69 	strvsb	r6, [r1, -r9, ror #26]!
+a030c3a0:	6f742065 	swivs	0x00742065
+a030c3a4:	616c206f 	cmnvs	ip, pc, rrx
+a030c3a8:	20656772 	rsbcs	r6, r5, r2, ror r7
+a030c3ac:	20726f66 	rsbcss	r6, r2, r6, ror #30
+a030c3b0:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030c3b4:	30203a68 	eorcc	r3, r0, r8, ror #20
+a030c3b8:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030c3bc:	203e2078 	eorcss	r2, lr, r8, ror r0
+a030c3c0:	30257830 	eorcc	r7, r5, r0, lsr r8
+a030c3c4:	000a7838 	andeq	r7, sl, r8, lsr r8
+a030c3c8:	69766153 	ldmvsdb	r6!, {r0, r1, r4, r6, r8, sp, lr}^
+a030c3cc:	2520676e 	strcs	r6, [r0, -#1902]!
+a030c3d0:	6f742073 	swivs	0x00742073
+a030c3d4:	616c6620 	cmnvs	ip, r0, lsr #12
+a030c3d8:	000a6873 	andeq	r6, sl, r3, ror r8
+a030c3dc:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030c3e0:	00000068 	andeq	r0, r0, r8, rrx
+a030c3e4:	6b636f6c 	blvs	a1be819c <__bss_end+0x18d5d98>
+a030c3e8:	00000000 	andeq	r0, r0, r0
+a030c3ec:	6f6c6e75 	swivs	0x006c6e75
+a030c3f0:	00006b63 	andeq	r6, r0, r3, ror #22
+a030c3f4:	73617265 	cmnvc	r1, #1342177286	; 0x50000006
+a030c3f8:	00000065 	andeq	r0, r0, r5, rrx
+a030c3fc:	6174530a 	cmnvs	r4, sl, lsl #6
+a030c400:	6e697472 	mcrvs	4, 3, r7, cr9, cr2, {3}
+a030c404:	656b2067 	strvsb	r2, [fp, -#103]!
+a030c408:	6c656e72 	stcvsl	14, cr6, [r5], -#456
+a030c40c:	2e2e2e20 	cdpcs	14, 2, cr2, cr14, cr0, {1}
+a030c410:	00000a0a 	andeq	r0, r0, sl, lsl #20
+a030c414:	78654e0a 	stmvcda	r5!, {r1, r3, r9, sl, fp, lr}^
+a030c418:	74732074 	ldrvcbt	r2, [r3], -#116
+a030c41c:	69207065 	stmvsdb	r0!, {r0, r2, r5, r6, ip, sp, lr}
+a030c420:	6f742073 	swivs	0x00742073
+a030c424:	61747320 	cmnvs	r4, r0, lsr #6
+a030c428:	74207472 	strvct	r7, [r0], -#1138
+a030c42c:	6b206568 	blvs	a0b259d4 <__bss_end+0x8135d0>
+a030c430:	656e7265 	strvsb	r7, [lr, -#613]!
+a030c434:	00000a6c 	andeq	r0, r0, ip, ror #20
+a030c438:	2c796548 	cfldr64cs	mvdx6, [r9], -#288
+a030c43c:	65687420 	strvsb	r7, [r8, -#1056]!
+a030c440:	72656b20 	rsbvc	r6, r5, #32768	; 0x8000
+a030c444:	206c656e 	rsbcs	r6, ip, lr, ror #10
+a030c448:	75746572 	ldrvcb	r6, [r4, -#1394]!
+a030c44c:	64656e72 	strvsbt	r6, [r5], -#3698
+a030c450:	68542021 	ldmvsda	r4, {r0, r5, sp}^
+a030c454:	73207369 	teqvc	r0, #-1543503871	; 0xa4000001
+a030c458:	6c756f68 	ldcvsl	15, cr6, [r5], -#416
+a030c45c:	6f6e2064 	swivs	0x006e2064
+a030c460:	61682074 	cmnvs	r8, r4, ror r0
+a030c464:	6e657070 	mcrvs	0, 3, r7, cr5, cr0, {3}
+a030c468:	00000a2e 	andeq	r0, r0, lr, lsr #20
+a030c46c:	746f6f62 	strvcbt	r6, [pc], #3938	; a030c474 <__text_end+0x3cc>
+a030c470:	00000000 	andeq	r0, r0, r0
+a030c474:	6e72654b 	cdpvs	5, 7, cr6, cr2, cr11, {2}
+a030c478:	40206c65 	eormi	r6, r0, r5, ror #24
+a030c47c:	25783020 	ldrcsb	r3, [r8, -#32]!
+a030c480:	20583830 	subcss	r3, r8, r0, lsr r8
+a030c484:	0a776f4e 	beq	a20e81c4 <__bss_end+0x1dd5dc0>
+a030c488:	00000000 	andeq	r0, r0, r0
+a030c48c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
+a030c490:	00006c65 	andeq	r6, r0, r5, ror #24
+a030c494:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030c498:	72657620 	rsbvc	r7, r5, #33554432	; 0x2000000
+a030c49c:	6e6f6973 	mcrvs	9, 3, r6, cr15, cr3, {3}
+a030c4a0:	302e3220 	eorcc	r3, lr, r0, lsr #4
+a030c4a4:	702d352e 	eorvc	r3, sp, lr, lsr #10
+a030c4a8:	20336572 	eorcss	r6, r3, r2, ror r5
+a030c4ac:	20726f66 	rsbcss	r6, r2, r6, ror #30
+a030c4b0:	65746e49 	ldrvsb	r6, [r4, -#3657]!
+a030c4b4:	4348206c 	cmpmi	r8, #108	; 0x6c
+a030c4b8:	42424444 	submi	r4, r2, #1140850688	; 0x44000000
+a030c4bc:	20304156 	eorcss	r4, r0, r6, asr r1
+a030c4c0:	69614d28 	stmvsdb	r1!, {r3, r5, r8, sl, fp, lr}^
+a030c4c4:	6f74736e 	swivs	0x0074736e
+a030c4c8:	0a29656e 	beq	a0d65a88 <__bss_end+0xa53684>
+a030c4cc:	00000000 	andeq	r0, r0, r0
+a030c4d0:	7265410a 	rsbvc	r4, r5, #-2147483646	; 0x80000002
+a030c4d4:	78696e6f 	stmvcda	r9!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
+a030c4d8:	72655620 	rsbvc	r5, r5, #33554432	; 0x2000000
+a030c4dc:	6e6f6973 	mcrvs	9, 3, r6, cr15, cr3, {3}
+a030c4e0:	332e3120 	teqcc	lr, #8	; 0x8
+a030c4e4:	00000a0a 	andeq	r0, r0, sl, lsl #20
+a030c4e8:	6f437325 	swivs	0x00437325
+a030c4ec:	69727970 	ldmvsdb	r2!, {r4, r5, r6, r8, fp, ip, sp, lr}^
+a030c4f0:	20746867 	rsbcss	r6, r4, r7, ror #16
+a030c4f4:	20294328 	eorcs	r4, r9, r8, lsr #6
+a030c4f8:	39393931 	ldmccdb	r9!, {r0, r4, r5, r8, fp, ip, sp}
+a030c4fc:	30303220 	eorccs	r3, r0, r0, lsr #4
+a030c500:	30322030 	eorccs	r2, r2, r0, lsr r0
+a030c504:	32203130 	eorcc	r3, r0, #12	; 0xc
+a030c508:	20323030 	eorcss	r3, r2, r0, lsr r0
+a030c50c:	33303032 	teqcc	r0, #50	; 0x32
+a030c510:	6e614a20 	fmulsvs	s9, s2, s1
+a030c514:	7265442d 	rsbvc	r4, r5, #754974720	; 0x2d000000
+a030c518:	6142206b 	cmpvs	r2, fp, rrx
+a030c51c:	72656b6b 	rsbvc	r6, r5, #109568	; 0x1ac00
+a030c520:	646e6120 	strvsbt	r6, [lr], -#288
+a030c524:	69724520 	ldmvsdb	r2!, {r5, r8, sl, lr}^
+a030c528:	6f4d206b 	swivs	0x004d206b
+a030c52c:	000a7775 	andeq	r7, sl, r5, ror r7
+a030c530:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030c534:	6d6f6320 	stcvsl	3, cr6, [pc, -#128]!
+a030c538:	77207365 	strvc	r7, [r0, -r5, ror #6]!
+a030c53c:	20687469 	rsbcs	r7, r8, r9, ror #8
+a030c540:	4f534241 	swimi	0x00534241
+a030c544:	4554554c 	ldrmib	r5, [r4, -#1356]
+a030c548:	4e20594c 	cdpmi	9, 2, cr5, cr0, cr12, {2}
+a030c54c:	4157204f 	cmpmi	r7, pc, asr #32
+a030c550:	4e415252 	mcrmi	2, 2, r5, cr1, cr2, {2}
+a030c554:	203b5954 	eorcss	r5, fp, r4, asr r9
+a030c558:	64616572 	strvsbt	r6, [r1], -#1394
+a030c55c:	65687420 	strvsb	r7, [r8, -#1056]!
+a030c560:	554e4720 	strplb	r4, [lr, -#1824]
+a030c564:	4c504720 	mrrcmi	7, 2, r4, r0, cr0
+a030c568:	726f6620 	rsbvc	r6, pc, #33554432	; 0x2000000
+a030c56c:	74656420 	strvcbt	r6, [r5], -#1056
+a030c570:	736c6961 	cmnvc	ip, #1589248	; 0x184000
+a030c574:	00000a2e 	andeq	r0, r0, lr, lsr #20
+a030c578:	73696854 	cmnvc	r9, #5505024	; 0x540000
+a030c57c:	20736920 	rsbcss	r6, r3, r0, lsr #18
+a030c580:	65657266 	strvsb	r7, [r5, -#614]!
+a030c584:	666f7320 	strvsbt	r7, [pc], -r0, lsr #6
+a030c588:	72617774 	rsbvc	r7, r1, #30408704	; 0x1d00000
+a030c58c:	61202c65 	teqvs	r0, r5, ror #24
+a030c590:	7920646e 	stmvcdb	r0!, {r1, r2, r3, r5, r6, sl, sp, lr}
+a030c594:	6120756f 	teqvs	r0, pc, ror #10
+a030c598:	77206572 	undefined
+a030c59c:	6f636c65 	swivs	0x00636c65
+a030c5a0:	7420656d 	strvct	r6, [r0], -#1389
+a030c5a4:	6572206f 	ldrvsb	r2, [r2, -#111]!
+a030c5a8:	74736964 	ldrvcbt	r6, [r3], -#2404
+a030c5ac:	75626972 	strvcb	r6, [r2, -#2418]!
+a030c5b0:	69206574 	stmvsdb	r0!, {r2, r4, r5, r6, r8, sl, sp, lr}
+a030c5b4:	00000a74 	andeq	r0, r0, r4, ror sl
+a030c5b8:	65646e75 	strvsb	r6, [r4, -#3701]!
+a030c5bc:	65632072 	strvsb	r2, [r3, -#114]!
+a030c5c0:	69617472 	stmvsdb	r1!, {r1, r4, r5, r6, sl, ip, sp, lr}^
+a030c5c4:	6f63206e 	swivs	0x0063206e
+a030c5c8:	7469646e 	strvcbt	r6, [r9], -#1134
+a030c5cc:	736e6f69 	cmnvc	lr, #420	; 0x1a4
+a030c5d0:	6572203b 	ldrvsb	r2, [r2, -#59]!
+a030c5d4:	74206461 	strvct	r6, [r0], -#1121
+a030c5d8:	47206568 	strmi	r6, [r0, -r8, ror #10]!
+a030c5dc:	4720554e 	strmi	r5, [r0, -lr, asr #10]!
+a030c5e0:	66204c50 	undefined
+a030c5e4:	6420726f 	strvst	r7, [r0], -#623
+a030c5e8:	69617465 	stmvsdb	r1!, {r0, r2, r5, r6, sl, ip, sp, lr}^
+a030c5ec:	0a2e736c 	beq	a0ea93a4 <__bss_end+0xb96fa0>
+a030c5f0:	00000000 	andeq	r0, r0, r0
+a030c5f4:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030c5f8:	00000000 	andeq	r0, r0, r0
+a030c5fc:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
+a030c600:	00006c65 	andeq	r6, r0, r5, ror #24
+a030c604:	646d6172 	strvsbt	r6, [sp], -#370
+a030c608:	006b7369 	rsbeq	r7, fp, r9, ror #6
+a030c60c:	6f747541 	swivs	0x00747541
+a030c610:	746f6f62 	strvcbt	r6, [pc], #3938	; a030c618 <__text_end+0x570>
+a030c614:	69252820 	stmvsdb	r5!, {r5, fp, sp}
+a030c618:	63657320 	cmnvs	r5, #-2147483648	; 0x80000000
+a030c61c:	73646e6f 	cmnvc	r4, #1776	; 0x6f0
+a030c620:	6e692029 	cdpvs	0, 6, cr2, cr9, cr9, {1}
+a030c624:	6f727020 	swivs	0x00727020
+a030c628:	73657267 	cmnvc	r5, #1879048198	; 0x70000006
+a030c62c:	70202c73 	eorvc	r2, r0, r3, ror ip
+a030c630:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
+a030c634:	796e6120 	stmvcdb	lr!, {r5, r8, sp, lr}^
+a030c638:	79656b20 	stmvcdb	r5!, {r5, r8, r9, fp, sp, lr}^
+a030c63c:	206f7420 	rsbcs	r7, pc, r0, lsr #8
+a030c640:	706f7473 	rsbvc	r7, pc, r3, ror r4
+a030c644:	00000020 	andeq	r0, r0, r0, lsr #32
+a030c648:	746f6f62 	strvcbt	r6, [pc], #3938	; a030c650 <__text_end+0x5a8>
+a030c64c:	00000000 	andeq	r0, r0, r0
+a030c650:	7475410a 	ldrvcbt	r4, [r5], -#266
+a030c654:	6f6f626f 	swivs	0x006f626f
+a030c658:	62612074 	rsbvs	r2, r1, #116	; 0x74
+a030c65c:	6574726f 	ldrvsb	r7, [r4, -#623]!
+a030c660:	00000a64 	andeq	r0, r0, r4, ror #20
+a030c664:	65707954 	ldrvsb	r7, [r0, -#2388]!
+a030c668:	65682220 	strvsb	r2, [r8, -#544]!
+a030c66c:	2022706c 	eorcs	r7, r2, ip, rrx
+a030c670:	67206f74 	undefined
+a030c674:	61207465 	teqvs	r0, r5, ror #8
+a030c678:	73696c20 	cmnvc	r9, #8192	; 0x2000
+a030c67c:	666f2074 	undefined
+a030c680:	6d6f6320 	stcvsl	3, cr6, [pc, -#128]!
+a030c684:	646e616d 	strvsbt	r6, [lr], -#365
+a030c688:	00000a73 	andeq	r0, r0, r3, ror sl
+a030c68c:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
+a030c690:	64616f6c 	strvsbt	r6, [r1], -#3948
+a030c694:	65707320 	ldrvsb	r7, [r0, -#800]!
+a030c698:	20206465 	eorcs	r6, r0, r5, ror #8
+a030c69c:	20202020 	eorcs	r2, r0, r0, lsr #32
+a030c6a0:	0000203a 	andeq	r2, r0, sl, lsr r0
+a030c6a4:	75616220 	strvcb	r6, [r1, -#544]!
+a030c6a8:	00000a64 	andeq	r0, r0, r4, ror #20
+a030c6ac:	6d726554 	cfldr64vs	mvdx6, [r2, -#336]!
+a030c6b0:	6c616e69 	stcvsl	14, cr6, [r1], -#420
+a030c6b4:	65707320 	ldrvsb	r7, [r0, -#800]!
+a030c6b8:	20206465 	eorcs	r6, r0, r5, ror #8
+a030c6bc:	20202020 	eorcs	r2, r0, r0, lsr #32
+a030c6c0:	0000203a 	andeq	r2, r0, sl, lsr r0
+a030c6c4:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030c6c8:	20202020 	eorcs	r2, r0, r0, lsr #32
+a030c6cc:	25783028 	ldrcsb	r3, [r8, -#40]!
+a030c6d0:	29783830 	ldmcsdb	r8!, {r4, r5, fp, ip, sp}^
+a030c6d4:	0000203a 	andeq	r2, r0, sl, lsr r0
+a030c6d8:	6d6f7266 	sfmvs	f7, 2, [pc, -#408]!
+a030c6dc:	616c6620 	cmnvs	ip, r0, lsr #12
+a030c6e0:	000a6873 	andeq	r6, sl, r3, ror r8
+a030c6e4:	6e776f64 	cdpvs	15, 7, cr6, cr7, cr4, {3}
+a030c6e8:	64616f6c 	strvsbt	r6, [r1], -#3948
+a030c6ec:	61206465 	teqvs	r0, r5, ror #8
+a030c6f0:	78302074 	ldmvcda	r0!, {r2, r4, r5, r6, sp}
+a030c6f4:	78383025 	ldmvcda	r8!, {r0, r2, r5, ip, sp}
+a030c6f8:	6925202c 	stmvsdb	r5!, {r2, r3, r5, sp}
+a030c6fc:	74796220 	ldrvcbt	r6, [r9], -#544
+a030c700:	000a7365 	andeq	r7, sl, r5, ror #6
+a030c704:	61726170 	cmnvs	r2, r0, ror r1
+a030c708:	2820206d 	stmcsda	r0!, {r0, r2, r3, r5, r6, sp}
+a030c70c:	30257830 	eorcc	r7, r5, r0, lsr r8
+a030c710:	3a297838 	bcc	a0d6a7f8 <__bss_end+0xa583f4>
+a030c714:	00000020 	andeq	r0, r0, r0, lsr #32
+a030c718:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
+a030c71c:	20206c65 	eorcs	r6, r0, r5, ror #24
+a030c720:	25783028 	ldrcsb	r3, [r8, -#40]!
+a030c724:	29783830 	ldmcsdb	r8!, {r4, r5, fp, ip, sp}^
+a030c728:	0000203a 	andeq	r2, r0, sl, lsr r0
+a030c72c:	646d6172 	strvsbt	r6, [sp], -#370
+a030c730:	206b7369 	rsbcs	r7, fp, r9, ror #6
+a030c734:	25783028 	ldrcsb	r3, [r8, -#40]!
+a030c738:	29783830 	ldmcsdb	r8!, {r4, r5, fp, ip, sp}^
+a030c73c:	0000203a 	andeq	r2, r0, sl, lsr r0
+a030c740:	74617473 	strvcbt	r7, [r1], -#1139
+a030c744:	00007375 	andeq	r7, r0, r5, ror r3
+a030c748:	6f6c6572 	swivs	0x006c6572
+a030c74c:	00006461 	andeq	r6, r0, r1, ror #8
+a030c750:	61726170 	cmnvs	r2, r0, ror r1
+a030c754:	0000006d 	andeq	r0, r0, sp, rrx
+a030c758:	6f6d654d 	swivs	0x006d654d
+a030c75c:	6d207972 	stcvs	9, cr7, [r0, -#456]!
+a030c760:	0a3a7061 	beq	a11a88ec <__bss_end+0xe964e8>
+a030c764:	00000000 	andeq	r0, r0, r0
+a030c768:	78302020 	ldmvcda	r0!, {r5, sp}
+a030c76c:	78383025 	ldmvcda	r8!, {r0, r2, r5, ip, sp}
+a030c770:	30204020 	eorcc	r4, r0, r0, lsr #32
+a030c774:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030c778:	25282078 	strcs	r2, [r8, -#120]!
+a030c77c:	424d2064 	submi	r2, sp, #100	; 0x64
+a030c780:	00000a29 	andeq	r0, r0, r9, lsr #20
+a030c784:	6967616d 	stmvsdb	r7!, {r0, r2, r3, r5, r6, r8, sp, lr}^
+a030c788:	61662063 	cmnvs	r6, r3, rrx
+a030c78c:	64656c69 	strvsbt	r6, [r5], -#3177
+a030c790:	20746120 	rsbcss	r6, r4, r0, lsr #2
+a030c794:	30257830 	eorcc	r7, r5, r0, lsr r8
+a030c798:	28207838 	stmcsda	r0!, {r3, r4, r5, fp, ip, sp, lr}
+a030c79c:	30257830 	eorcc	r7, r5, r0, lsr r8
+a030c7a0:	21207838 	teqcs	r0, r8, lsr r8
+a030c7a4:	7830203d 	ldmvcda	r0!, {r0, r2, r3, r4, r5, sp}
+a030c7a8:	78383025 	ldmvcda	r8!, {r0, r2, r5, ip, sp}
+a030c7ac:	00000a29 	andeq	r0, r0, r9, lsr #20
+a030c7b0:	656d6d49 	strvsb	r6, [sp, -#3401]!
+a030c7b4:	74616964 	strvcbt	r6, [r1], -#2404
+a030c7b8:	20796c65 	rsbcss	r6, r9, r5, ror #24
+a030c7bc:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
+a030c7c0:	6c662064 	stcvsl	0, cr2, [r6], -#400
+a030c7c4:	20687361 	rsbcs	r7, r8, r1, ror #6
+a030c7c8:	74726170 	ldrvcbt	r6, [r2], -#368
+a030c7cc:	6f697469 	swivs	0x00697469
+a030c7d0:	6174206e 	cmnvs	r4, lr, rrx
+a030c7d4:	20656c62 	rsbcs	r6, r5, r2, ror #24
+a030c7d8:	30207461 	eorcc	r7, r0, r1, ror #8
+a030c7dc:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030c7e0:	00000a78 	andeq	r0, r0, r8, ror sl
+a030c7e4:	72616553 	rsbvc	r6, r1, #348127232	; 0x14c00000
+a030c7e8:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
+a030c7ec:	6c662067 	stcvsl	0, cr2, [r6], -#412
+a030c7f0:	20687361 	rsbcs	r7, r8, r1, ror #6
+a030c7f4:	74726170 	ldrvcbt	r6, [r2], -#368
+a030c7f8:	6f697469 	swivs	0x00697469
+a030c7fc:	6174206e 	cmnvs	r4, lr, rrx
+a030c800:	2e656c62 	cdpcs	12, 6, cr6, cr5, cr2, {3}
+a030c804:	0a202e2e 	beq	a0b180c4 <__bss_end+0x805cc0>
+a030c808:	00000000 	andeq	r0, r0, r0
+a030c80c:	73726966 	cmnvc	r2, #1671168	; 0x198000
+a030c810:	6c622074 	stcvsl	0, cr2, [r2], -#464
+a030c814:	206b636f 	rsbcs	r6, fp, pc, ror #6
+a030c818:	20746f6e 	rsbcss	r6, r4, lr, ror #30
+a030c81c:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
+a030c820:	00000a64 	andeq	r0, r0, r4, ror #20
+a030c824:	74726150 	ldrvcbt	r6, [r2], -#336
+a030c828:	6f697469 	swivs	0x00697469
+a030c82c:	6174206e 	cmnvs	r4, lr, rrx
+a030c830:	20656c62 	rsbcs	r6, r5, r2, ror #24
+a030c834:	20726f66 	rsbcss	r6, r2, r6, ror #30
+a030c838:	6b206425 	blvs	a0b258d4 <__bss_end+0x8134d0>
+a030c83c:	6c662042 	stcvsl	0, cr2, [r6], -#264
+a030c840:	20687361 	rsbcs	r7, r8, r1, ror #6
+a030c844:	78302040 	ldmvcda	r0!, {r6, sp}
+a030c848:	78383025 	ldmvcda	r8!, {r0, r2, r5, ip, sp}
+a030c84c:	00000a3a 	andeq	r0, r0, sl, lsr sl
+a030c850:	78302020 	ldmvcda	r0!, {r5, sp}
+a030c854:	78383025 	ldmvcda	r8!, {r0, r2, r5, ip, sp}
+a030c858:	30204020 	eorcc	r4, r0, r0, lsr #32
+a030c85c:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030c860:	25282078 	strcs	r2, [r8, -#120]!
+a030c864:	426b2064 	rsbmi	r2, fp, #100	; 0x64
+a030c868:	27203a29 	strcs	r3, [r0, -r9, lsr #20]!
+a030c86c:	0a277325 	beq	a0ce9508 <__bss_end+0x9d7104>
+a030c870:	00000000 	andeq	r0, r0, r0
+a030c874:	20202020 	eorcs	r2, r0, r0, lsr #32
+a030c878:	746e6f63 	strvcbt	r6, [lr], -#3939
+a030c87c:	736e6961 	cmnvc	lr, #1589248	; 0x184000
+a030c880:	72617020 	rsbvc	r7, r1, #32	; 0x20
+a030c884:	74656d61 	strvcbt	r6, [r5], -#3425
+a030c888:	62207265 	eorvs	r7, r0, #1342177286	; 0x50000006
+a030c88c:	6b636f6c 	blvs	a1be8644 <__bss_end+0x18d6240>
+a030c890:	00000a73 	andeq	r0, r0, r3, ror sl
+a030c894:	6f747561 	swivs	0x00747561
+a030c898:	6974616d 	ldmvsdb	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
+a030c89c:	6c6c6163 	stfvse	f6, [ip], -#396
+a030c8a0:	00002079 	andeq	r2, r0, r9, ror r0
+a030c8a4:	00000000 	andeq	r0, r0, r0
+a030c8a8:	20202020 	eorcs	r2, r0, r0, lsr #32
+a030c8ac:	6f6c7325 	swivs	0x006c7325
+a030c8b0:	61206461 	teqvs	r0, r1, ror #8
+a030c8b4:	78302074 	ldmvcda	r0!, {r2, r4, r5, r6, sp}
+a030c8b8:	78383025 	ldmvcda	r8!, {r0, r2, r5, ip, sp}
+a030c8bc:	0000000a 	andeq	r0, r0, sl
+a030c8c0:	20202020 	eorcs	r2, r0, r0, lsr #32
+a030c8c4:	72746e65 	rsbvcs	r6, r4, #1616	; 0x650
+a030c8c8:	6f702079 	swivs	0x00702079
+a030c8cc:	20746e69 	rsbcss	r6, r4, r9, ror #28
+a030c8d0:	30207461 	eorcc	r7, r0, r1, ror #8
+a030c8d4:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030c8d8:	00000078 	andeq	r0, r0, r8, ror r0
+a030c8dc:	7561202c 	strvcb	r2, [r1, -#44]!
+a030c8e0:	616d6f74 	cmnvs	sp, r4, ror pc
+a030c8e4:	61636974 	cmnvs	r3, r4, ror r9
+a030c8e8:	20796c6c 	rsbcss	r6, r9, ip, ror #24
+a030c8ec:	63657865 	cmnvs	r5, #6619136	; 0x650000
+a030c8f0:	0a657475 	beq	a1c69acc <__bss_end+0x19576c8>
+a030c8f4:	00000000 	andeq	r0, r0, r0
+a030c8f8:	0000000a 	andeq	r0, r0, sl
+a030c8fc:	20202020 	eorcs	r2, r0, r0, lsr #32
+a030c900:	746e6f63 	strvcbt	r6, [lr], -#3939
+a030c904:	736e6961 	cmnvc	lr, #1589248	; 0x184000
+a030c908:	46464a20 	strmib	r4, [r6], -r0, lsr #20
+a030c90c:	000a3253 	andeq	r3, sl, r3, asr r2
+a030c910:	20202020 	eorcs	r2, r0, r0, lsr #32
+a030c914:	746e6f63 	strvcbt	r6, [lr], -#3939
+a030c918:	736e6961 	cmnvc	lr, #1589248	; 0x184000
+a030c91c:	61726320 	cmnvs	r2, r0, lsr #6
+a030c920:	0a73666d 	beq	a1fe62dc <__bss_end+0x1cd3ed8>
+a030c924:	00000000 	andeq	r0, r0, r0
+a030c928:	62617470 	rsbvs	r7, r1, #1879048192	; 0x70000000
+a030c92c:	6d20656c 	cfstr32vs	mvfx6, [r0, -#432]!
+a030c930:	63696761 	cmnvs	r9, #25427968	; 0x1840000
+a030c934:	69616620 	stmvsdb	r1!, {r5, r9, sl, sp, lr}^
+a030c938:	2064656c 	rsbcs	r6, r4, ip, ror #10
+a030c93c:	30207461 	eorcc	r7, r0, r1, ror #8
+a030c940:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030c944:	00000a78 	andeq	r0, r0, r8, ror sl
+a030c948:	62617470 	rsbvs	r7, r1, #1879048192	; 0x70000000
+a030c94c:	3e2d656c 	cfsh64cc	mvdx6, mvdx13, #60
+a030c950:	7366666f 	cmnvc	r6, #116391936	; 0x6f00000
+a030c954:	3d207465 	cfstrscc	mvf7, [r0, -#404]!
+a030c958:	25783020 	ldrcsb	r3, [r8, -#32]!
+a030c95c:	0a583830 	beq	a191aa24 <__bss_end+0x1608620>
+a030c960:	00000000 	andeq	r0, r0, r0
+a030c964:	62617470 	rsbvs	r7, r1, #1879048192	; 0x70000000
+a030c968:	3e2d656c 	cfsh64cc	mvdx6, mvdx13, #60
+a030c96c:	657a6973 	ldrvsb	r6, [sl, -#2419]!
+a030c970:	30203d20 	eorcc	r3, r0, r0, lsr #26
+a030c974:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030c978:	00000a58 	andeq	r0, r0, r8, asr sl
+a030c97c:	62617470 	rsbvs	r7, r1, #1879048192	; 0x70000000
+a030c980:	6620656c 	strvst	r6, [r0], -ip, ror #10
+a030c984:	70757869 	rsbvcs	r7, r5, r9, ror #16
+a030c988:	756f6620 	strvcb	r6, [pc, #-1568]!	; a030c370 <__text_end+0x2c8>
+a030c98c:	6120646e 	teqvs	r0, lr, ror #8
+a030c990:	74696464 	strvcbt	r6, [r9], -#1124
+a030c994:	616e6f69 	cmnvs	lr, r9, ror #30
+a030c998:	6170206c 	cmnvs	r0, ip, rrx
+a030c99c:	20737472 	rsbcss	r7, r3, r2, ror r4
+a030c9a0:	65746661 	ldrvsb	r6, [r4, -#1633]!
+a030c9a4:	4c422072 	mcrrmi	0, 7, r2, r2, cr2
+a030c9a8:	505f424f 	subpls	r4, pc, pc, asr #4
+a030c9ac:	5f545241 	swipl	0x00545241
+a030c9b0:	5f5a4953 	swipl	0x005a4953
+a030c9b4:	4c4c5546 	mcrrmi	5, 4, r5, ip, cr6
+a030c9b8:	7a697320 	bvc	a1d69640 <__bss_end+0x1a5723c>
+a030c9bc:	00000a65 	andeq	r0, r0, r5, ror #20
+a030c9c0:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
+a030c9c4:	65642064 	strvsb	r2, [r4, -#100]!
+a030c9c8:	6c756166 	ldfvse	f6, [r5], -#408
+a030c9cc:	61702074 	cmnvs	r0, r4, ror r0
+a030c9d0:	74697472 	strvcbt	r7, [r9], -#1138
+a030c9d4:	206e6f69 	rsbcs	r6, lr, r9, ror #30
+a030c9d8:	6c626174 	stfvse	f6, [r2], -#464
+a030c9dc:	74612065 	strvcbt	r2, [r1], -#101
+a030c9e0:	25783020 	ldrcsb	r3, [r8, -#32]!
+a030c9e4:	0a783830 	beq	a211aaac <__bss_end+0x1e086a8>
+a030c9e8:	00000000 	andeq	r0, r0, r0
+a030c9ec:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
+a030c9f0:	6c662064 	stcvsl	0, cr2, [r6], -#400
+a030c9f4:	20687361 	rsbcs	r7, r8, r1, ror #6
+a030c9f8:	74726170 	ldrvcbt	r6, [r2], -#368
+a030c9fc:	6f697469 	swivs	0x00697469
+a030ca00:	6174206e 	cmnvs	r4, lr, rrx
+a030ca04:	20656c62 	rsbcs	r6, r5, r2, ror #24
+a030ca08:	30207461 	eorcc	r7, r0, r1, ror #8
+a030ca0c:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030ca10:	00000a78 	andeq	r0, r0, r8, ror sl
+a030ca14:	61766e69 	cmnvs	r6, r9, ror #28
+a030ca18:	2064696c 	rsbcs	r6, r4, ip, ror #18
+a030ca1c:	74726170 	ldrvcbt	r6, [r2], -#368
+a030ca20:	6f697469 	swivs	0x00697469
+a030ca24:	6174206e 	cmnvs	r4, lr, rrx
+a030ca28:	20656c62 	rsbcs	r6, r5, r2, ror #24
+a030ca2c:	6967616d 	stmvsdb	r7!, {r0, r2, r3, r5, r6, r8, sp, lr}^
+a030ca30:	00000a63 	andeq	r0, r0, r3, ror #20
+a030ca34:	6c756f63 	ldcvsl	15, cr6, [r5], -#396
+a030ca38:	6f6e2064 	swivs	0x006e2064
+a030ca3c:	69662074 	stmvsdb	r6!, {r2, r4, r5, r6, sp}^
+a030ca40:	70752078 	rsbvcs	r2, r5, r8, ror r0
+a030ca44:	72617020 	rsbvc	r7, r1, #32	; 0x20
+a030ca48:	69746974 	ldmvsdb	r4!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030ca4c:	74206e6f 	strvct	r6, [r0], -#3695
+a030ca50:	656c6261 	strvsb	r6, [ip, -#609]!
+a030ca54:	0000000a 	andeq	r0, r0, sl
+a030ca58:	72707470 	rsbvcs	r7, r0, #1879048192	; 0x70000000
+a030ca5c:	00746e69 	rsbeqs	r6, r4, r9, ror #28
+a030ca60:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030ca64:	746f6e20 	strvcbt	r6, [pc], #3616	; a030ca6c <__text_end+0x9c4>
+a030ca68:	776f6420 	strvcb	r6, [pc, -r0, lsr #8]!
+a030ca6c:	616f6c6e 	cmnvs	pc, lr, ror #24
+a030ca70:	0a646564 	beq	a1c26008 <__bss_end+0x1913c04>
+a030ca74:	00000000 	andeq	r0, r0, r0
+a030ca78:	74736552 	ldrvcbt	r6, [r3], -#1362
+a030ca7c:	69747261 	ldmvsdb	r4!, {r0, r5, r6, r9, ip, sp, lr}^
+a030ca80:	6220676e 	eorvs	r6, r0, #28835840	; 0x1b80000
+a030ca84:	20626f6c 	rsbcs	r6, r2, ip, ror #30
+a030ca88:	6d6f7266 	sfmvs	f7, 2, [pc, -#408]!
+a030ca8c:	4d415220 	sfmmi	f5, 2, [r1, -#128]
+a030ca90:	0a2e2e2e 	beq	a0e98350 <__bss_end+0xb85f4c>
+a030ca94:	0000000a 	andeq	r0, r0, sl
+a030ca98:	6c626572 	cfstr64vs	mvdx6, [r2], -#456
+a030ca9c:	0000626f 	andeq	r6, r0, pc, ror #4
+a030caa0:	0000002e 	andeq	r0, r0, lr, lsr #32
+a030caa4:	62616e55 	rsbvs	r6, r1, #1360	; 0x550
+a030caa8:	7420656c 	strvct	r6, [r0], -#1388
+a030caac:	6966206f 	stmvsdb	r6!, {r0, r1, r2, r3, r5, r6, sp}^
+a030cab0:	6b20646e 	blvs	a0b25c70 <__bss_end+0x81386c>
+a030cab4:	656e7265 	strvsb	r7, [lr, -#613]!
+a030cab8:	00000a6c 	andeq	r0, r0, ip, ror #20
+a030cabc:	64616f4c 	strvsbt	r6, [r1], -#3916
+a030cac0:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030cac4:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
+a030cac8:	66206c65 	strvst	r6, [r0], -r5, ror #24
+a030cacc:	206d6f72 	rsbcs	r6, sp, r2, ror pc
+a030cad0:	74726170 	ldrvcbt	r6, [r2], -#368
+a030cad4:	6f697469 	swivs	0x00697469
+a030cad8:	7325206e 	teqvc	r5, #110	; 0x6e
+a030cadc:	73252820 	teqvc	r5, #2097152	; 0x200000
+a030cae0:	2e2e2029 	cdpcs	0, 2, cr2, cr14, cr9, {1}
+a030cae4:	0000002e 	andeq	r0, r0, lr, lsr #32
+a030cae8:	6f6f622f 	swivs	0x006f622f
+a030caec:	696c2f74 	stmvsdb	ip!, {r2, r4, r5, r6, r8, r9, sl, fp, sp}^
+a030caf0:	0078756e 	rsbeqs	r7, r8, lr, ror #10
+a030caf4:	6f727265 	swivs	0x00727265
+a030caf8:	6f6c2072 	swivs	0x006c2072
+a030cafc:	6e696461 	cdpvs	4, 6, cr6, cr9, cr1, {3}
+a030cb00:	656b2067 	strvsb	r2, [fp, -#103]!
+a030cb04:	6c656e72 	stcvsl	14, cr6, [r5], -#456
+a030cb08:	00000a21 	andeq	r0, r0, r1, lsr #20
+a030cb0c:	64616f6c 	strvsbt	r6, [r1], -#3948
+a030cb10:	30206465 	eorcc	r6, r0, r5, ror #8
+a030cb14:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030cb18:	25282078 	strcs	r2, [r8, -#120]!
+a030cb1c:	62202964 	eorvs	r2, r0, #1638400	; 0x190000
+a030cb20:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
+a030cb24:	0000000a 	andeq	r0, r0, sl
+a030cb28:	616d497a 	cmnvs	sp, sl, ror r9
+a030cb2c:	00006567 	andeq	r6, r0, r7, ror #10
+a030cb30:	69616620 	stmvsdb	r1!, {r5, r9, sl, sp, lr}^
+a030cb34:	2064656c 	rsbcs	r6, r4, ip, ror #10
+a030cb38:	20726f66 	rsbcss	r6, r2, r6, ror #30
+a030cb3c:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
+a030cb40:	20737365 	rsbcss	r7, r3, r5, ror #6
+a030cb44:	00007830 	andeq	r7, r0, r0, lsr r8
+a030cb48:	74732020 	ldrvcbt	r2, [r3], -#32
+a030cb4c:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
+a030cb50:	30203d20 	eorcc	r3, r0, r0, lsr #26
+a030cb54:	00000078 	andeq	r0, r0, r8, ror r0
+a030cb58:	207b2020 	rsbcss	r2, fp, r0, lsr #32
+a030cb5c:	656d6974 	strvsb	r6, [sp, -#2420]!
+a030cb60:	2074756f 	rsbcss	r7, r4, pc, ror #10
+a030cb64:	63746566 	cmnvs	r4, #427819008	; 0x19800000
+a030cb68:	676e6968 	strvsb	r6, [lr, -r8, ror #18]!
+a030cb6c:	61747320 	cmnvs	r4, r0, lsr #6
+a030cb70:	20737574 	rsbcss	r7, r3, r4, ror r5
+a030cb74:	0000007d 	andeq	r0, r0, sp, ror r0
+a030cb78:	207b2020 	rsbcss	r2, fp, r0, lsr #32
+a030cb7c:	00000000 	andeq	r0, r0, r0
+a030cb80:	54415453 	strplb	r5, [r1], -#1107
+a030cb84:	525f5355 	subpls	r5, pc, #1409286145	; 0x54000001
+a030cb88:	59444145 	stmpldb	r4, {r0, r2, r6, r8, lr}^
+a030cb8c:	00000020 	andeq	r0, r0, r0, lsr #32
+a030cb90:	54415453 	strplb	r5, [r1], -#1107
+a030cb94:	455f5355 	ldrmib	r5, [pc, #-853]	; a030c847 <__text_end+0x79f>
+a030cb98:	45534152 	ldrmib	r4, [r3, -#338]
+a030cb9c:	5355535f 	cmppl	r5, #2080374785	; 0x7c000001
+a030cba0:	00002050 	andeq	r2, r0, r0, asr r0
+a030cba4:	54415453 	strplb	r5, [r1], -#1107
+a030cba8:	455f5355 	ldrmib	r5, [pc, #-853]	; a030c85b <__text_end+0x7b3>
+a030cbac:	45534152 	ldrmib	r4, [r3, -#338]
+a030cbb0:	5252455f 	subpls	r4, r2, #398458880	; 0x17c00000
+a030cbb4:	00000020 	andeq	r0, r0, r0, lsr #32
+a030cbb8:	54415453 	strplb	r5, [r1], -#1107
+a030cbbc:	505f5355 	subpls	r5, pc, r5, asr r3
+a030cbc0:	455f4d47 	ldrmib	r4, [pc, #-3399]	; a030be81 <led_off+0x19>
+a030cbc4:	00205252 	eoreq	r5, r0, r2, asr r2
+a030cbc8:	54415453 	strplb	r5, [r1], -#1107
+a030cbcc:	565f5355 	undefined
+a030cbd0:	4f4c5050 	swimi	0x004c5050
+a030cbd4:	52455f57 	subpl	r5, r5, #348	; 0x15c
+a030cbd8:	00002052 	andeq	r2, r0, r2, asr r0
+a030cbdc:	54415453 	strplb	r5, [r1], -#1107
+a030cbe0:	505f5355 	subpls	r5, pc, r5, asr r3
+a030cbe4:	535f4d47 	cmppl	pc, #4544	; 0x11c0
+a030cbe8:	20505355 	subcss	r5, r0, r5, asr r3
+a030cbec:	00000000 	andeq	r0, r0, r0
+a030cbf0:	54415453 	strplb	r5, [r1], -#1107
+a030cbf4:	4c5f5355 	mrrcmi	3, 5, r5, pc, cr5
+a030cbf8:	454b434f 	strmib	r4, [fp, -#847]
+a030cbfc:	52455f44 	subpl	r5, r5, #272	; 0x110
+a030cc00:	00002052 	andeq	r2, r0, r2, asr r0
+a030cc04:	00000a0a 	andeq	r0, r0, sl, lsl #20
+a030cc08:	655f6f64 	ldrvsb	r6, [pc, #-3940]	; a030bcac <pxa_serial_read+0x5c>
+a030cc0c:	65736172 	ldrvsb	r6, [r3, -#370]!
+a030cc10:	00000000 	andeq	r0, r0, r0
+a030cc14:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030cc18:	6f6c5f68 	swivs	0x006c5f68
+a030cc1c:	625f6b63 	subvss	r6, pc, #101376	; 0x18c00
+a030cc20:	6b636f6c 	blvs	a1be89d8 <__bss_end+0x18d65d4>
+a030cc24:	746e695f 	strvcbt	r6, [lr], -#2399
+a030cc28:	36316c65 	ldrcct	r6, [r1], -r5, ror #24
+a030cc2c:	00000000 	andeq	r0, r0, r0
+a030cc30:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030cc34:	6e755f68 	cdpvs	15, 7, cr5, cr5, cr8, {3}
+a030cc38:	6b636f6c 	blvs	a1be89f0 <__bss_end+0x18d65ec>
+a030cc3c:	6f6c625f 	swivs	0x006c625f
+a030cc40:	695f6b63 	ldmvsdb	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
+a030cc44:	6c65746e 	cfstrdvs	mvd7, [r5], -#440
+a030cc48:	00003631 	andeq	r3, r0, r1, lsr r6
+
+a030cc4c <mainstone_flash_descriptors>:
+a030cc4c:	00008000 	andeq	r8, r0, r0
+a030cc50:	0000001f 	andeq	r0, r0, pc, lsl r0
+a030cc54:	00000001 	andeq	r0, r0, r1
+a030cc58:	00001000 	andeq	r1, r0, r0
+a030cc5c:	00000008 	andeq	r0, r0, r8
+a030cc60:	00000001 	andeq	r0, r0, r1
+	...
+
+a030cc70 <Mainstone_default_partition_table>:
+a030cc70:	42445054 	submi	r5, r4, #84	; 0x54
+a030cc74:	0000003c 	andeq	r0, r0, ip, lsr r0
+a030cc78:	00000000 	andeq	r0, r0, r0
+a030cc7c:	00400000 	subeq	r0, r0, r0
+	...
+a030ccac:	42504531 	submis	r4, r0, #205520896	; 0xc400000
+a030ccb0:	0000003c 	andeq	r0, r0, ip, lsr r0
+a030ccb4:	00000000 	andeq	r0, r0, r0
+a030ccb8:	00040000 	andeq	r0, r4, r0
+a030ccbc:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+	...
+a030cce0:	a0200000 	eorge	r0, r0, r0
+a030cce4:	00000000 	andeq	r0, r0, r0
+a030cce8:	42504531 	submis	r4, r0, #205520896	; 0xc400000
+a030ccec:	0000003c 	andeq	r0, r0, ip, lsr r0
+a030ccf0:	00040000 	andeq	r0, r4, r0
+a030ccf4:	00000000 	andeq	r0, r0, r0
+a030ccf8:	61726170 	cmnvs	r2, r0, ror r1
+a030ccfc:	0000006d 	andeq	r0, r0, sp, rrx
+	...
+a030cd18:	00000001 	andeq	r0, r0, r1
+	...
+a030cd24:	42504531 	submis	r4, r0, #205520896	; 0xc400000
+a030cd28:	0000003c 	andeq	r0, r0, ip, lsr r0
+a030cd2c:	00040000 	andeq	r0, r4, r0
+a030cd30:	00200000 	eoreq	r0, r0, r0
+a030cd34:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
+a030cd38:	00006c65 	andeq	r6, r0, r5, ror #24
+	...
+a030cd54:	00000012 	andeq	r0, r0, r2, lsl r0
+a030cd58:	a0008000 	andge	r8, r0, r0
+a030cd5c:	a0008000 	andge	r8, r0, r0
+a030cd60:	42504533 	submis	r4, r0, #213909504	; 0xcc00000
+	...
+a030cd9c:	69727766 	ldmvsdb	r2!, {r1, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
+a030cda0:	00006574 	andeq	r6, r0, r4, ror r5
+a030cda4:	61726566 	cmnvs	r2, r6, ror #10
+a030cda8:	00006573 	andeq	r6, r0, r3, ror r5
+a030cdac:	206e7552 	rsbcs	r7, lr, r2, asr r5
+a030cdb0:	65646f4d 	strvsb	r6, [r4, -#3917]!
+a030cdb4:	6f6c6320 	swivs	0x006c6320
+a030cdb8:	203a6b63 	eorcss	r6, sl, r3, ror #22
+a030cdbc:	252e6425 	strcs	r6, [lr, -#1061]!
+a030cdc0:	4d643230 	sfmmi	f3, 2, [r4, -#192]!
+a030cdc4:	28207a48 	stmcsda	r0!, {r3, r6, r9, fp, ip, sp, lr}
+a030cdc8:	2964252a 	stmcsdb	r4!, {r1, r3, r5, r8, sl, sp}^
+a030cdcc:	0000000a 	andeq	r0, r0, sl
+a030cdd0:	00000000 	andeq	r0, r0, r0
+a030cdd4:	00006e69 	andeq	r6, r0, r9, ror #28
+a030cdd8:	62727554 	rsbvss	r7, r2, #352321536	; 0x15000000
+a030cddc:	6f4d206f 	swivs	0x004d206f
+a030cde0:	63206564 	teqvs	r0, #419430400	; 0x19000000
+a030cde4:	6b636f6c 	blvs	a1be8b9c <__bss_end+0x18d6798>
+a030cde8:	6425203a 	strvst	r2, [r5], -#58
+a030cdec:	3230252e 	eorccs	r2, r0, #192937984	; 0xb800000
+a030cdf0:	7a484d64 	bvc	a1520388 <__bss_end+0x120df84>
+a030cdf4:	252a2820 	strcs	r2, [sl, -#2080]!
+a030cdf8:	64252e64 	strvst	r2, [r5], -#3684
+a030cdfc:	7325202c 	teqvc	r5, #44	; 0x2c
+a030ce00:	69746361 	ldmvsdb	r4!, {r0, r5, r6, r8, r9, sp, lr}^
+a030ce04:	0a296576 	beq	a0d663e4 <__bss_end+0xa53fe0>
+a030ce08:	00000000 	andeq	r0, r0, r0
+a030ce0c:	6f6d654d 	swivs	0x006d654d
+a030ce10:	63207972 	teqvs	r0, #1867776	; 0x1c8000
+a030ce14:	6b636f6c 	blvs	a1be8bcc <__bss_end+0x18d67c8>
+a030ce18:	6425203a 	strvst	r2, [r5], -#58
+a030ce1c:	3230252e 	eorccs	r2, r0, #192937984	; 0xb800000
+a030ce20:	7a484d64 	bvc	a15203b8 <__bss_end+0x120dfb4>
+a030ce24:	6c412820 	mcrrvs	8, 2, r2, r1, cr0
+a030ce28:	64253d74 	strvst	r3, [r5], -#3444
+a030ce2c:	4453202c 	ldrmib	r2, [r3], -#44
+a030ce30:	5b4b4c43 	blpl	a15dff44 <__bss_end+0x12cdb40>
+a030ce34:	2f3d5d30 	swics	0x003d5d30
+a030ce38:	202c6425 	eorcs	r6, ip, r5, lsr #8
+a030ce3c:	4c434453 	mcrrmi	4, 5, r4, r3, cr3
+a030ce40:	5d315b4b 	fldmdbxpl	r1!, {d5-d41}
+a030ce44:	64252f3d 	strvst	r2, [r5], -#3901
+a030ce48:	00000a29 	andeq	r0, r0, r9, lsr #20
+a030ce4c:	74737953 	ldrvcbt	r7, [r3], -#2387
+a030ce50:	62206d65 	eorvs	r6, r0, #6464	; 0x1940
+a030ce54:	63207375 	teqvs	r0, #-738197503	; 0xd4000001
+a030ce58:	6b636f6c 	blvs	a1be8c10 <__bss_end+0x18d680c>
+a030ce5c:	6425203a 	strvst	r2, [r5], -#58
+a030ce60:	3230252e 	eorccs	r2, r0, #192937984	; 0xb800000
+a030ce64:	7a484d64 	bvc	a15203fc <__bss_end+0x120dff8>
+a030ce68:	00000a20 	andeq	r0, r0, r0, lsr #20
+a030ce6c:	636f6c63 	cmnvs	pc, #25344	; 0x6300
+a030ce70:	666e696b 	strvsbt	r6, [lr], -fp, ror #18
+a030ce74:	0000006f 	andeq	r0, r0, pc, rrx
+a030ce78:	6174530a 	cmnvs	r4, sl, lsl #6
+a030ce7c:	6e697472 	mcrvs	4, 3, r7, cr9, cr2, {3}
+a030ce80:	74612067 	strvcbt	r2, [r1], -#103
+a030ce84:	25783020 	ldrcsb	r3, [r8, -#32]!
+a030ce88:	2e783830 	mrccs	8, 3, r3, cr8, cr0, {1}
+a030ce8c:	0a0a2e2e 	beq	a059874c <__bss_end+0x286348>
+a030ce90:	00000000 	andeq	r0, r0, r0
+a030ce94:	6e6f440a 	cdpvs	4, 6, cr4, cr15, cr10, {0}
+a030ce98:	000a2e65 	andeq	r2, sl, r5, ror #28
+a030ce9c:	00006f67 	andeq	r6, r0, r7, ror #30
+a030cea0:	0000631b 	andeq	r6, r0, fp, lsl r3
+a030cea4:	6f626552 	swivs	0x00626552
+a030cea8:	6e69746f 	cdpvs	4, 6, cr7, cr9, cr15, {3}
+a030ceac:	2e2e2e67 	cdpcs	14, 2, cr2, cr14, cr7, {3}
+a030ceb0:	00000a0a 	andeq	r0, r0, sl, lsl #20
+a030ceb4:	61746f54 	cmnvs	r4, r4, asr pc
+a030ceb8:	6974206c 	ldmvsdb	r4!, {r2, r3, r5, r6, sp}^
+a030cebc:	203a656d 	eorcss	r6, sl, sp, ror #10
+a030cec0:	736d7525 	cmnvc	sp, #155189248	; 0x9400000
+a030cec4:	0000000a 	andeq	r0, r0, sl
+a030cec8:	6f676f42 	swivs	0x00676f42
+a030cecc:	7370696d 	cmnvc	r0, #1785856	; 0x1b4000
+a030ced0:	7525203a 	strvc	r2, [r5, -#58]!
+a030ced4:	0000000a 	andeq	r0, r0, sl
+a030ced8:	30257830 	eorcc	r7, r5, r0, lsr r8
+a030cedc:	00007838 	andeq	r7, r0, r8, lsr r8
+a030cee0:	3e2d2d20 	cdpcc	13, 2, cr2, cr13, cr0, {1}
+a030cee4:	25783020 	ldrcsb	r3, [r8, -#32]!
+a030cee8:	0a783830 	beq	a211afb0 <__bss_end+0x1e08bac>
+a030ceec:	00000000 	andeq	r0, r0, r0
+a030cef0:	76677261 	strvcbt	r7, [r7], -r1, ror #4
+a030cef4:	5d64255b 	cfstr64pl	mvdx2, [r4, -#364]!
+a030cef8:	27203d20 	strcs	r3, [r0, -r0, lsr #26]!
+a030cefc:	0a277325 	beq	a0ce9b98 <__bss_end+0x9d7794>
+a030cf00:	00000000 	andeq	r0, r0, r0
+a030cf04:	30257830 	eorcc	r7, r5, r0, lsr r8
+a030cf08:	203a7838 	eorcss	r7, sl, r8, lsr r8
+a030cf0c:	00000000 	andeq	r0, r0, r0
+a030cf10:	30257830 	eorcc	r7, r5, r0, lsr r8
+a030cf14:	00207838 	eoreq	r7, r0, r8, lsr r8
+a030cf18:	77206425 	strvc	r6, [r0, -r5, lsr #8]!
+a030cf1c:	7364726f 	cmnvc	r4, #-268435450	; 0xf0000006
+a030cf20:	706f6320 	rsbvc	r6, pc, r0, lsr #6
+a030cf24:	2e646569 	cdpcs	5, 6, cr6, cr4, cr9, {3}
+a030cf28:	0000000a 	andeq	r0, r0, sl
+a030cf2c:	30206325 	eorcc	r6, r0, r5, lsr #6
+a030cf30:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030cf34:	00000a78 	andeq	r0, r0, r8, ror sl
+a030cf38:	74697753 	strvcbt	r7, [r9], -#1875
+a030cf3c:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
+a030cf40:	6f742067 	swivs	0x00742067
+a030cf44:	00000020 	andeq	r0, r0, r0, lsr #32
+a030cf48:	75616220 	strvcb	r6, [r1, -#544]!
+a030cf4c:	00000a64 	andeq	r0, r0, r4, ror #20
+a030cf50:	74697753 	strvcbt	r7, [r9], -#1875
+a030cf54:	79206863 	stmvcdb	r0!, {r0, r1, r5, r6, fp, sp, lr}
+a030cf58:	2072756f 	rsbcss	r7, r2, pc, ror #10
+a030cf5c:	6d726574 	cfldr64vs	mvdx6, [r2, -#464]!
+a030cf60:	6c616e69 	stcvsl	14, cr6, [r1], -#420
+a030cf64:	756d6520 	strvcb	r6, [sp, -#1312]!
+a030cf68:	6f74616c 	swivs	0x0074616c
+a030cf6c:	6f742072 	swivs	0x00742072
+a030cf70:	65687420 	strvsb	r7, [r8, -#1056]!
+a030cf74:	6d617320 	stcvsl	3, cr7, [r1, -#128]!
+a030cf78:	70732065 	rsbvcs	r2, r3, r5, rrx
+a030cf7c:	20646565 	rsbcs	r6, r4, r5, ror #10
+a030cf80:	0a646e61 	beq	a1c2890c <__bss_end+0x1916508>
+a030cf84:	00000000 	andeq	r0, r0, r0
+a030cf88:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
+a030cf8c:	65732074 	ldrvsb	r2, [r3, -#116]!
+a030cf90:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
+a030cf94:	73752067 	cmnvc	r5, #103	; 0x67
+a030cf98:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030cf9c:	20656874 	rsbcs	r6, r5, r4, ror r8
+a030cfa0:	444f4d58 	strmib	r4, [pc], #3416	; a030cfa8 <Mainstone_default_partition_table+0x338>
+a030cfa4:	70204d45 	eorvc	r4, r0, r5, asr #26
+a030cfa8:	6f746f72 	swivs	0x00746f72
+a030cfac:	206c6f63 	rsbcs	r6, ip, r3, ror #30
+a030cfb0:	70657228 	rsbvc	r7, r5, r8, lsr #4
+a030cfb4:	65746165 	ldrvsb	r6, [r4, -#357]!
+a030cfb8:	585e2064 	ldmplda	lr, {r2, r5, r6, sp}^
+a030cfbc:	6f742029 	swivs	0x00742029
+a030cfc0:	69757120 	ldmvsdb	r5!, {r5, r8, ip, sp, lr}^
+a030cfc4:	000a2e74 	andeq	r2, sl, r4, ror lr
+a030cfc8:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030cfcc:	6c697720 	stcvsl	7, cr7, [r9], -#128
+a030cfd0:	7773206c 	ldrvcb	r2, [r3, -ip, rrx]!
+a030cfd4:	68637469 	stmvsda	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
+a030cfd8:	63616220 	cmnvs	r1, #2	; 0x2
+a030cfdc:	6f74206b 	swivs	0x0074206b
+a030cfe0:	00000020 	andeq	r0, r0, r0, lsr #32
+a030cfe4:	75616220 	strvcb	r6, [r1, -#544]!
+a030cfe8:	66612064 	strvsbt	r2, [r1], -r4, rrx
+a030cfec:	20726574 	rsbcss	r6, r2, r4, ror r5
+a030cff0:	444f4d58 	strmib	r4, [pc], #3416	; a030cff8 <Mainstone_default_partition_table+0x388>
+a030cff4:	73204d45 	teqvc	r0, #4416	; 0x1140
+a030cff8:	65636375 	strvsb	r6, [r3, -#885]!
+a030cffc:	20736465 	rsbcss	r6, r3, r5, ror #8
+a030d000:	7420726f 	strvct	r7, [r0], -#623
+a030d004:	73656d69 	cmnvc	r5, #6720	; 0x1a40
+a030d008:	74756f20 	ldrvcbt	r6, [r5], -#3872
+a030d00c:	00000a2e 	andeq	r0, r0, lr, lsr #20
+a030d010:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
+a030d014:	65732074 	ldrvsb	r2, [r3, -#116]!
+a030d018:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
+a030d01c:	73752067 	cmnvc	r5, #103	; 0x67
+a030d020:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030d024:	20656874 	rsbcs	r6, r5, r4, ror r8
+a030d028:	444f4d58 	strmib	r4, [pc], #3416	; a030d030 <Mainstone_default_partition_table+0x3c0>
+a030d02c:	70204d45 	eorvc	r4, r0, r5, asr #26
+a030d030:	6f746f72 	swivs	0x00746f72
+a030d034:	206c6f63 	rsbcs	r6, ip, r3, ror #30
+a030d038:	70657228 	rsbvc	r7, r5, r8, lsr #4
+a030d03c:	65746165 	ldrvsb	r6, [r4, -#357]!
+a030d040:	585e2064 	ldmplda	lr, {r2, r5, r6, sp}^
+a030d044:	206f7420 	rsbcs	r7, pc, r0, lsr #8
+a030d048:	74697571 	strvcbt	r7, [r9], -#1393
+a030d04c:	0a0a2e29 	beq	a05988f8 <__bss_end+0x2864f4>
+a030d050:	00000000 	andeq	r0, r0, r0
+a030d054:	00000a0a 	andeq	r0, r0, sl, lsl #20
+a030d058:	6c50280a 	mrrcvs	8, 0, r2, r0, cr10
+a030d05c:	65736165 	ldrvsb	r6, [r3, -#357]!
+a030d060:	69777320 	ldmvsdb	r7!, {r5, r8, r9, ip, sp, lr}^
+a030d064:	20686374 	rsbcs	r6, r8, r4, ror r3
+a030d068:	72756f79 	rsbvcs	r6, r5, #484	; 0x1e4
+a030d06c:	72657420 	rsbvc	r7, r5, #536870912	; 0x20000000
+a030d070:	616e696d 	cmnvs	lr, sp, ror #18
+a030d074:	6d65206c 	stcvsl	0, cr2, [r5, -#432]!
+a030d078:	74616c75 	strvcbt	r6, [r1], -#3189
+a030d07c:	6220726f 	eorvs	r7, r0, #-268435450	; 0xf0000006
+a030d080:	206b6361 	rsbcs	r6, fp, r1, ror #6
+a030d084:	00206f74 	eoreq	r6, r0, r4, ror pc
+a030d088:	75616220 	strvcb	r6, [r1, -#544]!
+a030d08c:	000a2964 	andeq	r2, sl, r4, ror #18
+a030d090:	65636552 	strvsb	r6, [r3, -#1362]!
+a030d094:	64657669 	strvsbt	r7, [r5], -#1641
+a030d098:	20692520 	rsbcs	r2, r9, r0, lsr #10
+a030d09c:	25783028 	ldrcsb	r3, [r8, -#40]!
+a030d0a0:	29783830 	ldmcsdb	r8!, {r4, r5, fp, ip, sp}^
+a030d0a4:	74796220 	ldrvcbt	r6, [r9], -#544
+a030d0a8:	00007365 	andeq	r7, r0, r5, ror #6
+a030d0ac:	30207461 	eorcc	r7, r0, r1, ror #8
+a030d0b0:	38302578 	ldmccda	r0!, {r3, r4, r5, r6, r8, sl, sp}
+a030d0b4:	00000078 	andeq	r0, r0, r8, ror r0
+a030d0b8:	0000000a 	andeq	r0, r0, sl
+a030d0bc:	706c6548 	rsbvc	r6, ip, r8, asr #10
+a030d0c0:	726f6620 	rsbvc	r6, pc, #33554432	; 0x2000000
+a030d0c4:	3a732520 	bcc	a1fd654c <__bss_end+0x1cc4148>
+a030d0c8:	73550a0a 	cmpvc	r5, #40960	; 0xa000
+a030d0cc:	3a656761 	bcc	a1c66e58 <__bss_end+0x1954a54>
+a030d0d0:	0a732520 	beq	a1fd6558 <__bss_end+0x1cc4154>
+a030d0d4:	00000000 	andeq	r0, r0, r0
+a030d0d8:	20656854 	rsbcs	r6, r5, r4, asr r8
+a030d0dc:	6c6c6f66 	stcvsl	15, cr6, [ip], -#408
+a030d0e0:	6e69776f 	cdpvs	7, 6, cr7, cr9, cr15, {3}
+a030d0e4:	6f632067 	swivs	0x00632067
+a030d0e8:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
+a030d0ec:	61207364 	teqvs	r0, r4, ror #6
+a030d0f0:	73206572 	teqvc	r0, #478150656	; 0x1c800000
+a030d0f4:	6f707075 	swivs	0x00707075
+a030d0f8:	64657472 	strvsbt	r7, [r5], -#1138
+a030d0fc:	00000a3a 	andeq	r0, r0, sl, lsr sl
+a030d100:	7325202a 	teqvc	r5, #42	; 0x2a
+a030d104:	0000000a 	andeq	r0, r0, sl
+a030d108:	20657355 	rsbcs	r7, r5, r5, asr r3
+a030d10c:	6c656822 	stcvsl	8, cr6, [r5], -#136
+a030d110:	6f632070 	swivs	0x00632070
+a030d114:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
+a030d118:	74202264 	strvct	r2, [r0], -#612
+a030d11c:	6567206f 	strvsb	r2, [r7, -#111]!
+a030d120:	65682074 	strvsb	r2, [r8, -#116]!
+a030d124:	6f20706c 	swivs	0x0020706c
+a030d128:	2061206e 	rsbcs	r2, r1, lr, rrx
+a030d12c:	63657073 	cmnvs	r5, #115	; 0x73
+a030d130:	63696669 	cmnvs	r9, #110100480	; 0x6900000
+a030d134:	6d6f6320 	stcvsl	3, cr6, [pc, -#128]!
+a030d138:	646e616d 	strvsbt	r6, [lr], -#365
+a030d13c:	0000000a 	andeq	r0, r0, sl
+a030d140:	706c6568 	rsbvc	r6, ip, r8, ror #10
+a030d144:	00000000 	andeq	r0, r0, r0
+a030d148:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030d14c:	0000203e 	andeq	r2, r0, lr, lsr r0
+a030d150:	00007325 	andeq	r7, r0, r5, lsr #6
+a030d154:	276e6163 	strcsb	r6, [lr, -r3, ror #2]!
+a030d158:	65722074 	ldrvsb	r2, [r2, -#116]!
+a030d15c:	63206461 	teqvs	r0, #1627389952	; 0x61000000
+a030d160:	616d6d6f 	cmnvs	sp, pc, ror #26
+a030d164:	0000646e 	andeq	r6, r0, lr, ror #8
+a030d168:	00082008 	andeq	r2, r8, r8
+a030d16c:	6b6e7528 	blvs	a1eaa614 <__bss_end+0x1b98210>
+a030d170:	6e776f6e 	cdpvs	15, 7, cr6, cr7, cr14, {3}
+a030d174:	00000029 	andeq	r0, r0, r9, lsr #32
+a030d178:	69256425 	stmvsdb	r5!, {r0, r2, r5, sl, sp, lr}
+a030d17c:	00000000 	andeq	r0, r0, r0
+a030d180:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030d184:	00000000 	andeq	r0, r0, r0
+a030d188:	61726170 	cmnvs	r2, r0, ror r1
+a030d18c:	0000006d 	andeq	r0, r0, sp, rrx
+a030d190:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
+a030d194:	00006c65 	andeq	r6, r0, r5, ror #24
+a030d198:	646d6172 	strvsbt	r6, [sp], -#370
+a030d19c:	006b7369 	rsbeq	r7, fp, r9, ror #6
+a030d1a0:	64616f4c 	strvsbt	r6, [r1], -#3916
+a030d1a4:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030d1a8:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030d1ac:	6f726620 	swivs	0x00726620
+a030d1b0:	6c66206d 	stcvsl	0, cr2, [r6], -#436
+a030d1b4:	20687361 	rsbcs	r7, r8, r1, ror #6
+a030d1b8:	00000000 	andeq	r0, r0, r0
+a030d1bc:	64616f4c 	strvsbt	r6, [r1], -#3916
+a030d1c0:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030d1c4:	61726170 	cmnvs	r2, r0, ror r1
+a030d1c8:	6574616d 	ldrvsb	r6, [r4, -#365]!
+a030d1cc:	6c622072 	stcvsl	0, cr2, [r2], -#456
+a030d1d0:	206b636f 	rsbcs	r6, fp, pc, ror #6
+a030d1d4:	6d6f7266 	sfmvs	f7, 2, [pc, -#408]!
+a030d1d8:	616c6620 	cmnvs	ip, r0, lsr #12
+a030d1dc:	00206873 	eoreq	r6, r0, r3, ror r8
+a030d1e0:	64616f4c 	strvsbt	r6, [r1], -#3916
+a030d1e4:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030d1e8:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
+a030d1ec:	66206c65 	strvst	r6, [r0], -r5, ror #24
+a030d1f0:	206d6f72 	rsbcs	r6, sp, r2, ror pc
+a030d1f4:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030d1f8:	00002068 	andeq	r2, r0, r8, rrx
+a030d1fc:	64616f4c 	strvsbt	r6, [r1], -#3916
+a030d200:	20676e69 	rsbcs	r6, r7, r9, ror #28
+a030d204:	646d6172 	strvsbt	r6, [sp], -#370
+a030d208:	206b7369 	rsbcs	r7, fp, r9, ror #6
+a030d20c:	6d6f7266 	sfmvs	f7, 2, [pc, -#408]!
+a030d210:	616c6620 	cmnvs	ip, r0, lsr #12
+a030d214:	00206873 	eoreq	r6, r0, r3, ror r8
+a030d218:	6e6f6420 	cdpvs	4, 6, cr6, cr15, cr0, {1}
+a030d21c:	00000a65 	andeq	r0, r0, r5, ror #20
+a030d220:	30303231 	eorccs	r3, r0, r1, lsr r2
+a030d224:	00000000 	andeq	r0, r0, r0
+a030d228:	00326b31 	eoreqs	r6, r2, r1, lsr fp
+a030d22c:	30303639 	eorccs	r3, r0, r9, lsr r6
+a030d230:	00000000 	andeq	r0, r0, r0
+a030d234:	00366b39 	eoreqs	r6, r6, r9, lsr fp
+a030d238:	30323931 	eorccs	r3, r2, r1, lsr r9
+a030d23c:	00000030 	andeq	r0, r0, r0, lsr r0
+a030d240:	326b3931 	rsbcc	r3, fp, #802816	; 0xc4000
+a030d244:	00000000 	andeq	r0, r0, r0
+a030d248:	30343833 	eorccs	r3, r4, r3, lsr r8
+a030d24c:	00000030 	andeq	r0, r0, r0, lsr r0
+a030d250:	346b3833 	strccbt	r3, [fp], -#2099
+a030d254:	00000000 	andeq	r0, r0, r0
+a030d258:	30363735 	eorccs	r3, r6, r5, lsr r7
+a030d25c:	00000030 	andeq	r0, r0, r0, lsr r0
+a030d260:	366b3735 	undefined
+a030d264:	00000000 	andeq	r0, r0, r0
+a030d268:	32353131 	eorccs	r3, r5, #1073741836	; 0x4000000c
+a030d26c:	00003030 	andeq	r3, r0, r0, lsr r0
+a030d270:	6b353131 	blvs	a105973c <__bss_end+0xd47338>
+a030d274:	00000032 	andeq	r0, r0, r2, lsr r0
+a030d278:	34303332 	ldrcct	r3, [r0], -#818
+a030d27c:	00003030 	andeq	r3, r0, r0, lsr r0
+a030d280:	6b303332 	blvs	a0f19f50 <__bss_end+0xc07b4c>
+a030d284:	00000034 	andeq	r0, r0, r4, lsr r0
+a030d288:	6e776f44 	cdpvs	15, 7, cr6, cr7, cr4, {2}
+a030d28c:	64616f6c 	strvsbt	r6, [r1], -#3948
+a030d290:	65707320 	ldrvsb	r7, [r0, -#800]!
+a030d294:	73206465 	teqvc	r0, #1694498816	; 0x65000000
+a030d298:	74207465 	strvct	r7, [r0], -#1125
+a030d29c:	0000206f 	andeq	r2, r0, pc, rrx
+a030d2a0:	75616220 	strvcb	r6, [r1, -#544]!
+a030d2a4:	00000a64 	andeq	r0, r0, r4, ror #20
+a030d2a8:	65657073 	strvsb	r7, [r5, -#115]!
+a030d2ac:	00000064 	andeq	r0, r0, r4, rrx
+a030d2b0:	65206f6e 	strvs	r6, [r0, -#3950]!
+a030d2b4:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
+a030d2b8:	00000000 	andeq	r0, r0, r0
+a030d2bc:	61766e69 	cmnvs	r6, r9, ror #28
+a030d2c0:	2064696c 	rsbcs	r6, r4, ip, ror #18
+a030d2c4:	75677261 	strvcb	r7, [r7, -#609]!
+a030d2c8:	746e656d 	strvcbt	r6, [lr], -#1389
+a030d2cc:	00000000 	andeq	r0, r0, r0
+a030d2d0:	20746f6e 	rsbcss	r6, r4, lr, ror #30
+a030d2d4:	756f6e65 	strvcb	r6, [pc, #-3685]!	; a030c477 <__text_end+0x3cf>
+a030d2d8:	70206867 	eorvc	r6, r0, r7, ror #16
+a030d2dc:	6d617261 	sfmvs	f7, 2, [r1, -#388]!
+a030d2e0:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
+a030d2e4:	00000073 	andeq	r0, r0, r3, ror r0
+a030d2e8:	6967616d 	stmvsdb	r7!, {r0, r2, r3, r5, r6, r8, sp, lr}^
+a030d2ec:	61762063 	cmnvs	r6, r3, rrx
+a030d2f0:	2065756c 	rsbcs	r7, r5, ip, ror #10
+a030d2f4:	6c696166 	stfvse	f6, [r9], -#408
+a030d2f8:	00006465 	andeq	r6, r0, r5, ror #8
+a030d2fc:	61766e69 	cmnvs	r6, r9, ror #28
+a030d300:	2064696c 	rsbcs	r6, r4, ip, ror #18
+a030d304:	6d6d6f63 	stcvsl	15, cr6, [sp, -#396]!
+a030d308:	00646e61 	rsbeq	r6, r4, r1, ror #28
+a030d30c:	20746f6e 	rsbcss	r6, r4, lr, ror #30
+a030d310:	756e2061 	strvcb	r2, [lr, -#97]!
+a030d314:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
+a030d318:	00000000 	andeq	r0, r0, r0
+a030d31c:	67696c61 	strvsb	r6, [r9, -r1, ror #24]!
+a030d320:	6e656d6e 	cdpvs	13, 6, cr6, cr5, cr14, {3}
+a030d324:	72652074 	rsbvc	r2, r5, #116	; 0x74
+a030d328:	00726f72 	rsbeqs	r6, r2, r2, ror pc
+a030d32c:	2074756f 	rsbcss	r7, r4, pc, ror #10
+a030d330:	7220666f 	eorvc	r6, r0, #116391936	; 0x6f00000
+a030d334:	65676e61 	strvsb	r6, [r7, -#3681]!
+a030d338:	00000000 	andeq	r0, r0, r0
+a030d33c:	656d6974 	strvsb	r6, [sp, -#2420]!
+a030d340:	2074756f 	rsbcss	r7, r4, pc, ror #10
+a030d344:	65637865 	strvsb	r7, [r3, -#2149]!
+a030d348:	64656465 	strvsbt	r6, [r5], -#1125
+a030d34c:	00000000 	andeq	r0, r0, r0
+a030d350:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
+a030d354:	69662074 	stmvsdb	r6!, {r2, r4, r5, r6, sp}^
+a030d358:	0000656c 	andeq	r6, r0, ip, ror #10
+a030d35c:	676e6f6c 	strvsb	r6, [lr, -ip, ror #30]!
+a030d360:	6c696620 	stcvsl	6, cr6, [r9], -#128
+a030d364:	00000065 	andeq	r0, r0, r5, rrx
+a030d368:	69626d61 	stmvsdb	r2!, {r0, r5, r6, r8, sl, fp, sp, lr}^
+a030d36c:	756f7567 	strvcb	r7, [pc, #-1383]!	; a030ce0d <Mainstone_default_partition_table+0x19d>
+a030d370:	6f632073 	swivs	0x00632073
+a030d374:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
+a030d378:	00000064 	andeq	r0, r0, r4, rrx
+a030d37c:	276e6163 	strcsb	r6, [lr, -r3, ror #2]!
+a030d380:	72652074 	rsbvc	r2, r5, #116	; 0x74
+a030d384:	20657361 	rsbcs	r7, r5, r1, ror #6
+a030d388:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030d38c:	6c622068 	stcvsl	0, cr2, [r2], -#416
+a030d390:	006b636f 	rsbeq	r6, fp, pc, ror #6
+a030d394:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030d398:	72702068 	rsbvcs	r2, r0, #104	; 0x68
+a030d39c:	6172676f 	cmnvs	r2, pc, ror #14
+a030d3a0:	7265206d 	rsbvc	r2, r5, #109	; 0x6d
+a030d3a4:	00726f72 	rsbeqs	r6, r2, r2, ror pc
+a030d3a8:	69726573 	ldmvsdb	r2!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
+a030d3ac:	70206c61 	eorvc	r6, r0, r1, ror #24
+a030d3b0:	2074726f 	rsbcss	r7, r4, pc, ror #4
+a030d3b4:	6f727265 	swivs	0x00727265
+a030d3b8:	00000072 	andeq	r0, r0, r2, ror r0
+a030d3bc:	6e6b6e75 	mcrvs	14, 3, r6, cr11, cr5, {3}
+a030d3c0:	206e776f 	rsbcs	r7, lr, pc, ror #14
+a030d3c4:	6f727265 	swivs	0x00727265
+a030d3c8:	00000072 	andeq	r0, r0, r2, ror r0
+a030d3cc:	202a2a2a 	eorcs	r2, sl, sl, lsr #20
+a030d3d0:	00000000 	andeq	r0, r0, r0
+a030d3d4:	00007325 	andeq	r7, r0, r5, lsr #6
+a030d3d8:	73257325 	teqvc	r5, #-1811939328	; 0x94000000
+a030d3dc:	00000000 	andeq	r0, r0, r0
+a030d3e0:	7325203a 	teqvc	r5, #58	; 0x3a
+a030d3e4:	0000000a 	andeq	r0, r0, sl
+a030d3e8:	0000000a 	andeq	r0, r0, sl
+
+a030d3ec <fillbuf>:
+a030d3ec:	00000080 	andeq	r0, r0, r0, lsl #1
+	...
+a030d42c:	00006325 	andeq	r6, r0, r5, lsr #6
+a030d430:	33323130 	teqcc	r2, #12	; 0xc
+a030d434:	37363534 	undefined
+a030d438:	62613938 	rsbvs	r3, r1, #917504	; 0xe0000
+a030d43c:	66656463 	strvsbt	r6, [r5], -r3, ror #8
+a030d440:	6a696867 	bvs	a1d675e4 <__bss_end+0x1a551e0>
+a030d444:	6e6d6c6b 	cdpvs	12, 6, cr6, cr13, cr11, {3}
+a030d448:	7271706f 	rsbvcs	r7, r1, #111	; 0x6f
+a030d44c:	76757473 	undefined
+a030d450:	7a797877 	bvc	a216b634 <__bss_end+0x1e59230>
+a030d454:	00000000 	andeq	r0, r0, r0
+a030d458:	33323130 	teqcc	r2, #12	; 0xc
+a030d45c:	37363534 	undefined
+a030d460:	42413938 	submi	r3, r1, #917504	; 0xe0000
+a030d464:	46454443 	strmib	r4, [r5], -r3, asr #8
+a030d468:	4a494847 	bmi	a155f58c <__bss_end+0x124d188>
+a030d46c:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
+a030d470:	5251504f 	subpls	r5, r1, #79	; 0x4f
+a030d474:	56555453 	undefined
+a030d478:	5a595857 	bpl	a19635dc <__bss_end+0x16511d8>
+a030d47c:	00000000 	andeq	r0, r0, r0
+a030d480:	4c554e3c 	mrrcmi	14, 3, r4, r5, cr12
+a030d484:	00003e4c 	andeq	r3, r0, ip, asr #28
+
+a030d488 <baud_rates>:
+a030d488:	000004b0 	streqh	r0, [r0], -r0
+a030d48c:	00000960 	andeq	r0, r0, r0, ror #18
+a030d490:	000012c0 	andeq	r1, r0, r0, asr #5
+a030d494:	00002580 	andeq	r2, r0, r0, lsl #11
+a030d498:	00004b00 	andeq	r4, r0, r0, lsl #22
+a030d49c:	00009600 	andeq	r9, r0, r0, lsl #12
+a030d4a0:	0000e100 	andeq	lr, r0, r0, lsl #2
+a030d4a4:	0001c200 	andeq	ip, r1, r0, lsl #4
+a030d4a8:	00038400 	andeq	r8, r3, r0, lsl #8
+a030d4ac:	00007830 	andeq	r7, r0, r0, lsr r8
+a030d4b0:	0000002e 	andeq	r0, r0, lr, lsr #32
+a030d4b4:	4d584946 	ldcmil	9, cr4, [r8, -#280]
+a030d4b8:	61203a45 	teqvs	r0, r5, asr #20
+a030d4bc:	50206464 	eorpl	r6, r0, r4, ror #8
+a030d4c0:	322d4158 	eorcc	r4, sp, #22	; 0x16
+a030d4c4:	72203035 	eorvc	r3, r0, #53	; 0x35
+a030d4c8:	6f6f6265 	swivs	0x006f6265
+a030d4cc:	6f632074 	swivs	0x00632074
+a030d4d0:	68206564 	stmvsda	r0!, {r2, r5, r6, r8, sl, sp, lr}
+a030d4d4:	21657265 	cmncs	r5, r5, ror #4
+a030d4d8:	0000000a 	andeq	r0, r0, sl
+a030d4dc:	6e696f47 	cdpvs	15, 6, cr6, cr9, cr7, {2}
+a030d4e0:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
+a030d4e4:	65206f74 	strvs	r6, [r0, -#3956]!
+a030d4e8:	656c646e 	strvsb	r6, [ip, -#1134]!
+a030d4ec:	6c207373 	stcvs	3, cr7, [r0], -#460
+a030d4f0:	2c706f6f 	ldccsl	15, cr6, [r0], -#444
+a030d4f4:	73756a20 	cmnvc	r5, #131072	; 0x20000
+a030d4f8:	73752074 	cmnvc	r5, #116	; 0x74
+a030d4fc:	6f792065 	swivs	0x00792065
+a030d500:	72207275 	eorvc	r7, r0, #1342177287	; 0x50000007
+a030d504:	74657365 	strvcbt	r7, [r5], -#869
+a030d508:	74756220 	ldrvcbt	r6, [r5], -#544
+a030d50c:	2e6e6f74 	mcrcs	15, 3, r6, cr14, cr4, {3}
+a030d510:	000a2e2e 	andeq	r2, sl, lr, lsr #28
+Disassembly of section .data:
+
+a030d514 <__data_start>:
+a030d514:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030d518:	627b2068 	rsbvss	r2, fp, #104	; 0x68
+a030d51c:	7c626f6c 	stcvcl	15, cr6, [r2], -#432
+a030d520:	61726170 	cmnvs	r2, r0, ror r1
+a030d524:	656b7c6d 	strvsb	r7, [fp, -#3181]!
+a030d528:	6c656e72 	stcvsl	14, cr6, [r5], -#456
+a030d52c:	6d61727c 	sfmvs	f7, 2, [r1, -#496]!
+a030d530:	6b736964 	blvs	a1fe7ac8 <__bss_end+0x1cd56c4>
+a030d534:	705b207d 	subvcs	r2, fp, sp, ror r0
+a030d538:	5d747261 	lfmpl	f7, 2, [r4, -#388]!
+a030d53c:	6972570a 	ldmvsdb	r2!, {r1, r3, r8, r9, sl, ip, lr}^
+a030d540:	3c206574 	cfstr32cc	mvfx6, [r0], -#464
+a030d544:	75677261 	strvcb	r7, [r7, -#609]!
+a030d548:	746e656d 	strvcbt	r6, [lr], -#1389
+a030d54c:	6d69203e 	stcvsl	0, cr2, [r9, -#248]!
+a030d550:	20656761 	rsbcs	r6, r5, r1, ror #14
+a030d554:	66206f74 	undefined
+a030d558:	6873616c 	ldmvsda	r3!, {r2, r3, r5, r6, r8, sp, lr}^
+a030d55c:	69737520 	ldmvsdb	r3!, {r5, r8, sl, ip, sp, lr}^
+a030d560:	7020676e 	eorvc	r6, r0, lr, ror #14
+a030d564:	69747261 	ldmvsdb	r4!, {r0, r5, r6, r9, ip, sp, lr}^
+a030d568:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
+a030d56c:	61703c20 	cmnvs	r0, r0, lsr #24
+a030d570:	2e3e7472 	mrccs	4, 1, r7, cr14, cr2, {3}
+a030d574:	20664920 	rsbcs	r4, r6, r0, lsr #18
+a030d578:	7261703c 	rsbvc	r7, r1, #60	; 0x3c
+a030d57c:	69203e74 	stmvsdb	r0!, {r2, r4, r5, r6, r9, sl, fp, ip, sp}
+a030d580:	6d6f2073 	stcvsl	0, cr2, [pc, -#460]!
+a030d584:	65747469 	ldrvsb	r7, [r4, -#1129]!
+a030d588:	73610a64 	cmnvc	r1, #409600	; 0x64000
+a030d58c:	656d7573 	strvsb	r7, [sp, -#1395]!
+a030d590:	61703c20 	cmnvs	r0, r0, lsr #24
+a030d594:	3d3e7472 	cfldrscc	mvf7, [lr, -#456]!
+a030d598:	72613c3d 	rsbvc	r3, r1, #15616	; 0x3d00
+a030d59c:	656d7567 	strvsb	r7, [sp, -#1383]!
+a030d5a0:	0a3e746e 	beq	a12aa760 <__bss_end+0xf9835c>
+a030d5a4:	00000000 	andeq	r0, r0, r0
+
+a030d5a8 <lockhelp>:
+a030d5a8:	6b636f6c 	blvs	a1be9360 <__bss_end+0x18d6f5c>
+a030d5ac:	72617020 	rsbvc	r7, r1, #32	; 0x20
+a030d5b0:	69746974 	ldmvsdb	r4!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030d5b4:	4c0a6e6f 	stcmi	14, cr6, [sl], -#444
+a030d5b8:	206b636f 	rsbcs	r6, fp, pc, ror #6
+a030d5bc:	7261703c 	rsbvc	r7, r1, #60	; 0x3c
+a030d5c0:	69746974 	ldmvsdb	r4!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030d5c4:	203e6e6f 	eorcss	r6, lr, pc, ror #28
+a030d5c8:	69676572 	stmvsdb	r7!, {r1, r4, r5, r6, r8, sl, sp, lr}^
+a030d5cc:	6f206e6f 	swivs	0x00206e6f
+a030d5d0:	6c662066 	stcvsl	0, cr2, [r6], -#408
+a030d5d4:	0a687361 	beq	a1d2a360 <__bss_end+0x1a17f5c>
+a030d5d8:	00000000 	andeq	r0, r0, r0
+
+a030d5dc <unlockhelp>:
+a030d5dc:	6f6c6e75 	swivs	0x006c6e75
+a030d5e0:	70206b63 	eorvc	r6, r0, r3, ror #22
+a030d5e4:	69747261 	ldmvsdb	r4!, {r0, r5, r6, r9, ip, sp, lr}^
+a030d5e8:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
+a030d5ec:	6c6e550a 	cfstr64vs	mvdx5, [lr], -#40
+a030d5f0:	206b636f 	rsbcs	r6, fp, pc, ror #6
+a030d5f4:	7261703c 	rsbvc	r7, r1, #60	; 0x3c
+a030d5f8:	69746974 	ldmvsdb	r4!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030d5fc:	203e6e6f 	eorcss	r6, lr, pc, ror #28
+a030d600:	69676572 	stmvsdb	r7!, {r1, r4, r5, r6, r8, sl, sp, lr}^
+a030d604:	6f206e6f 	swivs	0x00206e6f
+a030d608:	6c662066 	stcvsl	0, cr2, [r6], -#408
+a030d60c:	0a687361 	beq	a1d2a398 <__bss_end+0x1a17f94>
+a030d610:	00000000 	andeq	r0, r0, r0
+
+a030d614 <erasehelp>:
+a030d614:	73617265 	cmnvc	r1, #1342177286	; 0x50000006
+a030d618:	61702065 	cmnvs	r0, r5, rrx
+a030d61c:	74697472 	strvcbt	r7, [r9], -#1138
+a030d620:	0a6e6f69 	beq	a1ea93cc <__bss_end+0x1b96fc8>
+a030d624:	73617245 	cmnvc	r1, #1342177284	; 0x50000004
+a030d628:	703c2065 	eorvcs	r2, ip, r5, rrx
+a030d62c:	69747261 	ldmvsdb	r4!, {r0, r5, r6, r9, ip, sp, lr}^
+a030d630:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
+a030d634:	6572203e 	ldrvsb	r2, [r2, -#62]!
+a030d638:	6e6f6967 	cdpvs	9, 6, cr6, cr15, cr7, {3}
+a030d63c:	20666f20 	rsbcs	r6, r6, r0, lsr #30
+a030d640:	73616c66 	cmnvc	r1, #26112	; 0x6600
+a030d644:	00000a68 	andeq	r0, r0, r8, ror #20
+
+a030d648 <theKernel>:
+a030d648:	a0008000 	andge	r8, r0, r0
+
+a030d64c <boothelp>:
+a030d64c:	746f6f62 	strvcbt	r6, [pc], #3938	; a030d654 <boothelp+0x8>
+a030d650:	656b5b20 	strvsb	r5, [fp, -#2848]!
+a030d654:	6c656e72 	stcvsl	14, cr6, [r5], -#456
+a030d658:	74706f20 	ldrvcbt	r6, [r0], -#3872
+a030d65c:	736e6f69 	cmnvc	lr, #420	; 0x1a4
+a030d660:	6f420a5d 	swivs	0x00420a5d
+a030d664:	4c20746f 	cfstrsmi	mvf7, [r0], -#444
+a030d668:	78756e69 	ldmvcda	r5!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
+a030d66c:	74697720 	strvcbt	r7, [r9], -#1824
+a030d670:	706f2068 	rsbvc	r2, pc, r8, rrx
+a030d674:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
+a030d678:	6b206c61 	blvs	a0b28804 <__bss_end+0x816400>
+a030d67c:	656e7265 	strvsb	r7, [lr, -#613]!
+a030d680:	706f206c 	rsbvc	r2, pc, ip, rrx
+a030d684:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
+a030d688:	00000a73 	andeq	r0, r0, r3, ror sl
+
+a030d68c <kernelhelp>:
+a030d68c:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
+a030d690:	68206c65 	stmvsda	r0!, {r0, r2, r5, r6, sl, fp, sp, lr}
+a030d694:	615f7865 	cmpvs	pc, r5, ror #16
+a030d698:	430a7264 	tstmi	sl, #1073741830	; 0x40000006
+a030d69c:	676e6168 	strvsb	r6, [lr, -r8, ror #2]!
+a030d6a0:	68742065 	ldmvsda	r4!, {r0, r2, r5, r6, sp}^
+a030d6a4:	694c2065 	stmvsdb	ip, {r0, r2, r5, r6, sp}^
+a030d6a8:	2078756e 	rsbcss	r7, r8, lr, ror #10
+a030d6ac:	6e72656b 	cdpvs	5, 7, cr6, cr2, cr11, {3}
+a030d6b0:	62206c65 	eorvs	r6, r0, #25856	; 0x6500
+a030d6b4:	0a657361 	beq	a1c6a440 <__bss_end+0x195803c>
+a030d6b8:	00000000 	andeq	r0, r0, r0
+
+a030d6bc <version_str>:
+a030d6bc:	a030c494 	mlages	r0, r4, r4, ip
+
+a030d6c0 <statushelp>:
+a030d6c0:	74617473 	strvcbt	r7, [r1], -#1139
+a030d6c4:	440a7375 	strmi	r7, [sl], -#885
+a030d6c8:	6c707369 	ldcvsl	3, cr7, [r0], -#420
+a030d6cc:	63207961 	teqvs	r0, #1589248	; 0x184000
+a030d6d0:	65727275 	ldrvsb	r7, [r2, -#629]!
+a030d6d4:	7320746e 	teqvc	r0, #1845493760	; 0x6e000000
+a030d6d8:	75746174 	ldrvcb	r6, [r4, -#372]!
+a030d6dc:	00000a73 	andeq	r0, r0, r3, ror sl
+
+a030d6e0 <reloadhelp>:
+a030d6e0:	6f6c6572 	swivs	0x006c6572
+a030d6e4:	7b206461 	blvc	a0b26870 <__bss_end+0x81446c>
+a030d6e8:	626f6c62 	rsbvs	r6, pc, #25088	; 0x6200
+a030d6ec:	7261707c 	rsbvc	r7, r1, #124	; 0x7c
+a030d6f0:	6b7c6d61 	blvs	a2228c7c <__bss_end+0x1f16878>
+a030d6f4:	656e7265 	strvsb	r7, [lr, -#613]!
+a030d6f8:	61727c6c 	cmnvs	r2, ip, ror #24
+a030d6fc:	7369646d 	cmnvc	r9, #1828716544	; 0x6d000000
+a030d700:	520a7d6b 	andpl	r7, sl, #6848	; 0x1ac0
+a030d704:	616f6c65 	cmnvs	pc, r5, ror #24
+a030d708:	613c2064 	teqvs	ip, r4, rrx
+a030d70c:	6d756772 	ldcvsl	7, cr6, [r5, -#456]!
+a030d710:	3e746e65 	cdpcc	14, 7, cr6, cr4, cr5, {3}
+a030d714:	6f726620 	swivs	0x00726620
+a030d718:	6c66206d 	stcvsl	0, cr2, [r6], -#436
+a030d71c:	20687361 	rsbcs	r7, r8, r1, ror #6
+a030d720:	52206f74 	eorpl	r6, r0, #464	; 0x1d0
+a030d724:	000a4d41 	andeq	r4, sl, r1, asr #26
+
+a030d728 <ptprint_help>:
+a030d728:	72707470 	rsbvcs	r7, r0, #1879048192	; 0x70000000
+a030d72c:	0a746e69 	beq	a20290d8 <__bss_end+0x1d16cd4>
+a030d730:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
+a030d734:	6c662074 	stcvsl	0, cr2, [r6], -#464
+a030d738:	20687361 	rsbcs	r7, r8, r1, ror #6
+a030d73c:	74726170 	ldrvcbt	r6, [r2], -#368
+a030d740:	6f697469 	swivs	0x00697469
+a030d744:	6174206e 	cmnvs	r4, lr, rrx
+a030d748:	0a656c62 	beq	a1c688d8 <__bss_end+0x19564d4>
+a030d74c:	00000000 	andeq	r0, r0, r0
+
+a030d750 <reblobhelp>:
+a030d750:	6c626572 	cfstr64vs	mvdx6, [r2], -#456
+a030d754:	520a626f 	andpl	r6, sl, #-268435450	; 0xf0000006
+a030d758:	61747365 	cmnvs	r4, r5, ror #6
+a030d75c:	62207472 	eorvs	r7, r0, #1912602624	; 0x72000000
+a030d760:	20626f6c 	rsbcs	r6, r2, ip, ror #30
+a030d764:	6d6f7266 	sfmvs	f7, 2, [pc, -#408]!
+a030d768:	4d415220 	sfmmi	f5, 2, [r1, -#128]
+a030d76c:	0000000a 	andeq	r0, r0, sl
+
+a030d770 <known_loaders>:
+a030d770:	a030d77c 	eorges	sp, r0, ip, ror r7
+a030d774:	00000000 	andeq	r0, r0, r0
+
+a030d778 <fodder_ram_base>:
+a030d778:	c0f00000 	rscgts	r0, r0, r0
+
+a030d77c <zImage_load>:
+a030d77c:	a0303be0 	eorges	r3, r0, r0, ror #23
+a030d780:	a0303c28 	eorges	r3, r0, r8, lsr #24
+a030d784:	a030cb28 	eorges	ip, r0, r8, lsr #22
+
+a030d788 <intel16_flash_driver>:
+a030d788:	a0304080 	eorges	r4, r0, r0, lsl #1
+a030d78c:	a0304120 	eorges	r4, r0, r0, lsr #2
+a030d790:	a03041c8 	eorges	r4, r0, r8, asr #3
+a030d794:	a0304270 	eorges	r4, r0, r0, ror r2
+a030d798:	a0304318 	eorges	r4, r0, r8, lsl r3
+	...
+a030d7a4:	a030438c 	eorges	r4, r0, ip, lsl #7
+
+a030d7a8 <flashwritehelp>:
+a030d7a8:	69727766 	ldmvsdb	r2!, {r1, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
+a030d7ac:	73206574 	teqvc	r0, #486539264	; 0x1d000000
+a030d7b0:	64616372 	strvsbt	r6, [r1], -#882
+a030d7b4:	65642072 	strvsb	r2, [r4, -#114]!
+a030d7b8:	64617473 	strvsbt	r7, [r1], -#1139
+a030d7bc:	69732072 	ldmvsdb	r3!, {r1, r4, r5, r6, sp}^
+a030d7c0:	6228657a 	eorvs	r6, r8, #511705088	; 0x1e800000
+a030d7c4:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
+a030d7c8:	6c660a29 	stcvsl	10, cr0, [r6], -#164
+a030d7cc:	20687361 	rsbcs	r7, r8, r1, ror #6
+a030d7d0:	656d2061 	strvsb	r2, [sp, -#97]!
+a030d7d4:	79726f6d 	ldmvcdb	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
+a030d7d8:	67657220 	strvsb	r7, [r5, -r0, lsr #4]!
+a030d7dc:	0a6e6f69 	beq	a1ea9588 <__bss_end+0x1b97184>
+a030d7e0:	00000000 	andeq	r0, r0, r0
+
+a030d7e4 <flasherasehelp>:
+a030d7e4:	61726566 	cmnvs	r2, r6, ror #10
+a030d7e8:	61206573 	teqvs	r0, r3, ror r5
+a030d7ec:	73207264 	teqvc	r0, #1073741830	; 0x40000006
+a030d7f0:	28657a69 	stmcsda	r5!, {r0, r3, r5, r6, r9, fp, ip, sp, lr}^
+a030d7f4:	65747962 	ldrvsb	r7, [r4, -#2402]!
+a030d7f8:	650a2973 	strvs	r2, [sl, -#2419]
+a030d7fc:	65736172 	ldrvsb	r6, [r3, -#370]!
+a030d800:	66206120 	strvst	r6, [r0], -r0, lsr #2
+a030d804:	6873616c 	ldmvsda	r3!, {r2, r3, r5, r6, r8, sp, lr}^
+a030d808:	67657220 	strvsb	r7, [r5, -r0, lsr #4]!
+a030d80c:	0a6e6f69 	beq	a1ea95b8 <__bss_end+0x1b971b4>
+a030d810:	00000000 	andeq	r0, r0, r0
+
+a030d814 <clockinfohelp>:
+a030d814:	636f6c63 	cmnvs	pc, #25344	; 0x6300
+a030d818:	666e696b 	strvsbt	r6, [lr], -fp, ror #18
+a030d81c:	72700a6f 	rsbvcs	r0, r0, #454656	; 0x6f000
+a030d820:	20746e69 	rsbcss	r6, r4, r9, ror #28
+a030d824:	2074756f 	rsbcss	r7, r4, pc, ror #10
+a030d828:	636f7270 	cmnvs	pc, #7	; 0x7
+a030d82c:	6f737365 	swivs	0x00737365
+a030d830:	6c632072 	stcvsl	0, cr2, [r3], -#456
+a030d834:	206b636f 	rsbcs	r6, fp, pc, ror #6
+a030d838:	6f666e69 	swivs	0x00666e69
+a030d83c:	74616d72 	strvcbt	r6, [r1], -#3442
+a030d840:	0a6e6f69 	beq	a1ea95ec <__bss_end+0x1b971e8>
+a030d844:	00000000 	andeq	r0, r0, r0
+
+a030d848 <gohelp>:
+a030d848:	61206f67 	teqvs	r0, r7, ror #30
+a030d84c:	65726464 	ldrvsb	r6, [r2, -#1124]!
+a030d850:	530a7373 	tstpl	sl, #-872415231	; 0xcc000001
+a030d854:	74726174 	ldrvcbt	r6, [r2], -#372
+a030d858:	65786520 	ldrvsb	r6, [r8, -#1312]!
+a030d85c:	69747563 	ldmvsdb	r4!, {r0, r1, r5, r6, r8, sl, ip, sp, lr}^
+a030d860:	61206e6f 	teqvs	r0, pc, ror #28
+a030d864:	61242074 	teqvs	r4, r4, ror r0
+a030d868:	65726464 	ldrvsb	r6, [r2, -#1124]!
+a030d86c:	000a7373 	andeq	r7, sl, r3, ror r3
+
+a030d870 <reset_help>:
+a030d870:	65736572 	ldrvsb	r6, [r3, -#1394]!
+a030d874:	65520a74 	ldrvsb	r0, [r2, -#2676]
+a030d878:	20746573 	rsbcss	r6, r4, r3, ror r5
+a030d87c:	6d726574 	cfldr64vs	mvdx6, [r2, -#464]!
+a030d880:	6c616e69 	stcvsl	14, cr6, [r1], -#420
+a030d884:	0000000a 	andeq	r0, r0, sl
+
+a030d888 <reboot_help>:
+a030d888:	6f626572 	swivs	0x00626572
+a030d88c:	520a746f 	andpl	r7, sl, #1862270976	; 0x6f000000
+a030d890:	6f6f6265 	swivs	0x006f6265
+a030d894:	79732074 	ldmvcdb	r3!, {r2, r4, r5, r6, sp}^
+a030d898:	6d657473 	cfstrdvs	mvd7, [r5, -#460]!
+a030d89c:	0000000a 	andeq	r0, r0, sl
+
+a030d8a0 <bogomips_help>:
+a030d8a0:	6f676f62 	swivs	0x00676f62
+a030d8a4:	7370696d 	cmnvc	r0, #1785856	; 0x1b4000
+a030d8a8:	676f620a 	strvsb	r6, [pc, -sl, lsl #4]!
+a030d8ac:	70696d6f 	rsbvc	r6, r9, pc, ror #26
+a030d8b0:	69672073 	stmvsdb	r7!, {r0, r1, r4, r5, r6, sp}^
+a030d8b4:	20736576 	rsbcss	r6, r3, r6, ror r5
+a030d8b8:	6f422061 	swivs	0x00422061
+a030d8bc:	2c737567 	cfldr64cs	mvdx7, [r3], -#412
+a030d8c0:	61654d20 	cmnvs	r5, r0, lsr #26
+a030d8c4:	676e696e 	strvsb	r6, [lr, -lr, ror #18]!
+a030d8c8:	7373656c 	cmnvc	r3, #452984832	; 0x1b000000
+a030d8cc:	6e49202c 	cdpvs	0, 4, cr2, cr9, cr12, {1}
+a030d8d0:	61636964 	cmnvs	r3, r4, ror #18
+a030d8d4:	6e6f6974 	mcrvs	9, 3, r6, cr15, cr4, {3}
+a030d8d8:	20666f20 	rsbcs	r6, r6, r0, lsr #30
+a030d8dc:	636f7250 	cmnvs	pc, #5	; 0x5
+a030d8e0:	6f737365 	swivs	0x00737365
+a030d8e4:	65500a72 	ldrvsb	r0, [r0, -#2674]
+a030d8e8:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
+a030d8ec:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
+a030d8f0:	00000a65 	andeq	r0, r0, r5, ror #20
+
+a030d8f4 <call_help>:
+a030d8f4:	6c6c6163 	stfvse	f6, [ip], -#396
+a030d8f8:	64646120 	strvsbt	r6, [r4], -#288
+a030d8fc:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
+a030d900:	72615b20 	rsbvc	r5, r1, #32768	; 0x8000
+a030d904:	5b203067 	blpl	a0b19aa8 <__bss_end+0x8076a4>
+a030d908:	31677261 	cmncc	r7, r1, ror #4
+a030d90c:	72615b20 	rsbvc	r5, r1, #32768	; 0x8000
+a030d910:	5b203267 	blpl	a0b1a2b4 <__bss_end+0x807eb0>
+a030d914:	33677261 	cmncc	r7, #268435462	; 0x10000006
+a030d918:	5d5d5d5d 	ldcpll	13, cr5, [sp, -#372]
+a030d91c:	6c61430a 	stcvsl	3, cr4, [r1], -#40
+a030d920:	7566206c 	strvcb	r2, [r6, -#108]!
+a030d924:	6974636e 	ldmvsdb	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
+a030d928:	61206e6f 	teqvs	r0, pc, ror #28
+a030d92c:	613c2074 	teqvs	ip, r4, ror r0
+a030d930:	65726464 	ldrvsb	r6, [r2, -#1124]!
+a030d934:	203e7373 	eorcss	r7, lr, r3, ror r3
+a030d938:	68746977 	ldmvsda	r4!, {r0, r1, r2, r4, r5, r6, r8, fp, sp, lr}^
+a030d93c:	74706f20 	ldrvcbt	r6, [r0], -#3872
+a030d940:	616e6f69 	cmnvs	lr, r9, ror #30
+a030d944:	7261206c 	rsbvc	r2, r1, #108	; 0x6c
+a030d948:	656d7567 	strvsb	r7, [sp, -#1383]!
+a030d94c:	0a73746e 	beq	a1feab0c <__bss_end+0x1cd8708>
+a030d950:	00000000 	andeq	r0, r0, r0
+
+a030d954 <chgbit_help>:
+a030d954:	62676863 	rsbvs	r6, r7, #6488064	; 0x630000
+a030d958:	61207469 	teqvs	r0, r9, ror #8
+a030d95c:	65726464 	ldrvsb	r6, [r2, -#1124]!
+a030d960:	76207373 	undefined
+a030d964:	65756c61 	ldrvsb	r6, [r5, -#3169]!
+a030d968:	6e617b20 	cdpvs	11, 6, cr7, cr1, cr0, {1}
+a030d96c:	726f7c64 	rsbvc	r7, pc, #25600	; 0x6400
+a030d970:	726f787c 	rsbvc	r7, pc, #8126464	; 0x7c0000
+a030d974:	7465737c 	strvcbt	r7, [r5], -#892
+a030d978:	656c637c 	strvsb	r6, [ip, -#892]!
+a030d97c:	0a7d7261 	beq	a226a308 <__bss_end+0x1f57f04>
+a030d980:	00000000 	andeq	r0, r0, r0
+
+a030d984 <dummy_help>:
+a030d984:	6d6d7564 	cfstr64vs	mvdx7, [sp, -#400]!
+a030d988:	75440a79 	strvcb	r0, [r4, -#2681]
+a030d98c:	20796d6d 	rsbcss	r6, r9, sp, ror #26
+a030d990:	6d6d6f63 	stcvsl	15, cr6, [sp, -#396]!
+a030d994:	20646e61 	rsbcs	r6, r4, r1, ror #28
+a030d998:	74616874 	strvcbt	r6, [r1], -#2164
+a030d99c:	6c6e6f20 	stcvsl	15, cr6, [lr], -#128
+a030d9a0:	68732079 	ldmvsda	r3!, {r0, r3, r4, r5, r6, sp}^
+a030d9a4:	2073776f 	rsbcss	r7, r3, pc, ror #14
+a030d9a8:	206c6c61 	rsbcs	r6, ip, r1, ror #24
+a030d9ac:	75677261 	strvcb	r7, [r7, -#609]!
+a030d9b0:	746e656d 	strvcbt	r6, [lr], -#1389
+a030d9b4:	6e612073 	mcrvs	0, 3, r2, cr1, cr3, {3}
+a030d9b8:	65722064 	ldrvsb	r2, [r2, -#100]!
+a030d9bc:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
+a030d9c0:	00000a73 	andeq	r0, r0, r3, ror sl
+
+a030d9c4 <address.0>:
+a030d9c4:	00000000 	andeq	r0, r0, r0
+
+a030d9c8 <dump_help>:
+a030d9c8:	706d7564 	rsbvc	r7, sp, r4, ror #10
+a030d9cc:	64615b20 	strvsbt	r5, [r1], -#2848
+a030d9d0:	73657264 	cmnvc	r5, #1073741830	; 0x40000006
+a030d9d4:	655b2073 	ldrvsb	r2, [fp, -#115]
+a030d9d8:	6441646e 	strvsb	r6, [r1], -#1134
+a030d9dc:	73657264 	cmnvc	r5, #1073741830	; 0x40000006
+a030d9e0:	0a5d5d73 	beq	a1a64fb4 <__bss_end+0x1752bb0>
+a030d9e4:	00000000 	andeq	r0, r0, r0
+
+a030d9e8 <memcpy_help>:
+a030d9e8:	636d656d 	cmnvs	sp, #457179136	; 0x1b400000
+a030d9ec:	73207970 	teqvc	r0, #1835008	; 0x1c0000
+a030d9f0:	64206372 	strvst	r6, [r0], -#882
+a030d9f4:	6c207473 	cfstrsvs	mvf7, [r0], -#460
+a030d9f8:	630a6e65 	tstvs	sl, #1616	; 0x650
+a030d9fc:	2079706f 	rsbcss	r7, r9, pc, rrx
+a030da00:	206e656c 	rsbcs	r6, lr, ip, ror #10
+a030da04:	65747962 	ldrvsb	r7, [r4, -#2402]!
+a030da08:	72662073 	rsbvc	r2, r6, #115	; 0x73
+a030da0c:	73206d6f 	teqvc	r0, #7104	; 0x1bc0
+a030da10:	74206372 	strvct	r6, [r0], -#882
+a030da14:	7364206f 	cmnvc	r4, #111	; 0x6f
+a030da18:	00000a74 	andeq	r0, r0, r4, ror sl
+
+a030da1c <peek_help>:
+a030da1c:	6b656570 	blvs	a1c66fe4 <__bss_end+0x1954be0>
+a030da20:	64646120 	strvsbt	r6, [r4], -#288
+a030da24:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
+a030da28:	7c625b20 	stcvcl	11, cr5, [r2], -#128
+a030da2c:	5d777c68 	ldcpll	12, cr7, [r7, -#416]!
+a030da30:	3d20620a 	sfmcc	f6, 4, [r0, -#40]!
+a030da34:	74796220 	ldrvcbt	r6, [r9], -#544
+a030da38:	68202c65 	stmvsda	r0!, {r0, r2, r5, r6, sl, fp, sp}
+a030da3c:	68203d20 	stmvsda	r0!, {r5, r8, sl, fp, ip, sp}
+a030da40:	20666c61 	rsbcs	r6, r6, r1, ror #24
+a030da44:	64726f77 	ldrvsbt	r6, [r2], -#3959
+a030da48:	2077202c 	rsbcss	r2, r7, ip, lsr #32
+a030da4c:	6f77203d 	swivs	0x0077203d
+a030da50:	28206472 	stmcsda	r0!, {r1, r4, r5, r6, sl, sp, lr}
+a030da54:	61666564 	cmnvs	r6, r4, ror #10
+a030da58:	20746c75 	rsbcss	r6, r4, r5, ror ip
+a030da5c:	77207369 	strvc	r7, [r0, -r9, ror #6]!
+a030da60:	00000a29 	andeq	r0, r0, r9, lsr #20
+
+a030da64 <poke_help>:
+a030da64:	656b6f70 	strvsb	r6, [fp, -#3952]!
+a030da68:	64646120 	strvsbt	r6, [r4], -#288
+a030da6c:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
+a030da70:	6c617620 	stcvsl	6, cr7, [r1], -#128
+a030da74:	5b206575 	blpl	a0b27050 <__bss_end+0x814c4c>
+a030da78:	7c687c62 	stcvcl	12, cr7, [r8], -#392
+a030da7c:	620a5d77 	andvs	r5, sl, #7616	; 0x1dc0
+a030da80:	62203d20 	eorvs	r3, r0, #2048	; 0x800
+a030da84:	2c657479 	cfstrdcs	mvd7, [r5], -#484
+a030da88:	3d206820 	stccc	8, cr6, [r0, -#128]!
+a030da8c:	6c616820 	stcvsl	8, cr6, [r1], -#128
+a030da90:	6f772066 	swivs	0x00772066
+a030da94:	202c6472 	eorcs	r6, ip, r2, ror r4
+a030da98:	203d2077 	eorcss	r2, sp, r7, ror r0
+a030da9c:	64726f77 	ldrvsbt	r6, [r2], -#3959
+a030daa0:	65642820 	strvsb	r2, [r4, -#2080]!
+a030daa4:	6c756166 	ldfvse	f6, [r5], -#408
+a030daa8:	73692074 	cmnvc	r9, #116	; 0x74
+a030daac:	0a297720 	beq	a0d6b734 <__bss_end+0xa59330>
+a030dab0:	00000000 	andeq	r0, r0, r0
+
+a030dab4 <md5chk_help>:
+a030dab4:	6335646d 	teqvs	r5, #1828716544	; 0x6d000000
+a030dab8:	61206b68 	teqvs	r0, r8, ror #22
+a030dabc:	73657264 	cmnvc	r5, #1073741830	; 0x40000006
+a030dac0:	656c2073 	strvsb	r2, [ip, -#115]!
+a030dac4:	630a0a6e 	tstvs	sl, #450560	; 0x6e000
+a030dac8:	75636c61 	strvcb	r6, [r3, -#3169]!
+a030dacc:	6574616c 	ldrvsb	r6, [r4, -#364]!
+a030dad0:	35646d20 	strccb	r6, [r4, -#3360]!
+a030dad4:	73616820 	cmnvc	r1, #2097152	; 0x200000
+a030dad8:	61762068 	cmnvs	r6, r8, rrx
+a030dadc:	0a65756c 	beq	a1c6b094 <__bss_end+0x1958c90>
+a030dae0:	00000000 	andeq	r0, r0, r0
+
+a030dae4 <xdownload_help>:
+a030dae4:	776f6478 	undefined
+a030dae8:	616f6c6e 	cmnvs	pc, lr, ror #24
+a030daec:	627b2064 	rsbvss	r2, fp, #100	; 0x64
+a030daf0:	7c626f6c 	stcvcl	15, cr6, [r2], -#432
+a030daf4:	61726170 	cmnvs	r2, r0, ror r1
+a030daf8:	656b7c6d 	strvsb	r7, [fp, -#3181]!
+a030dafc:	6c656e72 	stcvsl	14, cr6, [r5], -#456
+a030db00:	6d61727c 	sfmvs	f7, 2, [r1, -#496]!
+a030db04:	6b736964 	blvs	a1fe809c <__bss_end+0x1cd5c98>
+a030db08:	6f440a7d 	swivs	0x00440a7d
+a030db0c:	6f6c6e77 	swivs	0x006c6e77
+a030db10:	3c206461 	cfstrscc	mvf6, [r0], -#388
+a030db14:	75677261 	strvcb	r7, [r7, -#609]!
+a030db18:	746e656d 	strvcbt	r6, [lr], -#1389
+a030db1c:	6d69203e 	stcvsl	0, cr2, [r9, -#248]!
+a030db20:	20656761 	rsbcs	r6, r5, r1, ror #14
+a030db24:	52206f74 	eorpl	r6, r0, #464	; 0x1d0
+a030db28:	75204d41 	strvc	r4, [r0, -#3393]!
+a030db2c:	676e6973 	undefined
+a030db30:	6f6d7820 	swivs	0x006d7820
+a030db34:	0a6d6564 	beq	a1e670cc <__bss_end+0x1b54cc8>
+a030db38:	00000000 	andeq	r0, r0, r0
+
+a030db3c <helphelp>:
+a030db3c:	706c6568 	rsbvc	r6, ip, r8, ror #10
+a030db40:	6f635b20 	swivs	0x00635b20
+a030db44:	6e616d6d 	cdpvs	13, 6, cr6, cr1, cr13, {3}
+a030db48:	470a5d64 	strmi	r5, [sl, -r4, ror #26]
+a030db4c:	68207465 	stmvsda	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}
+a030db50:	20706c65 	rsbcss	r6, r0, r5, ror #24
+a030db54:	5b206e6f 	blpl	a0b29518 <__bss_end+0x817114>
+a030db58:	6d6d6f63 	stcvsl	15, cr6, [sp, -#396]!
+a030db5c:	5d646e61 	stcpll	14, cr6, [r4, -#388]!
+a030db60:	726f202c 	rsbvc	r2, pc, #44	; 0x2c
+a030db64:	6c206120 	stfvss	f6, [r0], -#128
+a030db68:	20747369 	rsbcss	r7, r4, r9, ror #6
+a030db6c:	7320666f 	teqvc	r0, #116391936	; 0x6f00000
+a030db70:	6f707075 	swivs	0x00707075
+a030db74:	64657472 	strvsbt	r7, [r5], -#1138
+a030db78:	6d6f6320 	stcvsl	3, cr6, [pc, -#128]!
+a030db7c:	646e616d 	strvsbt	r6, [lr], -#365
+a030db80:	66692073 	undefined
+a030db84:	63206120 	teqvs	r0, #8	; 0x8
+a030db88:	616d6d6f 	cmnvs	sp, pc, ror #26
+a030db8c:	6920646e 	stmvsdb	r0!, {r1, r2, r3, r5, r6, sl, sp, lr}
+a030db90:	6d6f2073 	stcvsl	0, cr2, [pc, -#460]!
+a030db94:	65747469 	ldrvsb	r7, [r4, -#1129]!
+a030db98:	000a2e64 	andeq	r2, sl, r4, ror #28
+
+a030db9c <speedhelp>:
+a030db9c:	65657073 	strvsb	r7, [r5, -#115]!
+a030dba0:	625b2064 	subvss	r2, fp, #100	; 0x64
+a030dba4:	72647561 	rsbvc	r7, r4, #406847488	; 0x18400000
+a030dba8:	5d657461 	cfstrdpl	mvd7, [r5, -#388]!
+a030dbac:	7465530a 	strvcbt	r5, [r5], -#778
+a030dbb0:	776f6420 	strvcb	r6, [pc, -r0, lsr #8]!
+a030dbb4:	616f6c6e 	cmnvs	pc, lr, ror #24
+a030dbb8:	70732064 	rsbvcs	r2, r3, r4, rrx
+a030dbbc:	2e646565 	cdpcs	5, 6, cr6, cr4, cr5, {3}
+a030dbc0:	6c615620 	stcvsl	6, cr5, [r1], -#128
+a030dbc4:	62206469 	eorvs	r6, r0, #1761607680	; 0x69000000
+a030dbc8:	72647561 	rsbvc	r7, r4, #406847488	; 0x18400000
+a030dbcc:	73657461 	cmnvc	r5, #1627389952	; 0x61000000
+a030dbd0:	65726120 	ldrvsb	r6, [r2, -#288]!
+a030dbd4:	32310a3a 	eorccs	r0, r1, #237568	; 0x3a000
+a030dbd8:	202c3030 	eorcs	r3, ip, r0, lsr r0
+a030dbdc:	30303639 	eorccs	r3, r0, r9, lsr r6
+a030dbe0:	3931202c 	ldmccdb	r1!, {r2, r3, r5, sp}
+a030dbe4:	2c303032 	ldccs	0, cr3, [r0], -#200
+a030dbe8:	34383320 	ldrcct	r3, [r8], -#800
+a030dbec:	202c3030 	eorcs	r3, ip, r0, lsr r0
+a030dbf0:	30363735 	eorccs	r3, r6, r5, lsr r7
+a030dbf4:	31202c30 	teqcc	r0, r0, lsr ip
+a030dbf8:	30323531 	eorccs	r3, r2, r1, lsr r5
+a030dbfc:	32202c30 	eorcc	r2, r0, #12288	; 0x3000
+a030dc00:	30343033 	eorccs	r3, r4, r3, lsr r0
+a030dc04:	200a2c30 	andcs	r2, sl, r0, lsr ip
+a030dc08:	2c326b31 	ldccs	11, cr6, [r2], -#196
+a030dc0c:	6b392020 	blvs	a1155c94 <__bss_end+0xe43890>
+a030dc10:	20202c36 	eorcs	r2, r0, r6, lsr ip
+a030dc14:	326b3931 	rsbcc	r3, fp, #802816	; 0xc4000
+a030dc18:	3320202c 	teqcc	r0, #44	; 0x2c
+a030dc1c:	2c346b38 	ldccs	11, cr6, [r4], -#224
+a030dc20:	37352020 	ldrcc	r2, [r5, -r0, lsr #32]!
+a030dc24:	202c366b 	eorcs	r3, ip, fp, ror #12
+a030dc28:	35313120 	ldrcc	r3, [r1, -#288]!
+a030dc2c:	202c326b 	eorcs	r3, ip, fp, ror #4
+a030dc30:	30333220 	eorccs	r3, r3, r0, lsr #4
+a030dc34:	000a346b 	andeq	r3, sl, fp, ror #8
+
+a030dc38 <error_strings>:
+a030dc38:	a030d2b0 	ldrgeh	sp, [r0], -r0
+a030dc3c:	a030d2bc 	ldrgeh	sp, [r0], -ip
+a030dc40:	a030d2d0 	ldrgesb	sp, [r0], -r0
+a030dc44:	a030d2e8 	eorges	sp, r0, r8, ror #5
+a030dc48:	a030d2fc 	ldrgesh	sp, [r0], -ip
+a030dc4c:	a030d30c 	eorges	sp, r0, ip, lsl #6
+a030dc50:	a030d31c 	eorges	sp, r0, ip, lsl r3
+a030dc54:	a030d32c 	eorges	sp, r0, ip, lsr #6
+a030dc58:	a030d33c 	eorges	sp, r0, ip, lsr r3
+a030dc5c:	a030d350 	eorges	sp, r0, r0, asr r3
+a030dc60:	a030d35c 	eorges	sp, r0, ip, asr r3
+a030dc64:	a030d368 	eorges	sp, r0, r8, ror #6
+a030dc68:	a030d37c 	eorges	sp, r0, ip, ror r3
+a030dc6c:	a030d394 	mlages	r0, r4, r3, sp
+a030dc70:	a030d3a8 	eorges	sp, r0, r8, lsr #7
+
+a030dc74 <unknown>:
+a030dc74:	a030d3bc 	ldrgeh	sp, [r0], -ip
+
+a030dc78 <errprefix>:
+a030dc78:	a030d3cc 	eorges	sp, r0, ip, asr #7
+
+a030dc7c <hwaddress>:
+a030dc7c:	05040302 	streq	r0, [r4, -#770]
+a030dc80:	00000706 	andeq	r0, r0, r6, lsl #14
+
+a030dc84 <pxa_reboot_driver>:
+a030dc84:	a030b9b0 	ldrgeh	fp, [r0], -r0
+
+a030dc88 <pxa_serial_driver>:
+a030dc88:	a030ba88 	eorges	fp, r0, r8, lsl #21
+a030dc8c:	a030bc50 	eorges	fp, r0, r0, asr ip
+a030dc90:	a030bcb0 	ldrgeh	fp, [r0], -r0
+a030dc94:	a030bbe8 	eorges	fp, r0, r8, ror #23
+a030dc98:	a030b9dc 	ldrgesb	fp, [r0], -ip
+a030dc9c:	a030ba54 	eorges	fp, r0, r4, asr sl
+
+a030dca0 <intelarm_timer_driver>:
+a030dca0:	a030bcfc 	ldrgesh	fp, [r0], -ip
+a030dca4:	a030bd60 	eorges	fp, r0, r0, ror #26
+a030dca8:	a030bd80 	eorges	fp, r0, r0, lsl #27
+a030dcac:	a030bda4 	eorges	fp, r0, r4, lsr #27
+a030dcb0:	00384000 	eoreqs	r4, r8, r0
+Disassembly of section .commandlist:
+
+a030dcb4 <__commandlist_start>:
+a030dcb4:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dcb8:	a030c0a8 	eorges	ip, r0, r8, lsr #1
+a030dcbc:	a030d870 	eorges	sp, r0, r0, ror r8
+a030dcc0:	a0305320 	eorges	r5, r0, r0, lsr #6
+a030dcc4:	00000000 	andeq	r0, r0, r0
+
+a030dcc8 <__command_reboot_cmd>:
+a030dcc8:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dccc:	a030c0b0 	ldrgeh	ip, [r0], -r0
+a030dcd0:	a030d888 	eorges	sp, r0, r8, lsl #17
+a030dcd4:	a030539c 	mlages	r0, ip, r3, r5
+a030dcd8:	00000000 	andeq	r0, r0, r0
+
+a030dcdc <__command_bogomips_cmd>:
+a030dcdc:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dce0:	a030c0b8 	ldrgeh	ip, [r0], -r8
+a030dce4:	a030d8a0 	eorges	sp, r0, r0, lsr #17
+a030dce8:	a03053d4 	ldrgesb	r5, [r0], -r4
+a030dcec:	00000000 	andeq	r0, r0, r0
+
+a030dcf0 <__command_call_cmd>:
+a030dcf0:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dcf4:	a030c0c4 	eorges	ip, r0, r4, asr #1
+a030dcf8:	a030d8f4 	ldrgesh	sp, [r0], -r4
+a030dcfc:	a03054d0 	ldrgesb	r5, [r0], -r0
+a030dd00:	00000000 	andeq	r0, r0, r0
+
+a030dd04 <__command_chgbit_cmd>:
+a030dd04:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dd08:	a030c0cc 	eorges	ip, r0, ip, asr #1
+a030dd0c:	a030d954 	eorges	sp, r0, r4, asr r9
+a030dd10:	a03056d8 	ldrgesb	r5, [r0], -r8
+a030dd14:	00000000 	andeq	r0, r0, r0
+
+a030dd18 <__command_dummy_cmd>:
+a030dd18:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dd1c:	a030c0d4 	ldrgesb	ip, [r0], -r4
+a030dd20:	a030d984 	eorges	sp, r0, r4, lsl #19
+a030dd24:	a03058ec 	eorges	r5, r0, ip, ror #17
+a030dd28:	00000000 	andeq	r0, r0, r0
+
+a030dd2c <__command_dump_cmd>:
+a030dd2c:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dd30:	a030c0dc 	ldrgesb	ip, [r0], -ip
+a030dd34:	a030d9c8 	eorges	sp, r0, r8, asr #19
+a030dd38:	a0305960 	eorges	r5, r0, r0, ror #18
+a030dd3c:	00000000 	andeq	r0, r0, r0
+
+a030dd40 <__command_md5chk_cmd>:
+a030dd40:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dd44:	a030c0e4 	eorges	ip, r0, r4, ror #1
+a030dd48:	a030dab4 	ldrgeh	sp, [r0], -r4
+a030dd4c:	a03060f0 	ldrgesh	r6, [r0], -r0
+a030dd50:	00000000 	andeq	r0, r0, r0
+
+a030dd54 <__command_memcpy_cmd>:
+a030dd54:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dd58:	a030c0ec 	eorges	ip, r0, ip, ror #1
+a030dd5c:	a030d9e8 	eorges	sp, r0, r8, ror #19
+a030dd60:	a0305b94 	mlages	r0, r4, fp, r5
+a030dd64:	00000000 	andeq	r0, r0, r0
+
+a030dd68 <__command_poke_cmd>:
+a030dd68:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dd6c:	a030c0f4 	ldrgesh	ip, [r0], -r4
+a030dd70:	a030da64 	eorges	sp, r0, r4, ror #20
+a030dd74:	a0305ef0 	ldrgesh	r5, [r0], -r0
+a030dd78:	00000000 	andeq	r0, r0, r0
+
+a030dd7c <__command_peek_cmd>:
+a030dd7c:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dd80:	a030c0fc 	ldrgesh	ip, [r0], -ip
+a030dd84:	a030da1c 	eorges	sp, r0, ip, lsl sl
+a030dd88:	a0305d14 	eorges	r5, r0, r4, lsl sp
+a030dd8c:	00000000 	andeq	r0, r0, r0
+
+a030dd90 <__command_xdownload_cmd>:
+a030dd90:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dd94:	a030c104 	eorges	ip, r0, r4, lsl #2
+a030dd98:	a030dae4 	eorges	sp, r0, r4, ror #21
+a030dd9c:	a03061dc 	ldrgesb	r6, [r0], -ip
+a030dda0:	00000000 	andeq	r0, r0, r0
+
+a030dda4 <__command_Flash>:
+a030dda4:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dda8:	a030c3dc 	ldrgesb	ip, [r0], -ip
+a030ddac:	a030d514 	eorges	sp, r0, r4, lsl r5
+a030ddb0:	a0301634 	eorges	r1, r0, r4, lsr r6
+a030ddb4:	00000000 	andeq	r0, r0, r0
+
+a030ddb8 <__command_Lock>:
+a030ddb8:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030ddbc:	a030c3e4 	eorges	ip, r0, r4, ror #7
+a030ddc0:	a030d5a8 	eorges	sp, r0, r8, lsr #11
+a030ddc4:	a0301924 	eorges	r1, r0, r4, lsr #18
+a030ddc8:	00000000 	andeq	r0, r0, r0
+
+a030ddcc <__command_Unlock>:
+a030ddcc:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030ddd0:	a030c3ec 	eorges	ip, r0, ip, ror #7
+a030ddd4:	a030d5dc 	ldrgesb	sp, [r0], -ip
+a030ddd8:	a0301a48 	eorges	r1, r0, r8, asr #20
+a030dddc:	00000000 	andeq	r0, r0, r0
+
+a030dde0 <__command_Erase>:
+a030dde0:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dde4:	a030c3f4 	ldrgesh	ip, [r0], -r4
+a030dde8:	a030d614 	eorges	sp, r0, r4, lsl r6
+a030ddec:	a0301b6c 	eorges	r1, r0, ip, ror #22
+a030ddf0:	00000000 	andeq	r0, r0, r0
+
+a030ddf4 <__command_boot_linux>:
+a030ddf4:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030ddf8:	a030c46c 	eorges	ip, r0, ip, ror #8
+a030ddfc:	a030d64c 	eorges	sp, r0, ip, asr #12
+a030de00:	a0301ca8 	eorges	r1, r0, r8, lsr #25
+a030de04:	00000000 	andeq	r0, r0, r0
+
+a030de08 <__command_cmd_kernel>:
+a030de08:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030de0c:	a030c48c 	eorges	ip, r0, ip, lsl #9
+a030de10:	a030d68c 	eorges	sp, r0, ip, lsl #13
+a030de14:	a0301d54 	eorges	r1, r0, r4, asr sp
+a030de18:	00000000 	andeq	r0, r0, r0
+
+a030de1c <__command_PrintStatus>:
+a030de1c:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030de20:	a030c740 	eorges	ip, r0, r0, asr #14
+a030de24:	a030d6c0 	eorges	sp, r0, r0, asr #13
+a030de28:	a03025d8 	ldrgesb	r2, [r0], -r8
+a030de2c:	00000000 	andeq	r0, r0, r0
+
+a030de30 <__command_Reload>:
+a030de30:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030de34:	a030c748 	eorges	ip, r0, r8, asr #14
+a030de38:	a030d6e0 	eorges	sp, r0, r0, ror #13
+a030de3c:	a030276c 	eorges	r2, r0, ip, ror #14
+a030de40:	00000000 	andeq	r0, r0, r0
+
+a030de44 <__command_ptprint>:
+a030de44:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030de48:	a030ca58 	eorges	ip, r0, r8, asr sl
+a030de4c:	a030d728 	eorges	sp, r0, r8, lsr #14
+a030de50:	a030397c 	eorges	r3, r0, ip, ror r9
+a030de54:	00000000 	andeq	r0, r0, r0
+
+a030de58 <__command_reblob>:
+a030de58:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030de5c:	a030ca98 	mlages	r0, r8, sl, ip
+a030de60:	a030d750 	eorges	sp, r0, r0, asr r7
+a030de64:	a03039ac 	eorges	r3, r0, ip, lsr #19
+a030de68:	00000000 	andeq	r0, r0, r0
+
+a030de6c <__command_cmd_flash_write>:
+a030de6c:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030de70:	a030cd9c 	mlages	r0, ip, sp, ip
+a030de74:	a030d7a8 	eorges	sp, r0, r8, lsr #15
+a030de78:	a03046b4 	ldrgeh	r4, [r0], -r4
+a030de7c:	00000000 	andeq	r0, r0, r0
+
+a030de80 <__command_cmd_flash_erase>:
+a030de80:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030de84:	a030cda4 	eorges	ip, r0, r4, lsr #27
+a030de88:	a030d7e4 	eorges	sp, r0, r4, ror #15
+a030de8c:	a03047dc 	ldrgesb	r4, [r0], -ip
+a030de90:	00000000 	andeq	r0, r0, r0
+
+a030de94 <__command_cmd_clock_info>:
+a030de94:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030de98:	a030ce6c 	eorges	ip, r0, ip, ror #28
+a030de9c:	a030d814 	eorges	sp, r0, r4, lsl r8
+a030dea0:	a03048bc 	ldrgeh	r4, [r0], -ip
+a030dea4:	00000000 	andeq	r0, r0, r0
+
+a030dea8 <__command_cmd_go>:
+a030dea8:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030deac:	a030ce9c 	mlages	r0, ip, lr, ip
+a030deb0:	a030d848 	eorges	sp, r0, r8, asr #16
+a030deb4:	a0304cc4 	eorges	r4, r0, r4, asr #25
+a030deb8:	00000000 	andeq	r0, r0, r0
+
+a030debc <__command_help>:
+a030debc:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030dec0:	a030d140 	eorges	sp, r0, r0, asr #2
+a030dec4:	a030db3c 	eorges	sp, r0, ip, lsr fp
+a030dec8:	a03067ec 	eorges	r6, r0, ip, ror #15
+a030decc:	00000000 	andeq	r0, r0, r0
+
+a030ded0 <__command_SetDownloadSpeed>:
+a030ded0:	436d6420 	cmnmi	sp, #536870912	; 0x20000000
+a030ded4:	a030d2a8 	eorges	sp, r0, r8, lsr #5
+a030ded8:	a030db9c 	mlages	r0, ip, fp, sp
+a030dedc:	a0306fcc 	eorges	r6, r0, ip, asr #31
+a030dee0:	00000000 	andeq	r0, r0, r0
+Disassembly of section .initlist:
+
+a030dee4 <__initlist_start>:
+a030dee4:	496e6974 	stmmidb	lr!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030dee8:	a03005b4 	ldrgeh	r0, [r0], -r4
+a030deec:	00000029 	andeq	r0, r0, r9, lsr #32
+
+a030def0 <__init_serial_default_init>:
+a030def0:	496e6974 	stmmidb	lr!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030def4:	a0301c90 	mlages	r0, r0, ip, r1
+a030def8:	0000000a 	andeq	r0, r0, sl
+
+a030defc <__init_enable_icache>:
+a030defc:	496e6974 	stmmidb	lr!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030df00:	a03076b4 	ldrgeh	r7, [r0], -r4
+a030df04:	0000000a 	andeq	r0, r0, sl
+
+a030df08 <__init_timer_init>:
+a030df08:	496e6974 	stmmidb	lr!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030df0c:	a030b6bc 	ldrgeh	fp, [r0], -ip
+a030df10:	0000001e 	andeq	r0, r0, lr, lsl r0
+
+a030df14 <__init_ptable_init>:
+a030df14:	496e6974 	stmmidb	lr!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030df18:	a03034e8 	eorges	r3, r0, r8, ror #9
+a030df1c:	0000002a 	andeq	r0, r0, sl, lsr #32
+
+a030df20 <__init_mainstone_init_hardware>:
+a030df20:	496e6974 	stmmidb	lr!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030df24:	a030461c 	eorges	r4, r0, ip, lsl r6
+a030df28:	00000000 	andeq	r0, r0, r0
+
+a030df2c <__init_init_commands>:
+a030df2c:	496e6974 	stmmidb	lr!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030df30:	a0306410 	eorges	r6, r0, r0, lsl r4
+a030df34:	00000028 	andeq	r0, r0, r8, lsr #32
+
+a030df38 <__init_ether_init>:
+a030df38:	496e6974 	stmmidb	lr!, {r2, r4, r5, r6, r8, fp, sp, lr}^
+a030df3c:	a0307490 	mlages	r0, r0, r4, r7
+a030df40:	0000001e 	andeq	r0, r0, lr, lsl r0
+Disassembly of section .exitlist:
+
+a030df44 <__exitlist_start>:
+a030df44:	45786974 	ldrmib	r6, [r8, -#2420]!
+a030df48:	a03076d0 	ldrgesb	r7, [r0], -r0
+a030df4c:	0000000a 	andeq	r0, r0, sl
+Disassembly of section .ptaglist:
+
+a030df50 <__ptagtable_begin>:
+a030df50:	32d27009 	sbcccs	r7, r2, #9	; 0x9
+a030df54:	a0302b8c 	eorges	r2, r0, ip, lsl #23
+
+a030df58 <__ptagtable_parse_ptag_ramdisk>:
+a030df58:	32d2700a 	sbcccs	r7, r2, #10	; 0xa
+a030df5c:	a0302bcc 	eorges	r2, r0, ip, asr #23
+
+a030df60 <__ptagtable_parse_ptag_bootdelay>:
+a030df60:	32d2700b 	sbcccs	r7, r2, #11	; 0xb
+a030df64:	a0302c04 	eorges	r2, r0, r4, lsl #24
+
+a030df68 <__ptagtable_parse_ptag_cmdline>:
+a030df68:	32d2700c 	sbcccs	r7, r2, #12	; 0xc
+a030df6c:	a0302c38 	eorges	r2, r0, r8, lsr ip
+
+a030df70 <__ptagtable_parse_ptag_baud>:
+a030df70:	32d2700d 	sbcccs	r7, r2, #13	; 0xd
+a030df74:	a0302c74 	eorges	r2, r0, r4, ror ip
+
+a030df78 <__ptagtable_parse_ptag_hwaddr>:
+a030df78:	32d2700f 	sbcccs	r7, r2, #15	; 0xf
+a030df7c:	a0302ca8 	eorges	r2, r0, r8, lsr #25
Index: build_tree/bootLoader/src/blob/start.S
diff -u build_tree/bootLoader/src/blob/start.S:1.1.1.2 build_tree/bootLoader/src/blob/start.S:1.1.1.3
--- build_tree/bootLoader/src/blob/start.S:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/start.S	Fri Nov  9 10:37:08 2007
@@ -42,7 +42,6 @@
 
 #include <blob/arch.h>
 
-
 .text
 
 /* Jump vector table as in table 3.1 in [1] */
@@ -57,6 +56,7 @@
 	b	irq
 	b	fiq
 
+
 /* some defines to make life easier */
 BLOB_START:	.word	BLOB_ABS_BASE_ADDR
 piggy_start:	.word	__piggy_start
@@ -65,11 +65,13 @@
 
 .globl normal_boot
 normal_boot:
+
 	/* check the first 1MB of BLOB_START in increments of 4k */
 	mov		r7, #0x1000
 	mov		r6, r7, lsl #8	/* 4KB << 8 = 1MB */
 	ldr		r5, BLOB_START
 
+
 mem_test_loop:
 	mov		r0, r5
 	bl		testram
@@ -80,6 +82,7 @@
 	subs	r6, r6, r7
 	bne		mem_test_loop
 
+
 relocate:
 	/* relocate the second stage loader */
 	adr	r1, _start
@@ -95,6 +98,7 @@
 	 * r1 = target address
 	 * r2 = source end address
 	 */
+
 copy_loop:
 	ldmia	r0!, {r3-r10}
 	stmia	r1!, {r3-r10}
@@ -112,4 +116,3 @@
 	 * loop. FIXME! -- erik 
 	 */
 	b	endless_loop
-
Index: build_tree/bootLoader/src/blob/start.S.memcopy
diff -u /dev/null build_tree/bootLoader/src/blob/start.S.memcopy:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/blob/start.S.memcopy	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,165 @@
+/*
+ * start.S: blob start code
+ *
+ * Copyright (C) 1999 2000 2001 2002 Erik Mouw (J.A.K.Mouw@its.tudelft.nl) and
+ *                     Jan-Derk Bakker (J.D.Bakker@its.tudelft.nl)
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ */
+/*
+ * This is the blob start code. The SA-1100 jumps to address 0x00000000
+ * after a reset. We put a single branch code at this position which jumps
+ * to a safe region to do the actual setup. All other vectors just point
+ * to an endless loop for the moment.
+ *
+ * Documentation:
+ * [1] Intel Corporation, "Intel StrongARM SA-1100 Microprocessor
+ *     Developer's Manual", April 1999
+ * [2] S. Furber, "ARM System Architecture", Addison Wesley Longman
+ *     Ltd., Essex, England, 1996.
+ * [3] Intel Corporation, "Intel StrongARM SA-1110 Microprocessor
+ *     Advanced Developer's manual", December 1999
+ */
+
+.ident "$Id: start.S,v 1.12 2003/08/06 22:55:41 abz Exp $"
+
+.include  "xlli/mainstone/xlli_Bulverde_defs.inc"                 @ Bulverde specific include file
+.include  "xlli/mainstone/xlli_Mainstone_defs.inc"                @ Mainstone specific include file
+
+
+#include <blob/config.h>
+
+#include <blob/arch.h>
+
+.text
+
+/* Jump vector table as in table 3.1 in [1] */
+.globl _start
+_start:
+	b	reset
+	b	undefined_instruction
+	b	software_interrupt
+	b	prefetch_abort
+	b	data_abort
+	b	not_used
+	b	irq
+	b	fiq
+
+/* some defines to make life easier */
+BLOB_START:	.word	BLOB_ABS_BASE_ADDR
+piggy_start:	.word	__piggy_start
+piggy_end:	.word	__piggy_end
+.align
+
+.globl normal_boot
+normal_boot:
+
+	/* relocate the second stage loader */
+
+/*	adr	r1, _start
+
+	ldr	r0, piggy_start
+	add	r0, r0, r1
+	ldr	r2, piggy_end
+	add	r2, r2, r1
+
+	ldr	r1, BLOB_START
+*/
+
+	/* r0 = source address
+	 * r1 = target address
+	 * r2 = source end address
+	 */
+
+/* copy_loop:
+	ldmia	r0!, {r3-r10}
+	stmia	r1!, {r3-r10}
+	cmp	r0, r2
+	ble	copy_loop
+
+*/
+
+/*  Copy Flash to SDRAM at 0xA0000000 */
+
+	mov		r1, #0
+	ldr		r3,	=piggy_end
+	ldr		r2, =BLOB_START
+here1:
+	ldr		r4,	[r1], #4
+	str		r4, [r2], #4
+	cmp		r1,	r3
+	bne		here1
+
+/* Output a character  'C' */
+	ldr	r0,	=STUART_PHYSICAL_BASE
+	ldr r2, =0x43
+	bl	xlli_PUTchar
+
+/* Verify the copy was OK  */
+
+	mov		r6, #0
+	ldr		r3,	=piggy_end
+	ldr		r7, =BLOB_START
+here2:
+	ldr		r4,	[r6], #4
+	ldr		r5, [r7], #4
+
+/* Output a character  'Q' */
+	ldr	r0,	=STUART_PHYSICAL_BASE
+	ldr r2, =0x51
+	bl	xlli_PUTchar
+	
+	cmp		r4,	r5
+	bne		mem_fail
+	cmp		r6,	r7
+	bne		here2
+
+/*	Didn't make is this far so comment out this
+bl		xlli_initPageTable */
+
+/* Output a character  'D' */
+	ldr	r0,	=STUART_PHYSICAL_BASE
+	ldr r2, =0x44
+	bl	xlli_PUTchar
+
+	/* blob is copied to ram, so jump to it */
+	ldr	r0, BLOB_START
+	mov	pc, r0
+
+
+mem_fail:
+
+/* Output a character  'F' */
+	ldr	r0,	=STUART_PHYSICAL_BASE
+	ldr r2, =0x46
+	bl	xlli_PUTchar
+spin:
+	b	spin
+
+
+endless_loop:
+	/* either the second stage loader returned, or we got here from
+	 * mem_test_loop. both is bad, and we really want to toggle a
+	 * GPIO line or so. for the time being we just do an endless
+	 * loop. FIXME! -- erik 
+	 */
+
+/* Output a character  'E' */
+	ldr	r0,	=STUART_PHYSICAL_BASE
+	ldr r2, =0x45
+	bl	xlli_PUTchar
+	b	spin
+
Index: build_tree/bootLoader/src/blob/strata.c
diff -u build_tree/bootLoader/src/blob/strata.c:1.1.1.1 build_tree/bootLoader/src/blob/strata.c:1.1.1.2
--- build_tree/bootLoader/src/blob/strata.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/strata.c	Fri Nov  9 10:37:08 2007
@@ -49,9 +49,14 @@
 #define L_bottom_128  { {0,   4, 16 * 1024}, {0x010000,127, 64 * 1024}, }
 #define L_bottom_256  { {0,   4, 16 * 1024}, {0x010000,255, 64 * 1024}, }
 
+/* C3 */
+#define C_32  { {0,  31, 32*1024}, }
+
+
 static struct flash_chip chips_table[]=
 {
 	/* base, buswidth, id, type, region_num, regions */
+	{ 0, 0, 0x88C4, 16, STRATA_J3,  1, C_32  }, /* LC 32Mbit, Bottom */
 	{ 0, 0, 0x0016, 16, STRATA_J3,  1, J_32  }, /* J3, 32Mbit */
 	{ 0, 0, 0x0017, 16, STRATA_J3,  1, J_64  }, /* J3, 64Mbit */ 
 	{ 0, 0, 0x0018, 16, STRATA_J3,  1, J_128 }, /* J3, 128bit */
Index: build_tree/bootLoader/src/blob/testmem.S
diff -u build_tree/bootLoader/src/blob/testmem.S:1.1.1.2 build_tree/bootLoader/src/blob/testmem.S:1.1.1.3
--- build_tree/bootLoader/src/blob/testmem.S:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/testmem.S	Fri Nov  9 10:37:08 2007
@@ -35,6 +35,7 @@
 	@ returns r0 = 0 - ram present, r0 = 1 - no ram
 	@ clobbers r1 - r4
 testram:
+
         ldmia   r0, {r1, r2}	@ store current value in r1 and r2
         mov	r3, #0x55	@ write 0x55 to first word
         mov     r4, #0xaa	@ 0xaa to second
Index: build_tree/bootLoader/src/blob/trampoline.S
diff -u build_tree/bootLoader/src/blob/trampoline.S:1.1.1.1 build_tree/bootLoader/src/blob/trampoline.S:1.1.1.2
--- build_tree/bootLoader/src/blob/trampoline.S:1.1.1.1	Thu Nov  8 14:15:45 2007
+++ build_tree/bootLoader/src/blob/trampoline.S	Fri Nov  9 10:37:08 2007
@@ -25,10 +25,16 @@
 # include <blob/config.h>
 #endif
 
+#include <blob/arch.h>
+.include  "xlli/mainstone/bbu_Bulverde_defs.inc"
+
 .text
 
+.align 
+
 .globl _trampoline
 _trampoline:
+
 	/* clear the BSS section */
 	ldr	r1, bss_start
 	ldr	r0, bss_end
@@ -46,13 +52,12 @@
 	/* setup the stack pointer */
 	ldr	r0, stack_end
 	sub	sp, r0, #4
-
+	
 	/* jump to C code */
-	bl	main
-	/* if main ever returns we just call it again */
-	b	_trampoline
-
+	b	main
 
 bss_start:	.word	__bss_start
 bss_end:	.word	__bss_end
 stack_end:	.word	__stack_end
+
+
Index: build_tree/bootLoader/src/blob/zImage.c
diff -u build_tree/bootLoader/src/blob/zImage.c:1.1.1.1 build_tree/bootLoader/src/blob/zImage.c:1.1.1.2
--- build_tree/bootLoader/src/blob/zImage.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/zImage.c	Fri Nov  9 10:37:08 2007
@@ -48,6 +48,7 @@
 {
 	unsigned long size;
 	int i;
+
 	size = ((u32 *) part->offset)[11] - ((u32 *) part->offset)[10];
 
 	/* yes, it could be copied all at once, but I wanted to call 
Index: build_tree/bootLoader/src/blob/xlli/Makefile
diff -u /dev/null build_tree/bootLoader/src/blob/xlli/Makefile:1.3
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/blob/xlli/Makefile	Fri Nov 16 16:37:12 2007
@@ -0,0 +1,462 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# src/blob/xlli/Makefile.  Generated from Makefile.in by configure.
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+
+# -*- makefile -*-
+###########################################################################
+###########################################################################
+srcdir = .
+top_srcdir = ../../..
+
+pkgdatadir = $(datadir)/blob
+pkglibdir = $(libdir)/blob
+pkgincludedir = $(includedir)/blob
+top_builddir = ../../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = /usr/bin/install -c
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = armv5l-unknown-linux-gnu
+subdir = src/blob/xlli
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run aclocal-1.8
+ALL_COMMANDS = reset reboot bogomips call chgbit dummy dump md5chk memcpy poke peek
+AMDEP_FALSE = #
+AMDEP_TRUE = 
+AMTAR = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run tar
+AR = armv5l-linux-ar
+AUTOCONF = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run autoconf
+AUTOHEADER = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run autoheader
+AUTOMAKE = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run automake-1.8
+AWK = gawk
+BLOB_CF_OBJS = 
+BLOB_CHKMEM_OBJS = 
+BLOB_CLOCK_OBJS = 
+BLOB_COMMANDS = reset reboot poke peek xdownload
+BLOB_CRAMFS_OBJS = 
+BLOB_FLASH_OBJS = intel16.o
+BLOB_GIO_OBJS = 
+BLOB_IDE_OBJS = 
+BLOB_JFFS2_OBJS = 
+BLOB_LED_DRIVER_OBJS = led-mmap.o
+BLOB_LED_STARTCODE = ledasm-mmap.o
+BLOB_MEMSETUP_OBJS = 
+BLOB_NETWORK_DRIVER_OBJS = ether-smc91x.o
+BLOB_NETWORK_OBJS = 
+BLOB_PCMCIA_OBJS = 
+BLOB_PLATFORM_OBJS = mainstone.o
+BLOB_REBOOT_DRIVER_OBJS = reboot-pxa.o
+BLOB_SERIAL_DRIVER_OBJS = serial-pxa.o
+BLOB_STARTCODE_OBJS = xlli/mainstone/libxlli.a
+BLOB_TARGET = mainstone
+BLOB_TIMER_DRIVER_OBJS = time-intelarm.o
+BLOB_USBSERIAL_OBJS = 
+BLOB_UUCODEC_OBJS = 
+BLOB_XMODEM_OBJS = xmodem.o
+BLOB_ZIMAGE_OBJS = 
+CC = armv5l-linux-gcc
+CCAS = armv5l-linux-gcc
+CCASFLAGS = -g -O2
+CCDEPMODE = depmode=gcc3
+CFLAGS = -I/tmp/zipit2/build_tree/linux/include
+CPPFLAGS = 
+CYGPATH_W = echo
+DEFS = -DHAVE_CONFIG_H
+DEPDIR = .deps
+DIAG_LCD_OBJS = lcd.o
+DIAG_PLATFORM_OBJS = mainstone.o
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+EXEEXT = 
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_SCRIPT = ${INSTALL}
+INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
+LD = armv5l-linux-ld
+LDFLAGS = 
+LIBOBJS = 
+LIBS = 
+LINUX_INCLUDE = /tmp/zipit2/build_tree/linux/include
+LN_S = ln -s
+LTLIBOBJS = 
+MAINT = #
+MAINTAINER_MODE_FALSE = 
+MAINTAINER_MODE_TRUE = #
+MAKEINFO = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run makeinfo
+OBJCOPY = armv5l-linux-objcopy
+OBJEXT = o
+OCFLAGS = -O binary -R .note -R .comment -S
+PACKAGE = blob
+PACKAGE_BUGREPORT = 
+PACKAGE_NAME = 
+PACKAGE_STRING = 
+PACKAGE_TARNAME = 
+PACKAGE_VERSION = 
+PATH_SEPARATOR = :
+RANLIB = armv5l-linux-ranlib
+SET_MAKE = 
+SHELL = /bin/sh
+STRIP = armv5l-linux-strip
+VERSION = 2.0.5-pre3
+ac_ct_CC = 
+ac_ct_RANLIB = 
+ac_ct_STRIP = 
+am__fastdepCC_FALSE = #
+am__fastdepCC_TRUE = 
+am__include = include
+am__leading_dot = .
+am__quote = 
+bindir = ${exec_prefix}/bin
+build = i686-pc-linux-gnu
+build_alias = 
+build_cpu = i686
+build_os = linux-gnu
+build_vendor = pc
+datadir = ${prefix}/share
+exec_prefix = ${prefix}
+host = armv5l-unknown-linux-gnu
+host_alias = armv5l-linux
+host_cpu = armv5l
+host_os = linux-gnu
+host_vendor = unknown
+includedir = ${prefix}/include
+infodir = ${prefix}/info
+install_sh = /tmp/zipit2/build_tree/bootLoader/tools/install-sh
+libdir = ${exec_prefix}/lib
+libexecdir = ${exec_prefix}/libexec
+localstatedir = ${prefix}/var
+mandir = ${prefix}/man
+mkdir_p = mkdir -p -- .
+oldincludedir = /usr/include
+prefix = /usr/local
+program_transform_name = s,x,x,
+sbindir = ${exec_prefix}/sbin
+sharedstatedir = ${prefix}/com
+sysconfdir = ${prefix}/etc
+target_alias = 
+SUBDIRS = mainstone
+CLEANFILES = ${srcdir}/*~
+all: all-recursive
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/blob/xlli/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  src/blob/xlli/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: # $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if (etags --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	else \
+	  include_option=--include; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -f $$subdir/TAGS && \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || mkdir "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="../$(top_distdir)" \
+	        distdir="../$(distdir)/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-recursive
+all-am: Makefile
+installdirs: installdirs-recursive
+installdirs-am:
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
+	clean clean-generic clean-recursive ctags ctags-recursive \
+	distclean distclean-generic distclean-recursive distclean-tags \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
+	uninstall uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/src/blob/xlli/Makefile.in
diff -u /dev/null build_tree/bootLoader/src/blob/xlli/Makefile.in:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/blob/xlli/Makefile.in	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,462 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+###########################################################################
+###########################################################################
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = src/blob/xlli
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+SUBDIRS = @BLOB_TARGET@
+CLEANFILES = ${srcdir}/*~
+all: all-recursive
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/blob/xlli/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  src/blob/xlli/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if (etags --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	else \
+	  include_option=--include; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -f $$subdir/TAGS && \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || mkdir "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="../$(top_distdir)" \
+	        distdir="../$(distdir)/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-recursive
+all-am: Makefile
+installdirs: installdirs-recursive
+installdirs-am:
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
+	clean clean-generic clean-recursive ctags ctags-recursive \
+	distclean distclean-generic distclean-recursive distclean-tags \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
+	uninstall uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/src/blob/xlli/mainstone/Makefile
diff -u /dev/null build_tree/bootLoader/src/blob/xlli/mainstone/Makefile:1.3
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/blob/xlli/mainstone/Makefile	Fri Nov 16 16:37:12 2007
@@ -0,0 +1,430 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# src/blob/xlli/mainstone/Makefile.  Generated from Makefile.in by configure.
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+
+
+#
+# Makefile.am
+#
+# Copyright (C) 2004 Yu Tang(yu.tang@intel.com)
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+
+SOURCES = $(libxlli_a_SOURCES)
+
+srcdir = .
+top_srcdir = ../../../..
+
+pkgdatadir = $(datadir)/blob
+pkglibdir = $(libdir)/blob
+pkgincludedir = $(includedir)/blob
+top_builddir = ../../../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = /usr/bin/install -c
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = armv5l-unknown-linux-gnu
+subdir = src/blob/xlli/mainstone
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+ARFLAGS = cru
+LIBRARIES = $(noinst_LIBRARIES)
+libxlli_a_AR = $(AR) $(ARFLAGS)
+libxlli_a_LIBADD =
+am_libxlli_a_OBJECTS = start.$(OBJEXT) xlli_LowLev_Init.$(OBJEXT)
+libxlli_a_OBJECTS = $(am_libxlli_a_OBJECTS)
+DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include/blob
+CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
+SOURCES = $(libxlli_a_SOURCES)
+DIST_SOURCES = $(libxlli_a_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run aclocal-1.8
+ALL_COMMANDS = reset reboot bogomips call chgbit dummy dump md5chk memcpy poke peek
+AMDEP_FALSE = #
+AMDEP_TRUE = 
+AMTAR = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run tar
+AR = armv5l-linux-ar
+AUTOCONF = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run autoconf
+AUTOHEADER = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run autoheader
+AUTOMAKE = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run automake-1.8
+AWK = gawk
+BLOB_CF_OBJS = 
+BLOB_CHKMEM_OBJS = 
+BLOB_CLOCK_OBJS = 
+BLOB_COMMANDS = reset reboot poke peek xdownload
+BLOB_CRAMFS_OBJS = 
+BLOB_FLASH_OBJS = intel16.o
+BLOB_GIO_OBJS = 
+BLOB_IDE_OBJS = 
+BLOB_JFFS2_OBJS = 
+BLOB_LED_DRIVER_OBJS = led-mmap.o
+BLOB_LED_STARTCODE = ledasm-mmap.o
+BLOB_MEMSETUP_OBJS = 
+BLOB_NETWORK_DRIVER_OBJS = ether-smc91x.o
+BLOB_NETWORK_OBJS = 
+BLOB_PCMCIA_OBJS = 
+BLOB_PLATFORM_OBJS = mainstone.o
+BLOB_REBOOT_DRIVER_OBJS = reboot-pxa.o
+BLOB_SERIAL_DRIVER_OBJS = serial-pxa.o
+BLOB_STARTCODE_OBJS = xlli/mainstone/libxlli.a
+BLOB_TARGET = mainstone
+BLOB_TIMER_DRIVER_OBJS = time-intelarm.o
+BLOB_USBSERIAL_OBJS = 
+BLOB_UUCODEC_OBJS = 
+BLOB_XMODEM_OBJS = xmodem.o
+BLOB_ZIMAGE_OBJS = 
+CC = armv5l-linux-gcc
+CCAS = armv5l-linux-gcc
+CCASFLAGS = -g -O2
+CCDEPMODE = depmode=gcc3
+CFLAGS = -I/tmp/zipit2/build_tree/linux/include
+CPPFLAGS = 
+CYGPATH_W = echo
+DEFS = -DHAVE_CONFIG_H
+DEPDIR = .deps
+DIAG_LCD_OBJS = lcd.o
+DIAG_PLATFORM_OBJS = mainstone.o
+ECHO_C = 
+ECHO_N = -n
+ECHO_T = 
+EXEEXT = 
+INSTALL_DATA = ${INSTALL} -m 644
+INSTALL_PROGRAM = ${INSTALL}
+INSTALL_SCRIPT = ${INSTALL}
+INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
+LD = armv5l-linux-ld
+LDFLAGS = 
+LIBOBJS = 
+LIBS = 
+LINUX_INCLUDE = /tmp/zipit2/build_tree/linux/include
+LN_S = ln -s
+LTLIBOBJS = 
+MAINT = #
+MAINTAINER_MODE_FALSE = 
+MAINTAINER_MODE_TRUE = #
+MAKEINFO = ${SHELL} /tmp/zipit2/build_tree/bootLoader/tools/missing --run makeinfo
+OBJCOPY = armv5l-linux-objcopy
+OBJEXT = o
+OCFLAGS = -O binary -R .note -R .comment -S
+PACKAGE = blob
+PACKAGE_BUGREPORT = 
+PACKAGE_NAME = 
+PACKAGE_STRING = 
+PACKAGE_TARNAME = 
+PACKAGE_VERSION = 
+PATH_SEPARATOR = :
+RANLIB = armv5l-linux-ranlib
+SET_MAKE = 
+SHELL = /bin/sh
+STRIP = armv5l-linux-strip
+VERSION = 2.0.5-pre3
+ac_ct_CC = 
+ac_ct_RANLIB = 
+ac_ct_STRIP = 
+am__fastdepCC_FALSE = #
+am__fastdepCC_TRUE = 
+am__include = include
+am__leading_dot = .
+am__quote = 
+bindir = ${exec_prefix}/bin
+build = i686-pc-linux-gnu
+build_alias = 
+build_cpu = i686
+build_os = linux-gnu
+build_vendor = pc
+datadir = ${prefix}/share
+exec_prefix = ${prefix}
+host = armv5l-unknown-linux-gnu
+host_alias = armv5l-linux
+host_cpu = armv5l
+host_os = linux-gnu
+host_vendor = unknown
+includedir = ${prefix}/include
+infodir = ${prefix}/info
+install_sh = /tmp/zipit2/build_tree/bootLoader/tools/install-sh
+libdir = ${exec_prefix}/lib
+libexecdir = ${exec_prefix}/libexec
+localstatedir = ${prefix}/var
+mandir = ${prefix}/man
+mkdir_p = mkdir -p -- .
+oldincludedir = /usr/include
+prefix = /usr/local
+program_transform_name = s,x,x,
+sbindir = ${exec_prefix}/sbin
+sharedstatedir = ${prefix}/com
+sysconfdir = ${prefix}/etc
+target_alias = 
+noinst_LIBRARIES = libxlli.a
+libxlli_a_SOURCES = start.s xlli_LowLev_Init.s 
+libxlli_a_DEPENDENCIES = \
+	xlli_LowLev_mac.mac \
+	xlli_Bulverde_defs.inc \
+	xlli_Mainstone_defs.inc \
+	xlli_LowLev_Init.s \
+	start.s 
+
+CLEANFILES = ${srcdir}/*~
+DISTCLEANFILES = ${builddir}/.deps/*.P
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .o .obj .s
+$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/blob/xlli/mainstone/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  src/blob/xlli/mainstone/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: # $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+clean-noinstLIBRARIES:
+	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
+libxlli.a: $(libxlli_a_OBJECTS) $(libxlli_a_DEPENDENCIES) 
+	-rm -f libxlli.a
+	$(libxlli_a_AR) libxlli.a $(libxlli_a_OBJECTS) $(libxlli_a_LIBADD)
+	$(RANLIB) libxlli.a
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+.s.o:
+	$(CCASCOMPILE) -c $<
+
+.s.obj:
+	$(CCASCOMPILE) -c `$(CYGPATH_W) '$<'`
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LIBRARIES)
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	clean-noinstLIBRARIES ctags distclean distclean-compile \
+	distclean-generic distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-exec install-exec-am install-info \
+	install-info-am install-man install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
+	uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/src/blob/xlli/mainstone/Makefile.in
diff -u /dev/null build_tree/bootLoader/src/blob/xlli/mainstone/Makefile.in:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/blob/xlli/mainstone/Makefile.in	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,430 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+#
+# Makefile.am
+#
+# Copyright (C) 2004 Yu Tang(yu.tang@intel.com)
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+
+SOURCES = $(libxlli_a_SOURCES)
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../../../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = src/blob/xlli/mainstone
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+ARFLAGS = cru
+LIBRARIES = $(noinst_LIBRARIES)
+libxlli_a_AR = $(AR) $(ARFLAGS)
+libxlli_a_LIBADD =
+am_libxlli_a_OBJECTS = start.$(OBJEXT) xlli_LowLev_Init.$(OBJEXT)
+libxlli_a_OBJECTS = $(am_libxlli_a_OBJECTS)
+DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include/blob
+CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
+SOURCES = $(libxlli_a_SOURCES)
+DIST_SOURCES = $(libxlli_a_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+noinst_LIBRARIES = libxlli.a
+libxlli_a_SOURCES = start.s xlli_LowLev_Init.s 
+libxlli_a_DEPENDENCIES = \
+	xlli_LowLev_mac.mac \
+	xlli_Bulverde_defs.inc \
+	xlli_Mainstone_defs.inc \
+	xlli_LowLev_Init.s \
+	start.s 
+
+CLEANFILES = ${srcdir}/*~
+DISTCLEANFILES = ${builddir}/.deps/*.P
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .o .obj .s
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/blob/xlli/mainstone/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  src/blob/xlli/mainstone/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+clean-noinstLIBRARIES:
+	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
+libxlli.a: $(libxlli_a_OBJECTS) $(libxlli_a_DEPENDENCIES) 
+	-rm -f libxlli.a
+	$(libxlli_a_AR) libxlli.a $(libxlli_a_OBJECTS) $(libxlli_a_LIBADD)
+	$(RANLIB) libxlli.a
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+.s.o:
+	$(CCASCOMPILE) -c $<
+
+.s.obj:
+	$(CCASCOMPILE) -c `$(CYGPATH_W) '$<'`
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LIBRARIES)
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	clean-noinstLIBRARIES ctags distclean distclean-compile \
+	distclean-generic distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-exec install-exec-am install-info \
+	install-info-am install-man install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
+	uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/src/blob/xlli/mainstone/bbu_Bulverde_defs.inc
diff -u /dev/null build_tree/bootLoader/src/blob/xlli/mainstone/bbu_Bulverde_defs.inc:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/blob/xlli/mainstone/bbu_Bulverde_defs.inc	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,188 @@
+@ 
+@ INTEL CONFIDENTIAL
+@ Copyright 2002-2003 Intel Corporation All Rights Reserved.
+@
+@ The source code contained or described herein and all documents
+@ related to the source code (Material) are owned by Intel Corporation
+@ or its suppliers or licensors.  Title to the Material remains with
+@ Intel Corporation or its suppliers and licensors. The Material contains
+@ trade secrets and proprietary and confidential information of Intel
+@ or its suppliers and licensors. The Material is protected by worldwide
+@ copyright and trade secret laws and treaty provisions. No part of the
+@ Material may be used, copied, reproduced, modified, published, uploaded,
+@ posted, transmitted, distributed, or disclosed in any way without Intel's
+@ prior express written permission.
+@
+@ No license under any patent, copyright, trade secret or other intellectual
+@ property right is granted to or conferred upon you by disclosure or
+@ delivery of the Materials, either expressly, by implication, inducement,
+@ estoppel or otherwise. Any license under such intellectual property rights
+@ must be express and approved by Intel in writing.
+@
+@
+@ Module Name:  .equ     Bulverde_defs.inc
+@
+@ Last Updated:  12-Mar-2004
+@
+@ Abstract:  
+@
+@        This include file contains definitions that are specific to the .equ   code
+@        and are not covered in the xlli definitions.
+@
+@
+
+@**********************************************************************************
+@ GPIO direction bit definitions
+@
+
+@
+@ I2C BUS INTERFACE UNIT base address and register offsets from the base address
+@ 
+
+.equ     I2C_PHYSICAL_BASE     ,     (0x40301680)
+
+.equ     I2C_IMBR_offset       ,     (0X00)     @ I2C Bus Monitor Register
+.equ     I2C_IDBR_offset       ,     (0X08)     @ I2C Data Buffer Register
+.equ     I2C_ICR_offset        ,     (0X10)     @ I2C Control Register
+.equ     I2C_ISR_offset        ,     (0X18)     @ I2C Status Register
+.equ     I2C_ISAR_offset       ,     (0X20)     @ I2C Slave Address Register
+.equ     I2C_ICCR_offset       ,     (0x28)     @ Clock Count Register
+
+.equ     ICR_IUE               ,     (0X0040)   @ ICR I2C Unit enable bit
+.equ     ICR_SCLE              ,     (0X0020)   @ ICR I2C SCL Enable bit
+.equ     ICR_TB                ,     (0X0008)   @ ICR Transfer Byte bit
+.equ     ICR_ACKNAK            ,     (0x0004)   @ ICR ACK bit
+.equ     ICR_STOP              ,     (0x0002)   @ ICR STOP bit
+.equ     ICR_START             ,     (0X0001)   @ ICR START bit
+
+.equ     ISR_IRF               ,     (0x0080)   @ ISR Receive full bit
+.equ     ISR_ITE               ,     (0x0040)   @ ISR Transmit empty bit
+.equ     PI2C_EN               ,     (0x0040)   @ Power I2C enable bit
+
+@
+@ UART base address and register offsets from the base address 
+@
+
+.equ     FFUART_PHYSICAL_BASE    ,    0x40100000   @ Full Featured UART base address
+.equ     BTUART_PHYSICAL_BASE    ,    0x40200000   @ BlueTooth UART base address
+.equ     STUART_PHYSICAL_BASE    ,    0x40700000   @ Standard UART base address
+
+.equ     UARBR_offset     ,     (0X0)   @ UART Receive Buffer Register offset
+.equ     UATHR_offset	 ,     (0X0)   @ UART Transmit Holding Register offset
+.equ     UAIER_offset	 ,     (0x4)   @ UART Interrupt Enable Register offset
+.equ     UAIIR_offset	 ,     (0x8)   @ UART Interrupt ID Register offset
+.equ     UAFCR_offset	 ,     (0x8)   @ UART FIFO Control Register offset
+.equ     UALCR_offset	 ,     (0xC)   @ UART Line Control Register offset
+.equ     UAMCR_offset	 ,     (0x10)  @ UART Modem Control Register offset
+.equ     UALSR_offset	 ,     (0x14)  @ UART Line Status Register offset
+.equ     UAMSR_offset	 ,     (0x18)  @ UART Modem Status Register offset
+.equ     UASPR_offset	 ,     (0x1C)  @ UART Scratch Pad Register offset
+.equ     UADLL_offset	 ,     (0x0)   @ UART Divisor Latch Register (low) offset
+.equ     UADLH_offset	 ,     (0X4)   @ UART Divisor Latch Register (high) offset
+.equ     UAISR_offset	 ,     (0x20)  @ UART Slow Infrared Selector Register offset
+
+@ Misc UART data 
+
+.equ     BAUD_4800    ,     (0xC0)      @ UART Divisor low bye setting for 4800 baud
+.equ     BAUD_9600    ,     (0x60)      @ UART Divisor low bye setting for 9600 baud
+.equ     BAUD_19200   ,     (0X30)      @ UART Divisor low bye setting for 19200 baud
+.equ     BAUD_38400   ,     (0x18)      @ UART Divisor low bye setting for 38400 baud
+.equ     BAUD_57600   ,     (0x10)      @ UART Divisor low bye setting for 57600 baud
+.equ     BAUD_115200  ,     (0X08)      @ UART Divisor low bye setting for 115200 baud
+
+@ UART BIT DEFINITIONS 
+
+.equ     TDRQ     ,     (0x20)   @ Transmit Data Request
+.equ     TEMT     ,     (0x40)   @ Transmitter Empty bit
+.equ     DR       ,     (0x01)   @ Data Ready bit
+.equ     DLAB	  ,     (0x80)   @ DLAB bit
+.equ     nBT_OFF  ,     (0x100)  @ BTUART Tranceiver Control Bit
+.equ     BTDTR    ,     (0x80)   @ BTUART Data Terminal Ready bit
+
+@
+@ SSP REGISTERS base address and register offsets from the base address
+@ 
+
+.equ     SSP1_PHYSICAL_BASE        ,     (0x41000000)
+.equ     SSP2_PHYSICAL_BASE        ,     (0x41700000)
+.equ     SSP3_PHYSICAL_BASE        ,     (0x41900000)
+
+.equ     SSCR0_offset      ,     (0x00)    @ SSP Control Register 0
+.equ     SSCR1_offset      ,     (0x04)    @ SSP Control Register 1
+.equ     SSSRx_offset      ,     (0x08)    @ SSP Status Register
+.equ     SSDRx_offset      ,     (0x10)    @ SSP Data Register
+.equ     SSTOx_offset      ,     (0x28)    @ SSP Time Out Register
+.equ     SSPSPx_offset     ,     (0x2C)    @ SSP Prograqmmable Sreial Protocol Register
+
+
+@
+@ I2S INTERFACE base address and register offsets from the base address
+@ 
+.equ     I2SUNIT_PHYSICAL_BASE     ,     (0x40400000)
+
+.equ     I2SUNIT_SACR0_offset    ,     (0X00)     @ SACR0 Control 1
+.equ     I2SUNIT_SACR1_offset    ,     (0X04)     @ SACR1 Control 2
+.equ     I2SUNIT_SASR0_offset    ,     (0X0C)     @ SASR0 Status
+.equ     I2SUNIT_SAIMR_offset    ,     (0X14)     @ Interrupt Mask
+.equ     I2SUNIT_SAICR_offset    ,     (0X18)     @ Interrupt Control
+.equ     I2SUNIT_SADIV_offset    ,     (0X60)     @ Clock Divisor
+.equ     I2SUNIT_SADR_offset     ,     (0X80)     @ Data Register 
+
+@
+@ LCD CONTROLLER base address and register offsets from the base address
+@
+.equ  bbu_LCD_PHYSICAL_BASE    ,       (0x44000000)
+
+.equ  bbu_LCCR0_offset         ,       (0X000)    @ LCD Control Register 0
+.equ  bbu_LCCR1_offset         ,       (0X004)    @ LCD Control Register 1
+.equ  bbu_LCCR2_offset         ,       (0X008)    @ LCD Control Register 2
+.equ  bbu_LCCR3_offset         ,       (0X00C)    @ LCD Control Register 3
+.equ  bbu_LCCR4_offset         ,       (0X010)    @ LCD Control Register 4
+.equ  bbu_LCCR5_offset         ,       (0X014)    @ LCD Control Register 5
+
+.equ  bbu_FBR0_offset          ,       (0x020)    @ LCD Frame Branch Register 0
+.equ  bbu_FBR1_offset          ,       (0x024)    @ LCD Frame Branch Register 1
+.equ  bbu_FBR2_offset          ,       (0x028)    @ LCD Frame Branch Register 2
+.equ  bbu_FBR3_offset          ,       (0x02C)    @ LCD Frame Branch Register 3
+.equ  bbu_FBR4_offset          ,       (0x030)    @ LCD Frame Branch Register 4
+.equ  bbu_FBR5_offset          ,       (0x110)    @ LCD Frame Branch Register 5
+.equ  bbu_FBR6_offset          ,       (0x114)    @ LCD Frame Branch Register 6
+
+.equ  bbu_OVL1C1_offset        ,       (0x050)    @ LCD Overlay 1 Control Register 1
+.equ  bbu_OVL1C2_offset        ,       (0x060)    @ LCD Overlay 1 Control Register 2
+.equ  bbu_LCSR0_offset         ,       (0x038)    @ LCD Control Status Register	0
+.equ  bbu_LCSR1_offset         ,       (0x034)    @ LCD Control Status Register	1
+.equ  bbu_CMDCR_offset         ,       (0x100)    @ LCD Command Control Register
+.equ  bbu_PRSR_offset          ,       (0x104)    @ LCD Panel Read Status Register
+
+.equ  bbu_FDADR0_offset        ,       (0x200)    @ DMA Channel 0 Frame Descriptor address register
+.equ  bbu_FDADR1_offset        ,       (0x210)    @ DMA Channel 1 Frame Descriptor address register
+.equ  bbu_FDADR6_offset        ,       (0x260)    @ DMA Channel 6 Frame Descriptor address register
+
+@
+@       DMA interface
+@
+.equ  bbu_DMA_PHYSICAL_BASE       ,       (0x40000000)
+
+.equ  bbu_DMA_DCSR0_offset     ,       (0X000)     @ DMA Control/Status Reg for channel 0
+.equ  bbu_DMA_DINT_offset      ,       (0X0F0)     @ DMA Interrupt Register
+.equ  bbu_DMA_DDADR0_offset    ,       (0X200)     @ DMA Descriptor Address Register channel 0
+.equ  bbu_DMA_DSADR0_offset    ,       (0X204)     @ DMA Source Address Register channel 0
+.equ  bbu_DMA_DTADR0_offset    ,       (0X208)     @ DMA Target Address Register channel 0
+.equ  bbu_DMA_DCMD0_offset     ,       (0X20C)     @ DMA Command Address Register channel 0
+
+.equ  bbu_DMA_DRCMR3_offset    ,      (0X010C)     @ DMA Request to Channel MAP - I2S Audio transmit request
+.equ  bbu_DMA_DRCMR12_offset   ,      (0X0130)     @ DMA Request to Channel MAP - AC97 Audio transmit request
+.equ  bbu_DMA_DRCMR68_offset   ,      (0X1110)     @ DMA Request to Channel MAP - cam receive 0
+
+@
+@ PULSE WIDTH MODULATOR (PWM) REGISTERS base address and register offsets from the base address
+@ 
+
+.equ  bbu_PWM0_PHYSICAL_BASE     ,         (0x40B00000)   @ PWM 0 base address
+.equ  bbu_PWM1_PHYSICAL_BASE     ,         (0x40C00000)   @ PWM 1 base address
+
+.equ  bbu_PWMCR0                 ,         (0x00)         @ PWM Control register 0 offset
+.equ  bbu_PWMDCR0                ,         (0X04)         @ PWM Duty Cycle register 0 offset
+.equ  bbu_PWMPCR0                ,         (0X08)         @ PWM Period Control Register 0 offset
+
Index: build_tree/bootLoader/src/blob/xlli/mainstone/bbu_Mainstone_defs.inc
diff -u /dev/null build_tree/bootLoader/src/blob/xlli/mainstone/bbu_Mainstone_defs.inc:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/blob/xlli/mainstone/bbu_Mainstone_defs.inc	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,174 @@
+@ 
+@ INTEL CONFIDENTIAL
+@ Copyright 2002-2004 Intel Corporation All Rights Reserved.
+@
+@ The source code contained or described herein and all documents
+@ related to the source code (Material) are owned by Intel Corporation
+@ or its suppliers or licensors.  Title to the Material remains with
+@ Intel Corporation or its suppliers and licensors. The Material contains
+@ trade secrets and proprietary and confidential information of Intel
+@ or its suppliers and licensors. The Material is protected by worldwide
+@ copyright and trade secret laws and treaty provisions. No part of the
+@ Material may be used, copied, reproduced, modified, published, uploaded,
+@ posted, transmitted, distributed, or disclosed in any way without Intel's
+@ prior express written permission.
+@
+@ No license under any patent, copyright, trade secret or other intellectual
+@ property right is granted to or conferred upon you by disclosure or
+@ delivery of the Materials, either expressly, by implication, inducement,
+@ estoppel or otherwise. Any license under such intellectual property rights
+@ must be express and approved by Intel in writing.
+@
+@
+@ Module Name:  .equ  bbu_Mainstone_defs.inc
+@
+@ Last Updated: 29-Jan-2004
+@
+@ Abstract:  
+@
+@       This include file contains platform definitions that are BBU specific and
+@       are not included in the xlli include file.
+@
+@*********************************************************************************
+@
+@       Page table information for BBU running out of SRAM
+@
+.equ    bbu_p_PageTable        ,       0x5C03C000       @ Base address for SRAM based Page Table
+.equ    bbu_s_PageTable        ,       0x00004000       @ Page Table size (4K words - 16 Kb)
+
+@   ***********************
+@   **                   **
+@   **  KEYPAD SETTINGS  **
+@   **                   **
+@   ***********************
+@
+.equ  bbu_KPREC_Count0      ,       (0x7F)       @ starting value for rotary encoder
+.equ  bbu_KPKDI             ,       (4)          @ Keypad debouce time in mS (needs to be low for encoder to work)
+@
+@       BBU status word setup
+@
+.equ  BBU_STAT_IMEM             ,       1<<0            @ SDRAM initialized
+.equ  BBU_STAT_MPTS             ,       1<<1            @ BBU running out of SDRAM
+.equ  BBU_STAT_IKEY             ,       1<<3            @ Keypad initalized
+.equ  BBU_STAT_KEYR             ,       1<<4            @ Keypad key or register dump select
+.equ  BBU_STAT_CPTS             ,       1<<5            @ BBU Moved to and running from SRAM
+.equ  BBU_STAT_CMDBUF           ,       1<<6            @ BBU Command Buffer Enable / Disable bit
+
+@
+@   ***************************************
+@   **                                   **
+@   **  DATA FOR CAMERA INTERFACE SETUP  **
+@   **                                   **
+@   ***************************************
+@
+.equ  bbu_CICR0_value       ,       (0x80000000)  @ Camera Inferface Control Register 0
+.equ  bbu_CICR1_value       ,       (0x0078010a)  @ Camera Inferface Control Register 1
+.equ  bbu_CICR2_value       ,       (0x00000000)  @ Camera Inferface Control Register 2
+.equ  bbu_CICR3_value       ,       (0x00000140)  @ Camera Inferface Control Register 3 (320 lines)
+.equ  bbu_CICR4_value       ,       (0x00880003)  @ Camera Inferface Control Register 4
+
+.equ  bbu_OVL1C1_value      ,       (0x0044F0EF)  @ LCD Camera overlay control register 1 value
+.equ  bbu_OVL1C2_value      ,       (0x000000EF)  @ LCD Camera overlay control register 2 value
+.equ  bbu_CAM_length        ,       (0x00096000)  @ 640 * 480 * 2 bytes per pixel
+
+@
+@   **************************
+@   **                      **
+@   **  DATA FOR LCD SETUP  **
+@   **                      **
+@   **************************
+@
+
+@
+@ Optrex F-51373GNC MODULE
+@
+
+.equ  bbu_LCD_LCCR0_value    ,       (0x01B00A78)   @
+.equ  bbu_LCD_LCCR3_value    ,       (0x04008000)   @
+.equ  bbu_LCD_LCCR4_value    ,       (0x0)
+.equ  bbu_LCD_LCCR5_value    ,       (0x0)
+@
+@   **  Values for Optrex 320x240 display  **
+@
+.equ  LCD_Width_2            ,        320
+.equ  LCD_Height_2           ,        240
+.equ  LCD_ExLines_2          ,          0
+.equ  LCD_Depth_2            ,         16         @ Color depth (bits per pixel)
+.equ  LCD_FrameSize_2        ,     153600         @ (ExLines + Width) * Height * (Depth/8)
+.equ  LCD_BLW_2              ,          1         @ Beginning of line pixel wait count
+.equ  LCD_ELW_2              ,         10         @ End of line pixel wait ount
+.equ  LCD_HSW_2              ,          2         @ Horz sync pulse width
+.equ  LCD_BFW_2              ,          1        @ Beginning of frame pixel wait count
+.equ  LCD_EFW_2              ,          1        @ End of frame pixel wait count
+.equ  LCD_VSW_2              ,          2         @ Vert sync pulse width
+.equ  LCD_PCD_2              ,         28         @ Pixel Clock Divisor
+.equ  LCD_PCP_2              ,          1         @ Pixel Clock Polarity
+
+@
+@ POWERTIP MODULE
+@
+
+@.equ  bbu_LCD_LCCR0_value    ,       (0x01B00A78)   @
+@.equ  bbu_LCD_LCCR3_value    ,       (0x04008000)   @
+@.equ  bbu_LCD_LCCR4_value    ,       (0x0)
+@.equ  bbu_LCD_LCCR5_value    ,       (0x0)
+@
+@   **  Values for Powertip 240 x 160 display  **
+@
+@LCD_Width_2            ,        240
+@LCD_Height_2           ,        160
+@LCD_ExLines_2          ,          0
+@LCD_Depth_2            ,         16         @ Color depth (bits per pixel)
+@LCD_FrameSize_2        ,      76800         @ (ExLines + Width) * Height * (Depth/8)
+@LCD_BLW_2              ,          1         @ Beginning of line pixel wait count
+@LCD_ELW_2              ,         10         @ End of line pixel wait ount
+@LCD_HSW_2              ,          2         @ Horz sync pulse width
+@LCD_BFW_2              ,          1        @ Beginning of frame pixel wait count
+@LCD_EFW_2              ,          1        @ End of frame pixel wait count
+@LCD_VSW_2              ,          2         @ Vert sync pulse width
+@LCD_PCD_2              ,         28         @ Pixel Clock Divisor
+@LCD_PCP_2              ,          1         @ Pixel Clock Polarity
+
+
+
+.equ  LCD_READ_STATUS_REG    ,     0X0 << 9
+.equ  LCD_READ_FRAME_BUFF    ,     0X0 << 9
+.equ  LCD_COMMAND_WRITE      ,     0X1 << 9
+.equ  LCD_DATA_WRITE         ,     0X1 << 9
+.equ  LCD_FRAME_DATA_WRITE   ,     0X2 << 9
+.equ  LCD_WAIT_FOR_VSYNC     ,     0X3 << 9
+.equ  LCD_INT_PROC           ,     0X5 << 9
+
+.equ  LCD_COMMAND            ,     0X0 << 8
+.equ  LCD_DATA               ,     0X1 << 8
+
+
+@
+@   ***************************************************
+@   **                                               **
+@   **  DATA FOR FRAME BUFFER AND LCD OVERLAY SETUP  **
+@   **                                               **
+@   ***************************************************
+@
+@   NOTE: This area is mapped a ways above the top of the BBU code. If BBU code
+@         grows to reach address 0x17F00 (about 98K bytes) These addresses will have to
+@         be pushed higher.
+@
+@
+.equ  bbu_LCD_CMD        ,     (0x17F00)   @ Address to use for LCD command buffer (256 bytes)
+.equ  bbu_LCD_FRAME      ,     (0x18000)   @ Address to use for LCD frame buffer in mapped SDRAM
+                                   @ (Set aside 0x96000 bytes for frame buffer - 640 x 480)
+.equ  bbu_LCD_OVR1       ,     (0xAE000)   @ Address to use for LCD overlay 1 in mapped SDRAM
+                                   @ (Set aside 0x96000 bytes for overlay 1 - 640 x 480)
+@
+@ GLOBAL VALUES USED BY BOARD BRING UP PROGRAM
+@
+
+.equ  bbu_BOOT_POST             ,       (0x00040000)    @ Boot address for POST
+
+.equ  bbu_stat_data             ,       (0x40F00008)    @ Address where bbu program status is stored
+
+.equ  bbu_XTAL                  ,       1300            @ Xtal frequency in MHz * 100
+
+.equ  bbu_command_buffer        ,       (0x5C03B000)       @ Base of command recall buffer (256 cmds)
+
Index: build_tree/bootLoader/src/blob/xlli/mainstone/blink.h
diff -u /dev/null build_tree/bootLoader/src/blob/xlli/mainstone/blink.h:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/blob/xlli/mainstone/blink.h	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,71 @@
+/* Aeronix code
+*
+* Blink the yellow LED forever
+*/
+
+/* Set GPIO High (turn off LED) */
+
+AER1:	ldr	   r7,	=0x25           @ GPIO 37 (decimal)
+        mov    r2,  r7,  LSR #5     @ R2 now contains the GPIO register (0-3)
+        and    r7,  r7,  #0x1F      @ R7 now contains the number of bits to shift left
+        mov    r3,  #1              @ Set bit 0 in r3
+        mov    r3,  r3,  LSL r7     @ R3 contains bit shifted to correct position
+@
+@       Do a write to update the GPIO clear register
+@
+        ldr    r1,  =xlli_GPIOREGS_PHYSICAL_BASE   @ Get base addres for GPIO registers
+        cmp    r2,  #0                             @ Update GPCR0?
+        streq  r3,  [r1, #xlli_GPCR0_offset]       @ Yes - write GPCRO value
+        cmp    r2,  #1                             @ Update GPCR1?
+        streq  r3,  [r1, #xlli_GPCR1_offset]       @ Yes - write GPCR1 value
+        cmp    r2,  #2                             @ Update GPCR2?
+        streq  r3,  [r1, #xlli_GPCR2_offset]       @ Yes - write GPCR2 value
+        cmp    r2,  #3                             @ Update GPCR3?
+        streq  r3,  [r1, #xlli_GPCR3_offset]       @ Yes - write GPCR3 value
+
+@ Set up for 500 mS delay
+
+        mov     r1,     #500
+        ldr     r2,  =xlli_OSTREGS_PHYSICAL_BASE @ Load OS timer base address
+        ldr     r3,  =0xE66                      @ Load r3 with value to generate 1 ms delay
+        mul     r3,  r1,  r3                     @ Calculate the total number of clock ticks 	
+        ldr     r1,  [r2, #xlli_OSCR0_offset]    @ Fetch OS timer value
+        add     r3,  r3,  r1                     @ Calculate ending value
+17:     ldr     r1,  [r2, #xlli_OSCR0_offset]    @ Fetch OS timer value
+        cmp     r1,  r3                          @ compare to 1 ms count value
+        ble     17b                              @ loop until OS timer value goes past time out value
+
+/* Set GPIO Low (turn ON LED) */
+
+	    ldr	   r7,	=0x25           @ GPIO 37 (decimal)
+        mov    r2,  r7,  LSR #5     @ R2 now contains the GPIO register (0-3)
+        and    r7,  r7,  #0x1F      @ R7 now contains the number of bits to shift left
+        mov    r3,  #0              @ Clear bit 0 in r3
+        mov    r3,  r3,  LSL r7     @ R3 contains bit shifted to correct position
+@
+@       Do a write to update the GPIO clear register
+@
+        ldr    r1,  =xlli_GPIOREGS_PHYSICAL_BASE   @ Get base addres for GPIO registers
+        cmp    r2,  #0                             @ Update GPCR0?
+        streq  r3,  [r1, #xlli_GPCR0_offset]       @ Yes - write GPCRO value
+        cmp    r2,  #1                             @ Update GPCR1?
+        streq  r3,  [r1, #xlli_GPCR1_offset]       @ Yes - write GPCR1 value
+        cmp    r2,  #2                             @ Update GPCR2?
+        streq  r3,  [r1, #xlli_GPCR2_offset]       @ Yes - write GPCR2 value
+        cmp    r2,  #3                             @ Update GPCR3?
+        streq  r3,  [r1, #xlli_GPCR3_offset]       @ Yes - write GPCR3 value
+
+@ Set up for 500 mS delay
+
+        mov     r1,     #500
+        ldr     r2,  =xlli_OSTREGS_PHYSICAL_BASE @ Load OS timer base address
+        ldr     r3,  =0xE66                      @ Load r3 with value to generate 1 ms delay
+        mul     r3,  r1,  r3                     @ Calculate the total number of clock ticks 	
+        ldr     r1,  [r2, #xlli_OSCR0_offset]    @ Fetch OS timer value
+        add     r3,  r3,  r1                     @ Calculate ending value
+18:      ldr     r1,  [r2, #xlli_OSCR0_offset]    @ Fetch OS timer value
+        cmp     r1,  r3                          @ compare to 1 ms count value
+        ble     18b                             @ loop until OS timer value goes past time out value
+
+/* Now repeat forever */
+		bl		AER1
\ No newline at end of file
Index: build_tree/bootLoader/src/blob/xlli/mainstone/start.s
diff -u build_tree/bootLoader/src/blob/xlli/mainstone/start.s:1.1.1.1 build_tree/bootLoader/src/blob/xlli/mainstone/start.s:1.1.1.2
--- build_tree/bootLoader/src/blob/xlli/mainstone/start.s:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/xlli/mainstone/start.s	Fri Nov  9 10:37:08 2007
@@ -1,4 +1,5 @@
-/*
+/* Orderite  */
+/* Version 2.37
  * start.s: Mainstone/Bulverde start code using XLLI
  *
  * Copyright (C) 2004 Intel Corporation (yu.tang@intel.com)
@@ -19,9 +20,11 @@
  *
  */
 
-        .include  "xlli_Bulverde_defs.inc"                 @ Bulverde specific include file
+        .include  "xlli_Bulverde_defs.inc"                 @ PXA27x specific include file
         .include  "xlli_Mainstone_defs.inc"                @ Mainstone specific include file
-
+        .include  "xlli_LowLev_mac.mac"                    @ Mainstone Macro definitions
+		.include  "bbu_Bulverde_defs.inc"
+		.include  "bbu_Mainstone_defs.inc"
 .text
 
 /*
@@ -32,61 +35,101 @@
  * get something to work first.
  */
 
-.macro blink, count
-	mov		r3, \count
-	b		endless_blink
-.endm
-
 .globl reset
 reset:
-	/* Check reset cause */
-	ldr 	r0, =xlli_PMRCREGS_PHYSICAL_BASE
-	ldr 	r10, [r0, #xlli_RCSR_offset]
-
-	mov 	r2, #xlli_RCSR_ALL
-	and 	r10, r10, r2
-
-	mov 	r12, #0
-
-	/* Clear RCSR bits as they are sticky */
-	str 	r2, [r0, #xlli_RCSR_offset]
-
-	/* Pack PSSR/RCSR together */
-	ldr 	r1, [r0, #xlli_PSSR_offset]
-	mov 	r2, #0x3F
-	and 	r1, r1, r2
-	mov 	r1, r1, lsl #16
-	orr 	r10, r10, r1
-
-	/* GPIO Reset */
-	tst 	r10, #xlli_RCSR_GPR
-	bne 	1f
-
-	/* Hardware/Power On reset */
-	tst 	r10, #xlli_RCSR_HWR
-	bne 	1f
-
-	/* Watchdog reset */
-	tst	r10, #xlli_RCSR_WDR
-	bne	1f
-
-	/* Sleep or Deep sleep Mode Reset */
-	tst 	r10, #xlli_RCSR_SMR
-	add 	r12, r12, #0x1
-	bne 	2f
-
-1:
-	/* Read system configuration and LCD configuration,
-         * stored in PSPR 
-	 */
-	bl 	xlli_read_SCR
 
-2:
 	/* Initialize GPIO */
-	bl 	xlli_GPIO_init
+1:	bl 	xlli_GPIO_init
 
-	/* Initialize clocks */
-	bl 	xlli_clks_init
+/* Don't toggle WIFI PDn
+	ldr     r2,  =xlli_GPIOREGS_PHYSICAL_BASE   @ Load the GPIO register block base address
+	mov     r1,  #0x0200						@ Take WIFI PDn low
+	str     r1,  [r2, #xlli_GPCR0_offset]       
+	
+	ldr     r2,  =xlli_OSTREGS_PHYSICAL_BASE @ Load OS timer base address
+	ldr     r3,  [r2, #xlli_OSCR0_offset]    @ Fetch starting value of OSCR0
+	add     r3,  r3,  #0x50000                 @ about 100ms
+	
+delay_100ms:  
+	ldr     r1,  [r2, #xlli_OSCR0_offset]    @ Fetch current OSCR0 value
+	cmp     r1,  r3                          @ Is the timer past the time out value?
+	bmi     delay_100ms                          @ No - Loop until it is
+	
+	ldr     r2,  =xlli_GPIOREGS_PHYSICAL_BASE   @ Load the GPIO register block base address
+	mov     r1,  #0x0200						
+	str     r1,  [r2, #xlli_GPSR0_offset]       @ Take WIFI PDn high
+*/
+@
+@       Save the TI PMU address in the FFUART scratch pad register
+@
+        mov    r1,  #0x90                        @ Set PMU codec base address
+        ldr    r2,  =FFUART_PHYSICAL_BASE    @ Fetch base address of FFUART
+        str    r1,  [r2, #UASPR_offset]      @ Store I2C address in the scratch pad register
+@
+@ Enable active discharge on switching regulators
+@
+	mov	r4, #0x05			@ register to write
+	mov	r5, #0x47		@ data to write
+	bl	bbu_putPI2C
+
+
+@ Turn on the clock to the MMC/SD interface (this works)
+		ldr		r1, =MMC_STRPCL
+		mov		r2, #0x2
+		str		r2,	[r1]
+
+@ Now init the interface
+		ldr		r1, =MMC_CMDAT
+		mov		r2, #0xC0		@ Enable 1 bit data transfer and send 80 init clocks. Enable DMA
+		str		r2,	[r1]
+	
+
+ 
+@ Set the PLLs to max out the clock speeds
+
+        mov    r2,  #0x190                                  @ Set the core frequency to 312MHz and bus to 104MHz
+        ldr    r4,  =xlli_CLKREGS_PHYSICAL_BASE             @ Load clock registers base address
+        str    r2,  [r4, #xlli_CCCR_offset]                 @ Write to the clock config register
+        bl     xlli_freq_change                             @ Frequency change sequence & restart memory controller
+@
+@ Set the SDRAM clock to 1X bus clock
+@
+        ldr    r1,  =xlli_MEMORY_CONFIG_BASE    @ Clock registers base address
+		ldr	   r4,  =0x2011A01E
+        str    r4,  [r1,  #xlli_MDREFR_offset]  @ Write data to register (this sets the SDRAM clock to 104MHz)
+
+@
+@ Set the Turbo bit
+@
+
+		mov    r7, #0x1
+        mrc    p14, 0, r6, c6, c0, 0    @ Get data in CP14, Register 6
+        bic    r6,  r6,  #1             @ Clear Turbo bit
+        bic    r6,  r6,  #2             @ Make sure the frequency change bit is cleared
+        orr    r6,  r6,  r7             @ Update with value from user
+        mcr    p14, 0, r6, c6, c0, 0    @ Write data to CP14, Register 6
+
+
+	/* Initialize clocks 
+	bl 	xlli_clks_init    */
+
+	/* Initialize the STUART */
+	ldr	r0,	=STUART_PHYSICAL_BASE
+	ldr r2, =BAUD_115200
+
+	bl	xlli_UART_init
+
+	/* Initialize the FFUART - This is the Modem chip */
+	ldr	r0,	=FFUART_PHYSICAL_BASE
+	ldr r2, =BAUD_38400
+
+	bl	xlli_UART_init
+
+	/* Initialize the BTART -- This is the RF Dolphin chip */
+	ldr	r0,	=BTUART_PHYSICAL_BASE
+	ldr r2, =BAUD_19200
+
+	bl	xlli_UART_init
 
 	/* Intialize power manager and internal memory */
 	bl 	xlli_pwrmgr_init
@@ -102,95 +145,105 @@
 	tst 	r12, #0x1
 	blne 	xlli_clks_init_sleepReset
 
-	/* Perform frequence change */
-	bl	xlli_mem_Tmax
-	bl	xlli_mem_restart
-	bl 	xlli_setClocks
-	bl 	xlli_freq_change
-	bl	xlli_mem_Topt
-	bl	xlli_mem_restart
-
 	/* Initialize OS timer */
 	bl 	xlli_ost_init
 
-	/* Check whether last sleep due to vdd/batt error: pspr should 
-	 * has special value 0x3 :
-         * - if so, do normal boot
-         * - otherwise, do suspend/resume
-         */
-	ldr 	r0, =xlli_PMRCREGS_PHYSICAL_BASE
-	ldr	r1, [r0, #xlli_PSPR_offset]
-	tst	r12, #0x1
-	cmpne	r1, #0x3
-	movne	pc, r1
+@
+@ JWK - check wakeup reason
+@
+        ldr    r2,  =xlli_PMRCREGS_PHYSICAL_BASE @ get base address of power mgr / reset control regs
+        
+		ldr    r4, [r2, #xlli_RCSR_offset]		@ read the Reset Controller Status Register
+		str    r4, [r2, #xlli_RCSR_offset]		@ reset the Reset Controller Status Register
+@
+@ JWK - if Watchdog, let it come up
+@
+        tst    r4, #xlli_RCSR_WDR
+        bne    allow_wakeup
+        
+@
+@ JWK - if Sleep Mode reset, issue a watchdog reset
+@
+        tst    r4, #xlli_RCSR_SMR
+        bne    issue_watchdog_reset
+@        bne    allow_wakeup
+        
+@		ldr    r4, [r2, #xlli_PSPR_offset]		@ read the Scratch pad register
+@        tst    r4, #3
+@        bne    allow_wakeup
+
+@
+@ JWK - else, go back to sleep
+@
+
+go_to_sleep:
+        
+        mov    r1, #7
+		mcr    p14, 0, r1, c7, c0, 0		@ go to Deep Sleep
+sleep:
+		b		sleep
+
+issue_watchdog_reset:
+/* Don't take WIFI_PDn low
+	ldr     r2,  =xlli_GPIOREGS_PHYSICAL_BASE   @ Load the GPIO register block base address
+	mov     r1,  #0x0200						@ Take WIFI PDn low
+	str     r1,  [r2, #xlli_GPCR0_offset]       
+*/
+	ldr    r2,  =xlli_OSTREGS_PHYSICAL_BASE @ get base address for os timer registers
+	
+	mov		r1, #0x01							@ enable Watchdog match to generate reset
+	str		r1,  [r2, #xlli_OWER_offset]
+	
+	mov		r1, #0x08							@ Clear the Match Status for Watchdog
+	str		r1,  [r2, #xlli_OSSR_offset]
+
+	ldr		r1, [r2, #xlli_OSCR0_offset]
+	add		r1, r1, #0x50000					@ reset in 100 ms
+	str		r1, [r2, #xlli_OSMR3_offset]
+	
+	b sleep
+
+allow_wakeup:
+
+	ldr     r2,  =xlli_OSTREGS_PHYSICAL_BASE @ Load OS timer base address
+	ldr     r3,  [r2, #xlli_OSCR0_offset]    @ Fetch starting value of OSCR0
+	add     r3,  r3,  #0x50000                 @ about 100ms
+	
+delay_100ms:  
+	ldr     r1,  [r2, #xlli_OSCR0_offset]    @ Fetch current OSCR0 value
+	cmp     r1,  r3                          @ Is the timer past the time out value?
+	bmi     delay_100ms                          @ No - Loop until it is
+	
+	ldr     r2,  =xlli_GPIOREGS_PHYSICAL_BASE   @ Load the GPIO register block base address
+	mov     r1,  #0x4200						
+	str     r1,  [r2, #xlli_GPSR0_offset]       @ Take WIFI PDn high
 
 	bl normal_boot
 
-	/* should never be here */
-	blink	#1
-
 .globl undefined_instruction
 undefined_instruction:
-	blink	#2
+nop
 
 .globl software_interrupt
 software_interrupt:
-	blink	#3
+
 
 .globl prefetch_abort
 prefetch_abort:
-	blink	#4
+nop
 
 .globl data_abort
 data_abort:
-	blink	#5
+nop
 
 .globl not_used
 not_used:
-	blink	#6
+nop
 
 .globl irq
 irq:
-	blink	#7
+nop
 
 .globl fiq
 fiq:
-	blink	#8
-
-ledset:
-	mov		pc, lr
-
-ledclear:
-	mov		pc, lr
-
-ledsetup:
-	mov		r2, lr
-	bl		ledclear
-	mov		pc, r2
-
-.macro wait, count
-	mov		r0, \count
-0:
-	subs	r0, r0, #1
-	bne		0b
-.endm
-
-ledflash:
-	mov		r2, lr
-	bl		ledset
-	wait	#0x400000
-	bl		ledclear
-	wait	#0x400000
-	mov		pc, r2
-
-endless_blink:
-	mov		r4, r3
-        ldr     	r1, =(xlli_PLATFORM_REGISTERS + xlli_PLATFORM_HEXLED_DATA_offset)
-	str		r3, [r1]
-0:
-	bl		ledflash
-	subs	r4, r4, #1
-	bne		0b
-	wait	#0x2000000
-	b		endless_blink
-
+nop
Index: build_tree/bootLoader/src/blob/xlli/mainstone/xlli_Bulverde_defs.inc
diff -u build_tree/bootLoader/src/blob/xlli/mainstone/xlli_Bulverde_defs.inc:1.1.1.1 build_tree/bootLoader/src/blob/xlli/mainstone/xlli_Bulverde_defs.inc:1.1.1.2
--- build_tree/bootLoader/src/blob/xlli/mainstone/xlli_Bulverde_defs.inc:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/xlli/mainstone/xlli_Bulverde_defs.inc	Fri Nov  9 10:37:08 2007
@@ -1,13 +1,17 @@
 @*********************************************************************************
 @
-@ Copyright (C) 2004, Intel Corporation
+@        COPYRIGHT (c) 2002 - 2004 Intel Corporation
 @
-@ This software program is licensed subject to the GNU General Public License
-@ (GPL).Version 2,June 1991, available at http://www.fsf.org/copyleft/gpl.html
+@   The information in this file is furnished for informational use only,
+@   is subject to change without notice, and should not be construed as
+@   a commitment by Intel Corporation. Intel Corporation assumes no
+@   responsibility or liability for any errors or inaccuracies that may appear
+@   in this document or any software that may be provided in association with
+@   this document.
 @
 @*********************************************************************************
 @
-@  FILENAME:       xlli_Bulverde_defs.inc (Core processor address definitions for PXA27x)
+@  FILENAME:       .equ     xlli_Bulverde_defs.inc (Core processor address definitions for PXA27x)
 @
 @ LAST MODIFIED:   5-Apr-2004
 @
@@ -21,345 +25,382 @@
 @ GENERAL PURPOSE I/O (GPIO) base address and register offsets from the base address
 @
 
-	 .equ 	xlli_GPIOREGS_PHYSICAL_BASE,0x40E00000
+.equ     xlli_GPIOREGS_PHYSICAL_BASE	 , 	0x40E00000
 
 @ GPIO register offsets from the base address
 
-    .equ    xlli_GPLR0_offset,(0x000)  @ GPIO Level registers
-    .equ    xlli_GPLR1_offset,(0x004)
-    .equ    xlli_GPLR2_offset,(0x008)
-    .equ    xlli_GPLR3_offset,(0x100)
-
-    .equ    xlli_GPDR0_offset,(0x00C)  @ GPIO Direction registers
-    .equ    xlli_GPDR1_offset,(0x010)
-    .equ    xlli_GPDR2_offset,(0x014)
-    .equ    xlli_GPDR3_offset,(0x10C)
-
-    .equ    xlli_GPSR0_offset,(0x018)  @ GPIO Set registers
-    .equ    xlli_GPSR1_offset,(0x01C)
-    .equ    xlli_GPSR2_offset,(0x020)
-    .equ    xlli_GPSR3_offset,(0x118)
-
-    .equ    xlli_GPCR0_offset,(0x024)  @ GPIO Clear registers
-    .equ    xlli_GPCR1_offset,(0x028)
-    .equ    xlli_GPCR2_offset,(0x02C)
-    .equ    xlli_GPCR3_offset,(0x124)
-
-  .equ    xlli_GAFR0_L_offset,(0x054)  @ GPIO Alternate function registers (Bits 15:0)
-  .equ    xlli_GAFR0_U_offset,(0x058)  @ Bits 31:16
-  .equ    xlli_GAFR1_L_offset,(0x05c)  @ Bits 47:32
-  .equ    xlli_GAFR1_U_offset,(0x060)  @ Bits 63:48
-  .equ    xlli_GAFR2_L_offset,(0x064)  @ Bits 79:64
-  .equ    xlli_GAFR2_U_offset,(0x068)  @ Bits 95:80
-  .equ    xlli_GAFR3_L_offset,(0x06C)  @ Bits 111:96
-  .equ    xlli_GAFR3_U_offset,(0x070)  @ Bits 127:112
+.equ     xlli_GPLR0_offset    ,    (0x000)  @ GPIO Level registers
+.equ     xlli_GPLR1_offset    ,    (0x004)
+.equ     xlli_GPLR2_offset    ,    (0x008)
+.equ     xlli_GPLR3_offset    ,    (0x100)
+
+.equ     xlli_GPDR0_offset    ,    (0x00C)  @ GPIO Direction registers
+.equ     xlli_GPDR1_offset    ,    (0x010)
+.equ     xlli_GPDR2_offset    ,    (0x014)
+.equ     xlli_GPDR3_offset    ,    (0x10C)
+
+.equ     xlli_GPSR0_offset    ,    (0x018)  @ GPIO Set registers
+.equ     xlli_GPSR1_offset    ,    (0x01C)
+.equ     xlli_GPSR2_offset    ,    (0x020)
+.equ     xlli_GPSR3_offset    ,    (0x118)
+
+.equ     xlli_GPCR0_offset    ,    (0x024)  @ GPIO Clear registers
+.equ     xlli_GPCR1_offset    ,    (0x028)
+.equ     xlli_GPCR2_offset    ,    (0x02C)
+.equ     xlli_GPCR3_offset    ,    (0x124)
+
+.equ     xlli_GAFR0_L_offset  ,    (0x054)  @ GPIO Alternate function registers (Bits 15:0)
+.equ     xlli_GAFR0_U_offset  ,    (0x058)  @ Bits 31:16
+.equ     xlli_GAFR1_L_offset  ,    (0x05c)  @ Bits 47:32
+.equ     xlli_GAFR1_U_offset  ,    (0x060)  @ Bits 63:48
+.equ     xlli_GAFR2_L_offset  ,    (0x064)  @ Bits 79:64
+.equ     xlli_GAFR2_U_offset  ,    (0x068)  @ Bits 95:80
+.equ     xlli_GAFR3_L_offset  ,    (0x06C)  @ Bits 111:96
+.equ     xlli_GAFR3_U_offset  ,    (0x070)  @ Bits 127:112
 
 @
 @ POWER MANAGER base address and register offsets from the base address
 @
 
-	 .equ 	xlli_PMRCREGS_PHYSICAL_BASE,0x40F00000 
+.equ     xlli_PMRCREGS_PHYSICAL_BASE	 , 	0x40F00000 
 
-        .equ     xlli_PMCR_offset,(0x00)  @ Power Manager Control Register
-        .equ     xlli_PSSR_offset,(0x04)  @ Power Manager Sleep Status Register
-        .equ     xlli_PSPR_offset,(0x08)  @ Power Manager Scratch Pad Register
-        .equ     xlli_PWER_offset,(0x0C)  @ Power Manager Wake-up Enable Register
-        .equ     xlli_PRER_offset,(0x10)  @ Power Manager GPIO Rising-edge Detect Enable Register
-        .equ     xlli_PFER_offset,(0x14)  @ Power Manager GPIO Falling-edge Detect Enable Register
-        .equ     xlli_PEDR_offset,(0x18)  @ Power Manager GPIO Edge Detect Status Register
-        .equ     xlli_PCFR_offset,(0x1C)  @ Power Manager General Configuration Register
-       .equ     xlli_PGSR0_offset,(0x20)  @ Power Manager GPIO Sleep State Register for GP [31-0]
-       .equ     xlli_PGSR1_offset,(0x24)  @ Power Manager GPIO Sleep State Register for GP [63-32]
-       .equ     xlli_PGSR2_offset,(0x28)  @ Power Manager GPIO Sleep State Register for GP [95-64]
-       .equ     xlli_PGSR3_offset,(0x2C)  @ Power Manager GPIO Sleep State Register for GP [120-96]
-        .equ     xlli_RCSR_offset,(0x30)  @ Reset Controller Status Register
-        .equ     xlli_PSLR_offset,(0x34)  @ Power Manager Sleep Mode Config Register
-        .equ     xlli_PSTR_offset,(0x38)  @ Power Manager Standby Mode Config Register
-        .equ     xlli_PSNR_offset,(0x3C)  @ Power Manager Sense Moce Config Register
-        .equ     xlli_PVCR_offset,(0x40)  @ Power Manager Voltage Change Control Register
-        .equ     xlli_PKWR_offset,(0x50)  @ Power Manager Keyboard Wake-up Enable Register
-        .equ     xlli_PKSR_offset,(0x54)  @ Power Manager Keyboard Edge-Detect Status Register
-      .equ     xlli_PI2DBR_offset,(0x188) @ Power I2C Data Buffer Register
-       .equ     xlli_PI2CR_offset,(0x190) @ Power I2C Control Register
-       .equ     xlli_PI2SR_offset,(0x198) @ Power I2C Status Register
-      .equ     xlli_PI2SAR_offset,(0x1A0) @ Power I2C Slave Address Register
+.equ     xlli_PMCR_offset        ,     (0x00)  @ Power Manager Control Register
+.equ     xlli_PSSR_offset        ,     (0x04)  @ Power Manager Sleep Status Register
+.equ     xlli_PSPR_offset        ,     (0x08)  @ Power Manager Scratch Pad Register
+.equ     xlli_PWER_offset        ,     (0x0C)  @ Power Manager Wake-up Enable Register
+.equ     xlli_PRER_offset        ,     (0x10)  @ Power Manager GPIO Rising-edge Detect Enable Register
+.equ     xlli_PFER_offset        ,     (0x14)  @ Power Manager GPIO Falling-edge Detect Enable Register
+.equ     xlli_PEDR_offset        ,     (0x18)  @ Power Manager GPIO Edge Detect Status Register
+.equ     xlli_PCFR_offset        ,     (0x1C)  @ Power Manager General Configuration Register
+.equ     xlli_PGSR0_offset       ,     (0x20)  @ Power Manager GPIO Sleep State Register for GP [31-0]
+.equ     xlli_PGSR1_offset       ,     (0x24)  @ Power Manager GPIO Sleep State Register for GP [63-32]
+.equ     xlli_PGSR2_offset       ,     (0x28)  @ Power Manager GPIO Sleep State Register for GP [95-64]
+.equ     xlli_PGSR3_offset       ,     (0x2C)  @ Power Manager GPIO Sleep State Register for GP [120-96]
+.equ     xlli_RCSR_offset        ,     (0x30)  @ Reset Controller Status Register
+.equ     xlli_PSLR_offset        ,     (0x34)  @ Power Manager Sleep Mode Config Register
+.equ     xlli_PSTR_offset        ,     (0x38)  @ Power Manager Standby Mode Config Register
+.equ     xlli_PSNR_offset        ,     (0x3C)  @ Power Manager Sense Moce Config Register
+.equ     xlli_PVCR_offset        ,     (0x40)  @ Power Manager Voltage Change Control Register
+.equ     xlli_PKWR_offset        ,     (0x50)  @ Power Manager Keyboard Wake-up Enable Register
+.equ     xlli_PKSR_offset        ,     (0x54)  @ Power Manager Keyboard Edge-Detect Status Register
+.equ     xlli_PI2DBR_offset      ,     (0x188) @ Power I2C Data Buffer Register
+.equ     xlli_PI2CR_offset       ,     (0x190) @ Power I2C Control Register
+.equ     xlli_PI2SR_offset       ,     (0x198) @ Power I2C Status Register
+.equ     xlli_PI2SAR_offset      ,     (0x1A0) @ Power I2C Slave Address Register
 
 @
 @ POWER MANAGER register bit masks 
 @
-           .equ     xlli_PSSR_SSS,(0x01)  @ Software Sleep Status
-           .equ     xlli_PSSR_BFS,(0x02)  @ Battery Fault Status
-           .equ     xlli_PSSR_VFS,(0x04)  @ VCC Fault Status
-            .equ     xlli_PSSR_PH,(0x10)  @ Peripheral Control Hold
-           .equ     xlli_PSSR_RDH,(0x20)  @ Read Disable Hold
-
-          .equ     xlli_PCFR_OPDE,(0x01)  @ Processor (13MHz) osc power-down enable
-            .equ     xlli_PCFR_FP,(0x02)  @ Float PCMCIA during sleep modes
-            .equ     xlli_PCFR_FS,(0x04)  @ Float Static Chip Selects
-        .equ     xlli_PCFR_GPR_EN,(0x10)  @ GPIO 1 performs GPIO reset
-      .equ     xlli_PCFR_SYSEN_EN,(0x20)  @ SYS_EN pin
-       .equ     xlli_PCFR_PI2C_EN,(0x40)  @
-         .equ     xlli_PCFR_DC_EN,(0x80)  @ Deep-Sleep Mode
-           .equ     xlli_PCFR_FVC,(0x400) @
-         .equ     xlli_PCFR_L1_EN,(0x800) @
-         .equ     xlli_PCFR_GPROD,(0x1000) @
-            .equ     xlli_PCFR_PO,(0x4000) @
-            .equ     xlli_PCFR_RO,(0x8000) @
-      .equ     xlli_PCFR_USEDBITS,(xlli_PCFR_OPDE | xlli_PCFR_FP | xlli_PCFR_FS | xlli_PCFR_GPR_EN | xlli_PCFR_SYSEN_EN| xlli_PCFR_PI2C_EN | xlli_PCFR_DC_EN | xlli_PCFR_FVC | xlli_PCFR_L1_EN| xlli_PCFR_GPROD | xlli_PCFR_PO | xlli_PCFR_RO)
-           .equ     xlli_PWER_WE0,(0x01)          @ Wake-up Enable GPIO pin 0
-           .equ     xlli_PWER_WE1,(0x02)          @ Wake-up Enable GPIO pin 1
-         .equ     xlli_PWER_WERTC,(0x80000000)    @ RTC Standby, Wake-up Enable-
+.equ     xlli_PSSR_SSS           ,     (0x01)  @ Software Sleep Status
+.equ     xlli_PSSR_BFS           ,     (0x02)  @ Battery Fault Status
+.equ     xlli_PSSR_VFS           ,     (0x04)  @ VCC Fault Status
+.equ     xlli_PSSR_PH            ,     (0x10)  @ Peripheral Control Hold
+.equ     xlli_PSSR_RDH           ,     (0x20)  @ Read Disable Hold
+
+.equ     xlli_PCFR_OPDE          ,     (0x01)  @ Processor (13MHz) osc power-down enable
+.equ     xlli_PCFR_FP            ,     (0x02)  @ Float PCMCIA during sleep modes
+.equ     xlli_PCFR_FS            ,     (0x04)  @ Float Static Chip Selects
+.equ     xlli_PCFR_GPR_EN        ,     (0x10)  @ GPIO 1 performs GPIO reset
+.equ     xlli_PCFR_SYSEN_EN      ,     (0x20)  @ SYS_EN pin
+.equ     xlli_PCFR_PI2C_EN       ,     (0x40)  @
+.equ     xlli_PCFR_DC_EN         ,     (0x80)  @ Deep-Sleep Mode
+.equ     xlli_PCFR_FVC           ,     (0x400) @
+.equ     xlli_PCFR_L1_EN         ,     (0x800) @
+.equ     xlli_PCFR_GPROD         ,     (0x1000) @
+.equ     xlli_PCFR_PO            ,     (0x4000) @
+.equ     xlli_PCFR_RO            ,     (0x8000) @
+.equ     xlli_PCFR_USEDBITS,(xlli_PCFR_OPDE | xlli_PCFR_FP | xlli_PCFR_FS | xlli_PCFR_GPR_EN | xlli_PCFR_SYSEN_EN| xlli_PCFR_PI2C_EN | xlli_PCFR_DC_EN | xlli_PCFR_FVC | xlli_PCFR_L1_EN| xlli_PCFR_GPROD | xlli_PCFR_PO | xlli_PCFR_RO)
+.equ     xlli_PWER_WE0           ,     (0x01)          @ Wake-up Enable GPIO pin 0
+.equ     xlli_PWER_WE1           ,     (0x02)          @ Wake-up Enable GPIO pin 1
+.equ     xlli_PWER_WERTC         ,     (0x80000000)    @ RTC Standby, Wake-up Enable-
 
 @
 @ MEMORY CONTROLLER base address and register offsets from the base address 
 @
 
- .equ     xlli_MEMORY_CONFIG_BASE,0x48000000
+.equ     xlli_MEMORY_CONFIG_BASE ,     0x48000000
 
-      .equ     xlli_MDCNFG_offset,(0x00)
-      .equ     xlli_MDREFR_offset,(0x04)
-        .equ     xlli_MSC0_offset,(0x08)
-        .equ     xlli_MSC1_offset,(0x0C)
-        .equ     xlli_MSC2_offset,(0x10)
-        .equ     xlli_MECR_offset,(0x14)
-       .equ     xlli_SXLCR_offset,(0x18)
-      .equ     xlli_SXCNFG_offset,(0x1C)
-     .equ     xlli_FLYCNFG_offset,(0x20)
-       .equ     xlli_SXMRS_offset,(0x24)                                       
-      .equ     xlli_MCMEM0_offset,(0x28)
-      .equ     xlli_MCMEM1_offset,(0x2C)
-      .equ     xlli_MCATT0_offset,(0x30)
-      .equ     xlli_MCATT1_offset,(0x34)
-       .equ     xlli_MCIO0_offset,(0x38)
-       .equ     xlli_MCIO1_offset,(0x3C)
-       .equ     xlli_MDMRS_offset,(0x40)
-    .equ     xlli_BOOT_DEF_offset,(0x44)
-    .equ     xlli_ARB_CNTL_offset,(0x48)
-     .equ     xlli_BSCNTR0_offset,(0x4C)
-     .equ     xlli_BSCNTR1_offset,(0x50)
-   .equ     xlli_LCDBSCNTR_offset,(0x54)
-     .equ     xlli_MDMRSLP_offset,(0x58)
-     .equ     xlli_BSCNTR2_offset,(0x5C)
-     .equ     xlli_BSCNTR3_offset,(0x60)
+.equ     xlli_MDCNFG_offset      ,     (0x00)
+.equ     xlli_MDREFR_offset      ,     (0x04)
+.equ     xlli_MSC0_offset        ,     (0x08)
+.equ     xlli_MSC1_offset        ,     (0x0C)
+.equ     xlli_MSC2_offset        ,     (0x10)
+.equ     xlli_MECR_offset        ,     (0x14)
+.equ     xlli_SXLCR_offset       ,     (0x18)
+.equ     xlli_SXCNFG_offset      ,     (0x1C)
+.equ     xlli_FLYCNFG_offset     ,     (0x20)
+.equ     xlli_SXMRS_offset       ,     (0x24)                                       
+.equ     xlli_MCMEM0_offset      ,     (0x28)
+.equ     xlli_MCMEM1_offset      ,     (0x2C)
+.equ     xlli_MCATT0_offset      ,     (0x30)
+.equ     xlli_MCATT1_offset      ,     (0x34)
+.equ     xlli_MCIO0_offset       ,     (0x38)
+.equ     xlli_MCIO1_offset       ,     (0x3C)
+.equ     xlli_MDMRS_offset       ,     (0x40)
+.equ     xlli_BOOT_DEF_offset    ,     (0x44)
+.equ     xlli_ARB_CNTL_offset    ,     (0x48)
+.equ     xlli_BSCNTR0_offset     ,     (0x4C)
+.equ     xlli_BSCNTR1_offset     ,     (0x50)
+.equ     xlli_LCDBSCNTR_offset   ,     (0x54)
+.equ     xlli_MDMRSLP_offset     ,     (0x58)
+.equ     xlli_BSCNTR2_offset     ,     (0x5C)
+.equ     xlli_BSCNTR3_offset     ,     (0x60)
 
 @ Memory Controller bit defs
 
-       .equ     xlli_MDREFR_K0DB4,(0x20000000)    @ Sync Static Clock 0 divide by 4 control/status
-      .equ     xlli_MDREFR_K2FREE,(0x02000000)    @ Set to force SDCLK[2] to be free running
-      .equ     xlli_MDREFR_K1FREE,(0x01000000)    @ Set to force SDCLK[1] to be free running
-      .equ     xlli_MDREFR_K0FREE,(0x00800000)    @ Set to force SDCLK[0] to be free running
-      .equ     xlli_MDREFR_SLFRSH,(0x00400000)    @ Self Refresh Control Status bit
-         .equ     xlli_MDREFR_APD,(0x00100000)    @ Auto Power Down bit
-       .equ     xlli_MDREFR_K2DB2,(0x00080000)    @ SDRAM clock pin 2 divide by 2 control/status
-       .equ     xlli_MDREFR_K1DB2,(0x00020000)    @ SDRAM clock pin 1 divide by 2 control/status
-       .equ     xlli_MDREFR_K1RUN,(0x00010000)    @ SDRAM clock pin 1 run/control status
-       .equ     xlli_MDREFR_E1PIN,(0x00008000)    @ SDRAM clock Enable pin 1 level control/status
-       .equ     xlli_MDREFR_K0DB2,(0x00004000)    @ Sync Static Memory Clock divide by 2 control/status
-       .equ     xlli_MDREFR_K0RUN,(0x00002000)    @ Sync Static Memory Clock Pin 0
-       .equ     xlli_MDREFR_E0PIN,(0x00000100)    @ SDRAM clock enable pin 0 (Cotulla ONLY!!)
-
-         .equ     xlli_MDCNFG_DE0,(0x00000001)    @ SDRAM enable bit for partition 0
-         .equ     xlli_MDCNFG_DE1,(0x00000002)    @ SDRAM enable bit for partition 1
-         .equ     xlli_MDCNFG_DE2,(0x00010000)    @ SDRAM enable bit for partition 2
-         .equ     xlli_MDCNFG_DE3,(0x00020000)    @ SDRAM enable bit for partition 3
-       .equ     xlli_MDCNFG_DWID0,(0x00000004)    @ SDRAM bus width (clear = 32 bits, set = 16 bits)
+.equ     xlli_MDREFR_K0DB4       ,     (0x20000000)    @ Sync Static Clock 0 divide by 4 control/status
+.equ     xlli_MDREFR_K2FREE      ,     (0x02000000)    @ Set to force SDCLK[2] to be free running
+.equ     xlli_MDREFR_K1FREE      ,     (0x01000000)    @ Set to force SDCLK[1] to be free running
+.equ     xlli_MDREFR_K0FREE      ,     (0x00800000)    @ Set to force SDCLK[0] to be free running
+.equ     xlli_MDREFR_SLFRSH      ,     (0x00400000)    @ Self Refresh Control Status bit
+.equ     xlli_MDREFR_APD         ,     (0x00100000)    @ Auto Power Down bit
+.equ     xlli_MDREFR_K2DB2       ,     (0x00080000)    @ SDRAM clock pin 2 divide by 2 control/status
+.equ     xlli_MDREFR_K1DB2       ,     (0x00020000)    @ SDRAM clock pin 1 divide by 2 control/status
+.equ     xlli_MDREFR_K1RUN       ,     (0x00010000)    @ SDRAM clock pin 1 run/control status
+.equ     xlli_MDREFR_E1PIN       ,     (0x00008000)    @ SDRAM clock Enable pin 1 level control/status
+.equ     xlli_MDREFR_K0DB2       ,     (0x00004000)    @ Sync Static Memory Clock divide by 2 control/status
+.equ     xlli_MDREFR_K0RUN       ,     (0x00002000)    @ Sync Static Memory Clock Pin 0
+.equ     xlli_MDREFR_E0PIN       ,     (0x00000100)    @ SDRAM clock enable pin 0 (Cotulla ONLY!!)
+
+.equ     xlli_MDCNFG_DE0         ,     (0x00000001)    @ SDRAM enable bit for partition 0
+.equ     xlli_MDCNFG_DE1         ,     (0x00000002)    @ SDRAM enable bit for partition 1
+.equ     xlli_MDCNFG_DE2         ,     (0x00010000)    @ SDRAM enable bit for partition 2
+.equ     xlli_MDCNFG_DE3         ,     (0x00020000)    @ SDRAM enable bit for partition 3
+.equ     xlli_MDCNFG_DWID0       ,     (0x00000004)    @ SDRAM bus width (clear = 32 bits, set = 16 bits)
 
 @
 @ INTERNAL MEMORY CONTROLLER base address and register offsets from the base address 
 @
 
-        .equ     xlli_IMEMORY_CONFIG_BASE,(0x58000000)
+.equ     xlli_IMEMORY_CONFIG_BASE        ,     (0x58000000)
 
-              .equ     xlli_IMPMCR_offset,(0x00)  @ Internal Memory Power Manager Control Register
-              .equ     xlli_IMPMSR_offset,(0x08)  @ Internal Memory Power Management Status Register
+.equ     xlli_IMPMCR_offset              ,     (0x00)  @ Internal Memory Power Manager Control Register
+.equ     xlli_IMPMSR_offset              ,     (0x08)  @ Internal Memory Power Management Status Register
+
+
+@
+@  SSUART settings
+@
+.equ     STUART_PHYSICAL_BASE    ,    0x40700000   @ Standard UART base address
+
+.equ     UARBR_offset     ,     (0X0)   @ UART Receive Buffer Register offset
+.equ     UATHR_offset	 ,     (0X0)   @ UART Transmit Holding Register offset
+.equ     UAIER_offset	 ,     (0x4)   @ UART Interrupt Enable Register offset
+.equ     UAIIR_offset	 ,     (0x8)   @ UART Interrupt ID Register offset
+.equ     UAFCR_offset	 ,     (0x8)   @ UART FIFO Control Register offset
+.equ     UALCR_offset	 ,     (0xC)   @ UART Line Control Register offset
+.equ     UAMCR_offset	 ,     (0x10)  @ UART Modem Control Register offset
+.equ     UALSR_offset	 ,     (0x14)  @ UART Line Status Register offset
+.equ     UAMSR_offset	 ,     (0x18)  @ UART Modem Status Register offset
+.equ     UASPR_offset	 ,     (0x1C)  @ UART Scratch Pad Register offset
+.equ     UADLL_offset	 ,     (0x0)   @ UART Divisor Latch Register (low) offset
+.equ     UADLH_offset	 ,     (0X4)   @ UART Divisor Latch Register (high) offset
+.equ     UAISR_offset	 ,     (0x20)  @ UART Slow Infrared Selector Register offset
+
+@ Misc UART data 
+
+.equ     BAUD_4800    ,     (0xC0)      @ UART Divisor low bye setting for 4800 baud
+.equ     BAUD_9600    ,     (0x60)      @ UART Divisor low bye setting for 9600 baud
+.equ     BAUD_19200   ,     (0X30)      @ UART Divisor low bye setting for 19200 baud
+.equ     BAUD_38400   ,     (0x18)      @ UART Divisor low bye setting for 38400 baud
+.equ     BAUD_57600   ,     (0x10)      @ UART Divisor low bye setting for 57600 baud
+.equ     BAUD_115200  ,     (0X08)      @ UART Divisor low bye setting for 115200 baud
+
+@ UART BIT DEFINITIONS 
+
+.equ     TDRQ     ,     (0x20)   @ Transmit Data Request
+.equ     TEMT     ,     (0x40)   @ Transmitter Empty bit
+.equ     DR       ,     (0x01)   @ Data Ready bit
+.equ     DLAB	  ,     (0x80)   @ DLAB bit
+.equ     nBT_OFF  ,     (0x100)  @ BTUART Tranceiver Control Bit
+.equ     BTDTR    ,     (0x80)   @ BTUART Data Terminal Ready bit
 
 
 @
 @ INTERRUPT CONTROLLER base address and register offsets from the base address
 @ 
 
-      .equ     xlli_INTERREGS_PHYSICAL_BASE,(0x40D00000)
+.equ     xlli_INTERREGS_PHYSICAL_BASE      ,     (0x40D00000)
 
-        .equ     xlli_ICIP_offset,(0x00)   @ Interrupt Controller IRQ Pending Register
-        .equ     xlli_ICMR_offset,(0x04)   @ Interrupt Controller Mask Register
-        .equ     xlli_ICLR_offset,(0x08)   @ Interrupt Controller Level Register
-        .equ     xlli_ICFP_offset,(0x0C)   @ Interrupt Controller FIQ pending Register
-        .equ     xlli_ICPR_offset,(0x10)   @ Interrupt Controller Pending Register
-        .equ     xlli_ICCR_offset,(0x14)   @ Interrupt Controller Control Register
-        .equ     xlli_ICHP_offset,(0x18)   @ Interrupt Controller Highest Priority Reg
-       .equ     xlli_ICMR2_offset,(0xA0)   @ Interrupt Controller Mask Register 2
-       .equ     xlli_ICLR2_offset,(0xA4)   @ Interrupt Controller Level Register 2
-       .equ     xlli_ICCR2_offset,(0xAC)   @ Interrupt Controller Control Register 2
+.equ     xlli_ICIP_offset        ,     (0x00)   @ Interrupt Controller IRQ Pending Register
+.equ     xlli_ICMR_offset        ,     (0x04)   @ Interrupt Controller Mask Register
+.equ     xlli_ICLR_offset        ,     (0x08)   @ Interrupt Controller Level Register
+.equ     xlli_ICFP_offset        ,     (0x0C)   @ Interrupt Controller FIQ pending Register
+.equ     xlli_ICPR_offset        ,     (0x10)   @ Interrupt Controller Pending Register
+.equ     xlli_ICCR_offset        ,     (0x14)   @ Interrupt Controller Control Register
+.equ     xlli_ICHP_offset        ,     (0x18)   @ Interrupt Controller Highest Priority Reg
+.equ     xlli_ICMR2_offset       ,     (0xA0)   @ Interrupt Controller Mask Register 2
+.equ     xlli_ICLR2_offset       ,     (0xA4)   @ Interrupt Controller Level Register 2
+.equ     xlli_ICCR2_offset       ,     (0xAC)   @ Interrupt Controller Control Register 2
 
 @
 @ CLOCK REGISTERS base address and register offsets from the base address
 @ 
 
-        .equ     xlli_CLKREGS_PHYSICAL_BASE,(0x41300000)
+.equ     xlli_CLKREGS_PHYSICAL_BASE        ,     (0x41300000)
 
-        .equ     xlli_CCCR_offset,(0x00)  @ Core Clock Configuration Register
-        .equ     xlli_CKEN_offset,(0x04)  @ Clock-Enable Register
-        .equ     xlli_OSCC_offset,(0x08)  @ Oscillator Configuration Register
-        .equ     xlli_CCSR_offset,(0x0C)  @ Core Clock Status Register
+.equ     xlli_CCCR_offset        ,     (0x00)  @ Core Clock Configuration Register
+.equ     xlli_CKEN_offset        ,     (0x04)  @ Clock-Enable Register
+.equ     xlli_OSCC_offset        ,     (0x08)  @ Oscillator Configuration Register
+.equ     xlli_CCSR_offset        ,     (0x0C)  @ Core Clock Status Register
 
-    .equ     xlli_CCCR_A_Bit_Mask,(0x1 << 25)     @ "A" bit is bit 25 in CCCR
+.equ     xlli_CCCR_A_Bit_Mask    ,     (0x1 << 25)     @ "A" bit is bit 25 in CCCR
 @
 @ OS TIMER REGISTERS base address and register offsets from the base address
 @ 
 
-        .equ     xlli_OSTREGS_PHYSICAL_BASE,(0x40A00000)
+.equ     xlli_OSTREGS_PHYSICAL_BASE        ,     (0x40A00000)
 
-       .equ     xlli_OSMR0_offset,(0x00)  @ OS Timer Match Register 0
-       .equ     xlli_OSMR1_offset,(0x04)  @ OS Timer Match Register 1
-       .equ     xlli_OSMR2_offset,(0x08)  @ OS Timer Match Register 2
-       .equ     xlli_OSMR3_offset,(0x0C)  @ OS Timer Match Register 3
-
-       .equ     xlli_OSCR0_offset,(0x10)  @ OS Timer Count Register 0
-        .equ     xlli_OSSR_offset,(0x14)  @ OS Timer Status Register
-        .equ     xlli_OWER_offset,(0x18)  @ OS Timer Watchdog Enable Register
-        .equ     xlli_OIER_offset,(0x1C)  @ OS Timer Interrupt Enable Register
-
-       .equ     xlli_OSCR4_offset,(0x40)  @ OS Timer Count Register 4
-       .equ     xlli_OSCR5_offset,(0x44)  @ OS Timer Count Register 5
-       .equ     xlli_OSCR6_offset,(0x48)  @ OS Timer Count Register 6
-       .equ     xlli_OSCR7_offset,(0x4C)  @ OS Timer Count Register 7
-       .equ     xlli_OSCR8_offset,(0x50)  @ OS Timer Count Register 8
-       .equ     xlli_OSCR9_offset,(0x54)  @ OS Timer Count Register 9
-      .equ     xlli_OSCR10_offset,(0x58)  @ OS Timer Count Register 10
-      .equ     xlli_OSCR11_offset,(0x5C)  @ OS Timer Count Register 11
-
-       .equ     xlli_OSMR4_offset,(0x80)  @ OS Timer Match Register 4
-       .equ     xlli_OSMR5_offset,(0x84)  @ OS Timer Match Register 5
-       .equ     xlli_OSMR6_offset,(0x88)  @ OS Timer Match Register 6
-       .equ     xlli_OSMR7_offset,(0x8C)  @ OS Timer Match Register 7
-       .equ     xlli_OSMR8_offset,(0x90)  @ OS Timer Match Register 8
-       .equ     xlli_OSMR9_offset,(0x94)  @ OS Timer Match Register 9
-      .equ     xlli_OSMR10_offset,(0x98)  @ OS Timer Match Register 10
-      .equ     xlli_OSMR11_offset,(0x9C)  @ OS Timer Match Register 11
-
-       .equ     xlli_OMCR4_offset,(0xC0)  @ OS Timer Match Control Register 4
-       .equ     xlli_OMCR5_offset,(0xC4)  @ OS Timer Match Control Register 5
-       .equ     xlli_OMCR6_offset,(0xC8)  @ OS Timer Match Control Register 6
-       .equ     xlli_OMCR7_offset,(0xCC)  @ OS Timer Match Control Register 7
-       .equ     xlli_OMCR8_offset,(0xD0)  @ OS Timer Match Control Register 8
-       .equ     xlli_OMCR9_offset,(0xD4)  @ OS Timer Match Control Register 9
-      .equ     xlli_OMCR10_offset,(0xD8)  @ OS Timer Match Control Register 10
-      .equ     xlli_OMCR11_offset,(0xDC)  @ OS Timer Match Control Register 11
+.equ     xlli_OSMR0_offset       ,     (0x00)  @ OS Timer Match Register 0
+.equ     xlli_OSMR1_offset       ,     (0x04)  @ OS Timer Match Register 1
+.equ     xlli_OSMR2_offset       ,     (0x08)  @ OS Timer Match Register 2
+.equ     xlli_OSMR3_offset       ,     (0x0C)  @ OS Timer Match Register 3
+
+.equ     xlli_OSCR0_offset       ,     (0x10)  @ OS Timer Count Register 0
+.equ     xlli_OSSR_offset        ,     (0x14)  @ OS Timer Status Register
+.equ     xlli_OWER_offset        ,     (0x18)  @ OS Timer Watchdog Enable Register
+.equ     xlli_OIER_offset        ,     (0x1C)  @ OS Timer Interrupt Enable Register
+
+.equ     xlli_OSCR4_offset       ,     (0x40)  @ OS Timer Count Register 4
+.equ     xlli_OSCR5_offset       ,     (0x44)  @ OS Timer Count Register 5
+.equ     xlli_OSCR6_offset       ,     (0x48)  @ OS Timer Count Register 6
+.equ     xlli_OSCR7_offset       ,     (0x4C)  @ OS Timer Count Register 7
+.equ     xlli_OSCR8_offset       ,     (0x50)  @ OS Timer Count Register 8
+.equ     xlli_OSCR9_offset       ,     (0x54)  @ OS Timer Count Register 9
+.equ     xlli_OSCR10_offset      ,     (0x58)  @ OS Timer Count Register 10
+.equ     xlli_OSCR11_offset      ,     (0x5C)  @ OS Timer Count Register 11
+
+.equ     xlli_OSMR4_offset       ,     (0x80)  @ OS Timer Match Register 4
+.equ     xlli_OSMR5_offset       ,     (0x84)  @ OS Timer Match Register 5
+.equ     xlli_OSMR6_offset       ,     (0x88)  @ OS Timer Match Register 6
+.equ     xlli_OSMR7_offset       ,     (0x8C)  @ OS Timer Match Register 7
+.equ     xlli_OSMR8_offset       ,     (0x90)  @ OS Timer Match Register 8
+.equ     xlli_OSMR9_offset       ,     (0x94)  @ OS Timer Match Register 9
+.equ     xlli_OSMR10_offset      ,     (0x98)  @ OS Timer Match Register 10
+.equ     xlli_OSMR11_offset      ,     (0x9C)  @ OS Timer Match Register 11
+
+.equ     xlli_OMCR4_offset       ,     (0xC0)  @ OS Timer Match Control Register 4
+.equ     xlli_OMCR5_offset       ,     (0xC4)  @ OS Timer Match Control Register 5
+.equ     xlli_OMCR6_offset       ,     (0xC8)  @ OS Timer Match Control Register 6
+.equ     xlli_OMCR7_offset       ,     (0xCC)  @ OS Timer Match Control Register 7
+.equ     xlli_OMCR8_offset       ,     (0xD0)  @ OS Timer Match Control Register 8
+.equ     xlli_OMCR9_offset       ,     (0xD4)  @ OS Timer Match Control Register 9
+.equ     xlli_OMCR10_offset      ,     (0xD8)  @ OS Timer Match Control Register 10
+.equ     xlli_OMCR11_offset      ,     (0xDC)  @ OS Timer Match Control Register 11
 
-           .equ     xlli_OSSR_ALL,(0xFFF) @ Match register status "sticky bits"
-            .equ     xlli_OIER_E1,(0x002) @ Interrupt enable bit for match register #1
+.equ     xlli_OSSR_ALL           ,     (0xFFF) @ Match register status "sticky bits"
+.equ     xlli_OIER_E1            ,     (0x002) @ Interrupt enable bit for match register #1
 
 @
 @ REAL TIME CLOCK (RTC) REGISTERS base address and register offsets from the base address
 @ 
 
-      .equ     xlli_RTCREGS_PHYSICAL_BASE,(0x40900000)
+.equ     xlli_RTCREGS_PHYSICAL_BASE      ,     (0x04090000)
 
-        .equ     xlli_RCNR_offset,(0x00)  @ RTC Counter Register
-        .equ     xlli_RTAR_offset,(0x04)  @ RTC Alarm Register
-        .equ     xlli_RTSR_offset,(0x08)  @ RTC Status Register
-        .equ     xlli_RTTR_offset,(0x0C)  @ RTC Timer Trim Register
-        .equ     xlli_RDCR_offset,(0x10)  @ RTC Day Counter Register
-        .equ     xlli_RYCR_offset,(0x14)  @ RTC Year Counter Register 
-       .equ     xlli_RDAR1_offset,(0x18)  @ RTC Day Alarm Register 1
-       .equ     xlli_RYAR1_offset,(0x1C)  @ RTC Year Alarm Register 2
-       .equ     xlli_RDAR2_offset,(0x20)  @ RTC Day Alarm Register 2
-       .equ     xlli_RYAR2_offset,(0x24)  @ RTC Year Alarm Register 2
-        .equ     xlli_SWCR_offset,(0x28)  @ Stopwatch Counter Register
-       .equ     xlli_SWAR1_offset,(0x2C)  @ Stopwatch Alarm Register 1
-       .equ     xlli_SWAR2_offset,(0x30)  @ Stopwatch Alarm Register 2
-        .equ     xlli_PICR_offset,(0x34)  @ Periodic Interrupt Counter Register
-        .equ     xlli_PIAR_offset,(0x38)  @ Periodic Interrupt Alarm Register
+.equ     xlli_RCNR_offset        ,     (0x00)  @ RTC Counter Register
+.equ     xlli_RTAR_offset        ,     (0x04)  @ RTC Alarm Register
+.equ     xlli_RTSR_offset        ,     (0x08)  @ RTC Status Register
+.equ     xlli_RTTR_offset        ,     (0x0C)  @ RTC Timer Trim Register
+.equ     xlli_RDCR_offset        ,     (0x10)  @ RTC Day Counter Register
+.equ     xlli_RYCR_offset        ,     (0x14)  @ RTC Year Counter Register 
+.equ     xlli_RDAR1_offset       ,     (0x18)  @ RTC Day Alarm Register 1
+.equ     xlli_RYAR1_offset       ,     (0x1C)  @ RTC Year Alarm Register 2
+.equ     xlli_RDAR2_offset       ,     (0x20)  @ RTC Day Alarm Register 2
+.equ     xlli_RYAR2_offset       ,     (0x24)  @ RTC Year Alarm Register 2
+.equ     xlli_SWCR_offset        ,     (0x28)  @ Stopwatch Counter Register
+.equ     xlli_SWAR1_offset       ,     (0x2C)  @ Stopwatch Alarm Register 1
+.equ     xlli_SWAR2_offset       ,     (0x30)  @ Stopwatch Alarm Register 2
+.equ     xlli_PICR_offset        ,     (0x34)  @ Periodic Interrupt Counter Register
+.equ     xlli_PIAR_offset        ,     (0x38)  @ Periodic Interrupt Alarm Register
 
 
 @ Interrupt Controller bit defs
 
-           .equ     xlli_OSCC_OOK,(0x01)  @ Oscillator OK bit
-           .equ     xlli_OSCC_OON,(0x02)  @ Timekeeping (32.768KHz) Osc bit
-       .equ     xlli_OSCC_TOUT_EN,(0x04)  @ Timekeeping Output enable
-        .equ     xlli_OSCC_PIO_EN,(0x08)  @ Processor Oscillator Output Enable
+.equ     xlli_OSCC_OOK           ,     (0x01)  @ Oscillator OK bit
+.equ     xlli_OSCC_OON           ,     (0x02)  @ Timekeeping (32.768KHz) Osc bit
+.equ     xlli_OSCC_TOUT_EN       ,     (0x04)  @ Timekeeping Output enable
+.equ     xlli_OSCC_PIO_EN        ,     (0x08)  @ Processor Oscillator Output Enable
 
 @
 @ Coprocessor 15 data bits
 @ 
 
-  .equ     xlli_control_icache,(0x1000)  @ bit 12 -  i-cache bit
-     .equ     xlli_control_btb,(0x0800)  @ bit 11 -  btb bit
-       .equ     xlli_control_r,(0x0200)  @ Bit 9
-       .equ     xlli_control_s,(0x0100)  @ Bit 8
-  .equ     xlli_control_dcache,(0x0004)  @ Bit 2  -  d-cache bit
-     .equ     xlli_control_mmu,(0x0001)  @ Bit 0  -  MMU bit
+.equ     xlli_control_icache  ,     (0x1000)  @ bit 12 -  i-cache bit
+.equ     xlli_control_btb     ,     (0x0800)  @ bit 11 -  btb bit
+.equ     xlli_control_r       ,     (0x0200)  @ Bit 9
+.equ     xlli_control_s       ,     (0x0100)  @ Bit 8
+.equ     xlli_control_dcache  ,     (0x0004)  @ Bit 2  -  d-cache bit
+.equ     xlli_control_mmu     ,     (0x0001)  @ Bit 0  -  MMU bit
 
 
 @
 @ CP 15 related settings
 @
 
-                   .equ     xlli_PID,(0x00)
-                  .equ     xlli_DACR,(0x01)
-        .equ     xlli_CONTROL_DCACHE,(0x04)
-   .equ     xlli_CONTROL_MINIDATA_01,(0x10)
-           .equ     xlli_CONTROL_BTB,(0x800)   @ Brach Target Buffer bit
+.equ     xlli_PID                   ,     (0x00)
+.equ     xlli_DACR                  ,     (0x01)
+.equ     xlli_CONTROL_DCACHE        ,     (0x04)
+.equ     xlli_CONTROL_MINIDATA_01   ,     (0x10)
+.equ     xlli_CONTROL_BTB           ,     (0x800)   @ Brach Target Buffer bit
 
 @
 @ register bit masks - RCSR
 @
-         .equ     xlli_RCSR_HWR,(0x01)
-         .equ     xlli_RCSR_WDR,(0x02)
-         .equ     xlli_RCSR_SMR,(0x04)
-         .equ     xlli_RCSR_GPR,(0x08)
-         .equ     xlli_RCSR_ALL,(0xF)
+.equ     xlli_RCSR_HWR         ,     (0x01)
+.equ     xlli_RCSR_WDR         ,     (0x02)
+.equ     xlli_RCSR_SMR         ,     (0x04)
+.equ     xlli_RCSR_GPR         ,     (0x08)
+.equ     xlli_RCSR_ALL         ,     (0xF)
 
 
 @
 @  CPSR Processor constants
 
-   .equ       xlli_CPSR_Mode_MASK,(0x0000001F)
-    .equ       xlli_CPSR_Mode_USR,(0x10)
-    .equ       xlli_CPSR_Mode_FIQ,(0x11)
-    .equ       xlli_CPSR_Mode_IRQ,(0x12)
-    .equ       xlli_CPSR_Mode_SVC,(0x13)
-    .equ       xlli_CPSR_Mode_ABT,(0x17)
-    .equ       xlli_CPSR_Mode_UND,(0x1B)
-    .equ       xlli_CPSR_Mode_SYS,(0x1F)
+.equ     xlli_CPSR_Mode_MASK   ,       (0x0000001F)
+.equ     xlli_CPSR_Mode_USR    ,       (0x10)
+.equ     xlli_CPSR_Mode_FIQ    ,       (0x11)
+.equ     xlli_CPSR_Mode_IRQ    ,       (0x12)
+.equ     xlli_CPSR_Mode_SVC    ,       (0x13)
+.equ     xlli_CPSR_Mode_ABT    ,       (0x17)
+.equ     xlli_CPSR_Mode_UND    ,       (0x1B)
+.equ     xlli_CPSR_Mode_SYS    ,       (0x1F)
 
-       .equ       xlli_CPSR_I_Bit,(0x80)
-       .equ       xlli_CPSR_F_Bit,(0x40)
+.equ     xlli_CPSR_I_Bit       ,       (0x80)
+.equ     xlli_CPSR_F_Bit       ,       (0x40)
 
 
-    .equ       xlli_PWRMODE_SLEEP,(0x00000003) @ Value for cp14: Reg7 to induce sleep.
+.equ     xlli_PWRMODE_SLEEP    ,       (0x00000003) @ Value for cp14: Reg7 to induce sleep.
 @     Bit settings
 @
-      .equ     xlli_BIT_0,0x00000001
-      .equ     xlli_BIT_1,0x00000002
-      .equ     xlli_BIT_2,0x00000004
-      .equ     xlli_BIT_3,0x00000008
-      .equ     xlli_BIT_4,0x00000010
-      .equ     xlli_BIT_5,0x00000020
-      .equ     xlli_BIT_6,0x00000040
-      .equ     xlli_BIT_7,0x00000080
-      .equ     xlli_BIT_8,0x00000100
-      .equ     xlli_BIT_9,0x00000200
-     .equ     xlli_BIT_10,0x00000400
-     .equ     xlli_BIT_11,0x00000800
-     .equ     xlli_BIT_12,0x00001000
-     .equ     xlli_BIT_13,0x00002000
-     .equ     xlli_BIT_14,0x00004000
-     .equ     xlli_BIT_15,0x00008000
-     .equ     xlli_BIT_16,0x00010000
-     .equ     xlli_BIT_17,0x00020000
-     .equ     xlli_BIT_18,0x00040000
-     .equ     xlli_BIT_19,0x00080000
-     .equ     xlli_BIT_20,0x00100000
-     .equ     xlli_BIT_21,0x00200000
-     .equ     xlli_BIT_22,0x00400000
-     .equ     xlli_BIT_23,0x00800000
-     .equ     xlli_BIT_24,0x01000000
-     .equ     xlli_BIT_25,0x02000000
-     .equ     xlli_BIT_26,0x04000000
-     .equ     xlli_BIT_27,0x08000000
-     .equ     xlli_BIT_28,0x10000000
-     .equ     xlli_BIT_29,0x20000000
-     .equ     xlli_BIT_30,0x40000000
-     .equ     xlli_BIT_31,0x80000000
-      
+.equ     xlli_BIT_0      ,     0x00000001
+.equ     xlli_BIT_1      ,     0x00000002
+.equ     xlli_BIT_2      ,     0x00000004
+.equ     xlli_BIT_3      ,     0x00000008
+.equ     xlli_BIT_4      ,     0x00000010
+.equ     xlli_BIT_5      ,     0x00000020
+.equ     xlli_BIT_6      ,     0x00000040
+.equ     xlli_BIT_7      ,     0x00000080
+.equ     xlli_BIT_8      ,     0x00000100
+.equ     xlli_BIT_9      ,     0x00000200
+.equ     xlli_BIT_10     ,     0x00000400
+.equ     xlli_BIT_11     ,     0x00000800
+.equ     xlli_BIT_12     ,     0x00001000
+.equ     xlli_BIT_13     ,     0x00002000
+.equ     xlli_BIT_14     ,     0x00004000
+.equ     xlli_BIT_15     ,     0x00008000
+.equ     xlli_BIT_16     ,     0x00010000
+.equ     xlli_BIT_17     ,     0x00020000
+.equ     xlli_BIT_18     ,     0x00040000
+.equ     xlli_BIT_19     ,     0x00080000
+.equ     xlli_BIT_20     ,     0x00100000
+.equ     xlli_BIT_21     ,     0x00200000
+.equ     xlli_BIT_22     ,     0x00400000
+.equ     xlli_BIT_23     ,     0x00800000
+.equ     xlli_BIT_24     ,     0x01000000
+.equ     xlli_BIT_25     ,     0x02000000
+.equ     xlli_BIT_26     ,     0x04000000
+.equ     xlli_BIT_27     ,     0x08000000
+.equ     xlli_BIT_28     ,     0x10000000
+.equ     xlli_BIT_29     ,     0x20000000
+.equ     xlli_BIT_30     ,     0x40000000
+.equ     xlli_BIT_31     ,     0x80000000
Index: build_tree/bootLoader/src/blob/xlli/mainstone/xlli_LowLev_Init.s
diff -u build_tree/bootLoader/src/blob/xlli/mainstone/xlli_LowLev_Init.s:1.1.1.1 build_tree/bootLoader/src/blob/xlli/mainstone/xlli_LowLev_Init.s:1.1.1.2
--- build_tree/bootLoader/src/blob/xlli/mainstone/xlli_LowLev_Init.s:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/xlli/mainstone/xlli_LowLev_Init.s	Fri Nov  9 10:37:08 2007
@@ -30,6 +30,7 @@
         .include  "xlli_Bulverde_defs.inc"                 @ PXA27x specific include file
         .include  "xlli_Mainstone_defs.inc"                @ Mainstone specific include file
         .include  "xlli_LowLev_mac.mac"                    @ Mainstone Macro definitions
+		.include  "bbu_Bulverde_defs.inc"
 
 
         @NOT SUPPORTED: AREA    "|text|, CODE, READONLY, ALIGN=5"         @ Align =5 required for "ALIGN 32" feature to work.
@@ -63,8 +64,14 @@
         .global xlli_disableSyncFlash       @ Sets flash memory into asynchronous mode
         .global xlli_isMemBusWidth16Bit     @ Checks the BOOT_SEL bit to determine bus width
         .global xlli_queryFlash             @ Queries the Flash CFI ID register
+        .global xlli_UART_init              @ Initialize UART
+		.global xlli_PUTchar			   @ Output a character to the UART
+		.global xlli_putstr				   @ Output string to UART
+		.global bbu_putPI2C                @ Send commands to PCF50606 using PI2C bus
+		.global Z2_init
+		.global bbu_getPI2C                @ read from PCF50606 using PI2C bus
 
-
+		.equ    xlli_PSLR_value ,  (0xCC400000)
 
 @********************************************************************************************
 @
@@ -427,8 +434,8 @@
         mov     r3,  r5                             @ Copy alt function register to r3
         bic     r1,  r1,  #0x200                    @ Clear direction bit for GPIO #73
         bic     r3,  r3,  #0xC0000                  @ Clear alt function bits for GPIO #73
-        str     r3,  [r4, #xlli_GAFR2_L_offset]     @ Write alt function register
-        str     r1,  [r4, #xlli_GPDR2_offset]       @ Write GPDR2 (direction register) data
+@JWK	str     r3,  [r4, #xlli_GAFR2_L_offset]     @ Write alt function register
+@JWK	str     r1,  [r4, #xlli_GPDR2_offset]       @ Write GPDR2 (direction register) data
 
 @
 @       It can take many cycles for the GPIO setting to take effect before the read can be
@@ -439,18 +446,8 @@
 xlli_4:  subs    r1,  r1,  #1                        @ Decrement counter
         bne     xlli_4                              @ Loop until zero
 
-        ldr     r1,  [r4, #xlli_GPLR2_offset]       @ Read GPLR2 (level register) data
-        ands    r1,  r1,  #0x200                    @ Test status of GPIO #73
-        ldreq   r1,  =xlli_MSC0_DC_value            @ Get MSC0 setting for daughter card Flash
-        ldrne   r1,  =xlli_MSC0_MS_value            @ Get MSC0 setting for Mainstone Flash
-
-        str     r5,  [r4, #xlli_GAFR2_L_offset]     @ Write back original alt function register
-        str     r2,  [r4, #xlli_GPDR2_offset]       @ Write back original GPDR2 data
-@
-@       Read back from APB to ensure our writes have completed before continuing
-@       (spanning a bridge here)
-@
-        ldr     r2, [r4, #xlli_GPDR2_offset]
+@ 2-27-06 removed reference to GPIO #73 --pb
+        ldr   r1,  =xlli_MSC0_MS_value            @ Get MSC0 setting for Mainstone Flash
 
 @
 @       Finally - Write the memory control registers
@@ -1272,7 +1269,8 @@
 @
 @ Enable the 32 KHz oscillator and set the 32KHz output enable bits
 @
-        mov     r1,  #(xlli_OSCC_OON | xlli_OSCC_TOUT_EN)
+@JWK        mov     r1,  #(xlli_OSCC_OON | xlli_OSCC_TOUT_EN)
+        mov     r1,  #xlli_OSCC_OON
         str     r1,  [r4, #xlli_OSCC_offset]    @ for RTC and Power Manager
 @
 @ Init Real Time Clock (RTC) registers
@@ -1498,11 +1496,17 @@
 
         ldr    r2,  =xlli_PMRCREGS_PHYSICAL_BASE @ get base address of power mgr / reset control regs
 
+@
+@ JWK - read the wakeup reason
+@
+		ldr	r4, [r2, #xlli_PEDR_offset]			@ read the Edge detect status register
+        str    r4,  [r2, #xlli_PSPR_offset]     @ save to the Scratch pad register
+		
         mov    r1,  #0                          @ clear a work register
         str    r1,  [r2, #xlli_PWER_offset]     @ Reset Power Manager Wake-up register
         str    r1,  [r2, #xlli_PRER_offset]     @ Clear Power Manager Rising-Edge Detector Enables
         str    r1,  [r2, #xlli_PFER_offset]     @ Clear Power Manager Falling-Edge Detector Enables
-        str    r1,  [r2, #xlli_PEDR_offset]     @ Clear Power Manager GPIO edge-Detect Status register
+        str    r4,  [r2, #xlli_PEDR_offset]     @ Clear Power Manager GPIO edge-Detect Status register
         str    r1,  [r2, #xlli_PGSR0_offset]    @ Clear GPIO sleep state registers (GPIOs 31:0)
         str    r1,  [r2, #xlli_PGSR1_offset]    @ Clear GPIO sleep state registers (GPIOs 63:32)
         str    r1,  [r2, #xlli_PGSR2_offset]    @ Clear GPIO sleep state registers (GPIOs 95:64)
@@ -1511,6 +1515,10 @@
         str    r1,  [r2, #xlli_PVCR_offset]     @ Reset Power Manager Voltage Change Control Register
         str    r1,  [r2, #xlli_PKWR_offset]     @ Clear Keyboard Wake-up Enable Register
         str    r1,  [r2, #xlli_PKSR_offset]     @ Clear Keyboard Edge Detect Status Register
+        
+        ldr    r1, =xlli_PSLR_value
+        str    r1,  [r2, #xlli_PSLR_offset]
+        
 @
 @       Initialize the PCFR (Power Manager General Congiguration Manager)
 @       Assume PCFR is 'sane' - zeroed on power up
@@ -1527,7 +1535,18 @@
 @
         ldr     r1, [r3, #xlli_PCFR_offset]
 
-        mov     pc,  lr                         @ return to calling routine
+@
+@ JWK - configure the system to wake up on falling edge of GPIO 0
+@
+        ldr    r2,  =xlli_PMRCREGS_PHYSICAL_BASE @ get base address of power mgr / reset control regs
+        mov    r1,  #3                          
+        str    r1,  [r2, #xlli_PWER_offset]     @ Enable GPIO0/1 in the Power Manager Wake-up register
+        mov    r1,  #2                          
+        str    r1,  [r2, #xlli_PFER_offset]     @ Enable GPIO1 in the Power Manager Falling-Edge Detector Enables
+        mov    r1,  #1                          
+        str    r1,  [r2, #xlli_PRER_offset]     @ Enable GPIO0 in the Power Manager Rising-Edge Detector Enables
+
+	mov     pc,  lr                         @ return to calling routine
 
         
 
@@ -3076,8 +3095,269 @@
         @ Return to caller
         mov     pc,  r12                                 @ Return to calling routine - recall we moved LR->R9 as first instruction
 
+
+xlli_UART_init:
+
+        mov    r1,  #0x0                         @ Zero out a work register
+        str    r1,  [r0, #UAIER_offset]      @ Zero out Interrupt Enable Register
+        str    r1,  [r0, #UAFCR_offset]      @ Zero out FIFO Control Register
+        str    r1,  [r0, #UALCR_offset]      @ Zero out Line Control Register
+        str    r1,  [r0, #UAMCR_offset]      @ Zero out Modem Control Register
+        str    r1,  [r0, #UAISR_offset]      @ Zero out IR bit register
+        ldr    r1,  [r0, #UAMSR_offset]      @ Read MSR once to clear bits
+
+        mov    r1,  #0x83                        @ Set up divisor latch bit (DLAB), 8 bit character, no parity, 1 stop bit
+        str    r1,  [r0,  #UALCR_offset]     @ Set DLAB bit
+
+        str    r2,  [r0,  #UADLL_offset]     @ set baud rate
+        ldr    r1,  =0x0                         @ Insure high baud rate byte is zero
+        str    r1,  [r0,  #UADLH_offset]
+
+        ldr    r1,  [r0,  #UALCR_offset]     @ Get LCR values
+        bic    r1,  r1,   #DLAB              @ Clear DLAB bit
+        str    r1,  [r0,  #UALCR_offset]     @ Write the value back out
+        mov    r1,  #0x07                        @ This value will clear the TX and RX FIFOs
+        str    r1,  [r0,  #UAFCR_offset]     @ ... and enabale the FIFOs for use.
+
+        mov    r1,  #0x40                        @ set unit enable bit
+        str    r1,  [r0,  #UAIER_offset]     @ enable the UART
+
+		mov		pc,	lr
         
+xlli_PUTchar:
+2:	ldr		r1,	[r0, #UALSR_offset]
+	ands	r1, r1,  #TDRQ
+	beq		2
+	strb	r2,	[r0,	#UATHR_offset]
+
+	mov		pc,	lr
+
+
+xlli_putstr:
+3:	mov		r13, lr
+	ldrb	r2, [r3], #1
+	cmp		r2, #0
+	beq		4
+	b		xlli_PUTchar
+	b		3
+4:	mov		pc, r13
+
+@
+@*********************************************************************************
+@
+@       ***************
+@       *             * 
+@       * bbu_getPI2C * Subroutine
+@       *             *
+@       ***************
+@
+@ This subroutine is used to read data from the Power I2C bus
+
+@
+@ PARAMETER PASSING:
+@
+@       r4 = address in target device where data is to be read from
+@       r5 = data read from the register pointed to by r4
+@
+@ RETURNED VALUE:
+@
+@       r8 = non zero if no I2C bus time out
+@       r8 = zero if I2C bus time out 
+@
+@ REGISTERS USED:
+@
+@       r1, r2, r3, r4, r5, r6, r8 are used and not preserved 
+@
+bbu_getPI2C:
+@
+@       Make sure the clock to the I2C unit is enabled
+@
+        ldr    r3,  =xlli_CLKREGS_PHYSICAL_BASE     @ Base address of clock unit
+        ldr    r2,  [r3, #xlli_CKEN_offset]         @ Get current setting of clock enable register
+        orr    r2,  r2,  #0x8000                    @ Set bit 15 in the clock enable word
+        str    r2,  [r3, #xlli_CKEN_offset]         @ Write the register back
+@
+@       Init the Power I2C controller for use
+@
+        ldr    r1,  =xlli_PMRCREGS_PHYSICAL_BASE    @ Load Power Manager controller base address
+        ldr    r3,  [r1, #xlli_PCFR_offset]         @ Get present Config register data
+        orr    r3,  r3,  #PI2C_EN               @ Enable power manager I2C bus
+        str    r3,  [r1, #xlli_PCFR_offset]         @ Write Config register data back
+
+        mov    r2,  #0                              @ Set host controller slave address
+        str    r2,  [r1, #xlli_PI2SAR_offset]       @ Set slave address register
+        str    r2,  [r1, #xlli_PI2CR_offset]        @ Clear interrupts in ICR
+        mov    r3,  #(ICR_IUE | ICR_SCLE)   @ Set IUE and SCLE bits
+        str    r3,  [r1, #xlli_PI2CR_offset]        @ Enable the I2C in ICR
+@
+@       Get the slave's address
+@
+        ldr    r6,  =FFUART_PHYSICAL_BASE       @ Fetch base address of the FFUART
+        ldr    r9,  [r6, #UASPR_offset]         @ Get contents of the scratch pad register
+        str    r9,  [r1, #xlli_PI2DBR_offset]       @ Load Data Buffer Register
+@
+@       Send 1st byte
+@
+        orr    r3,  r3,  #(ICR_TB | ICR_START)
+        str    r3,  [r1, #xlli_PI2CR_offset]              @ Set TB and START bits (in addition to IUE & SCLE)
+        mov    r8,  #0x80000                              @ Set up time out value
+
+p1:       ldr    r3,  [r1, #xlli_PI2SR_offset]              @ Get status register contents
+        subs   r8,  r8,  #1                               @ Decrement time out value
+        moveq  pc,  lr                                    @ Return if timed out
+        ands   r3,  r3,  #ISR_ITE                     @ Was the byte sent yet?
+        beq    p1                                        @ No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              @ Write the ITE bit to clear it (sticky)
+@
+@       Set up and then send 2nd byte (ADDRESS)
+@
+        str    r4,  [r1, #xlli_PI2DBR_offset]             @ Set register address in the IDBR
+        mov    r3,  #(ICR_TB | ICR_IUE | ICR_SCLE | ICR_STOP)
+        str    r3,  [r1, #xlli_PI2CR_offset]              @ Set TB bit to start transfer
+        mov    r8,  #0x80000                              @ Set up time out value
+
+p2:       ldr    r3,  [r1, #xlli_PI2SR_offset]              @ Get status register contents
+        subs   r8,  r8,  #1                               @ Decrement time out value
+        moveq  pc,  lr                                    @ Return if timed out
+        ands   r3,  r3,  #ISR_ITE                     @ Was the byte sent yet?
+        beq    p2                                        @ No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              @ Write the ITE bit to clear it (sticky)
+@
+@       Set up and then send 3rd byte - Slave read address
+@
+        orr    r9,  r9,  #1                               @ Turn the address into a slave address
+        str    r9,  [r1, #xlli_PI2DBR_offset]             @ Load Data Buffer Register
+        mov    r3,  #(ICR_TB | ICR_IUE | ICR_SCLE | ICR_START)
+        str    r3,  [r1, #xlli_PI2CR_offset]              @ Set TB bit to start transfer
+
+p3:       ldr    r3,  [r1, #xlli_PI2SR_offset]              @ Get status register contents
+        ands   r3,  r3,  #ISR_ITE                     @ Was the byte sent yet?
+        beq    p3                                        @ No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              @ Write the ITE & IRF bits to clear them (sticky)
+@
+@       Send STOP signal
+@
+        mov    r3,  #(ICR_TB | ICR_IUE | ICR_SCLE | ICR_STOP | ICR_ACKNAK)
+        str    r3,  [r1, #xlli_PI2CR_offset]             @ Set TB bit to start transfer
+        mov    r8,  #0x80000                             @ Set up time out value
+@
+@       Set up and then receive data byte (seems to hang in the following loop * 24-Oct-03)
+@
+p5:       ldr    r3,  [r1, #xlli_PI2SR_offset]        @ Get status register contents
+        subs   r8,  r8,  #1                         @ Decrement time out counter
+        addeq  r8,  r8,  #1                         @ Increment back to 1 if timed out
+        moveq  pc,  lr                              @ and return to caller
+        ands   r3,  r3,  #ISR_IRF               @ Was the byte received yet?
+        beq    p5                                  @ no - keep looping
+        str    r3,  [r1, #xlli_PI2SR_offset]        @ Write the IRF bit to clear it (sticky)
+
+        ldr    r5,  [r1, #xlli_PI2DBR_offset]       @ Fetch data byte from the IDBR
+        mov    pc,  lr                              @ Return to caller
+
+        .ltorg
+
+@
+@*********************************************************************************
+@
+@       ***************
+@       *             * 
+@       * putPI2C * Subroutine
+@       *             *
+@       ***************
+@
+@ This subroutine is used to write data to the PI2C bus
+
+@
+@ PARAMETER PASSING:
+@
+@       r4 = address in target device where data is to be sent
+@       r5 = data to be loaded into the register pointed to by r4
+@
+@ RETURNED VALUE:
+@
+@       r8 = non zero if no I2C bus time out
+@       r8 = zero if I2C bus time out 
+@
+bbu_putPI2C:
+@
+@       Make sure the clock to the I2C unit is enabled
+@
+        ldr    r3,  =xlli_CLKREGS_PHYSICAL_BASE     @ Base address of clock unit
+        ldr    r2,  [r3, #xlli_CKEN_offset]         @ Get current setting of clock enable register
+        orr    r2,  r2,  #0x8000                    @ Set bit 15 in the clock enable word
+        str    r2,  [r3, #xlli_CKEN_offset]         @ Write the register back
+@
+@       Init the Power I2C controller for use
+@
+        ldr    r1,  =xlli_PMRCREGS_PHYSICAL_BASE    @ Load Power Manager controller base address
+        ldr    r3,  [r1, #xlli_PCFR_offset]         @ Get present Config register data
+        orr    r3,  r3,  #0x40                      @ Enable power manager I2C
+        str    r3,  [r1, #xlli_PCFR_offset]         @ Write Config register data back
+
+        mov    r2,  #0                              @ Set host controller slave address
+        str    r2,  [r1, #xlli_PI2SAR_offset]       @ Set slave address register
+        str    r2,  [r1, #xlli_PI2CR_offset]        @ Clear interrupts in ICR
+        mov    r3,  #(ICR_IUE | ICR_SCLE)   @ Set IUE and SCLE bits
+        str    r3,  [r1, #xlli_PI2CR_offset]        @ Enable the I2C in ICR
+@
+@       Get the slave's address
+@
+        ldr    r8,  =FFUART_PHYSICAL_BASE       @ Fetch base address of FFUART
+        ldr    r9,  [r8, #UASPR_offset]         @ Get contents of the scratch pad register
+        str    r9,  [r1, #xlli_PI2DBR_offset]       @ Load Data Buffer Register
+@
+@       Send 1st byte
+@
+        orr    r3,  r3,  #(ICR_TB | ICR_START)
+        str    r3,  [r1, #xlli_PI2CR_offset]              @ Set TB and START bits (in addition to IUE & SCLE)
+
+h1:       ldr    r3,  [r1, #xlli_PI2SR_offset]              @ Get status register contents
+        ands   r3,  r3,  #ISR_ITE                     @ Was the byte sent yet?
+        beq    h1                                        @ No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              @ Write the ITE bit to clear it (sticky)
+@
+@       Set up and then send 2nd byte (ADDRESS)
+@
+        str    r4,  [r1, #xlli_PI2DBR_offset]             @ Set register address in the IDBR
+        mov    r3,  #(ICR_TB | ICR_IUE | ICR_SCLE)
+        str    r3,  [r1, #xlli_PI2CR_offset]              @ Set TB bit to start transfer
+        mov    r8,  #0X80000                              @ Set up time out value
+
+h2:       ldr    r3,  [r1, #xlli_PI2SR_offset]              @ Get status register contents
+        subs   r8,  r8,  #1                               @ Decrement time out value
+        moveq  pc,  lr                                    @ Return if there was a time out
+        ands   r3,  r3,  #ISR_ITE                     @ Was the byte sent yet?
+        beq    h2                                        @ No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              @ Write the ITE bit to clear it (sticky)
+@
+@       Set up and then send 3rd byte (DATA) and STOP signal
+@
+        str    r5,  [r1, #xlli_PI2DBR_offset]             @ Set data byte into the IDBR
+        mov    r3,  #(ICR_TB | ICR_IUE | ICR_SCLE | ICR_STOP)
+        str    r3,  [r1, #xlli_PI2CR_offset]              @ Set TB bit to start transfer
+
+h3:       ldr    r3,  [r1, #xlli_PI2SR_offset]              @ Get status register contents
+        ands   r3,  r3,  #ISR_ITE                     @ Was the byte sent yet?
+        beq    h3                                        @ No - still being transmitted
+        str    r3,  [r1, #xlli_PI2SR_offset]              @ Write the ITE bit to clear it (sticky)
+
+        mov    pc,  lr                              @ Return to caller
+
+		.ltorg
+
+
+@ 
+@ Aeronix, Inc. 
+@ 2005
+@ Setup for Z2 board
+@ Version 1
+@
+Z2_init:
+
+
+		mov		pc,	lr
 
+    
 @********************************************************************************************
 @********************************************************************************************
         
Index: build_tree/bootLoader/src/blob/xlli/mainstone/xlli_Mainstone_defs.inc
diff -u build_tree/bootLoader/src/blob/xlli/mainstone/xlli_Mainstone_defs.inc:1.1.1.1 build_tree/bootLoader/src/blob/xlli/mainstone/xlli_Mainstone_defs.inc:1.1.1.2
--- build_tree/bootLoader/src/blob/xlli/mainstone/xlli_Mainstone_defs.inc:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/blob/xlli/mainstone/xlli_Mainstone_defs.inc	Fri Nov  9 10:37:08 2007
@@ -1,13 +1,17 @@
 @*********************************************************************************
 @
-@ Copyright (C) 2004, Intel Corporation
+@        COPYRIGHT (c) 2002 - 2004 Intel Corporation
 @
-@ This software program is licensed subject to the GNU General Public License
-@ (GPL).Version 2,June 1991, available at http://www.fsf.org/copyleft/gpl.html
+@   The information in this file is furnished for informational use only,
+@   is subject to change without notice, and should not be construed as
+@   a commitment by Intel Corporation. Intel Corporation assumes no
+@   responsibility or liability for any errors or inaccuracies that may appear
+@   in this document or any software that may be provided in association with
+@   this document.
 @
 @*********************************************************************************
 @
-@  FILENAME:       xlli_Mainstone_defs.inc (Platform specific addresses and
+@  FILENAME:       .equ    xlli_Mainstone_defs.inc (Platform specific addresses and
 @                  defalut values for Mainstone II platform bring up)
 @                  NOTE: - This file has a def to configure xlli for MCP and non-MCP processors
 @
@@ -18,424 +22,314 @@
 @
 @ Include file for Mainstone II specific Cross Platform Low Level Initialization (XLLI)
 @
-@.equ xlli_SDRAM_SIZE_32_MB, 0       	@ Uncomment for 64 Mb of SDRAM
-.equ xlli_SDRAM_SIZE_128_MB, 0       	@ Uncomment for 128 Mb of SDRAM
-@.equ xlli_SDRAM_WIDTH_16_BIT, 0       	@ Uncomment for 16-bit SDRAM bus
-@.equ xlli_FLASH_WIDTH_16_BIT, 0       	@ Uncomment for 16-bit FLASH bus
-.equ xlli_C0_BULVERDE, 0       		@ Uncomment for PXA27x step C0
+.equ    xlli_SDRAM_SIZE_32_MB   ,     0       @ Uncomment for 32 Mb of SDRAM
+.equ    xlli_FLASH_WIDTH_16_BIT ,     0       @ Uncomment for 16-bit FLASH bus
+.equ    xlli_C0_BULVERDE        ,     0       @ Uncomment for PXA27x step C0
+.equ	xlli_MCP,0
+
 @
 @ PLATFORM REGISTERS base address and register offsets from the base address
 @
-              .equ    xlli_PLATFORM_REGISTERS,0x08000000
+.equ    xlli_PLATFORM_REGISTERS              ,    0x08000000
 
-     .equ    xlli_PLATFORM_HEXLED_DATA_offset,0x10   @ Hex LED Data Register
-     .equ    xlli_PLATFORM_LED_CONTROL_offset,0x40   @ LED Control Register
-          .equ    xlli_PLATFORM_SWITCH_offset,0x60   @ General Purpose Switch Register
-     .equ    xlli_PLATFORM_MISC_WRITE1_offset,0x80   @ Misc Write Register 1
-     .equ    xlli_PLATFORM_MISC_WRITE2_offset,0x84   @ Misc Write Register 2
-      .equ    xlli_PLATFORM_MISC_READ1_offset,0x90   @ Misc Read Register 1
-       .equ    xlli_PLATFORM_INTERR_ME_offset,0xC0   @ Platform Interrupt Mask/Enable Register 1
-       .equ    xlli_PLATFORM_INTERR_SC_offset,0xD0   @ Platform Interrupt Set/Clear Register 1
-      .equ    xlli_PLATFORM_PCMCIA0_SC_offset,0xE0   @ PCMCIA Socket 0 Status/Control Register
-      .equ    xlli_PLATFORM_PCMCIA1_SC_offset,0xE4   @ PCMCIA Socket 1 Status/Control Register
+.equ    xlli_PLATFORM_HEXLED_DATA_offset     ,    0x10   @ Hex LED Data Register
+.equ    xlli_PLATFORM_LED_CONTROL_offset     ,    0x40   @ LED Control Register
+.equ    xlli_PLATFORM_SWITCH_offset          ,    0x60   @ General Purpose Switch Register
+.equ    xlli_PLATFORM_MISC_WRITE1_offset     ,    0x80   @ Misc Write Register 1
+.equ    xlli_PLATFORM_MISC_WRITE2_offset     ,    0x84   @ Misc Write Register 2
+.equ    xlli_PLATFORM_MISC_READ1_offset      ,    0x90   @ Misc Read Register 1
+.equ    xlli_PLATFORM_INTERR_ME_offset       ,    0xC0   @ Platform Interrupt Mask/Enable Register 1
+.equ    xlli_PLATFORM_INTERR_SC_offset       ,    0xD0   @ Platform Interrupt Set/Clear Register 1
+.equ    xlli_PLATFORM_PCMCIA0_SC_offset      ,    0xE0   @ PCMCIA Socket 0 Status/Control Register
+.equ    xlli_PLATFORM_PCMCIA1_SC_offset      ,    0xE4   @ PCMCIA Socket 1 Status/Control Register
 
 @
 @ Platform specific bits
 @
-                       .equ    xlli_SYS_RESET,0x01   @ System reset bit
+.equ    xlli_SYS_RESET                       ,    0x01   @ System reset bit
 
 @
-@ platform GPIO pin settings (PXA27x/Mainstone)
+@ platform GPIO pin settings for Zipit2
 @
-          .equ   xlli_GPSR0_value,(0x00008004)   @ Set registers
-          .equ   xlli_GPSR1_value,(0x00020080)
-          .equ   xlli_GPSR2_value,(0x16C14000)
-          .equ   xlli_GPSR3_value,(0x0003E000)
-
-          .equ   xlli_GPCR0_value,(0x0)          @ Clear registers
-          .equ   xlli_GPCR1_value,(0x00000380)   @ FFUART related
-          .equ   xlli_GPCR2_value,(0x0)
-          .equ   xlli_GPCR3_value,(0x0)
-
-          .equ   xlli_GRER0_value,(0x0)          @ Rising Edge Detect
-          .equ   xlli_GRER1_value,(0x0)
-          .equ   xlli_GRER2_value,(0x0)
-          .equ   xlli_GRER3_value,(0x0)
-
-          .equ   xlli_GFER0_value,(0x0)          @ Falling Edge Detect
-          .equ   xlli_GFER1_value,(0x0)
-          .equ   xlli_GFER2_value,(0x0)
-          .equ   xlli_GFER3_value,(0x0)
-
-          .equ   xlli_GPLR0_value,(0x0)          @ Pin Level Registers
-          .equ   xlli_GPLR1_value,(0x0)
-          .equ   xlli_GPLR2_value,(0x0)
-          .equ   xlli_GPLR3_value,(0x0)
-
-          .equ   xlli_GEDR0_value,(0x0)          @ Edge Detect Status
-          .equ   xlli_GEDR1_value,(0x0)
-          .equ   xlli_GEDR2_value,(0x0)
-          .equ   xlli_GEDR3_value,(0x0)
-
-    .ifdef POST_BUILD
-
-          .equ   xlli_GPDR0_value,(0xC0ABA5E4)   @ Direction Registers
-          .equ   xlli_GPDR1_value,(0x002FAA83)
-          .equ   xlli_GPDR2_value,(0x0E23FC00)
-          .equ   xlli_GPDR3_value,(0x018FFE8F)
-
-    .else
-
-          .equ   xlli_GPDR0_value,(0xCFE3BDE4)   @ Direction Registers
-          .equ   xlli_GPDR1_value,(0x003FAB81)
-          .equ   xlli_GPDR2_value,(0x1EC3FC00)
-          .equ   xlli_GPDR3_value,(0x018FFE8F)
-
-    .endif
-
- .equ  xlli_GAFR0_L_value,(0x84400000)   @ Alternate function registers
- .equ  xlli_GAFR0_U_value,(0xA5000510)
- .equ  xlli_GAFR1_L_value,(0x000A9558)
- .equ  xlli_GAFR1_U_value,(0x0005A1AA)
- .equ  xlli_GAFR2_L_value,(0x60000000)
- .equ  xlli_GAFR2_U_value,(0x00000802)
- .equ  xlli_GAFR3_L_value,(0x00000000)
- .equ  xlli_GAFR3_U_value,(0x00000000)
+.equ    xlli_GPSR0_value          ,   (0x06080000)   @ Set registers
+.equ    xlli_GPSR1_value          ,   (0x007F0000)
+.equ    xlli_GPSR2_value          ,   (0x03020000)   @ 3/10/06 PB Power up with LCD power disabled
+.equ    xlli_GPSR3_value          ,   (0x00000180)   @ 2/24/06 PB Changed from 0388 to 0188 to enable A-BUF
+
+.equ    xlli_GPCR0_value          ,   (0x0)          @ Clear registers
+.equ    xlli_GPCR1_value          ,   (0x0)	
+.equ    xlli_GPCR2_value          ,   (0x0)
+.equ    xlli_GPCR3_value          ,   (0x0)
+
+.equ    xlli_GRER0_value          ,   (0x0)          @ Rising Edge Detect
+.equ    xlli_GRER1_value          ,   (0x0)
+.equ    xlli_GRER2_value          ,   (0x0)
+.equ    xlli_GRER3_value          ,   (0x0)
+
+.equ    xlli_GFER0_value          ,   (0x0)          @ Falling Edge Detect
+.equ    xlli_GFER1_value          ,   (0x0)
+.equ    xlli_GFER2_value          ,   (0x0)
+.equ    xlli_GFER3_value          ,   (0x0)
+
+.equ    xlli_GPLR0_value          ,   (0x0)          @ Pin Level Registers
+.equ    xlli_GPLR1_value          ,   (0x0)
+.equ    xlli_GPLR2_value          ,   (0x0)
+.equ    xlli_GPLR3_value          ,   (0x0)
+
+.equ    xlli_GEDR0_value          ,   (0x0)          @ Edge Detect Status
+.equ    xlli_GEDR1_value          ,   (0x0)
+.equ    xlli_GEDR2_value          ,   (0x0)
+.equ    xlli_GEDR3_value          ,   (0x0)
+
+.equ    xlli_GPDR0_value          ,   (0xDAFCEE00)   @
+.equ    xlli_GPDR1_value          ,   (0xFFA3AAAB)   @ 
+.equ    xlli_GPDR2_value          ,   (0x8FE1FFFF)
+.equ    xlli_GPDR3_value          ,   (0x001B1F8A)
+
+.equ    xlli_GAFR0_L_value ,  (0x02000140)   
+@.equ    xlli_GAFR0_L_value ,  (0x02800140)   
+.equ    xlli_GAFR0_U_value ,  (0x59188000)   
+.equ    xlli_GAFR1_L_value ,  (0x63900002)
+.equ    xlli_GAFR1_U_value ,  (0xAAA03950)
+.equ    xlli_GAFR2_L_value ,  (0x0AAAAAAA)
+.equ    xlli_GAFR2_U_value ,  (0x29000308)
+.equ    xlli_GAFR3_L_value ,  (0x54000000)
+.equ    xlli_GAFR3_U_value ,  (0x000000D5)
 
 @
 @ MEMORY CONTROLLER SETTINGS FOR MAINSTONE
 @
 
-  .equ   xlli_MDREFR_value,(0x0000001E)
-        .ifdef   xlli_FLASH_WIDTH_16_BIT
- .equ   xlli_MSC0_DC_value,(0x7FF07FFA)     @ PXA27x Card Flash value (MCP version)
-        .else
- .equ   xlli_MSC0_DC_value,(0x7FF0B8F2)     @ PXA27x Card Flash value (Non-MCP version)
-        .endif
- .equ   xlli_MSC0_MS_value,(0x23F2B8F2)     @ Mainstone Board Flash value
-    .equ   xlli_MSC1_value,(0x0000CCD1)
-    .equ   xlli_MSC2_value,(0x0000B884)
-    .equ   xlli_MECR_value,(0x00000001)
-  .equ   xlli_MCMEM0_value,(0x00014307)
-  .equ   xlli_MCMEM1_value,(0x00014307)
-  .equ   xlli_MCATT0_value,(0x0001C787)
-  .equ   xlli_MCATT1_value,(0x0001C787)
-   .equ   xlli_MCIO0_value,(0x0001430F)
-   .equ   xlli_MCIO1_value,(0x0001430F)
- .equ   xlli_FLYCNFG_value,(0x00010001)
- .equ   xlli_MDMRSLP_value,(0x0000C008)
-  .equ   xlli_SXCNFG_value,(0x40044004)   @ Default value at boot up
+.equ    xlli_MDREFR_value  ,   (0x0000001E)	   @ Refresh info (Bits 11:0 define refresh rate)
+.equ    xlli_MSC0_DC_value ,   (0x7FF07FFA)     @ PXA27x Card Flash value (MCP version)
+ 
+@ AERONIX Define new setting below
+.equ    xlli_MSC0_MS_value ,   (0x2FFC38F8)     @ 0x2FFC sets CS1# for VLIO timings (CS8900), 0x38F8 is for Flash
+												
+@ See page 6-64 of Developers Manual
+.equ    xlli_MSC1_value    ,   (0x0000CCD1)	  @ 
+.equ    xlli_MSC2_value    ,   (0x0000B884)	  @ 
+.equ    xlli_MECR_value    ,   (0x00000001)     @ Expansion memory -- 
+.equ    xlli_MCMEM0_value  ,   (0x00014307)	  @ PC Card memory -- 
+.equ    xlli_MCMEM1_value  ,   (0x00014307)	  @ PC Card memory -- 
+.equ    xlli_MCATT0_value  ,   (0x0001C787)	  @ PC Card memory -- 
+.equ    xlli_MCATT1_value  ,   (0x0001C787)	  @ PC Card memory -- 
+.equ    xlli_MCIO0_value   ,   (0x0001430F)	  @ PC Card memory -- 
+.equ    xlli_MCIO1_value   ,   (0x0001430F)	  @ PC Card memory -- 
+.equ    xlli_FLYCNFG_value ,   (0x00010001)     @ Fly-by-DMA -- ?????
+@ .equ    xlli_MDMRSLP_value ,   (0x00000000)     @ Low power enable for SDRAM (was 0000C008)   
+.equ    xlli_MDMRSLP_value ,   (0x0000C008)     @ Low power enable for SDRAM   
+.equ    xlli_SXCNFG_value  ,   (0x40044004)     @ Default value at boot up. Synchronous static memory.
 
 
 @
 @ Optimal values for MSCO for various MemClk frequencies are listed below
 @ These values are for L18 async flash
 @
-        .ifdef xlli_C0_BULVERDE
-
-       .equ   xlli_MSC0_13,(0x11101110)
-       .equ   xlli_MSC0_19,(0x11101110)
-       .equ   xlli_MSC0_26,(0x11201120)   @ 26 MHz setting
-       .equ   xlli_MSC0_32,(0x11201120)
-       .equ   xlli_MSC0_39,(0x11301130)   @ 39 MHz setting
-       .equ   xlli_MSC0_45,(0x11301130)
-       .equ   xlli_MSC0_52,(0x11401140)   @ 52 MHz setting
-       .equ   xlli_MSC0_58,(0x11401140)
-       .equ   xlli_MSC0_65,(0x11501150)   @ 65 MHz setting
-       .equ   xlli_MSC0_68,(0x11501150)
-       .equ   xlli_MSC0_71,(0x11501150)   @ 71.5 MHz setting
-       .equ   xlli_MSC0_74,(0x11601160)
-       .equ   xlli_MSC0_78,(0x12601260)   @ 78 MHz setting
-       .equ   xlli_MSC0_81,(0x12601260)
-       .equ   xlli_MSC0_84,(0x12601260)   @ 84.5 MHz setting
-       .equ   xlli_MSC0_87,(0x12701270)
-       .equ   xlli_MSC0_91,(0x12701270)   @ 91 MHz setting
-       .equ   xlli_MSC0_94,(0x12701270)   @ 94.2 MHz setting
-       .equ   xlli_MSC0_97,(0x12701270)   @ 97.5 MHz setting
-      .equ   xlli_MSC0_100,(0x12801280)   @ 100.7 MHz setting
-      .equ   xlli_MSC0_104,(0x12801280)   @ 104 MHz setting
-      .equ   xlli_MSC0_110,(0x12901290)
-      .equ   xlli_MSC0_117,(0x13901390)   @ 117 MHz setting
-      .equ   xlli_MSC0_124,(0x13A013A0)
-      .equ   xlli_MSC0_130,(0x13A013A0)   @ 130 MHz setting
-      .equ   xlli_MSC0_136,(0x13B013B0)
-      .equ   xlli_MSC0_143,(0x13B013B0)
-      .equ   xlli_MSC0_149,(0x13C013C0)
-      .equ   xlli_MSC0_156,(0x14C014C0)
-      .equ   xlli_MSC0_162,(0x14C014C0)
-      .equ   xlli_MSC0_169,(0x14C014C0)
-      .equ   xlli_MSC0_175,(0x14C014C0)
-      .equ   xlli_MSC0_182,(0x14C014C0)
-      .equ   xlli_MSC0_188,(0x14C014C0)
-      .equ   xlli_MSC0_195,(0x15C015C0)
-      .equ   xlli_MSC0_201,(0x15D015D0)
-      .equ   xlli_MSC0_208,(0x15D015D0)
-
-        .else
-
-@ This is a hack to get around some stupid B0 timing issue where it doesn't like the optimal
-@ values according to it's own SPEC!?!  These timing values are relaxed from the above optimal
-@ but they work for B-step PXA27x... ugh....
-
-       .equ   xlli_MSC0_13,(0x12101210)
-       .equ   xlli_MSC0_19,(0x12101210)
-       .equ   xlli_MSC0_26,(0x12201220)   @ 26 MHz setting
-       .equ   xlli_MSC0_32,(0x12201220)
-       .equ   xlli_MSC0_39,(0x13301330)   @ 39 MHz setting
-       .equ   xlli_MSC0_45,(0x13301330)
-       .equ   xlli_MSC0_52,(0x13401340)   @ 52 MHz setting
-       .equ   xlli_MSC0_58,(0x13601360)
-       .equ   xlli_MSC0_65,(0x13501350)   @ 65 MHz setting
-       .equ   xlli_MSC0_68,(0x13501350)
-       .equ   xlli_MSC0_71,(0x14601460)   @ 71.5 MHz setting
-       .equ   xlli_MSC0_74,(0x14601460)
-       .equ   xlli_MSC0_78,(0x14601460)   @ 78 MHz setting
-       .equ   xlli_MSC0_81,(0x14701470)
-       .equ   xlli_MSC0_84,(0x14701470)   @ 84.5 MHz setting
-       .equ   xlli_MSC0_87,(0x14701470)
-       .equ   xlli_MSC0_91,(0x14701470)   @ 91 MHz setting
-       .equ   xlli_MSC0_94,(0x14801480)   @ 94.2 MHz setting
-       .equ   xlli_MSC0_97,(0x14801480)   @ 97.5 MHz setting
-      .equ   xlli_MSC0_100,(0x15801580)   @ 100.7 MHz setting
-      .equ   xlli_MSC0_104,(0x15801580)   @ 104 MHz setting
-      .equ   xlli_MSC0_110,(0x15901590)
-      .equ   xlli_MSC0_117,(0x15A015A0)   @ 117 MHz setting
-      .equ   xlli_MSC0_124,(0x15A015A0)
-      .equ   xlli_MSC0_130,(0x15B015B0)   @ 130 MHz setting
-      .equ   xlli_MSC0_136,(0x16B016B0)
-      .equ   xlli_MSC0_143,(0x16C016C0)
-      .equ   xlli_MSC0_149,(0x16C016C0)
-      .equ   xlli_MSC0_156,(0x16C016C0)
-      .equ   xlli_MSC0_162,(0x16C016C0)
-      .equ   xlli_MSC0_169,(0x17D017D0)   @ Given that the optimal value would be 13 (RDF), but according to B0 manual, it's different
-      .equ   xlli_MSC0_175,(0x17C017C0)
-      .equ   xlli_MSC0_182,(0x17C017C0)
-      .equ   xlli_MSC0_188,(0x17D017D0)
-      .equ   xlli_MSC0_195,(0x17E017E0)
-      .equ   xlli_MSC0_201,(0x18E018E0)
-      .equ   xlli_MSC0_208,(0x18E018E0)
-
-        .endif @ xlli_C0_BULVERDE
-
-@
-@ Optimal values for DTC settings for various MemClk settings (MDCNFG)
-@
-        .ifdef   xlli_SDRAM_WIDTH_16_BIT
-
-@ Really, we should have yet another flag that is dependant on the SDRAM part, but since only
-@ the MCP's SDRAM parameters are different than the MSII platform, I'm choosing to pick the 16-bit
-@ width to trigger for the different timing values
-
-        .equ   xlli_DTC_13,(0x00000000)   @ 13 MHz setting
-        .equ   xlli_DTC_19,(0x00000000)   @ 19 MHz setting
-        .equ   xlli_DTC_26,(0x00000000)   @ 26 MHz setting
-        .equ   xlli_DTC_32,(0x00000000)   @ 32 MHz setting
-        .equ   xlli_DTC_39,(0x01000100)   @ 39 MHz setting
-        .equ   xlli_DTC_45,(0x01000100)   @ 45 MHz setting
-        .equ   xlli_DTC_52,(0x01000100)   @ 52 MHz setting
-        .equ   xlli_DTC_58,(0x01000100)   @ 58 MHz setting
-        .equ   xlli_DTC_65,(0x01000100)   @ 65 MHz setting
-        .equ   xlli_DTC_68,(0x02000200)   @ 68 MHz setting
-        .equ   xlli_DTC_71,(0x02000200)   @ 71 MHz setting
-        .equ   xlli_DTC_74,(0x02000200)   @ 74 MHz setting
-        .equ   xlli_DTC_78,(0x02000200)   @ 78 MHz setting
-        .equ   xlli_DTC_81,(0x02000200)   @ 81 MHz setting
-        .equ   xlli_DTC_84,(0x02000200)   @ 84 MHz setting
-        .equ   xlli_DTC_87,(0x02000200)   @ 87 MHz setting
-        .equ   xlli_DTC_91,(0x02000200)   @ 91 MHz setting
-        .equ   xlli_DTC_94,(0x02000200)   @ 94 MHz setting
-        .equ   xlli_DTC_97,(0x02000200)   @ 97 MHz setting
-       .equ   xlli_DTC_100,(0x03000300)   @ 100 MHz setting
-       .equ   xlli_DTC_104,(0x03000300)   @ 104 MHz setting
-       .equ   xlli_DTC_110,(0x01000100)   @ 110 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_117,(0x01000100)   @ 117 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_124,(0x01000100)   @ 124 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_130,(0x02000200)   @ 130 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_136,(0x02000200)   @ 136 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_143,(0x02000200)   @ 143 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_149,(0x02000200)   @ 149 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_156,(0x02000200)   @ 156 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_162,(0x02000200)   @ 162 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_169,(0x02000200)   @ 169 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_175,(0x02000200)   @ 175 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_182,(0x02000200)   @ 182 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_188,(0x02000200)   @ 188 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_195,(0x02000200)   @ 195 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_201,(0x03000300)   @ 201 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_208,(0x03000300)   @ 208 MHz setting - SDCLK Halved
-@
-@ Optimal values for DRI settings for various MemClk settings (MDREFR)
-@
-        .equ   xlli_DRI_13,(0x002)   @ 13 MHz setting
-        .equ   xlli_DRI_19,(0x003)
-        .equ   xlli_DRI_26,(0x004)   @ 26 MHz setting
-        .equ   xlli_DRI_32,(0x006)
-        .equ   xlli_DRI_39,(0x007)   @ 39 MHz setting
-        .equ   xlli_DRI_45,(0x009)
-        .equ   xlli_DRI_52,(0x00A)   @ 52 MHz setting
-        .equ   xlli_DRI_58,(0x00C)
-        .equ   xlli_DRI_65,(0x00D)   @ 65 MHz setting
-        .equ   xlli_DRI_68,(0x00E)
-        .equ   xlli_DRI_71,(0x00F)   @ 71 MHz setting
-        .equ   xlli_DRI_74,(0x010)
-        .equ   xlli_DRI_78,(0x010)   @ 78 MHz setting
-        .equ   xlli_DRI_81,(0x011)
-        .equ   xlli_DRI_84,(0x012)   @ 84 MHz setting
-        .equ   xlli_DRI_87,(0x013)
-        .equ   xlli_DRI_91,(0x013)   @ 91 MHz setting
-        .equ   xlli_DRI_94,(0x014)   @ 94 MHz setting
-        .equ   xlli_DRI_97,(0x015)   @ 97 MHz setting
-       .equ   xlli_DRI_100,(0x016)   @ 100 MHz setting
-       .equ   xlli_DRI_104,(0x016)   @ 104 MHz setting
-       .equ   xlli_DRI_110,(0x018)
-       .equ   xlli_DRI_117,(0x019)   @ 117 MHz setting
-       .equ   xlli_DRI_124,(0x01B)
-       .equ   xlli_DRI_130,(0x01C)   @ 130 MHz setting
-       .equ   xlli_DRI_136,(0x01E)
-       .equ   xlli_DRI_143,(0x01F)
-       .equ   xlli_DRI_149,(0x021)
-       .equ   xlli_DRI_156,(0x022)
-       .equ   xlli_DRI_162,(0x024)
-       .equ   xlli_DRI_169,(0x025)   @ 169 MHz setting
-       .equ   xlli_DRI_175,(0x027)
-       .equ   xlli_DRI_182,(0x028)
-       .equ   xlli_DRI_188,(0x02A)
-       .equ   xlli_DRI_195,(0x02B)
-       .equ   xlli_DRI_201,(0x02D)
-       .equ   xlli_DRI_208,(0x02E)   @ 208 MHz setting
-
-        .else        @ ELSE not 16 bit SDRAM width
-
-        .equ   xlli_DTC_13,(0x00000000)   @ 13 MHz setting
-        .equ   xlli_DTC_19,(0x00000000)   @ 19 MHz setting
-        .equ   xlli_DTC_26,(0x00000000)   @ 26 MHz setting
-        .equ   xlli_DTC_32,(0x00000000)   @ 32 MHz setting
-        .equ   xlli_DTC_39,(0x00000000)   @ 39 MHz setting
-        .equ   xlli_DTC_45,(0x00000000)   @ 45 MHz setting
-        .equ   xlli_DTC_52,(0x00000000)   @ 52 MHz setting
-        .equ   xlli_DTC_58,(0x01000100)   @ 58 MHz setting
-        .equ   xlli_DTC_65,(0x01000100)   @ 65 MHz setting
-        .equ   xlli_DTC_68,(0x01000100)   @ 68 MHz setting
-        .equ   xlli_DTC_71,(0x01000100)   @ 71 MHz setting
-        .equ   xlli_DTC_74,(0x01000100)   @ 74 MHz setting
-        .equ   xlli_DTC_78,(0x01000100)   @ 78 MHz setting
-        .equ   xlli_DTC_81,(0x01000100)   @ 81 MHz setting
-        .equ   xlli_DTC_84,(0x01000100)   @ 84 MHz setting
-        .equ   xlli_DTC_87,(0x01000100)   @ 87 MHz setting
-        .equ   xlli_DTC_91,(0x02000200)   @ 91 MHz setting
-        .equ   xlli_DTC_94,(0x02000200)   @ 94 MHz setting
-        .equ   xlli_DTC_97,(0x02000200)   @ 97 MHz setting
-       .equ   xlli_DTC_100,(0x02000200)   @ 100 MHz setting
-       .equ   xlli_DTC_104,(0x02000200)   @ 104 MHz setting
-       .equ   xlli_DTC_110,(0x01000100)   @ 110 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_117,(0x01000100)   @ 117 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_124,(0x01000100)   @ 124 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_130,(0x01000100)   @ 130 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_136,(0x01000100)   @ 136 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_143,(0x01000100)   @ 143 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_149,(0x01000100)   @ 149 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_156,(0x01000100)   @ 156 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_162,(0x01000100)   @ 162 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_169,(0x01000100)   @ 169 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_175,(0x01000100)   @ 175 MHz setting - SDCLK Halved
-       .equ   xlli_DTC_182,(0x02000200)   @ 182 MHz setting - SDCLK Halved - Close to edge, so bump up
-       .equ   xlli_DTC_188,(0x02000200)   @ 188 MHz setting - SDCLK Halved - Close to edge, so bump up
-       .equ   xlli_DTC_195,(0x02000200)   @ 195 MHz setting - SDCLK Halved - Close to edge, so bump up
-       .equ   xlli_DTC_201,(0x02000200)   @ 201 MHz setting - SDCLK Halved - Close to edge, so bump up
-       .equ   xlli_DTC_208,(0x02000200)   @ 208 MHz setting - SDCLK Halved - Close to edge, so bump up
+ 
+.equ    xlli_MSC0_13       ,   (0x11101110)
+.equ    xlli_MSC0_19       ,   (0x11101110)
+.equ    xlli_MSC0_26       ,   (0x11201120)   @ 26 MHz setting
+.equ    xlli_MSC0_32       ,   (0x11201120)
+.equ    xlli_MSC0_39       ,   (0x11301130)   @ 39 MHz setting
+.equ    xlli_MSC0_45       ,   (0x11301130)
+.equ    xlli_MSC0_52       ,   (0x11401140)   @ 52 MHz setting
+.equ    xlli_MSC0_58       ,   (0x11401140)
+.equ    xlli_MSC0_65       ,   (0x11501150)   @ 65 MHz setting
+.equ    xlli_MSC0_68       ,   (0x11501150)
+.equ    xlli_MSC0_71       ,   (0x11501150)   @ 71.5 MHz setting
+.equ    xlli_MSC0_74       ,   (0x11601160)
+.equ    xlli_MSC0_78       ,   (0x12601260)   @ 78 MHz setting
+.equ    xlli_MSC0_81       ,   (0x12601260)
+.equ    xlli_MSC0_84       ,   (0x12601260)   @ 84.5 MHz setting
+.equ    xlli_MSC0_87       ,   (0x12701270)
+.equ    xlli_MSC0_91       ,   (0x12701270)   @ 91 MHz setting
+.equ    xlli_MSC0_94       ,   (0x12701270)   @ 94.2 MHz setting
+.equ    xlli_MSC0_97       ,   (0x12701270)   @ 97.5 MHz setting
+.equ    xlli_MSC0_100      ,   (0x12801280)   @ 100.7 MHz setting
+.equ    xlli_MSC0_104      ,   (0x12801280)   @ 104 MHz setting
+.equ    xlli_MSC0_110      ,   (0x12901290)
+.equ    xlli_MSC0_117      ,   (0x13901390)   @ 117 MHz setting
+.equ    xlli_MSC0_124      ,   (0x13A013A0)
+.equ    xlli_MSC0_130      ,   (0x13A013A0)   @ 130 MHz setting
+.equ    xlli_MSC0_136      ,   (0x13B013B0)
+.equ    xlli_MSC0_143      ,   (0x13B013B0)
+.equ    xlli_MSC0_149      ,   (0x13C013C0)
+.equ    xlli_MSC0_156      ,   (0x14C014C0)
+.equ    xlli_MSC0_162      ,   (0x14C014C0)
+.equ    xlli_MSC0_169      ,   (0x14C014C0)
+.equ    xlli_MSC0_175      ,   (0x14C014C0)
+.equ    xlli_MSC0_182      ,   (0x14C014C0)
+.equ    xlli_MSC0_188      ,   (0x14C014C0)
+.equ    xlli_MSC0_195      ,   (0x15C015C0)
+.equ    xlli_MSC0_201      ,   (0x15D015D0)
+.equ    xlli_MSC0_208      ,   (0x15D015D0)
+
+ 
+@ Set values for SDRAM
+
+.equ    xlli_DTC_13        ,   (0x00000000)   @ 13 MHz setting
+.equ    xlli_DTC_19        ,   (0x00000000)   @ 19 MHz setting
+.equ    xlli_DTC_26        ,   (0x00000000)   @ 26 MHz setting
+.equ    xlli_DTC_32        ,   (0x00000000)   @ 32 MHz setting
+.equ    xlli_DTC_39        ,   (0x00000000)   @ 39 MHz setting
+.equ    xlli_DTC_45        ,   (0x00000000)   @ 45 MHz setting
+.equ    xlli_DTC_52        ,   (0x00000000)   @ 52 MHz setting
+.equ    xlli_DTC_58        ,   (0x01000100)   @ 58 MHz setting
+.equ    xlli_DTC_65        ,   (0x01000100)   @ 65 MHz setting
+.equ    xlli_DTC_68        ,   (0x01000100)   @ 68 MHz setting
+.equ    xlli_DTC_71        ,   (0x01000100)   @ 71 MHz setting
+.equ    xlli_DTC_74        ,   (0x01000100)   @ 74 MHz setting
+.equ    xlli_DTC_78        ,   (0x01000100)   @ 78 MHz setting
+.equ    xlli_DTC_81        ,   (0x01000100)   @ 81 MHz setting
+.equ    xlli_DTC_84        ,   (0x01000100)   @ 84 MHz setting
+.equ    xlli_DTC_87        ,   (0x01000100)   @ 87 MHz setting
+.equ    xlli_DTC_91        ,   (0x02000200)   @ 91 MHz setting
+.equ    xlli_DTC_94        ,   (0x02000200)   @ 94 MHz setting
+.equ    xlli_DTC_97        ,   (0x02000200)   @ 97 MHz setting
+.equ    xlli_DTC_100       ,   (0x02000200)   @ 100 MHz setting
+.equ    xlli_DTC_104       ,   (0x02000200)   @ 104 MHz setting
+.equ    xlli_DTC_110       ,   (0x01000100)   @ 110 MHz setting - SDCLK Halved
+.equ    xlli_DTC_117       ,   (0x01000100)   @ 117 MHz setting - SDCLK Halved
+.equ    xlli_DTC_124       ,   (0x01000100)   @ 124 MHz setting - SDCLK Halved
+.equ    xlli_DTC_130       ,   (0x01000100)   @ 130 MHz setting - SDCLK Halved
+.equ    xlli_DTC_136       ,   (0x01000100)   @ 136 MHz setting - SDCLK Halved
+.equ    xlli_DTC_143       ,   (0x01000100)   @ 143 MHz setting - SDCLK Halved
+.equ    xlli_DTC_149       ,   (0x01000100)   @ 149 MHz setting - SDCLK Halved
+.equ    xlli_DTC_156       ,   (0x01000100)   @ 156 MHz setting - SDCLK Halved
+.equ    xlli_DTC_162       ,   (0x01000100)   @ 162 MHz setting - SDCLK Halved
+.equ    xlli_DTC_169       ,   (0x01000100)   @ 169 MHz setting - SDCLK Halved
+.equ    xlli_DTC_175       ,   (0x01000100)   @ 175 MHz setting - SDCLK Halved
+.equ    xlli_DTC_182       ,   (0x02000200)   @ 182 MHz setting - SDCLK Halved - Close to edge, so bump up
+.equ    xlli_DTC_188       ,   (0x02000200)   @ 188 MHz setting - SDCLK Halved - Close to edge, so bump up
+.equ    xlli_DTC_195       ,   (0x02000200)   @ 195 MHz setting - SDCLK Halved - Close to edge, so bump up
+.equ    xlli_DTC_201       ,   (0x02000200)   @ 201 MHz setting - SDCLK Halved - Close to edge, so bump up
+.equ    xlli_DTC_208       ,   (0x02000200)   @ 208 MHz setting - SDCLK Halved - Close to edge, so bump up
 @
 @       Optimal values for DRI settings for various MemClk settings (MDREFR)
 @
-        .equ   xlli_DRI_13,(0x002)   @ 13 MHz setting
-        .equ   xlli_DRI_19,(0x003)
-        .equ   xlli_DRI_26,(0x005)   @ 26 MHz setting
-        .equ   xlli_DRI_32,(0x006)
-        .equ   xlli_DRI_39,(0x008)   @ 39 MHz setting
-        .equ   xlli_DRI_45,(0x00A)
-        .equ   xlli_DRI_52,(0x00B)   @ 52 MHz setting
-        .equ   xlli_DRI_58,(0x00D)
-        .equ   xlli_DRI_65,(0x00E)   @ 65 MHz setting
-        .equ   xlli_DRI_68,(0x00F)
-        .equ   xlli_DRI_71,(0x010)   @ 71 MHz setting
-        .equ   xlli_DRI_74,(0x011)
-        .equ   xlli_DRI_78,(0x012)   @ 78 MHz setting
-        .equ   xlli_DRI_81,(0x012)
-        .equ   xlli_DRI_84,(0x013)   @ 84 MHz setting
-        .equ   xlli_DRI_87,(0x014)
-        .equ   xlli_DRI_91,(0x015)   @ 91 MHz setting
-        .equ   xlli_DRI_94,(0x016)   @ 94 MHz setting
-        .equ   xlli_DRI_97,(0x016)   @ 97 MHz setting
-       .equ   xlli_DRI_100,(0x017)   @ 100 MHz setting
-       .equ   xlli_DRI_104,(0x018)   @ 104 MHz setting
-       .equ   xlli_DRI_110,(0x01A)
-       .equ   xlli_DRI_117,(0x01B)   @ 117 MHz setting
-       .equ   xlli_DRI_124,(0x01D)
-       .equ   xlli_DRI_130,(0x01E)   @ 130 MHz setting
-       .equ   xlli_DRI_136,(0x020)
-       .equ   xlli_DRI_143,(0x021)
-       .equ   xlli_DRI_149,(0x023)
-       .equ   xlli_DRI_156,(0x025)
-       .equ   xlli_DRI_162,(0x026)
-       .equ   xlli_DRI_169,(0x028)   @ 169 MHz setting
-       .equ   xlli_DRI_175,(0x029)
-       .equ   xlli_DRI_182,(0x02B)
-       .equ   xlli_DRI_188,(0x02D)
-       .equ   xlli_DRI_195,(0x02E)
-       .equ   xlli_DRI_201,(0x030)
-       .equ   xlli_DRI_208,(0x031)   @ 208 MHz setting
-
-        .endif       @ xlli_SDRAM_WIDTH_16_BIT
+.equ    xlli_DRI_13        ,   (0x002)   @ 13 MHz setting
+.equ    xlli_DRI_19        ,   (0x003)
+.equ    xlli_DRI_26        ,   (0x005)   @ 26 MHz setting
+.equ    xlli_DRI_32        ,   (0x006)
+.equ    xlli_DRI_39        ,   (0x008)   @ 39 MHz setting
+.equ    xlli_DRI_45        ,   (0x00A)
+.equ    xlli_DRI_52        ,   (0x00B)   @ 52 MHz setting
+.equ    xlli_DRI_58        ,   (0x00D)
+.equ    xlli_DRI_65        ,   (0x00E)   @ 65 MHz setting
+.equ    xlli_DRI_68        ,   (0x00F)
+.equ    xlli_DRI_71        ,   (0x010)   @ 71 MHz setting
+.equ    xlli_DRI_74        ,   (0x011)
+.equ    xlli_DRI_78        ,   (0x012)   @ 78 MHz setting
+.equ    xlli_DRI_81        ,   (0x012)
+.equ    xlli_DRI_84        ,   (0x013)   @ 84 MHz setting
+.equ    xlli_DRI_87        ,   (0x014)
+.equ    xlli_DRI_91        ,   (0x015)   @ 91 MHz setting
+.equ    xlli_DRI_94        ,   (0x016)   @ 94 MHz setting
+.equ    xlli_DRI_97        ,   (0x016)   @ 97 MHz setting
+.equ    xlli_DRI_100       ,   (0x017)   @ 100 MHz setting
+.equ    xlli_DRI_104       ,   (0x018)   @ 104 MHz setting
+.equ    xlli_DRI_110       ,   (0x01A)
+.equ    xlli_DRI_117       ,   (0x01B)   @ 117 MHz setting
+.equ    xlli_DRI_124       ,   (0x01D)
+.equ    xlli_DRI_130       ,   (0x01E)   @ 130 MHz setting
+.equ    xlli_DRI_136       ,   (0x020)
+.equ    xlli_DRI_143       ,   (0x021)
+.equ    xlli_DRI_149       ,   (0x023)
+.equ    xlli_DRI_156       ,   (0x025)
+.equ    xlli_DRI_162       ,   (0x026)
+.equ    xlli_DRI_169       ,   (0x028)   @ 169 MHz setting
+.equ    xlli_DRI_175       ,   (0x029)
+.equ    xlli_DRI_182       ,   (0x02B)
+.equ    xlli_DRI_188       ,   (0x02D)
+.equ    xlli_DRI_195       ,   (0x02E)
+.equ    xlli_DRI_201       ,   (0x030)
+.equ    xlli_DRI_208       ,   (0x031)   @ 208 MHz setting
 
+ 
 @
 @       SDRAM Settings
 @
-        .ifdef   xlli_SDRAM_WIDTH_16_BIT
-  .equ   xlli_MDCNFG_value,(0x00002BCC)   @ SDRAM Config Reg (MCP Version)
-        .else
-  .equ   xlli_MDCNFG_value,(0x00000AC8)   @ SDRAM Config Reg (Non-MCP Version)
-        .endif
 
-   .equ   xlli_MDMRS_value,(0x00000000)   @ SDRAM Mode Reg Set Config Reg
+.equ    xlli_MDCNFG_value  ,   (0x00000BA9)   @ SDRAM Config Reg (Non-MCP Version) AERONIX -- was AC9
+.equ    xlli_MDMRS_value   ,   (0x00000000)   @ SDRAM Mode Reg Set Config Reg
 
 @
 @ MEMORY PHYSICAL BASE ADDRESS(S)
 @
 
-      .equ       xlli_SRAM_PHYSICAL_BASE,(0X5C000000)  @ Physical base address for SRAM
-     .equ       xlli_SDRAM_PHYSICAL_BASE,(0xA0000000)  @ Physical base address for SDRAM
+.equ    xlli_SRAM_PHYSICAL_BASE      ,       (0X5C000000)  @ Physical base address for SRAM
+.equ    xlli_SDRAM_PHYSICAL_BASE     ,       (0xA0000000)  @ Physical base address for SDRAM
 
 @
 @ CORE, SYSTEM BUS, MEMORY BUS Default frequency setting for Mainstone
 @
-      .equ     xlli_CCCR_value,(0x00000107)  @ PXA27x (HW reset value to start)
+.equ    xlli_CCCR_value      ,     (0x00000107)  @ PXA27x (HW reset value to start)
 @
 @ Clock Enable Register (CKEN) setting
 @
-      .equ     xlli_CKEN_value,(0x00400240)  @ Data to be set into the clock enable register
-                                           @ Bit 6 enables FFUART
-                                           @ bit 9 enables OS timers
-                                           @ Bit 22 enables memory clock
+
+@ Aeronix: Updated via 2.33 to enable MMC clock
+
+.equ    xlli_CKEN_value      ,     (0x00D1D2E3)  @ Data to be set into the clock enable register
+  
+@ 0000 0000 1101 0001 1101 0010 1110 0011
+
+@ 0,1 PWM's enabled *
+@ 2 AC'97 coded 
+@ 3 SSP2 unit 
+
+@ 4 SSP3 unit 
+@ 5 STUART (Terminal and Scan engine) 
+@ 6 FFUART (Modem) *
+@ 7 BTUART (RF)  *
+
+@ 8 I2S Unit (codec)
+@ 9 OS timers *
+@ 10 USB Host
+@ 11 USB Client                                
+
+@ 12 enables MMC Controller *
+@ 13 -- IR port
+@ 14 I2C enable *
+@ 15 Power I2C enable *
+
+@ 16 LCD Controller *
+@ 17 MSL Interface
+@ 18 USIM interface
+@ 19 Keypad
+
+@ 20 Internal Memory Enable *
+@ 21 Memory Stick
+@ 22 Memory Controller *
+@ 23 SSP1 Unit (BGW200) *
+
+@ 24 Capture (camera) interface
+
+@ Aeronix: 7/14/06 -- MMC/SD setup
+.equ MMC_STRPCL	, 0x41100000  @ Control to start and stop MMC clock 
+.equ MMC_STAT	, 0x41100004  @ MMC Status Register (read only) 
+.equ MMC_CLKRT	, 0x41100008  @ MMC clock rate 
+.equ MMC_SPI	, 0x4110000c  @ SPI mode control bits 
+.equ MMC_CMDAT	, 0x41100010  @ Command/response/data sequence control 
+
+
 @
 @ Address where system configuration data is stored
 @
-           .equ     xlli_SCR_data,0x5C03FFFC      @ Address of system config data
+.equ    xlli_SCR_data           ,     0x5C03FFFC      @ Address of system config data
 
 @
 @ Misc constants
 @
-        .equ     xlli_MemSize_1Mb,0x00100000
-        .ifdef  xlli_SDRAM_SIZE_32_MB
-        .equ     xlli_p_PageTable,0xA1FFC000      @ Base address for memory Page Table (MCP version)
-        .else
-        .equ     xlli_p_PageTable,0xA3FFC000      @ Base address for memory Page Table (Non-MCP version)
-        .endif
-        .equ     xlli_s_PageTable,0x00004000      @ Page Table size (4K words - 16 Kb)
-
-
-            .equ     xlli_FLASH_WRITE_CMD,0x0060  @ Code for writing to flash
-            .equ     xlli_FLASH_WCONF_CMD,0x0003  @ Code to confirm write to flash
-             .equ     xlli_FLASH_READ_CMD,0x00FF  @ Code to place flash in read mode
-        .equ     xlli_FLASH_READQUERY_CMD,0x0098  @ Code to place flash in a 'query CFI' mode
+.equ    xlli_MemSize_1Mb        ,     0x00100000
+.equ    xlli_p_PageTable        ,     0xA1FFC000      @ Base address for memory Page Table (MCP version)
+.equ    xlli_s_PageTable        ,     0x00004000      @ Page Table size (4K words - 16 Kb)
+
+.equ    xlli_FLASH_WRITE_CMD            ,     0x0060  @ Code for writing to flash
+.equ    xlli_FLASH_WCONF_CMD            ,     0x0003  @ Code to confirm write to flash
+.equ    xlli_FLASH_READ_CMD             ,     0x00FF  @ Code to place flash in read mode
+.equ    xlli_FLASH_READQUERY_CMD        ,     0x0098  @ Code to place flash in a 'query CFI' mode
 
 @
 @ Note 1:  For the current L3/L18 flash, it has a maximium frequency of 52MHz.  In addition, the SXCNFG.LC value is based on the
@@ -461,20 +355,20 @@
 @               be aware that 8 words is a cache line, so it may be more beneficial to revert to a burst length of 8 words per
 @               burst as opposed to 16 words per burst
 @
-  .equ     xlli_FLASH_RCR16_value,0x25C3<<1       @ Value to set flash into sync mode - optimal RC.LC value for 52MHz flash is 5
-  .equ     xlli_FLASH_RCR32_value,0x25C3<<2       @ Value to set flash into sync mode - optimal RC.LC value for 52MHz flash is 5
+.equ    xlli_FLASH_RCR16_value  ,     0x25C3<<1       @ Value to set flash into sync mode - optimal RC.LC value for 52MHz flash is 5
+.equ    xlli_FLASH_RCR32_value  ,     0x25C3<<2       @ Value to set flash into sync mode - optimal RC.LC value for 52MHz flash is 5
 
 @
 @ Value below is simply to align with the settings put in for the flash RCR value
 @
-  .equ     xlli_SXCNFG_sync_value,0x7011          @ SXCNFG value for sync flash operation - optimal SXCNFG.LC value for 52MHz flash is 4
+.equ    xlli_SXCNFG_sync_value  ,     0x7011          @ SXCNFG value for sync flash operation - optimal SXCNFG.LC value for 52MHz flash is 4
 
 @
 @ Values to put the flash back into Asynchronous mode
 @
-    .equ     xlli_FLASH_ASYNC_RCR16_value,0xA5C2<<1       @ Value to set flash into sync mode - optimal RC.LC value for 52MHz flash is 5
-    .equ     xlli_FLASH_ASYNC_RCR32_value,0xA5C2<<2       @ Value to set flash into sync mode - optimal RC.LC value for 52MHz flash is 5
-         .equ     xlli_SXCNFG_async_value,0x7010          @ SXCNFG value for sync flash operation - optimal SXCNFG.LC value for 52MHz flash is 4
+.equ    xlli_FLASH_ASYNC_RCR16_value    ,     0xA5C2<<1       @ Value to set flash into sync mode - optimal RC.LC value for 52MHz flash is 5
+.equ    xlli_FLASH_ASYNC_RCR32_value    ,     0xA5C2<<2       @ Value to set flash into sync mode - optimal RC.LC value for 52MHz flash is 5
+.equ    xlli_SXCNFG_async_value         ,     0x7010          @ SXCNFG value for sync flash operation - optimal SXCNFG.LC value for 52MHz flash is 4
 
 
 @
@@ -487,21 +381,23 @@
 @       K18 = 0x8805 -> 0x8807
 @       L18 = 0x880E -> 0x8810
 @       L3  = 0x8812 -> 0x8815
+@	C3  = 0x88C4
+@   P30 = 0X8817
 @
-    .equ     xlli_J3_FlashID_Code,0x0018  @ return value of J3 in parallel mode
-    .equ     xlli_K3_FlashID_Code,0x8803  @ use the upper (so can compare as <=
-   .equ     xlli_K18_FlashID_Code,0x8807  @ use the upper (so can compare as <=
-   .equ     xlli_L18_FlashID_Code,0x8810  @ use the upper (so can compare as <=
-    .equ     xlli_L3_FlashID_Code,0x8815  @ use the upper (so can compare as <=
-
+.equ    xlli_J3_FlashID_Code    ,     0x0018  @ return value of J3 in parallel mode
+.equ    xlli_K3_FlashID_Code    ,     0x8803  @ use the upper (so can compare as <=
+.equ    xlli_K18_FlashID_Code   ,     0x8807  @ use the upper (so can compare as <=
+.equ    xlli_L18_FlashID_Code   ,     0x8810  @ use the upper (so can compare as <=
+.equ    xlli_L3_FlashID_Code    ,     0x8815  @ use the upper (so can compare as <=
+.equ    xlli_C3_FlashID_Code    ,     0x88C4  @ use the upper (so can compare as <=
+.equ    xlli_p30_FlashID_Code    ,     0x8817  @ use the upper (so can compare as <=
 
 @
 @       Special conditional required for Power On SelfTest (POST) build
 @
     .ifdef POST_BUILD
-        .equ     xlli_v_xbBOOTROM,0x04000000      @ Required for POST
+.equ    xlli_v_xbBOOTROM        ,     0x00000000      @ Required for POST
     .else
-        .equ     xlli_v_xbBOOTROM,0x00000000      @ Everything else
+.equ    xlli_v_xbBOOTROM        ,     0x00000000      @ Everything else
     .endif
 
-      
Index: build_tree/bootLoader/src/blob/xlli/mainstone/z2.inc
diff -u /dev/null build_tree/bootLoader/src/blob/xlli/mainstone/z2.inc:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/blob/xlli/mainstone/z2.inc	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,83 @@
+@ 
+@ Aeronix, Inc. 
+@ 2005
+@ Setup for Z2 board
+@ Version 1
+@
+        .include  "xlli_Bulverde_defs.inc"                 @ PXA27x specific include file
+        .include  "xlli_Mainstone_defs.inc"                @ Mainstone specific include file
+        .include  "xlli_LowLev_mac.mac"                    @ Mainstone Macro definitions
+		.include  "bbu_Bulverde_defs.inc"
+
+		.global Z2_init
+
+Z2_init:
+
+@
+@ AERONIX Set the LCD voltage to 3.0V (PCF50606 reg 0x23=0xF5)
+@
+@       Save the PCF50606 address in the FFUART scratch pad register
+@
+        mov    r1,  #0x10                        @ Set PMU codec base address
+        ldr    r2,  =FFUART_PHYSICAL_BASE    @ Fetch base address of FFUART
+        str    r1,  [r2, #UASPR_offset]      @ Store I2C address in the scratch pad register
+
+        mov    r4,  #0x23           @ I2C register address
+        mov    r5,  #0xF5           @ Data to be set to this register
+        bl     bbu_putPI2C          @ Send the data
+@
+@ Set CV limit to 4.2V
+@
+		mov		r4,	#0x2B
+		mov		r5,	#0x3A
+        bl     bbu_putPI2C          @ Send the data
+@
+@ Kickstart charge cycle
+@
+		mov		r4,	#0x29
+		mov		r5,	#0x0F
+        bl     bbu_putPI2C          @ Send the data
+@
+@ Clear the watchdog timer (...so the charger doesnt time out)
+@
+		mov		r4,	#0x2A
+		mov		r5,	#0x00
+        bl     bbu_putPI2C          @ Send the data
+@
+@ Now set the VMEM output to 3.30 because it does not seem to regulate well with default values
+@
+ 	    mov    r4,  #0x22			@ DCUDC2 register
+ 	    mov	   r5,	#0x21			@ Set 1A current limit and force PWM mode
+        bl     bbu_putPI2C         @ Send the data
+
+@
+@ Disable power OK monitoring on regulators
+@
+ 	    mov    r4,  #0x19			@ PWROK register
+ 	    mov	   r5,	#0xFF			@ Mask all regulators
+        bl     bbu_putPI2C         @ Send the data
+
+@ Set the PLLs to max out the clock speeds
+
+        mov    r2,  #0x190                                  @ Set the core frequency to 312MHz and bus to 104MHz
+        ldr    r4,  =xlli_CLKREGS_PHYSICAL_BASE             @ Load clock registers base address
+        str    r2,  [r4, #xlli_CCCR_offset]                 @ Write to the clock config register
+        bl     xlli_freq_change                             @ Frequency change sequence & restart memory controller
+@
+@ Set the SDRAM clock to 1X bus clock
+@
+        ldr    r1,  =xlli_MEMORY_CONFIG_BASE    @ Clock registers base address
+		ldr	   r4,  =0x2011A01E
+        str    r4,  [r1,  #xlli_MDREFR_offset]  @ Write data to register (this sets the SDRAM clock to 104MHz)
+ 
+@
+@ Set the Turbo bit
+@
+		mov    r7, #0x1
+        mrc    p14, 0, r6, c6, c0, 0    @ Get data in CP14, Register 6
+        bic    r6,  r6,  #1             @ Clear Turbo bit
+        bic    r6,  r6,  #2             @ Make sure the frequency change bit is cleared
+        orr    r6,  r6,  r7             @ Update with value from user
+        mcr    p14, 0, r6, c6, c0, 0    @ Write data to CP14, Register 6
+
+		mov		pc,	lr
\ No newline at end of file
Index: build_tree/bootLoader/src/blob/xlli/mainstone/z2.s
diff -u /dev/null build_tree/bootLoader/src/blob/xlli/mainstone/z2.s:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/blob/xlli/mainstone/z2.s	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,83 @@
+@ 
+@ Aeronix, Inc. 
+@ 2005
+@ Setup for Z2 board
+@ Version 1
+@
+        .include  "xlli_Bulverde_defs.inc"                 @ PXA27x specific include file
+        .include  "xlli_Mainstone_defs.inc"                @ Mainstone specific include file
+        .include  "xlli_LowLev_mac.mac"                    @ Mainstone Macro definitions
+		.include  "bbu_Bulverde_defs.inc"
+
+.global Z2_init
+
+Z2_init:
+
+@
+@ AERONIX Set the LCD voltage to 3.0V (PCF50606 reg 0x23=0xF5)
+@
+@       Save the PCF50606 address in the FFUART scratch pad register
+@
+        mov    r1,  #0x10                        @ Set PMU codec base address
+        ldr    r2,  =FFUART_PHYSICAL_BASE    @ Fetch base address of FFUART
+        str    r1,  [r2, #UASPR_offset]      @ Store I2C address in the scratch pad register
+
+        mov    r4,  #0x23           @ I2C register address
+        mov    r5,  #0xF5           @ Data to be set to this register
+        bl     bbu_putPI2C          @ Send the data
+@
+@ Set CV limit to 4.2V
+@
+		mov		r4,	#0x2B
+		mov		r5,	#0x3A
+        bl     bbu_putPI2C          @ Send the data
+@
+@ Kickstart charge cycle
+@
+		mov		r4,	#0x29
+		mov		r5,	#0x0F
+        bl     bbu_putPI2C          @ Send the data
+@
+@ Clear the watchdog timer (...so the charger doesnt time out)
+@
+		mov		r4,	#0x2A
+		mov		r5,	#0x00
+        bl     bbu_putPI2C          @ Send the data
+@
+@ Now set the VMEM output to 3.30 because it does not seem to regulate well with default values
+@
+ 	    mov    r4,  #0x22			@ DCUDC2 register
+ 	    mov	   r5,	#0x21			@ Set 1A current limit and force PWM mode
+        bl     bbu_putPI2C         @ Send the data
+
+@
+@ Disable power OK monitoring on regulators
+@
+ 	    mov    r4,  #0x19			@ PWROK register
+ 	    mov	   r5,	#0xFF			@ Mask all regulators
+        bl     bbu_putPI2C         @ Send the data
+
+@ Set the PLLs to max out the clock speeds
+
+        mov    r2,  #0x190                                  @ Set the core frequency to 312MHz and bus to 104MHz
+        ldr    r4,  =xlli_CLKREGS_PHYSICAL_BASE             @ Load clock registers base address
+        str    r2,  [r4, #xlli_CCCR_offset]                 @ Write to the clock config register
+        bl     xlli_freq_change                             @ Frequency change sequence & restart memory controller
+@
+@ Set the SDRAM clock to 1X bus clock
+@
+        ldr    r1,  =xlli_MEMORY_CONFIG_BASE    @ Clock registers base address
+		ldr	   r4,  =0x2011A01E
+        str    r4,  [r1,  #xlli_MDREFR_offset]  @ Write data to register (this sets the SDRAM clock to 104MHz)
+ 
+@
+@ Set the Turbo bit
+@
+		mov    r7, #0x1
+        mrc    p14, 0, r6, c6, c0, 0    @ Get data in CP14, Register 6
+        bic    r6,  r6,  #1             @ Clear Turbo bit
+        bic    r6,  r6,  #2             @ Make sure the frequency change bit is cleared
+        orr    r6,  r6,  r7             @ Update with value from user
+        mcr    p14, 0, r6, c6, c0, 0    @ Write data to CP14, Register 6
+
+		mov		pc,	lr
Index: build_tree/bootLoader/src/commands/Makefile.in
diff -u /dev/null build_tree/bootLoader/src/commands/Makefile.in:1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/commands/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,515 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+#
+# Makefile.am
+#
+# Copyright (C) 2002 Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
+#
+# $Id: Makefile.am,v 1.13 2003/09/04 17:50:35 russd Exp $
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+SOURCES = $(libcommands_a_SOURCES)
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = src/commands
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+ARFLAGS = cru
+LIBRARIES = $(noinst_LIBRARIES)
+libcommands_a_AR = $(AR) $(ARFLAGS)
+libcommands_a_LIBADD =
+am_libcommands_a_OBJECTS = terminal.$(OBJEXT) reboot.$(OBJEXT) \
+	arp.$(OBJEXT) autoip.$(OBJEXT) bogomips.$(OBJEXT) \
+	call.$(OBJEXT) changebit.$(OBJEXT) download.$(OBJEXT) \
+	dummy.$(OBJEXT) dump.$(OBJEXT) dlfile.$(OBJEXT) \
+	ferase.$(OBJEXT) fwrite.$(OBJEXT) memcpy.$(OBJEXT) \
+	peek.$(OBJEXT) poke.$(OBJEXT) md5chk.$(OBJEXT) setip.$(OBJEXT) \
+	sysupd.$(OBJEXT) tdownload.$(OBJEXT) tftp.$(OBJEXT) \
+	xdownload.$(OBJEXT) usb_serial_download.$(OBJEXT)
+libcommands_a_OBJECTS = $(am_libcommands_a_OBJECTS)
+DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include/blob
+depcomp = $(SHELL) $(top_srcdir)/tools/depcomp
+am__depfiles_maybe = depfiles
+@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/arp.Po ./$(DEPDIR)/autoip.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/bogomips.Po ./$(DEPDIR)/call.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/changebit.Po ./$(DEPDIR)/dlfile.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/download.Po ./$(DEPDIR)/dummy.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/dump.Po ./$(DEPDIR)/ferase.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/fwrite.Po ./$(DEPDIR)/md5chk.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/memcpy.Po ./$(DEPDIR)/peek.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/poke.Po ./$(DEPDIR)/reboot.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/setip.Po ./$(DEPDIR)/sysupd.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/tdownload.Po ./$(DEPDIR)/terminal.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/tftp.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/usb_serial_download.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/xdownload.Po
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
+SOURCES = $(libcommands_a_SOURCES)
+DIST_SOURCES = $(libcommands_a_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+noinst_LIBRARIES = \
+	libcommands.a
+
+libcommands_a_SOURCES = \
+	terminal.c \
+	reboot.c \
+	arp.c \
+	autoip.c \
+	bogomips.c \
+	call.c \
+	changebit.c \
+	download.c \
+	dummy.c \
+	dump.c \
+	dlfile.c \
+	ferase.c \
+	fwrite.c \
+	memcpy.c \
+	peek.c \
+	poke.c \
+	md5chk.c \
+	setip.c \
+	sysupd.c \
+	tdownload.c \
+	tftp.c \
+	xdownload.c \
+	usb_serial_download.c
+
+INCLUDES = \
+	-I${top_builddir}/include \
+	-I${top_srcdir}/include
+
+EXTRA_DIST = \
+	make_commands.sh
+
+CLEANFILES = ${srcdir}/*~
+DISTCLEANFILES = ${builddir}/.deps/*.P
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/commands/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  src/commands/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+clean-noinstLIBRARIES:
+	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
+libcommands.a: $(libcommands_a_OBJECTS) $(libcommands_a_DEPENDENCIES) 
+	-rm -f libcommands.a
+	$(libcommands_a_AR) libcommands.a $(libcommands_a_OBJECTS) $(libcommands_a_LIBADD)
+	$(RANLIB) libcommands.a
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/autoip.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bogomips.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/call.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/changebit.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dlfile.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/download.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dummy.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dump.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ferase.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fwrite.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/md5chk.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcpy.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/peek.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/poke.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reboot.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setip.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sysupd.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdownload.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/terminal.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tftp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/usb_serial_download.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xdownload.Po@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LIBRARIES)
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	clean-noinstLIBRARIES ctags distclean distclean-compile \
+	distclean-generic distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-exec install-exec-am install-info \
+	install-info-am install-man install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
+	uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/src/commands/ferase.c
diff -u build_tree/bootLoader/src/commands/ferase.c:1.1.1.1 build_tree/bootLoader/src/commands/ferase.c:1.1.1.2
--- build_tree/bootLoader/src/commands/ferase.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/commands/ferase.c	Fri Nov  9 10:37:08 2007
@@ -75,7 +75,7 @@
 		len = len>>2;
 	}
 
-	dprintf( "start=0x%08x, len=0x%08x words\n", dest, len );
+	printf( "start=0x%08x, len=0x%08x words\n", dest, len );
 
 	ret = flash_erase_region( (u32 *)dest, len );
 DONE:
Index: build_tree/bootLoader/src/commands/make_commands.sh
diff -u /dev/null build_tree/bootLoader/src/commands/make_commands.sh:1.5
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/commands/make_commands.sh	Thu Nov 15 10:25:51 2007
@@ -0,0 +1,47 @@
+#! /bin/sh
+#
+# make_commands.sh: generate commandlist code
+#
+# Copyright (C) 2002 Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
+#
+# $Id: make_commands.sh,v 1.1 2002/02/17 20:01:31 erikm Exp $
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+
+cat <<EOF
+/*
+ * WARNING:
+ * This file was generated by make_commands.sh. All changes to this file
+ * will be automatically overwritten once you rerun make_commands.sh. Do
+ * not try to check this file into CVS: generated files do not belong in
+ * CVS repositories.
+ */
+
+#ifdef HAVE_CONFIG_H
+# include <blob/config.h>
+#endif
+
+#include <blob/command.h>
+
+EOF
+
+for i in $* ; do 
+    cat <<EOF
+extern int ${i}_cmd(int argc, char *argv[]);
+extern char ${i}_help[];
+__commandlist(${i}_cmd, "${i}", ${i}_help);
+
+EOF
+done
Index: build_tree/bootLoader/src/commands/xdownload.c
diff -u build_tree/bootLoader/src/commands/xdownload.c:1.1.1.1 build_tree/bootLoader/src/commands/xdownload.c:1.1.1.2
--- build_tree/bootLoader/src/commands/xdownload.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/commands/xdownload.c	Fri Nov  9 10:37:08 2007
@@ -109,13 +109,11 @@
 	do_md5sum((u32 *)startAddress, *numRead, digest);
 
 	printf("Received %i (0x%08x) bytes", *numRead, *numRead);
-#ifdef BLOB_DEBUG
 	printf("at 0x%08x", (unsigned int)startAddress);
 #ifdef CONFIG_MD5_SUPPORT
 	printf(", MD5: ");
 	print_md5_digest(digest);
 #endif
-#endif
 	printf("\n");
 
 
Index: build_tree/bootLoader/src/diag/Makefile.in
diff -u /dev/null build_tree/bootLoader/src/diag/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/diag/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,603 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+#
+# Makefile.am
+#
+# Copyright (C) 2001 Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
+#
+# $Id: Makefile.am,v 1.23 2003/09/04 18:10:42 russd Exp $
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+
+SOURCES = $(diag_SOURCES) $(diag_elf32_SOURCES) $(EXTRA_diag_elf32_SOURCES)
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+bin_PROGRAMS = diag-elf32$(EXEEXT) diag$(EXEEXT)
+subdir = src/diag
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+am__installdirs = "$(DESTDIR)$(bindir)"
+binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
+PROGRAMS = $(bin_PROGRAMS)
+am_diag_OBJECTS =
+diag_OBJECTS = $(am_diag_OBJECTS)
+diag_LDADD = $(LDADD)
+am_diag_elf32_OBJECTS = start.$(OBJEXT) command_hist.$(OBJEXT) \
+	commands.$(OBJEXT) getcommand.$(OBJEXT) initcalls.$(OBJEXT) \
+	regs-sa11x0.$(OBJEXT) main.$(OBJEXT)
+diag_elf32_OBJECTS = $(am_diag_elf32_OBJECTS)
+DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include/blob
+depcomp = $(SHELL) $(top_srcdir)/tools/depcomp
+am__depfiles_maybe = depfiles
+@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/accelent_sa.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/assabet.Po ./$(DEPDIR)/badge4.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/brutus.Po ./$(DEPDIR)/cep.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/clart.Po ./$(DEPDIR)/command_hist.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/commands.Po ./$(DEPDIR)/csir_ims.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/frodo.Po ./$(DEPDIR)/getcommand.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/h3600.Po ./$(DEPDIR)/hackkit.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/idr.Po ./$(DEPDIR)/initcalls.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/jornada720.Po ./$(DEPDIR)/lart.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/lcd.Po ./$(DEPDIR)/lubbock.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/main.Po ./$(DEPDIR)/miniprint.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/nesa.Po ./$(DEPDIR)/pleb.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/pxa_idp.Po ./$(DEPDIR)/ramses.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/regs-sa11x0.Po ./$(DEPDIR)/shannon.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/smdk2500.Po ./$(DEPDIR)/system3.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/trizeps.Po
+CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
+SOURCES = $(diag_SOURCES) $(diag_elf32_SOURCES) \
+	$(EXTRA_diag_elf32_SOURCES)
+DIST_SOURCES = $(diag_SOURCES) $(diag_elf32_SOURCES) \
+	$(EXTRA_diag_elf32_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+INCLUDES = \
+	-I${top_builddir}/include \
+	-I${top_srcdir}/include
+
+
+# ---- Built sources -------------------------------------------------
+BUILT_SOURCES = \
+	commands.c
+
+
+# ---- diag ----------------------------------------------------------
+
+# WARNING: start.S *must* be the first file, otherwise the target will
+# be linked in the wrong order!
+diag_elf32_SOURCES = \
+	start.S \
+	command_hist.c \
+	commands.c \
+	getcommand.c \
+	initcalls.c \
+	regs-sa11x0.c \
+	main.c
+
+EXTRA_diag_elf32_SOURCES = \
+	lcd.c \
+	accelent_sa.c \
+	assabet.c \
+	badge4.c \
+	brutus.c \
+	cep.c \
+	clart.c \
+	frodo.c \
+	hackkit.c \
+	h3600.c \
+	idr.c \
+	jornada720.c \
+	lart.c \
+	lubbock.c \
+	miniprint.c \
+	nesa.c \
+	pleb.c \
+	ramses.c \
+	shannon.c \
+	smdk2500.c \
+	system3.c \
+	trizeps.c \
+	pxa_idp.c \
+	csir_ims.c
+
+diag_elf32_DEPENDENCIES = \
+	@DIAG_LCD_OBJS@ \
+	@DIAG_PLATFORM_OBJS@ \
+	${top_builddir}/src/commands/libcommands.a \
+	${top_builddir}/src/lib/libblob.a \
+	ld-script
+
+diag_elf32_LDFLAGS = \
+	-Wl,-T,${srcdir}/ld-script \
+	-Wl,-Map,diag-elf32.map
+
+diag_elf32_LDADD = \
+	@DIAG_LCD_OBJS@ \
+	@DIAG_PLATFORM_OBJS@ \
+	-L${top_builddir}/src/commands -L${top_builddir}/src/lib \
+	-lcommands -lblob \
+	-lgcc
+
+diag_SOURCES = 
+
+# ---- Automake administrativia --------------------------------------
+EXTRA_DIST = \
+	ld-script
+
+CLEANFILES = ${srcdir}/*~ *.map commands.c
+DISTCLEANFILES = ${builddir}/.deps/*.P
+all: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) all-am
+
+.SUFFIXES:
+.SUFFIXES: .S .c .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/diag/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  src/diag/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+install-binPROGRAMS: $(bin_PROGRAMS)
+	@$(NORMAL_INSTALL)
+	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
+	@list='$(bin_PROGRAMS)'; for p in $$list; do \
+	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
+	  if test -f $$p \
+	  ; then \
+	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
+	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
+	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
+	  else :; fi; \
+	done
+
+uninstall-binPROGRAMS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(bin_PROGRAMS)'; for p in $$list; do \
+	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
+	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
+	done
+
+clean-binPROGRAMS:
+	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
+diag-elf32$(EXEEXT): $(diag_elf32_OBJECTS) $(diag_elf32_DEPENDENCIES) 
+	@rm -f diag-elf32$(EXEEXT)
+	$(LINK) $(diag_elf32_LDFLAGS) $(diag_elf32_OBJECTS) $(diag_elf32_LDADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/accelent_sa.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/assabet.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/badge4.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/brutus.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cep.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clart.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command_hist.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/commands.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/csir_ims.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frodo.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getcommand.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/h3600.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hackkit.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/idr.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/initcalls.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jornada720.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lart.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lcd.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lubbock.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/miniprint.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nesa.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pleb.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pxa_idp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ramses.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/regs-sa11x0.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shannon.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smdk2500.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/system3.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trizeps.Po@am__quote@
+
+.S.o:
+	$(CCASCOMPILE) -c $<
+
+.S.obj:
+	$(CCASCOMPILE) -c `$(CYGPATH_W) '$<'`
+
+.c.o:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) check-am
+all-am: Makefile $(PROGRAMS)
+installdirs:
+	for dir in "$(DESTDIR)$(bindir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
+clean: clean-am
+
+clean-am: clean-binPROGRAMS clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am: install-binPROGRAMS
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-binPROGRAMS uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
+	clean-generic ctags distclean distclean-compile \
+	distclean-generic distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-binPROGRAMS \
+	install-data install-data-am install-exec install-exec-am \
+	install-info install-info-am install-man install-strip \
+	installcheck installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
+	uninstall-am uninstall-binPROGRAMS uninstall-info-am
+
+
+commands.c:
+	${top_srcdir}/src/commands/make_commands.sh @ALL_COMMANDS@ > $@
+
+diag$(EXEEXT): diag-elf32
+	$(OBJCOPY) $(OCFLAGS) $< $@
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/src/lib/Makefile.am
diff -u build_tree/bootLoader/src/lib/Makefile.am:1.1.1.2 build_tree/bootLoader/src/lib/Makefile.am:1.1.1.3
--- build_tree/bootLoader/src/lib/Makefile.am:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/Makefile.am	Fri Nov  9 10:37:08 2007
@@ -80,7 +80,9 @@
 	gio_flash.c \
 	i2c-gpio.c \
 	i2c.c \
-	tar.c
+	tar.c \
+        pxa-bb-spi.c \
+		pxa-lcd.c
 
 
 libblob_a_DEPENDENCIES = \
@@ -94,7 +96,9 @@
 	@BLOB_PCMCIA_OBJS@ \
 	@BLOB_IDE_OBJS@ \
 	@BLOB_CF_OBJS@ \
-	@BLOB_GIO_OBJS@
+	@BLOB_GIO_OBJS@ \
+        @BLOB_SPI_OBJS@ \
+		@BLOB_LCD_OBJS@
 
 libblob_a_LIBADD = \
 	@BLOB_REBOOT_DRIVER_OBJS@ \
@@ -107,7 +111,9 @@
 	@BLOB_PCMCIA_OBJS@ \
 	@BLOB_IDE_OBJS@ \
 	@BLOB_CF_OBJS@ \
-	@BLOB_GIO_OBJS@
+	@BLOB_GIO_OBJS@ \
+        @BLOB_SPI_OBJS@ \
+		@BLOB_LCD_OBJS@
 
 INCLUDES		= \
 	-I${top_builddir}/include \
Index: build_tree/bootLoader/src/lib/Makefile.in
diff -u /dev/null build_tree/bootLoader/src/lib/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/lib/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,624 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+#
+# Makefile.am
+#
+# Copyright (C) 2001 Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
+#
+# $Id: Makefile.am,v 1.33 2003/09/04 18:03:09 russd Exp $
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+#
+
+SOURCES = $(libblob_a_SOURCES) $(EXTRA_libblob_a_SOURCES)
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = src/lib
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+ARFLAGS = cru
+LIBRARIES = $(noinst_LIBRARIES)
+libblob_a_AR = $(AR) $(ARFLAGS)
+am_libblob_a_OBJECTS = command.$(OBJEXT) crc32.$(OBJEXT) \
+	download.$(OBJEXT) error.$(OBJEXT) ether.$(OBJEXT) \
+	icache.$(OBJEXT) init.$(OBJEXT) led.$(OBJEXT) md5.$(OBJEXT) \
+	md5support.$(OBJEXT) memcmp.$(OBJEXT) memcpy.$(OBJEXT) \
+	memset.$(OBJEXT) mini_inflate.$(OBJEXT) printf.$(OBJEXT) \
+	reboot.$(OBJEXT) serial.$(OBJEXT) serial_usb.$(OBJEXT) \
+	strlen.$(OBJEXT) strncmp.$(OBJEXT) strncpy.$(OBJEXT) \
+	strtou32.$(OBJEXT) time.$(OBJEXT) util.$(OBJEXT)
+libblob_a_OBJECTS = $(am_libblob_a_OBJECTS)
+DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include/blob
+depcomp = $(SHELL) $(top_srcdir)/tools/depcomp
+am__depfiles_maybe = depfiles
+@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/arp.Po ./$(DEPDIR)/bootp.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/cf.Po ./$(DEPDIR)/command.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/crc32.Po ./$(DEPDIR)/download.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/error.Po ./$(DEPDIR)/ether-s3c2500.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/ether-smc9196.Po ./$(DEPDIR)/ether.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/generic_io.Po ./$(DEPDIR)/gio_flash.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/gio_part_blob.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/gio_ram.Po ./$(DEPDIR)/i2c-gpio.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/i2c.Po ./$(DEPDIR)/icache.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/ide.Po ./$(DEPDIR)/init.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/ip_bits.Po ./$(DEPDIR)/led-mmap.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/led-s3c2500.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/led-sa11x0.Po ./$(DEPDIR)/led.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/md5.Po ./$(DEPDIR)/md5support.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/memcmp.Po ./$(DEPDIR)/memcpy.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/memset.Po ./$(DEPDIR)/mini_inflate.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/pcmcia.Po ./$(DEPDIR)/printf.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/reboot-pxa.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/reboot-s3c2500.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/reboot-sa11x0.Po ./$(DEPDIR)/reboot.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/serial-bvdusb.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/serial-pxa.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/serial-s3c2500.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/serial-sa11x0.Po ./$(DEPDIR)/serial.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/serial_usb.Po ./$(DEPDIR)/strlen.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/strncmp.Po ./$(DEPDIR)/strncpy.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/strtou32.Po ./$(DEPDIR)/tar.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/tftp.Po ./$(DEPDIR)/time-intelarm.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/time-null.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/time-s3c2500.Po ./$(DEPDIR)/time.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/util.Po
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
+SOURCES = $(libblob_a_SOURCES) $(EXTRA_libblob_a_SOURCES)
+DIST_SOURCES = $(libblob_a_SOURCES) $(EXTRA_libblob_a_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+noinst_LIBRARIES = \
+	libblob.a
+
+libblob_a_SOURCES = \
+	command.c \
+	crc32.c \
+	download.c \
+	error.c \
+	ether.c \
+	icache.c \
+	init.c \
+	led.c \
+	md5.c \
+	md5support.c \
+	memcmp.c \
+	memcpy.c \
+	memset.c \
+	mini_inflate.c \
+	printf.c \
+	reboot.c \
+	serial.c \
+	serial_usb.c \
+	strlen.c \
+	strncmp.c \
+	strncpy.c \
+	strtou32.c \
+	time.c \
+	util.c
+
+EXTRA_libblob_a_SOURCES = \
+	ether-s3c2500.c \
+	ether-smc9196.c \
+	led-mmap.c \
+	led-s3c2500.c \
+	led-sa11x0.c \
+	reboot-pxa.c \
+	reboot-s3c2500.c \
+	reboot-sa11x0.c \
+	serial-pxa.c \
+	serial-s3c2500.c \
+	serial-sa11x0.c \
+	serial-bvdusb.c \
+	time-intelarm.c \
+	time-s3c2500.c \
+	time-null.c \
+	arp.c \
+	bootp.c \
+	tftp.c \
+	ip_bits.c\
+	ide.c \
+	pcmcia.c \
+	cf.c \
+	generic_io.c \
+	gio_part_blob.c \
+	gio_ram.c \
+	gio_flash.c \
+	i2c-gpio.c \
+	i2c.c \
+	tar.c \
+    pxa-bb-spi.c \
+	pxa-lcd.c
+
+libblob_a_DEPENDENCIES = \
+	@BLOB_REBOOT_DRIVER_OBJS@ \
+	@BLOB_SERIAL_DRIVER_OBJS@ \
+	@BLOB_TIMER_DRIVER_OBJS@ \
+	@BLOB_LED_DRIVER_OBJS@ \
+	@BLOB_NETWORK_OBJS@ \
+	@BLOB_NETWORK_DRIVER_OBJS@ \
+	@BLOB_USBSERIAL_OBJS@ \
+	@BLOB_PCMCIA_OBJS@ \
+	@BLOB_IDE_OBJS@ \
+	@BLOB_CF_OBJS@ \
+	@BLOB_GIO_OBJS@ \
+        @BLOB_SPI_OBJS@ \
+		@BLOB_LCD_OBJS@
+
+libblob_a_LIBADD = \
+	@BLOB_REBOOT_DRIVER_OBJS@ \
+	@BLOB_SERIAL_DRIVER_OBJS@ \
+	@BLOB_TIMER_DRIVER_OBJS@ \
+	@BLOB_LED_DRIVER_OBJS@ \
+	@BLOB_NETWORK_OBJS@ \
+	@BLOB_NETWORK_DRIVER_OBJS@ \
+	@BLOB_USBSERIAL_OBJS@ \
+	@BLOB_PCMCIA_OBJS@ \
+	@BLOB_IDE_OBJS@ \
+	@BLOB_CF_OBJS@ \
+	@BLOB_GIO_OBJS@ \
+        @BLOB_SPI_OBJS@ \
+		@BLOB_LCD_OBJS@
+
+INCLUDES = \
+	-I${top_builddir}/include \
+	-I${top_srcdir}/include
+
+CLEANFILES = ${srcdir}/*~
+DISTCLEANFILES = ${builddir}/.deps/*.P
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/lib/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  src/lib/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+clean-noinstLIBRARIES:
+	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
+libblob.a: $(libblob_a_OBJECTS) $(libblob_a_DEPENDENCIES) 
+	-rm -f libblob.a
+	$(libblob_a_AR) libblob.a $(libblob_a_OBJECTS) $(libblob_a_LIBADD)
+	$(RANLIB) libblob.a
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/arp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bootp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cf.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/command.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crc32.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/download.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/error.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ether-s3c2500.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ether-smc9196.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ether.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/generic_io.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gio_flash.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gio_part_blob.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gio_ram.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/i2c-gpio.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/i2c.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/icache.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ide.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/init.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ip_bits.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/led-mmap.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/led-s3c2500.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/led-sa11x0.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/led.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/md5.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/md5support.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcmp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memcpy.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/memset.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mini_inflate.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pcmcia.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/printf.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reboot-pxa.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reboot-s3c2500.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reboot-sa11x0.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reboot.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serial-bvdusb.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serial-pxa.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serial-s3c2500.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serial-sa11x0.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serial.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/serial_usb.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strlen.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strncmp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strncpy.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/strtou32.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tar.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tftp.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/time-intelarm.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/time-null.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/time-s3c2500.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/time.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/util.Po@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(LIBRARIES)
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
+	clean-noinstLIBRARIES ctags distclean distclean-compile \
+	distclean-generic distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-data \
+	install-data-am install-exec install-exec-am install-info \
+	install-info-am install-man install-strip installcheck \
+	installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
+	uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/src/lib/bvd_usb_ctl.c
diff -u build_tree/bootLoader/src/lib/bvd_usb_ctl.c:1.1.1.1 build_tree/bootLoader/src/lib/bvd_usb_ctl.c:removed
--- build_tree/bootLoader/src/lib/bvd_usb_ctl.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/bvd_usb_ctl.c	Tue Jan  8 14:21:48 2008
@@ -1,633 +0,0 @@
-/*
- *  Copyright (C) Compaq Computer Corporation, 1998, 1999
- *  Copyright (C) Extenex Corporation, 2001
- *  Copyright (C) Intrinsyc, Inc., 2002
- *
- *  PXA USB controller core driver.
- *
- *  This file provides interrupt routing and overall coordination
- *  of the endpoints.
- *
- *  Please see:
- *    linux/Documentation/arm/SA1100/SA1100_USB 
- *  for more info.
- *
- *  02-May-2002
- *   Frank Becker (Intrinsyc) - derived from sa1100 usb_ctl.c
- *
- */
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-#include <blob/arch.h>
-#include <blob/init.h>
-#include <blob/types.h>
-#include <blob/time.h>
-
-#include "linux/errno.h"
-#include "pxa_usb.h"
-#include "bvd_usb_ctl.h"
-
-#undef DEBUG 
-//#define DEBUG 3
-#if DEBUG
-static unsigned int usb_debug = DEBUG;
-#else
-#define usb_debug 0     /* gcc will remove all the debug code for us */
-#endif
-
-//////////////////////////////////////////////////////////////////////////////
-// Prototypes
-//////////////////////////////////////////////////////////////////////////////
-
-int usbctl_next_state_on_event( int event );
-void udc_int_hndlr(int, void *);
-static void initialize_descriptors( void );
-static void soft_connect_hook( int enable );
-static void udc_disable(void);
-static void udc_enable(void);
-
-#if CONFIG_PROC_FS
-#define PROC_NODE_NAME "driver/pxausb"
-static int usbctl_read_proc(char *page, char **start, off_t off,
-							int count, int *eof, void *data);
-#endif
-
-/////////////////////////////////////////////////////////////////////////////
-int usb_connected = 0;
-
-
-//////////////////////////////////////////////////////////////////////////////
-// Globals
-//////////////////////////////////////////////////////////////////////////////
-static const char pszMe[] = "usbctl: ";
-struct usb_info_t usbd_info;  /* global to ep0, usb_recv, usb_send */
-
-/* device descriptors */
-static desc_t desc;
-
-#define MAX_STRING_DESC 16
-static string_desc_t * string_desc_array[ MAX_STRING_DESC ];
-static string_desc_t sd_zero;  /* special sd_zero holds language codes */
-
-// called when configured
-static usb_notify_t configured_callback = NULL;
-
-enum {
-    kStateZombie		= 0,
-    kStateZombieSuspend		= 1,
-    kStateDefault		= 2,
-    kStateDefaultSuspend	= 3,
-    kStateAddr			= 4,
-    kStateAddrSuspend		= 5,
-    kStateConfig		= 6,
-    kStateConfigSuspend		= 7
-};
-
-/*
- * FIXME: The PXA UDC handles several host device requests without user 
- * notification/intervention. The table could be collapsed quite a bit...
- */
-static int device_state_machine[8][6] = {
-//              suspend               reset          resume         adddr       config        deconfig
-/* zombie */  { kStateZombieSuspend , kStateDefault, kStateZombie , kError    , kError      , kError },
-/* zom sus */ { kStateZombieSuspend , kStateDefault, kStateZombie , kError    , kError      , kError },
-/* default */ { kStateDefaultSuspend, kStateDefault, kStateDefault, kStateAddr, kStateConfig, kError },
-/* def sus */ { kStateDefaultSuspend, kStateDefault, kStateDefault, kError    , kError      , kError },
-/* addr */    { kStateAddrSuspend   , kStateDefault, kStateAddr   , kError    , kStateConfig, kError },
-/* addr sus */{ kStateAddrSuspend   , kStateDefault, kStateAddr   , kError    , kError      , kError },
-/* config */  { kStateConfigSuspend , kStateDefault, kStateConfig , kError    , kError      , kStateDefault },
-/* cfg sus */ { kStateConfigSuspend , kStateDefault, kStateConfig , kError    , kError      , kError }
-};
-
-/* "device state" is the usb device framework state, as opposed to the
-   "state machine state" which is whatever the driver needs and is much
-   more fine grained
-*/
-static int sm_state_to_device_state[8] = { 
-//  zombie            zom suspend       
-USB_STATE_POWERED, USB_STATE_SUSPENDED, 
-//  default           default sus
-USB_STATE_DEFAULT, USB_STATE_SUSPENDED,
-//  addr              addr sus         
-USB_STATE_ADDRESS, USB_STATE_SUSPENDED, 
-//  config            config sus
-USB_STATE_CONFIGURED, USB_STATE_SUSPENDED
-};
-
-static char * state_names[8] =
-{ "zombie", "zombie suspended", 
-  "default", "default suspended",
-  "address", "address suspended", 
-  "configured", "config suspended"
-};
-
-static char * event_names[6] =
-{ "suspend", "reset", "resume",
-  "address assigned", "configure", "de-configure"
-};
-
-static char * device_state_names[] =
-{ "not attached", "attached", "powered", "default",
-  "address", "configured", "suspended" };
-
-static int sm_state = kStateZombie;
-
-//////////////////////////////////////////////////////////////////////////////
-// Async
-//////////////////////////////////////////////////////////////////////////////
-
-/* The UDCCR reg contains mask and interrupt status bits,
- * so using '|=' isn't safe as it may ack an interrupt.
- */
-
-void udc_set_mask_UDCCR( int mask )
-{
-	UDCCR = (UDCCR & UDCCR_MASK_BITS) | (mask & UDCCR_MASK_BITS);
-}
-
-void udc_clear_mask_UDCCR( int mask)
-{
-	UDCCR = (UDCCR & UDCCR_MASK_BITS) & ~(mask & UDCCR_MASK_BITS);
-}
-
-void udc_ack_int_UDCCR( int mask)
-{
-	/* udccr contains the bits we dont want to change */
-	__u32 udccr = UDCCR & UDCCR_MASK_BITS; 
-
-	UDCCR = udccr | (mask & ~UDCCR_MASK_BITS);
-}
-
-void
-udc_int_hndlr(int irq, void *dev_id)
-{
-	__u32 isr0 = UDCISR0;
-	__u32 isr1 = UDCISR1;
-	__u32 icr0 = UDCICR0;
-	__u32 icr1 = UDCICR1;
-
-	if (usb_debug) printf("%s UDCISR0=%08x, UDCISR1=%08x, UDCICR0=%08x, UDCICR1=%08x\n",
-				pszMe, isr0, isr1, icr0, icr1);
-
-	if ( (!isr0) && (!isr1)) return;
-
-	UDCICR0 = 0x0;
-	UDCICR1 = 0x0;
-
-	/* InterRupt SUSpend */
-	if ( isr1 & UDCISR1_IRSU )
-	{
-		/* FIXME */
-		/* udc_ack_int_UDCCR( UDCCR_SUSIR); */
-		UDCISR1 = UDCISR1_IRSU;
-		if (usb_debug) printf("%sSuspend...\n", pszMe);
-		usbctl_next_state_on_event( kEvSuspend );
-	}
-
-	/* InterRupt ResUme */
-	if ( isr1 & UDCISR1_IRRU )
-	{
-		/* FIXME */
-		/* udc_ack_int_UDCCR( UDCCR_RESIR); */
-		UDCISR1 = UDCISR1_IRRU;
-		if( usb_debug) printf("%sResume...\n", pszMe);
-		usbctl_next_state_on_event( kEvResume );
-		usb_connected = 0;
-	}
-
-	/* InterRupt Configuration Changed */
-	if (isr1 & UDCISR1_IRCC) {
-		if (usb_debug) printf("%sConfiguration Changed\n");
-
-		UDCISR1 = UDCISR1_IRCC;
-		UDCCR |= UDCCR_SMAC;
-
-		/* Reset usb driver here */
-		if ( usbctl_next_state_on_event(kEvReset) != kError ) {
-			ep0_reset();
-			ep1_reset();
-			ep2_reset();
-			
-			usbctl_next_state_on_event(kEvConfig);
-
-			usb_driver_reset();
-		}
-
-		usb_connected = 1;
-	}
-
-	/* ReSeT Interrupt Request - UDC has been reset */
-	if (isr1 & UDCISR1_IRRS) {
-		if(usb_debug) printf("%sReset...\n", pszMe);
-		UDCISR1 = UDCISR1_IRRS;
-
-		usb_connected = 0;
-	}
-	else
-	{
-		if ( isr0 & 0x2 ) UDCISR0 = 0x2;
-		/* ep0 int */
-		if ( isr0 & UDCISR0_IR0 ) {
-			if (usb_debug) printf("%sEP0...\n", pszMe);
-
-			UDCISR0 = 0x1;
-			ep0_int_hndlr();
-		}
-
-		if ( isr0 & 0x8 ) UDCISR0 = 0x8;
-		/* transmit bulk */
-		if ( isr0 & UDCISR0_IRA ) {
-			if (usb_debug) printf("%sEP1...\n", pszMe);
-
-			UDCISR0 = 0x4;
-			ep1_int_hndlr(isr0);
-		}
-
-		if ( isr0 & 0x20 )  UDCISR0 = 0x20;
-		/* receive bulk */
-		if (isr0 & UDCISR0_IRB) {
-			if (usb_debug) printf("%sEP2...\n", pszMe);
-
-			UDCISR0 = 0x10;
-			ep2_int_hndlr(isr0);
-		}
-
-		while (UDCCSRB & UDCCSR_BNE) {
-			ep2_int_hndlr(isr0);
-		}
-	}
-
-	UDCICR0 = icr0;
-	UDCICR1 = icr1;
-}
-
-//////////////////////////////////////////////////////////////////////////////
-// Public Interface
-//////////////////////////////////////////////////////////////////////////////
-
-/* Open PXA usb core on behalf of a client, but don't start running */
-
-int
-pxa_usb_open( const char * client )
-{
-	usbd_info.client_name = (char*) client;
-	memset(&usbd_info.stats, 0, sizeof(struct usb_stats_t));
-	memset(string_desc_array, 0, sizeof(string_desc_array));
-
-	/* hack to start in zombie suspended state */
-	sm_state = kStateZombieSuspend;
-	usbd_info.state = USB_STATE_SUSPENDED;
-
-	/* create descriptors for enumeration */
-	initialize_descriptors();
-
-	if (usb_debug) printf( "%s%s registered.\n", pszMe, client );
-	return 0;
-}
-
-/* Start running. Must have called usb_open (above) first */
-int
-pxa_usb_start( void )
-{
-	if ( usbd_info.client_name == NULL ) {
-		printf( "%s%s - no client registered\n",
-				pszMe, __FUNCTION__ );
-		return -EPERM;
-	}
-
-	/* start UDC internal machinery running */
-	udc_enable();
-	msleep(1);
-
-	/* give endpoint notification we are starting */
-	ep1_state_change_notify( USB_STATE_SUSPENDED );
-	ep2_state_change_notify( USB_STATE_SUSPENDED );
-
-	/* enable any platform specific hardware */
-	soft_connect_hook( 1 );
-
-	if (usb_debug) printf( "%sStarted %s\n", pszMe, usbd_info.client_name );
-	return 0;
-}
-
-/* Stop USB core from running */
-int
-pxa_usb_stop( void )
-{
-	if ( usbd_info.client_name == NULL ) {
-		printf( "%s%s - no client registered\n",
-				pszMe, __FUNCTION__ );
-		return -EPERM;
-	}
-
-	ep1_reset();
-	ep2_reset();
-
-	udc_disable();
-	if( usb_debug) printf( "%sStopped %s\n", pszMe, usbd_info.client_name );
-	return 0;
-}
-
-/* Tell PXA core client is through using it */
-int
-pxa_usb_close( void )
-{
-	 if ( usbd_info.client_name == NULL ) {
-		   printf( "%s%s - no client registered\n",
-				  pszMe, __FUNCTION__ );
-		  return -EPERM;
-	 }
-	 printf( "%s%s closed.\n", pszMe, (char*)usbd_info.client_name );
-	 usbd_info.client_name = NULL;
-	 return 0;
-}
-
-/* set a proc to be called when device is configured */
-usb_notify_t pxa_set_configured_callback( usb_notify_t func )
-{
-	 usb_notify_t retval = configured_callback;
-	 configured_callback = func;
-	 return retval;
-}
-
-/*====================================================
- * Descriptor Manipulation.
- * Use these between open() and start() above to setup
- * the descriptors for your device.
- *
- */
-
-/* get pointer to static default descriptor */
-desc_t *
-pxa_usb_get_descriptor_ptr( void ) { return &desc; }
-
-/* optional: set a string descriptor */
-int
-pxa_usb_set_string_descriptor( int i, string_desc_t * p )
-{
-	 int retval;
-	 if ( i < MAX_STRING_DESC ) {
-		  string_desc_array[i] = p;
-		  retval = 0;
-	 } else {
-		  retval = -EINVAL;
-	 }
-	 return retval;
-}
-
-/* optional: get a previously set string descriptor */
-string_desc_t *
-pxa_usb_get_string_descriptor( int i )
-{
-	 return ( i < MAX_STRING_DESC )
-		    ? string_desc_array[i]
-		    : NULL;
-}
-
-config_desc_t *
-pxa_usb_get_config(int cfgval) 
-{
-	int i;
-	desc_t * pdesc = pxa_usb_get_descriptor_ptr();
-	config_desc_t *cfg = (config_desc_t*) (pdesc->cdb);
-
-	for( i=0; i<pdesc->dev.bNumConfigurations; i++) {
-		if( cfg->bConfigurationValue == cfgval ) return cfg;
-		cfg = (config_desc_t*) ((unsigned char*)cfg + cfg->wTotalLength);
-	}
-
-	return NULL;
-}
-
-intf_desc_t *
-pxa_usb_get_interface( config_desc_t *cfg, int idx)
-{
-	int i;
-	intf_desc_t *intf = (intf_desc_t*) (cfg + 1);
-	
-	for( i=0; i < cfg->bNumInterfaces; i++) {
-		if( idx == intf->bInterfaceNumber) return intf;
-		intf++;
-	}
-
-	return NULL;
-}
-
-
-ep_desc_t *
-pxa_usb_get_endpoint( intf_desc_t *intf, int idx)
-{
-	int i;
-	ep_desc_t *ep = (ep_desc_t *) (intf+1);
-
-
-	for( i=0; i< intf->bNumEndpoints; i++) {
-		if( idx == (ep->bEndpointAddress & 0xF) ) return ep;
-		ep++;
-	}
-	return NULL;
-}
-
-//////////////////////////////////////////////////////////////////////////////
-// Exports to rest of driver
-//////////////////////////////////////////////////////////////////////////////
-
-/* called by the int handler here and the two endpoint files when interesting
-   .."events" happen */
-
-int
-usbctl_next_state_on_event( int event )
-{
-	int next_state = device_state_machine[ sm_state ][ event ];
-	if ( next_state != kError )
-	{
-		int next_device_state = sm_state_to_device_state[ next_state ];
-		if (usb_debug) printf( "%s%s --> [%s] --> %s. Device in %s state.\n",
-				pszMe, state_names[ sm_state ], event_names[ event ],
-				state_names[ next_state ], device_state_names[ next_device_state ] );
-
-		sm_state = next_state;
-		if ( usbd_info.state != next_device_state )
-		{
-			if ( configured_callback != NULL
-				 &&
-				 next_device_state == USB_STATE_CONFIGURED
-				 &&
-				 usbd_info.state != USB_STATE_SUSPENDED
-			   ) {
-			  configured_callback();
-			}
-			usbd_info.state = next_device_state;
-
-			ep1_state_change_notify( next_device_state );
-			ep2_state_change_notify( next_device_state );
-		}
-	}
-	else
-		printf( "%s%s --> [%s] --> ??? is an error.\n",
-				pszMe, state_names[ sm_state ], event_names[ event ] );
-	return next_state;
-}
-
-//////////////////////////////////////////////////////////////////////////////
-// Private Helpers
-//////////////////////////////////////////////////////////////////////////////
-
-/* setup default descriptors */
-
-static void
-initialize_descriptors(void)
-{
-
-	desc.dev.bLength               = sizeof( device_desc_t );
-	desc.dev.bDescriptorType       = USB_DESC_DEVICE;
-	desc.dev.bcdUSB                = 0x100; /* 1.0 */
-	desc.dev.bDeviceClass          = 0xFF;	/* vendor specific */
-	desc.dev.bDeviceSubClass       = 0;
-	desc.dev.bDeviceProtocol       = 0;
-	desc.dev.bMaxPacketSize0       = 16;	/* ep0 max fifo size */
-	desc.dev.idVendor              = 0;	/* vendor ID undefined */
-	desc.dev.idProduct             = 0; 	/* product */
-	desc.dev.bcdDevice             = 0; 	/* vendor assigned device release num */
-	desc.dev.iManufacturer         = 0;	/* index of manufacturer string */
-	desc.dev.iProduct              = 0; 	/* index of product description string */
-	desc.dev.iSerialNumber         = 0;	/* index of string holding product s/n */
-	desc.dev.bNumConfigurations    = 1;	/* configurations we have */
-
-	/*
-	desc.b.cfg.bLength             = sizeof( config_desc_t );
-	desc.b.cfg.bDescriptorType     = USB_DESC_CONFIG;
-	desc.b.cfg.wTotalLength        = make_word_c( sizeof(struct cdb) );
-	desc.b.cfg.bNumInterfaces      = 1;
-	desc.b.cfg.bConfigurationValue = 1;
-	desc.b.cfg.iConfiguration      = 0;
-	desc.b.cfg.bmAttributes        = USB_CONFIG_BUSPOWERED;
-	desc.b.cfg.MaxPower            = USB_POWER( 500 );
-
-	desc.b.intf.bLength            = sizeof( intf_desc_t );
-	desc.b.intf.bDescriptorType    = USB_DESC_INTERFACE;
-	desc.b.intf.bInterfaceNumber   = 0; 
-	desc.b.intf.bAlternateSetting  = 0;
-	desc.b.intf.bNumEndpoints      = 2;
-	desc.b.intf.bInterfaceClass    = 0xFF; 
-	desc.b.intf.bInterfaceSubClass = 0;
-	desc.b.intf.bInterfaceProtocol = 0;
-	desc.b.intf.iInterface         = 0;
-	*/
-
-/*
- * FIXME...
- * The host usbnet driver expects EP1=out EP2=in. On the PXA UDC EP1=in, EP2=out
- */
-	/*
-	desc.b.ep1.bLength             = sizeof( ep_desc_t );
-	desc.b.ep1.bDescriptorType     = USB_DESC_ENDPOINT;
-	desc.b.ep1.bEndpointAddress    = USB_EP_ADDRESS( 1, USB_IN );
-	desc.b.ep1.bmAttributes        = USB_EP_BULK;
-	desc.b.ep1.wMaxPacketSize      = make_word_c( 64 );
-	desc.b.ep1.bInterval           = 0;
-
-	desc.b.ep2.bLength             = sizeof( ep_desc_t );
-	desc.b.ep2.bDescriptorType     = USB_DESC_ENDPOINT;
-	desc.b.ep2.bEndpointAddress    = USB_EP_ADDRESS( 2, USB_OUT );
-	desc.b.ep2.bmAttributes        = USB_EP_BULK;
-	desc.b.ep2.wMaxPacketSize      = make_word_c( 64 );
-	desc.b.ep2.bInterval           = 0;
-	*/
-
-// FIXME: Add support for all endpoint...
-	usb_driver_reset();
-
-	/* set language */
-	/* See: http://www.usb.org/developers/data/USB_LANGIDs.pdf */
-	sd_zero.bDescriptorType = USB_DESC_STRING;
-	sd_zero.bLength         = sizeof( string_desc_t );
-	sd_zero.bString[0]      = make_word_c( 0x409 ); /* American English */
-	pxa_usb_set_string_descriptor( 0, &sd_zero );
-}
-
-/* soft_connect_hook()
- * Some devices have platform-specific circuitry to make USB
- * not seem to be plugged in, even when it is. This allows
- * software to control when a device 'appears' on the USB bus
- * (after Linux has booted and this driver has loaded, for
- * example). If you have such a circuit, control it here.
- */
-static void
-soft_connect_hook( int enable )
-{
-}
-
-/* configure udc endpoints */
-static void
-udc_configure(void)
-{
-	/* endpoint A ~ BULK, IN, MPS: 64bytes, Double-buffering, configuration 1, interface 0,
-	 * altsetting 0, endpoint 1
-	 */
-	UDCCRA = 0x0200d103;
-
-	/* endpoint B ~ BULK, OUT,MPS: 64bytes, Double-buffering, configuration 1, interface 0,
-	 * altsetting 0, endpoint 2
-	 */
-	UDCCRB = 0x02014103;
-}
-
-
-/* disable the UDC at the source */
-static void
-udc_disable(void)
-{
-	soft_connect_hook( 0 );
-	/* clear UDC-enable */
-	udc_clear_mask_UDCCR( UDCCR_UDE); 
-
-        /* Disable clock for USB device */
-        CKEN &= ~CKEN11_USB;
-}
-
-
-/*  enable the udc at the source */
-static void
-udc_enable(void)
-{
-        /* Enable clock for USB device */
-        CKEN |= CKEN11_USB;
-
-	/* UDC Endpoints */
-	udc_configure();
-
-        /* NOTE: special fix for Bulverde-B0 MCP
-	 * clear bit 20, set HXOE, clear HXS, and do some housekeeping
-	 * these two operations are required for USB to work
-	 */
-	UP2OCR = 0x00020000;
-	UDCWAKEUP |= 0x00008000;
-
-	/* enable endpoint 0, A, B's Packet Complete Interrupt. */
-	UDCICR0 = 0x0000003f;
-	UDCICR1 = 0xa8000000;
-
-	/* clear the interrupt status/control registers */
-	UDCISR0 = 0xffffffff;
-	UDCISR1 = 0xffffffff;
-	
-	/* set UDC-enable */
-	udc_set_mask_UDCCR( UDCCR_UDE); 
-
-	if (UDCCR & UDCCR_EMCE) {
-		printf("%s:Endpoint Memory Config Error\n", __FUNCTION__);
-	}
-
-	if( (UDCCR & UDCCR_UDA) == 0) {
-		/* There's a reset on the bus,
-		 * clear the interrupt bit and keep going
-		 */
-		if (usb_debug) printf("reset on bus\n");
-		/* udc_ack_int_UDCCR( UDCCR_RSTIR); */
-	}
-	
-}
-
Index: build_tree/bootLoader/src/lib/bvd_usb_ctl.h
diff -u build_tree/bootLoader/src/lib/bvd_usb_ctl.h:1.1.1.1 build_tree/bootLoader/src/lib/bvd_usb_ctl.h:removed
--- build_tree/bootLoader/src/lib/bvd_usb_ctl.h:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/bvd_usb_ctl.h	Tue Jan  8 14:21:48 2008
@@ -1,184 +0,0 @@
-/*
- *  Copyright (C) Compaq Computer Corporation, 1998, 1999
- *  Copyright (C) Extenex Corporation 2001
- *  Copyright (C) Intrinsyc, Inc., 2002
- *
- *  usb_ctl.h
- *
- *  PRIVATE interface used to share info among components of the PXA USB
- *  core: usb_ctl, usb_ep0, usb_recv and usb_send. Clients of the USB core
- *  should use pxa_usb.h.
- *
- *  02-May-2002
- *   Frank Becker (Intrinsyc) - derived from sa1100 usb_ctl.h
- *
- */
-
-#ifndef _USB_CTL_H
-#define _USB_CTL_H
-
-/* Interrupt mask bits and UDC enable bit */
-#define UDCCR_MASK_BITS         (UDCCR_REM | UDCCR_SRM | UDCCR_UDE)
-
-/*
- * These states correspond to those in the USB specification v1.0
- * in chapter 8, Device Framework.
- */
-enum { 
-	USB_STATE_NOTATTACHED	=0,
-	USB_STATE_ATTACHED	=1,
-	USB_STATE_POWERED	=2,
-	USB_STATE_DEFAULT	=3,
-	USB_STATE_ADDRESS	=4,
-	USB_STATE_CONFIGURED	=5,
-	USB_STATE_SUSPENDED	=6
-};
-
-struct usb_stats_t {
-	 unsigned long ep0_fifo_write_failures;
-	 unsigned long ep0_bytes_written;
-	 unsigned long ep0_fifo_read_failures;
-	 unsigned long ep0_bytes_read;
-};
-
-struct usb_info_t
-{
-	 char * client_name;
-	 int state;
-	 unsigned char address;
-	 struct usb_stats_t stats;
-};
-
-/* in usb_ctl.c */
-extern struct usb_info_t usbd_info;
-
-/*
- * Function Prototypes
- */
-enum { 
-	kError		=-1,
-	kEvSuspend	=0,
-	kEvReset	=1,
-	kEvResume	=2,
-	kEvAddress	=3,
-	kEvConfig	=4,
-	kEvDeConfig	=5 
-};
-int usbctl_next_state_on_event( int event );
-
-/* endpoint zero */
-void ep0_reset(void);
-void ep0_int_hndlr(void);
-
-/* receiver */
-void ep2_state_change_notify( int new_state );
-int  ep2_recv(char *buf, int len, usb_callback_t callback);
-int  ep2_init(int chn);
-void ep2_int_hndlr(int status);
-void ep2_reset(void);
-void ep2_stall(void);
-
-/* xmitter */
-void ep1_state_change_notify( int new_state );
-int  ep1_send(char *buf, int len, usb_callback_t callback);
-void ep1_reset(void);
-int  ep1_init(int chn);
-void ep1_int_hndlr(int status);
-void ep1_stall(void);
-
-/* Bulverde USB register's definition */
-#define UDCCR        __REG(0x40600000)
-#define UDCICR0      __REG(0x40600004)
-#define UDCICR1      __REG(0x40600008)
-#define UDCISR0      __REG(0x4060000c)
-#define UDCISR1      __REG(0x40600010)
-#define UDCFNR       __REG(0x40600014)
-#define UP2OCR       __REG(0x40600020)
-
-#define UDCCSR0      __REG(0x40600100)
-#define UDCCSRA      __REG(0x40600104)
-#define UDCCSRB      __REG(0x40600108)
-/* Omit endpoint C~X */
-
-#define UDCBCR0      __REG(0x40600200)
-#define UDCBCRA      __REG(0x40600204)
-#define UDCBCRB      __REG(0x40600208)
-/* Omit endpoint C~X */
-
-#define UDCDR0       __REG(0x40600300)
-#define UDCDRA       __REG(0x40600304)
-#define UDCDRB       __REG(0x40600308)
-#define UDCWAKEUP    __REG(0x40F00044)
-
-/* Omit endpiont C~X */
-
-#define UDCCRA       __REG(0x40600404)
-#define UDCCRB       __REG(0x40600408)
-/* Omit endpoint C~X */
-
-/* USB register bit definitions */
-
-#define UDCCR_UDE    (1 << 0)
-#define UDCCR_UDA    (1 << 1)
-#define UDCCR_UDR    (1 << 2)
-#define UDCCR_EMCE   (1 << 3)
-#define UDCCR_SMAC   (1 << 4)
-#define UDCCR_AAISN  (1 << 5)
-#define UDCCR_AIN    (1 << 8)
-#define UDCCR_ACN    (1 << 11)
-#define UDCCR_DWRE   (1 << 16)
-
-#define UDCICR0_IE0  (1 << 0)
-#define UDCICR0_IEA  (1 << 2)
-#define UDCICR0_IEB  (1 << 4)
-/* Omit endpoint C~X */
-
-#define UDCICR1_IERS (1 << 27)
-#define UDCICR1_IESU (1 << 28)
-#define UDCICR1_IERU (1 << 29)
-#define UDCICR1_IESOF (1 << 30)
-#define UDCICR1_IECC (1 << 31)
-
-#define UDCISR0_IR0  (1 << 0)
-#define UDCISR0_IRA  (1 << 2)
-#define UDCISR0_IRB  (1 << 4)
-/* Omit endpiont C~X */
-
-#define UDCISR1_IRRS (1 << 27)
-#define UDCISR1_IRSU (1 << 28)
-#define UDCISR1_IRRU (1 << 29)
-#define UDCISR1_IRSOF (1 << 30)
-#define UDCISR1_IRCC (1 << 31)
-
-#define UDCCSR0_OPC  (1 << 0)
-#define UDCCSR0_IPR  (1 << 1)
-#define UDCCSR0_FTF  (1 << 2)
-#define UDCCSR0_DME  (1 << 3)
-#define UDCCSR0_SST  (1 << 4)
-#define UDCCSR0_FST  (1 << 5)
-#define UDCCSR0_RNE  (1 << 6)
-#define UDCCSR0_SA   (1 << 7)
-
-#define UDCCSR_FS    (1 << 0)
-#define UDCCSR_PC    (1 << 1)
-#define UDCCSR_TRN   (1 << 2)
-#define UDCCSR_DME   (1 << 3)
-#define UDCCSR_SST   (1 << 4)
-#define UDCCSR_FST   (1 << 5)
-#define UDCCSR_BNE   (1 << 6)
-#define UDCCSR_BNF   (1 << 6)
-#define UDCCSR_SP    (1 << 7)
-#define UDCCSR_FEF   (1 << 8)
-#define UDCCSR_DPE   (1 << 9)
-
-#define UDCCRB_EE    (1 << 0)
-#define UDCCRB_DE    (1 << 1)
-#define UDCCRB_MPS   (1 << 2)
-#define UDCCRB_ED    (1 << 12)
-#define UDCCRB_ET    (1 << 13)
-#define UDCCRB_EN    (1 << 15)
-#define UDCCRB_AISN  (1 << 19)
-#define UDCCRB_IN    (1 << 22)
-#define UDCCRB_CN    (1 << 25)
-
-#endif /* _USB_CTL_H */
Index: build_tree/bootLoader/src/lib/bvd_usb_ep0.c
diff -u build_tree/bootLoader/src/lib/bvd_usb_ep0.c:1.1.1.1 build_tree/bootLoader/src/lib/bvd_usb_ep0.c:removed
--- build_tree/bootLoader/src/lib/bvd_usb_ep0.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/bvd_usb_ep0.c	Tue Jan  8 14:21:48 2008
@@ -1,580 +0,0 @@
-/*
- *  Copyright (C) Extenex Corporation 2001
- *  Copyright (C) Compaq Computer Corporation, 1998, 1999
- *  Copyright (C) Intrinsyc, Inc., 2002
- *
- *  PXA USB controller driver - Endpoint zero management
- *
- *  Please see:
- *    linux/Documentation/arm/SA1100/SA1100_USB 
- *  for more info.
- *
- *  02-May-2002
- *   Frank Becker (Intrinsyc) - derived from sa1100 usb_ctl.c
- * 
- */
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-
-#include <blob/arch.h>
-#include <blob/types.h>
-#include <blob/serial.h>
-
-#include "linux/errno.h"
-#include "pxa_usb.h"  /* public interface */
-#include "bvd_usb_ctl.h"  /* private stuff */
-#include "bvd_usb_ep0.h"
-
-#undef	DEBUG 
-//#define DEBUG 3
-#if DEBUG
-static unsigned int usb_debug = DEBUG;
-#else
-#define usb_debug 0     /* gcc will remove all the debug code for us */
-#endif
-
-enum { true = 1, false = 0 };
-typedef int bool;
-#ifndef MIN
-#define MIN( a, b ) ((a)<(b)?(a):(b))
-#endif
-
-static EP0_state ep0_state = EP0_IDLE;
-
-static int current_cfg_index = 0;
-/***************************************************************************
-  Prototypes
- ***************************************************************************/
-/* "setup handlers" -- the main functions dispatched to by the
-   .. isr. These represent the major "modes" of endpoint 0 operation */
-static void sh_setup_begin(void);				/* setup begin (idle) */
-static void sh_write( void );      				/* writing data */
-static int  read_fifo( usb_dev_request_t * p );
-static void write_fifo( void );
-static void get_descriptor( usb_dev_request_t * pReq );
-static void queue_and_start_write( void * p, int req, int act );
-
-/***************************************************************************
-  Inline Helpers
- ***************************************************************************/
-
-inline int type_code_from_request( __u8 by ) { return (( by >> 4 ) & 3); }
-
-/* print string descriptor */
-static inline void psdesc( string_desc_t * p )
-{
-	int i;
-	int nchars = ( p->bLength - 2 ) / sizeof( __u16 );
-	printf( "'" );
-	for( i = 0 ; i < nchars ; i++ ) {
-		printf( "%c", (char) p->bString[i] );
-	}
-	printf( "'\n" );
-}
-
-#if VERBOSITY
-/* "pcs" == "print control status" */
-static inline void pcs( void )
-{
-	__u32 foo = UDCCSR0;
-	printf( "%08x: %s %s %s %s %s %s\n",
-			foo,
-			foo & UDCCSR0_SA   ? "SA" : "",
-			foo & UDCCSR0_OPC  ? "OPC" : "",
-			foo & UDCCSR0_RNE  ? "RNE" : "",
-			foo & UDCCSR0_SST  ? "SST" : "",
-			foo & UDCCSR0_FST  ? "FST" : "",
-			foo & UDCCSR0_DRWF ? "DRWF" : ""
-	      );
-}
-static inline void preq( usb_dev_request_t * pReq )
-{
-	static char * tnames[] = { "dev", "intf", "ep", "oth" };
-	static char * rnames[] = { "std", "class", "vendor", "???" };
-	char * psz;
-	switch( pReq->bRequest ) {
-		case GET_STATUS:        psz = "get stat"; break;
-		case CLEAR_FEATURE:     psz = "clr feat"; break;
-		case SET_FEATURE:       psz = "set feat"; break;
-		case SET_ADDRESS:       psz = "set addr"; break;
-		case GET_DESCRIPTOR:    psz = "get desc"; break;
-		case SET_DESCRIPTOR:    psz = "set desc"; break;
-		case GET_CONFIGURATION: psz = "get cfg"; break;
-		case SET_CONFIGURATION: psz = "set cfg"; break;
-		case GET_INTERFACE:     psz = "get intf"; break;
-		case SET_INTERFACE:     psz = "set intf"; break;
-		case SYNCH_FRAME:       psz = "synch frame"; break;
-		default:                psz = "unknown"; break;
-	}
-	printf( "- [%s: %s req to %s. dir=%s]\n", psz,
-			rnames[ (pReq->bmRequestType >> 5) & 3 ],
-			tnames[ pReq->bmRequestType & 3 ],
-			( pReq->bmRequestType & 0x80 ) ? "in" : "out" );
-}
-
-#else
-static inline void pcs( void ){}
-static inline void preq( usb_dev_request_t *x){}
-#endif
-
-/***************************************************************************
-  Globals
- ***************************************************************************/
-static const char pszMe[] = "usbep0: ";
-
-/* pointer to current setup handler */
-static void (*current_handler)(void) = sh_setup_begin;
-
-/* global write struct to keep write
-   ..state around across interrupts */
-static struct {
-	unsigned char *p;
-	int bytes_left;
-} wr;
-
-/***************************************************************************
-  Public Interface
- ***************************************************************************/
-
-/* reset received from HUB (or controller just went nuts and reset by itself!)
-   so udc core has been reset, track this state here  */
-void ep0_reset(void)
-{
-	if (usb_debug) ( "%sep0_reset\n", pszMe);
-	/* reset state machine */
-	current_handler = sh_setup_begin;
-	wr.p = 0;
-	wr.bytes_left = 0;
-	usbd_info.address=0;
-}
-
-/* handle interrupt for endpoint zero */
-void ep0_int_hndlr( void )
-{
-	if (usb_debug) printf( "%sep0_int_hndlr\n", pszMe);
-	pcs();
-	(*current_handler)();
-}
-
-/***************************************************************************
-  Setup Handlers
- ***************************************************************************/
-/*
- * sh_setup_begin()
- * This setup handler is the "idle" state of endpoint zero. It looks for OPC
- * (OUT packet ready) to see if a setup request has been been received from the
- * host. 
- *
- */
-static void sh_setup_begin( void )
-{
-	usb_dev_request_t req;
-	int request_type;
-	int n;
-	__u32 cs_reg_in = UDCCSR0;
-
-	if (usb_debug) printf( "%ssh_setup_begin\n", pszMe);
-
-	/* Be sure out packet ready, otherwise something is wrong */
-	if ( (cs_reg_in & UDCCSR0_OPC) == 0 ) {
-		/* we can get here early...if so, we'll int again in a moment  */
-		if (usb_debug) printf( "%ssetup begin: no OUT packet available. Exiting\n", pszMe );
-		goto sh_sb_end;
-	}
-
-	if( ((cs_reg_in & UDCCSR0_SA) == 0) && (ep0_state == EP0_IN_DATA_PHASE))
-	{
-		if (usb_debug) printf( "%ssetup begin: premature status\n", pszMe );
-
-		/* premature status, reset tx fifo and go back to idle state*/
-		UDCCSR0 = UDCCSR0_OPC | UDCCSR0_FTF;
-
-		ep0_state = EP0_IDLE;
-		return;
-	}
-
-	if( (UDCCSR0 & UDCCSR0_RNE) == 0)
-	{
-		/* zero-length OUT? */
-		printf( "%ssetup begin: zero-length OUT?\n", pszMe );
-		goto sh_sb_end;
-	}
-
-	/* read the setup request */
-	n = read_fifo( &req );
-	if ( n != sizeof( req ) ) {
-		printf( "%ssetup begin: fifo READ ERROR wanted %d bytes got %d. "
-				" Stalling out...\n",
-				pszMe, sizeof( req ), n );
-		/* force stall, serviced out */
-		UDCCSR0 = UDCCSR0_FST;
-		goto sh_sb_end;
-	}
-
-	/* Is it a standard request? (not vendor or class request) */
-	request_type = type_code_from_request( req.bmRequestType );
-	if ( request_type != 0 ) {
-		printf( "%ssetup begin: unsupported bmRequestType: %d ignored\n",
-				pszMe, request_type );
-		goto sh_sb_end;
-	}
-
-
-#if 0
-	{
-		unsigned char * pdb = (unsigned char *) &req;
-		if (usb_debug) printf( "%2.2X %2.2X %2.2X %2.2X %2.2X %2.2X %2.2X %2.2X ",
-				pdb[0], pdb[1], pdb[2], pdb[3], pdb[4], pdb[5], pdb[6], pdb[7]
-		       );
-		preq( &req );
-	}
-#endif
-
-	/* Handle it */
-	switch( req.bRequest ) {
-
-		case SET_ADDRESS:
-			if (usb_debug) printf( "%sSET_ADDRESS handled by UDC\n", pszMe);
-			break;
-#if 0 /* NOT_NEEDED */
-
-		case SET_FEATURE:
-			if (usb_debug) printf( "%sSET_FEATURE handled by UDC\n", pszMe);
-			break;
-
-		case CLEAR_FEATURE:
-			if (usb_debug) printf( "%sCLEAR_FEATURE handled by UDC\n", pszMe);
-			break;
-
-		case GET_CONFIGURATION:
-			if (usb_debug) printf( "%sGET_CONFIGURATION handled by UDC\n", pszMe );
-			break;
-
-		case GET_STATUS:
-			if (usb_debug) printf( "%s%sGET_STATUS handled by UDC\n", pszMe );
-			break;
-
-		case GET_INTERFACE:
-			if (usb_debug) printf( "%sGET_INTERFACE handled by UDC\n", pszMe);
-			break;
-
-		case SYNCH_FRAME:
-			if (usb_debug) printf( "%sSYNCH_FRAME handled by UDC\n", pszMe );
-			break;
-#endif
-
-		case GET_DESCRIPTOR:
-			if (usb_debug) printf( "%sGET_DESCRIPTOR\n", pszMe );
-			get_descriptor( &req );
-			break;
-
-		case SET_INTERFACE:
-			if (usb_debug) printf( "%sSET_INTERFACE TODO...\n", pszMe);
-			break;
-
-		case SET_DESCRIPTOR:
-			if (usb_debug) printf( "%sSET_DESCRIPTOR TODO...\n", pszMe );
-			break;
-
-		case SET_CONFIGURATION:
-			if (usb_debug) printf( "%sSET_CONFIGURATION %d\n", pszMe, req.wValue);
-
-/*
- * FIXME: Something is not quite right here... I only ever get a 
- * de-configure from the host. Ignoring it for now, since usb
- * ethernet won't do anything unless usb is 'configured'.
- *
- */
-#if 0
-			switch( req.wValue)
-			{
-				case 0:
-					/* configured */
-					usbctl_next_state_on_event( kEvConfig );
-					break;
-				case 1:
-					/* de-configured */
-					usbctl_next_state_on_event( kEvDeConfig );
-					break;
-				default:
-					if (usb_debug) printf( "%sSET_CONFIGURATION: unknown configuration value (%d)\n", pszMe, req.wValue);
-					break;
-			}
-#endif
-			break;
-		default :
-			printf("%sunknown request 0x%x\n", pszMe, req.bRequest);
-			break;
-	} /* switch( bRequest ) */
-
-sh_sb_end:
-	return;
-}
-
-/*
- * sh_write()
- * 
- * Due to UDC bugs we push everything into the fifo in one go.
- * Using interrupts just didn't work right...
- * This should be ok, since control request are small.
- */
-static void sh_write()
-{
-	if (usb_debug) printf( "sh_write\n" );
-	do
-	{
-	    write_fifo();
-	} while( ep0_state != EP0_END_XFER);
-}
-
-/***************************************************************************
-  Other Private Subroutines
- ***************************************************************************/
-/*
- * queue_and_start_write()
- * data == data to send
- * req == bytes host requested
- * act == bytes we actually have
- *
- * Sets up the global "wr"-ite structure and load the outbound FIFO 
- * with data.
- *
- */
-static void queue_and_start_write( void * data, int req, int act )
-{
-	if (usb_debug) printf( "write start: bytes requested=%d actual=%d\n", req, act);
-
-	wr.p = (unsigned char*) data;
-	wr.bytes_left = MIN( act, req );
-
-	ep0_state = EP0_IN_DATA_PHASE;
-	sh_write();
-
-	return;
-}
-/*
- * write_fifo()
- * Stick bytes in the endpoint zero FIFO.
- *
- */
-static void write_fifo( void )
-{
-	int bytes_this_time = MIN( wr.bytes_left, EP0_FIFO_SIZE );
-	int bytes_written = 0;
-	__u32 aligned_buf[EP0_FIFO_SIZE>>2];
-	__u8  *data=aligned_buf;
-
-	if (usb_debug) printf("%swr.p=0x%08x\n", __FUNCTION__, wr.p);
-
-	if ((UDCCSR0 &  UDCCSR0_IPR) == UDCCSR0_IPR)//last write not finished  yet
-		return;
-	memcpy(data, wr.p, bytes_this_time);
-
-	/* 4-bytes word */
-	while( bytes_this_time >= 4 ) {
-		if (usb_debug) printf( "%2.2X ", *wr.p );
-		/* UDDR0 = *wr.p++; */
-		UDCDR0 = *((__u32*)data);
-		data += 4;
-		bytes_written += 4;
-		bytes_this_time -= 4;
-	}
-
-	while( bytes_this_time ) {
-		*((__u8*)&UDCDR0) = *data++;
-		bytes_written ++;
-		bytes_this_time --;
-	}
-
-	wr.p += bytes_written;
-	wr.bytes_left -= bytes_written;
-
-	usbd_info.stats.ep0_bytes_written += bytes_written;
-
-	if( (wr.bytes_left==0))
-	{
-		wr.p = 0;  				/* be anal */
-		if (bytes_written == EP0_FIFO_SIZE){//wait fifo write finish
-			do {	
-			}while ((UDCCSR0 & UDCCSR0_IPR) == UDCCSR0_IPR);
-		}
-		//even bytes_written = EP0_FIFO_SIZE we must send a zero packet
-		//if(bytes_written < EP0_FIFO_SIZE)
-		{
-			int count;
-			int udccsr0;
-
-			/* We always end the transfer with a short or zero length packet */
-			ep0_state = EP0_END_XFER;
-			current_handler = sh_setup_begin;
-
-			/* Let the packet go... */
-			UDCCSR0 |= UDCCSR0_IPR;
-
-			/* Wait until we get to status-stage, then ack.
-			 *
-			 * When the UDC sets the UDCCSR0[OPC] bit, an interrupt
-			 * is supposed to be generated (see 12.5.1 step 14ff, PXA Dev Manual).   
-			 * That approach didn't work out. Usually a new SETUP command was
-			 * already in the fifo. I tried many approaches but was always losing 
-			 * at least some OPC interrupts. Thus the polling below...
-			 */
-			count = 1000;
-			udccsr0 = UDCCSR0;
-			do
-			{
-				if( (UDCCSR0 & UDCCSR0_OPC)) 
-				{
-					/* clear OPC, generate ack */
-					UDCCSR0 |= UDCCSR0_OPC;
-					break;
-				}
-				count--;	
-			} while( count);
-
-			if (usb_debug) printf( "write fifo: count=%d UDCCSR0=%x UDCCSR0=%x\n", count, udccsr0, UDCCSR0);
-		}
-	}
-
-	if (usb_debug) printf( "write fifo: bytes sent=%d, bytes left=%d\n", bytes_written, wr.bytes_left);
-}
-
-/*
- * read_fifo()
- * Read bytes out of FIFO and put in request.
- * Called to do the initial read of setup requests
- * from the host. Return number of bytes read.
- *
- */
-static int read_fifo( usb_dev_request_t * request )
-{
-	int bytes_read = 0;
-	unsigned char * pOut = (unsigned char*) request;
-
-	int udccsr0 = UDCCSR0;
-
-	if( (udccsr0 & SETUP_READY) == SETUP_READY)
-	{
-		/* ok it's a setup command */
-		while( UDCCSR0 & UDCCSR0_RNE)
-		{
-			if( bytes_read >= sizeof( usb_dev_request_t))
-			{
-				/* We've already read enought o fill usb_dev_request_t.
-				 * Our tummy is full. Go barf... 
-				 */
-				printf( "%sread_fifo(): read failure\n", pszMe );
-				usbd_info.stats.ep0_fifo_read_failures++;
-				break;
-			}
-
-			*((__u32*)pOut) = UDCDR0;
-			pOut += 4;
-			bytes_read +=4;
-		}
-	}
-	if (usb_debug) printf( "read_fifo %d bytes\n", bytes_read );
-
-	/* clear SA & OPC */
-	UDCCSR0 = SETUP_READY;
-
-	usbd_info.stats.ep0_bytes_read += bytes_read;
-	return bytes_read;
-}
-
-/*
- * get_descriptor()
- * Called from sh_setup_begin to handle data return
- * for a GET_DESCRIPTOR setup request.
- *
- * +-----+------------------------------------------------+-----------------+
- * | dev | cfg1 | intf 1 | ep 1..N | intf 2 | ep 1..N |...| cfg2 .......... |
- * +-----+------------------------------------------------+-----------------+
- */
-static void get_descriptor( usb_dev_request_t * pReq )
-{
-	string_desc_t * pString;
-	ep_desc_t * pEndpoint = 0;
-	config_desc_t *pcfg = 0;
-
-	desc_t * pDesc = pxa_usb_get_descriptor_ptr();
-	int type = pReq->wValue >> 8;
-	int idx  = pReq->wValue & 0xFF;
-
-	if (usb_debug) printf( "%sget_descriptor for %d\n", pszMe, type );
-	switch( type ) {
-		case USB_DESC_DEVICE:
-			/* return device descritpor */
-			queue_and_start_write( &pDesc->dev,
-					pReq->wLength,
-					pDesc->dev.bLength );
-			break;
-
-			// return config descriptor buffer, cfg, intf 1..N,  ep 1..N
-		case USB_DESC_CONFIG:
-			{
-				int i,len;
-				config_desc_t *cfg =(config_desc_t*) (pDesc->cdb);
-
-				len=0;
-				for( i=0; i<pDesc->dev.bNumConfigurations; i++) {
-					len += __le16_to_cpu(cfg->wTotalLength);
-					cfg = (config_desc_t*) ( (unsigned char*) cfg 
-							+ __le16_to_cpu(cfg->wTotalLength)) ;
-				}
-					
-				queue_and_start_write( pDesc->cdb,
-						pReq->wLength,
-						len);
-			}
-			break;
-
-			// not quite right, since doesn't do language code checking
-		case USB_DESC_STRING:
-			pString = pxa_usb_get_string_descriptor( idx );
-			if ( pString ) {
-				if ( idx != 0 ) {  // if not language index
-					printf( "%sReturn string %d: ", pszMe, idx );
-					psdesc( pString );
-				}
-				queue_and_start_write( pString,
-						pReq->wLength,
-						pString->bLength );
-			}
-			else {
-				printf("%sunkown string index %d Stall.\n", pszMe, idx );
-			}
-			break;
-
-			/*
-		case USB_DESC_INTERFACE:
-			for( i = 0; i < pDesc->intf_num; i++) {
-				if ( idx == pDesc->intf[i].bInterfaceNumber ) {
-					queue_and_start_write( &pDesc->intf[i],
-							pReq->wLength,
-							pDesc->intf[i].bLength );
-				}
-			}
-			break;
-
-		case USB_DESC_ENDPOINT: 
-			for( i = 0; i < pDesc->ep_num; i++) {
-				if ( idx == (0x0F & pDesc->ep[i].bEndpointAddress)) {
-					queue_and_start_write( &pDesc->ep[i],
-							pReq->wLength,
-							pDesc->ep[i].bLength );
-				}
-			}
-			break;
-			*/
-
-		default :
-			printf("%sunknown descriptor type %d. Stall.\n", pszMe, type );
-			break;
-
-	}
-}
-
-/* end usb_ep0.c - who needs this comment? */
Index: build_tree/bootLoader/src/lib/bvd_usb_ep0.h
diff -u build_tree/bootLoader/src/lib/bvd_usb_ep0.h:1.1.1.1 build_tree/bootLoader/src/lib/bvd_usb_ep0.h:removed
--- build_tree/bootLoader/src/lib/bvd_usb_ep0.h:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/bvd_usb_ep0.h	Tue Jan  8 14:21:48 2008
@@ -1,66 +0,0 @@
-/*
- *  Copyright (C) Intrinsyc, Inc., 2002
- *
- *  usb_ep0.h - PXA USB controller driver.
- *              Endpoint zero management
- *
- *  Please see:
- *    linux/Documentation/arm/SA1100/SA1100_USB
- *  for details.
- *
- *  02-May-2002
- *   Frank Becker (Intrinsyc) - 
- * 
- */
-
-#ifndef __USB_EP0_H
-#define __USB_EP0_H
-
-#define EP0_FIFO_SIZE	16
-#define SETUP_READY (UDCCS0_SA | UDCCS0_OPR)
-
-/*================================================
- * USB Protocol Stuff
- */
-
-/* Request Codes   */
-enum { 
-	GET_STATUS		=0,
-	CLEAR_FEATURE		=1,
-	/* reserved		=2 */
-	SET_FEATURE		=3,
-	/* reserved		=4 */
-	SET_ADDRESS		=5,        
-	GET_DESCRIPTOR		=6,
-	SET_DESCRIPTOR		=7,
-	GET_CONFIGURATION	=8,
-	SET_CONFIGURATION	=9,
-	GET_INTERFACE		=10,
-	SET_INTERFACE		=11,
-	SYNCH_FRAME		=12
-};
-
-typedef enum {
-	EP0_IDLE,
-	EP0_IN_DATA_PHASE,
-	EP0_END_XFER,
-	EP0_OUT_DATA_PHASE
-} EP0_state;
-
-/* USB Device Requests */
-typedef struct
-{
-	__u8 bmRequestType;
-	__u8 bRequest;
-	__u16 wValue;
-	__u16 wIndex;
-	__u16 wLength;
-} usb_dev_request_t  __attribute__ ((packed));
-
-/* Data extraction from usb_request_t fields */
-enum { 
-	kTargetDevice	=0,
-	kTargetInterface=1,
-	kTargetEndpoint	=2 
-};
-#endif
Index: build_tree/bootLoader/src/lib/bvd_usb_ep1.c
diff -u build_tree/bootLoader/src/lib/bvd_usb_ep1.c:1.1.1.1 build_tree/bootLoader/src/lib/bvd_usb_ep1.c:removed
--- build_tree/bootLoader/src/lib/bvd_usb_ep1.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/bvd_usb_ep1.c	Tue Jan  8 14:21:48 2008
@@ -1,228 +0,0 @@
-/*
- * Generic xmit layer for the PXA USB client function
- *
- * This code was loosely inspired by the original version which was
- * Copyright (c) Compaq Computer Corporation, 1998-1999
- * Copyright (c) 2001 by Nicolas Pitre
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
- * 02-May-2002
- *   Frank Becker (Intrinsyc) - derived from sa1100 usb_send.c
- *
- * TODO: Add support for DMA.
- *
- */
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-
-#include <blob/arch.h>
-#include <blob/types.h>
-#include <blob/init.h>
-
-#include <linux/errno.h>
-#include "pxa_usb.h"
-#include "bvd_usb_ctl.h"
-
-#undef DEBUG
-#if DEBUG
-static unsigned int usb_debug = DEBUG;
-#else
-#define usb_debug 0     /* gcc will remove all the debug code for us */
-#endif
-
-static char *ep1_buf;
-static int   ep1_len;
-static int   ep1_remain;
-static usb_callback_t ep1_callback;
-static int tx_pktsize;
-
-/* device state is changing, async */
-void
-ep1_state_change_notify( int new_state )
-{
-}
-
-/* set feature stall executing, async */
-void
-ep1_stall( void )
-{
-}
-
-static void
-ep1_send_packet(void)
-{
-	int i, bytes, bytes_this_time, bytes_left;
-	__u8 *buf = ep1_buf + ep1_len - ep1_remain;
-	int out_size = tx_pktsize;
-	__u32 aligned_buf[64];
-	__u8 *data = aligned_buf;
-
-	if (usb_debug) 
-		printf( "%s: enter \n", __FUNCTION__);
-
-	if( out_size > ep1_remain) 
-	{
-		out_size = ep1_remain;
-	}
-
-	bytes_left = out_size;
-
-	do {
-		bytes_this_time = (bytes_left < sizeof(aligned_buf)) 
-					? bytes_left : sizeof(aligned_buf);
-
-
-		data = aligned_buf;
-		memcpy(data, buf, bytes_this_time);
-
-		bytes = bytes_this_time & (~0x3);
-		for( i=0; i<bytes; i+=4)
-		{
-			UDCDRA = *((__u32*)data);	
-			data += 4;
-		}
-
-		bytes = bytes_this_time & 0x3;
-		for( i=0; i<bytes; i++ ) 
-			*((volatile u8*)&UDCDRA) = *data++;
-
-		buf += bytes_this_time;
-		bytes_left -= bytes_this_time;
-	}
-	while (bytes_left);
-
-	/* UDCCS1 = UDCCS_BI_TPC; */
-	UDCCSRA = UDCCSR_PC;
-
-	if( out_size < tx_pktsize)
-	{
-		/* short packet */
-		UDCCSRA = UDCCSR_SP;
-	}
-	ep1_remain -= out_size;
-
-	/* something goes poopy if I dont wait here ... */
-	msleep(1);
-	if (usb_debug) 
-		printf("%s: exit, ep1_remain=%d bytes\n", __FUNCTION__, ep1_remain);
-}
-
-static void
-ep1_start(void)
-{
-	if (!ep1_len)
-		return;
-
-	UDCICR0 = 0x3f;
-
-	ep1_send_packet();
-}
-
-static void
-ep1_done(int flag)
-{
-	int size = ep1_len - ep1_remain;
-	if (ep1_len) {
-		ep1_len = 0;
-		if (ep1_callback) {
-			ep1_callback(flag, size);
-		}
-	}
-}
-
-int
-ep1_init(int chn)
-{
-	/*
-	int i;
-	desc_t * pdesc = pxa_usb_get_descriptor_ptr();
-	for ( i = 0; i < pdesc->ep_num; i++ ) {
-		if( BULK_IN1 == ( 0xF & pdesc->ep[i].bEndpointAddress) ) {
-			tx_pktsize = __le16_to_cpu( pdesc->ep[i].wMaxPacketSize );
-		}
-	}
-	*/
-
-	/* FIXME */
-	tx_pktsize = 64;
-	ep1_done(-EAGAIN);
-	return 0;
-}
-
-void
-ep1_reset(void)
-{
-	/*
-	int i;
-	desc_t * pdesc = pxa_usb_get_descriptor_ptr();	
-	for ( i = 0; i < pdesc->ep_num; i++ ) {
-		if( BULK_IN1 == ( 0xF & pdesc->ep[i].bEndpointAddress) ) {
-			tx_pktsize = __le16_to_cpu( pdesc->ep[i].wMaxPacketSize );
-		}
-	}
-	*/
-
-	/* FIXME */
-	tx_pktsize = 64;
-
-	ep1_done(-EINTR);
-}
-
-void
-ep1_int_hndlr(int usir0)
-{
-	int status = UDCCSRA;
-
-
-	if (ep1_remain != 0) {
-		/* more data to go */
-		ep1_start();
-	} else {
-		if( status & UDCCSR_PC)
-		{
-			UDCCSRA = UDCCSR_PC;
-		}
-		ep1_done(0);
-	}
-}
-
-int
-ep1_send(char *buf, int len, usb_callback_t callback)
-{
-	int i=0;
-	int flags;
-
-	if (usb_debug) printf( "pxa_usb_send: "
-		"data len=%d state=%d blen=%d\n", 
-		len, usbd_info.state, ep1_len);
-	
-	if (usbd_info.state != USB_STATE_CONFIGURED)
-		return -ENODEV;
-
-	if (ep1_len) {
-		return -EBUSY;
-	}
-
-	ep1_buf = buf;
-	ep1_len = len;
-	ep1_callback = callback;
-	ep1_remain = len;
-	ep1_start();
-
-	return 0;
-}
-
-int 
-ep1_xmitter_avail( void )
-{
-	if (usbd_info.state != USB_STATE_CONFIGURED)
-		return -ENODEV;
-	if (ep1_len)
-		return -EBUSY;
-	return 0;
-}
Index: build_tree/bootLoader/src/lib/bvd_usb_ep2.c
diff -u build_tree/bootLoader/src/lib/bvd_usb_ep2.c:1.1.1.1 build_tree/bootLoader/src/lib/bvd_usb_ep2.c:removed
--- build_tree/bootLoader/src/lib/bvd_usb_ep2.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/bvd_usb_ep2.c	Tue Jan  8 14:21:48 2008
@@ -1,196 +0,0 @@
-/*
- * Generic receive layer for the PXA USB client function
- *
- * This code was loosely inspired by the original version which was
- * Copyright (c) Compaq Computer Corporation, 1998-1999
- * Copyright (c) 2001 by Nicolas Pitre
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License version 2 as
- * published by the Free Software Foundation.
- *
- * 02-May-2002
- *   Frank Becker (Intrinsyc) - derived from sa1100 usb_recv.c
- * 
- * TODO: Add support for DMA.
- *
- */
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-
-#include <blob/arch.h>
-#include <blob/types.h>
-#include <blob/init.h>
-
-#include <linux/errno.h>
-#include "pxa_usb.h"
-#include "bvd_usb_ctl.h"
-
-#undef DEBUG
-//#define DEBUG 3
-#if DEBUG
-static unsigned int usb_debug = DEBUG;
-#else
-#define usb_debug 0     /* gcc will remove all the debug code for us */
-#endif
-
-static char *ep2_buf;
-static int   ep2_len;
-static int   ep2_remain;
-static usb_callback_t ep2_callback;
-static int rx_pktsize;
-
-static void
-ep2_start(void)
-{
-	/* disable DMA, RPC & SST should not be cleared */
-	/* UDCCS2 &= ~( UDCCS_BO_DME | UDCCS_BO_RPC | UDCCS_BO_SST ); */
-
-	/* enable interrupts for endpoint 2 (bulk out) */
-        /* UICR0 &= ~UICR0_IM2; */
-	UDCICR0 = 0x3f;
-	
-}
-
-static void
-ep2_done(int flag)
-{
-	int size = ep2_len - ep2_remain;
-
-	if (!ep2_len)
-		return;
-
-	ep2_len = 0;
-	if (ep2_callback) {
-		ep2_callback(flag, size);
-	}
-}
-
-void
-ep2_state_change_notify( int new_state )
-{
-}
-
-void
-ep2_stall( void )
-{
-	/* SET_FEATURE force stall at UDC */
-	/* UDCCS2 |= UDCCS_BO_FST; */
-}
-
-int
-ep2_init(int chn)
-{
-	/*
-	int i;
-	desc_t * pdesc = pxa_usb_get_descriptor_ptr();
-
-	for ( i = 0; i < pdesc->ep_num; i++ ) {
-		if( BULK_OUT1 == ( 0xF & pdesc->ep[i].bEndpointAddress) ) {
-			rx_pktsize = __le16_to_cpu( pdesc->ep[i].wMaxPacketSize );
-		}
-	}
-	*/
-
-	/* FIXME */
-	rx_pktsize = 64;
-	ep2_done(-EAGAIN);
-	return 0;
-}
-
-void
-ep2_reset(void)
-{
-	/*
-	int i;
-	desc_t * pdesc = pxa_usb_get_descriptor_ptr();
-
-	for ( i = 0; i < pdesc->ep_num; i++ ) {
-		if( BULK_OUT1 == ( 0xF & pdesc->ep[i].bEndpointAddress) ) {
-			rx_pktsize = __le16_to_cpu( pdesc->ep[i].wMaxPacketSize );
-		}
-	}
-	*/
-	/* FIXME */
-	rx_pktsize = 64;
-	/* UDCCS2 &= ~UDCCS_BO_FST; */
-	ep2_done(-EINTR);
-}
-
-void
-ep2_int_hndlr(int udcsr)
-{
-	int status = UDCCSRB;
-	if( usb_debug) printf("ep2_int_hndlr: UDCCS2=%x\n", status);
-
-	if( (status & (UDCCSR_PC | UDCCSR_SP)) == UDCCSR_SP)
-	{
-		/* zero-length packet */
-		if (usb_debug) printf("%s:zero-length packet\n", __FUNCTION__);
-		UDCCSRB |= UDCCSR_PC;
-	}
-
-	if( status & UDCCSR_PC)
-	{
-		int len, ignlen;
-		int i;
-		__u8 *buf = ep2_buf + ep2_len - ep2_remain;
-
-		/* bytes in FIFO */
-		len = (UDCBCRB & 0x3ff);
-		
-		if( usb_debug) printf("usb_recv: "
-			"len=%d out1_len=%d out1_remain=%d\n",
-			len,ep2_len,ep2_remain);
-
-		if( len > ep2_remain)
-		{
-			ignlen = len - ep2_remain;
-			/* FIXME: if this happens, we need a temporary overflow buffer */
-			if (usb_debug) printf("usb_recv: Buffer overwrite warning...\n");
-			len = ep2_remain;
-		}
-
-		/* read data out of fifo */
-		for( i=0; i<len; i+=4) 
-		{
-			*((__u32*)buf) = UDCDRB;
-			if (usb_debug>2)
-				printf("-> %02x %02x %02x %02x\n", buf[0], buf[1], buf[2], buf[3]);
-			buf += 4;
-		}
-
-		/* emtpy fifo, here */
-		while(UDCCSRB & UDCCSR_BNE) {
-			__u32 data = UDCDRB;
-		}
-			
-		/* ack RPC - FIXME: '|=' we may ack SST here, too */
-		UDCCSRB |= UDCCSR_PC;
-
-		ep2_remain -= len;
-		ep2_done((len) ? 0 : -EPIPE);
-	}
-
-	return;
-}
-
-int
-ep2_recv(char *buf, int len, usb_callback_t callback)
-{
-	int flags;
-
-	//if (ep2_len)
-		//return -EBUSY;
-
-	ep2_buf = buf;
-	ep2_len = len;
-	ep2_callback = callback;
-	ep2_remain = len;
-	ep2_start();
-
-	return 0;
-}
-
Index: build_tree/bootLoader/src/lib/download.c
diff -u build_tree/bootLoader/src/lib/download.c:1.1.1.1 build_tree/bootLoader/src/lib/download.c:1.1.1.2
--- build_tree/bootLoader/src/lib/download.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/download.c	Fri Nov  9 10:37:08 2007
@@ -107,7 +107,7 @@
 		dst = (u32 *)BLOB_RAM_BASE;
 		src = (u32 *)BLOB_FLASH_BASE;
 		numWords = BLOB_FLASH_LEN / 4;
-		blob_status.blobSize = 0;
+		blob_status.blobSize = 0;	
 		blob_status.blobType = fromFlash;
 		printf("Loading blob from flash ");
 #ifdef PARAM_FLASH_BASE
@@ -120,16 +120,21 @@
 		printf("Loading paramater block from flash ");
 #endif
 	} else if(strncmp(what, "kernel", 7) == 0) {
+
+
 #if defined(CONFIG_CRAMFS_SUPPORT) || defined(CONFIG_ZIMAGE_SUPPORT) || defined(CONFIG_JFFS2_SUPPORT)
 		return load_kernel(&blob_status);
 #else
+
 		dst = (u32 *)KERNEL_RAM_BASE;
 		src = (u32 *)KERNEL_FLASH_BASE;
 		numWords = KERNEL_FLASH_LEN / 4;
 		blob_status.kernelSize = 0;
 		blob_status.kernelType = fromFlash;
 		printf("Loading kernel from flash ");
+ 
 #endif
+
 #ifdef RAMDISK_FLASH_BASE
 	} else if(strncmp(what, "ramdisk", 8) == 0) {
 		dst = (u32 *)RAMDISK_RAM_BASE;
Index: build_tree/bootLoader/src/lib/init.c
diff -u build_tree/bootLoader/src/lib/init.c:1.1.1.2 build_tree/bootLoader/src/lib/init.c:1.1.1.3
--- build_tree/bootLoader/src/lib/init.c:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/init.c	Fri Nov  9 10:37:08 2007
@@ -70,9 +70,13 @@
 	
 	/* call all subsystem init functions */
 	for(i = INIT_LEVEL_MIN; i <= INIT_LEVEL_MAX; i++)
+	{
 		call_funcs((initlist_t *)&__initlist_start, 
 			   (initlist_t *)&__initlist_end,
 			   INIT_MAGIC, i);
+
+
+	}
 }
 
 
Index: build_tree/bootLoader/src/lib/led-mmap.c
diff -u build_tree/bootLoader/src/lib/led-mmap.c:1.1.1.1 build_tree/bootLoader/src/lib/led-mmap.c:1.1.1.2
--- build_tree/bootLoader/src/lib/led-mmap.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/led-mmap.c	Fri Nov  9 10:37:08 2007
@@ -21,6 +21,8 @@
  *
  */
 
+/* AER Lets make this do nothing
+
 #ident "$Id: led-mmap.c,v 1.1 2003/02/13 01:10:53 erikm Exp $"
 
 #ifdef HAVE_CONFIG_H
@@ -87,3 +89,4 @@
 	led_lock:  	mmap_led_lock,
 	led_unlock:	mmap_led_unlock,
 };
+*/
\ No newline at end of file
Index: build_tree/bootLoader/src/lib/led-s3c2500.c
diff -u build_tree/bootLoader/src/lib/led-s3c2500.c:1.1.1.1 build_tree/bootLoader/src/lib/led-s3c2500.c:removed
--- build_tree/bootLoader/src/lib/led-s3c2500.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/led-s3c2500.c	Tue Jan  8 14:21:48 2008
@@ -1,77 +0,0 @@
-/*
- * led-s3c2500.c: simple LED control functions
- *
- * Copyright (C) 1999 2001  Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
- * Copyright (C) 2003  Russ Dill (Russ.Dill@asu.edu)
- *
- * $Id: led-s3c2500.c,v 1.1 2003/09/04 18:03:10 russd Exp $
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- */
-/*
- * All functions assume that the LED is properly initialised by the code
- * in ledasm.S.
- *
- */
-
-#ident "$Id: led-s3c2500.c,v 1.1 2003/09/04 18:03:10 russd Exp $"
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-
-#include <blob/arch.h>
-#include <blob/led.h>
-#include <blob/init.h>
-
-
-static int led_locked;
-
-static void s3c2500_led_on(void)
-{
-	if(led_locked) return;
-	IOPDATA1 &= ~(1L);
-}
-
-static void s3c2500_led_off(void)
-{
-	if(led_locked) return;
-	IOPDATA1 |= 1L;
-}
-
-static void s3c2500_led_toggle(void)
-{
-	if (led_locked) return;
-	IOPDATA1 ^= 1L;
-}
-
-static void s3c2500_led_lock(void)
-{
-	led_locked = 1;
-}
-
-static void s3c2500_led_unlock(void)
-{
-	led_locked = 0;
-}
-
-led_driver_t s3c2500_gpio_led_driver = {
-    led_on:     s3c2500_led_on,
-    led_off:    s3c2500_led_off,
-    led_toggle: s3c2500_led_toggle,
-    led_lock:   s3c2500_led_lock,
-    led_unlock: s3c2500_led_unlock,
-};
Index: build_tree/bootLoader/src/lib/led-sa11x0.c
diff -u build_tree/bootLoader/src/lib/led-sa11x0.c:1.1.1.1 build_tree/bootLoader/src/lib/led-sa11x0.c:removed
--- build_tree/bootLoader/src/lib/led-sa11x0.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/led-sa11x0.c	Tue Jan  8 14:21:48 2008
@@ -1,88 +0,0 @@
-/*
- * led-sa11x0.c: simple LED control functions
- *
- * Copyright (C) 1999 2001  Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
- *
- * $Id: led-sa11x0.c,v 1.2 2003/08/06 22:55:41 abz Exp $
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- */
-/*
- * All functions assume that the LED is properly initialised by the code
- * in ledasm.S.
- *
- */
-
-#ident "$Id: led-sa11x0.c,v 1.2 2003/08/06 22:55:41 abz Exp $"
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-
-#include <blob/arch.h>
-#include <blob/led.h>
-#include <blob/init.h>
-
-
-static int led_state;
-static int led_locked;
-
-/* TODO: fix this */
-static void sa11x0_led_on(void)
-{
-	if(led_locked)
-		return;
-
-	GPSR = LED_GPIO; 
-	led_state = 1;
-}
-
-/* TODO: fix this */
-static void sa11x0_led_off(void)
-{
-	if(led_locked)
-		return;
-
-	GPCR = LED_GPIO;
-	led_state = 0;
-}
-
-static void sa11x0_led_toggle(void)
-{
-	if(led_state)
-		sa11x0_led_off();
-	else
-		sa11x0_led_on();
-    return;
-}
-
-static void sa11x0_led_lock(void)
-{
-	led_locked = 1;
-}
-
-static void sa11x0_led_unlock(void)
-{
-	led_locked = 0;
-}
-
-led_driver_t sa11x0_gpio_led_driver = {
-    led_on:     sa11x0_led_on,
-    led_off:    sa11x0_led_off,
-    led_toggle: sa11x0_led_toggle,
-    led_lock:   sa11x0_led_lock,
-    led_unlock: sa11x0_led_unlock,
-};
Index: build_tree/bootLoader/src/lib/pxa-bb-spi.c
diff -u /dev/null build_tree/bootLoader/src/lib/pxa-bb-spi.c:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/lib/pxa-bb-spi.c	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,157 @@
+/*
+ * reboot-pxa.c: Reboot PXA 250 board
+ *
+ * Copyright (C) 2003  Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
+ *
+ * $Id: reboot-pxa.c,v 1.1 2003/01/04 02:11:43 erikm Exp $
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ *
+ */
+
+#ident "$Id: reboot-pxa.c,v 1.1 2003/01/04 02:11:43 erikm Exp $"
+
+#ifdef HAVE_CONFIG_H
+# include <blob/config.h>
+#endif
+
+#include <blob/util.h>
+#include <blob/reboot.h>
+#include <blob/serial.h>
+#include <blob/proc/pxa.h>
+#include <blob/arch/pxa-regs.h>
+
+static void SPI_SetCsLow()
+{
+	// GPIO 88
+	GPCR2 = (1 << 24);
+}
+
+static void SPI_SetCsHigh()
+{
+	// GPIO 88
+	GPSR2 = (1 << 24);
+}
+
+static void SPI_SetSckLow()
+{
+	// GPIO 22
+	GPCR0 = (1 << 22);
+}
+
+static void SPI_SetSckHigh()
+{
+	// GPIO 22
+	GPSR0 = (1 << 22);
+}
+
+static void SPI_SetMosiLow()
+{
+	// GPIO 13
+	GPCR0 = (1 << 13);
+}
+
+static void SPI_SetMosiHigh()
+{
+	// GPIO 13
+	GPSR0 = (1 << 13);
+}
+
+static int SPI_IsMisoHigh()
+{
+	// GPIO 40
+	if(GPLR1 & (1 << 8))
+	{
+		return 1;
+	}
+	else
+	{
+		return 0;
+	}
+}
+
+void Micro_Delay(unsigned long ulMicrosecs)
+{
+	// 1us = 3.25 ticks, so 4 us = 13 ticks
+	unsigned long ulStart = OSCR;
+	unsigned long ulTicks = (ulMicrosecs * 4 / 13) + 1;
+	while(OSCR < (ulStart + ulTicks));
+}
+
+static void WriteBit(unsigned char * pOutputData, unsigned long ulByteOffset, unsigned long ulWriteBitPosition)
+{
+	if(pOutputData)
+	{
+		if( pOutputData[ ulByteOffset ] & ( 1 << ulWriteBitPosition ) )
+		{
+			SPI_SetMosiHigh();
+		}
+		else
+		{
+			SPI_SetMosiLow();
+		}
+	}
+}
+
+static void ReadBit(unsigned char * pInputData, unsigned long ulByteOffset, unsigned long ulReadBitPosition)
+{
+	if( pInputData )
+	{
+		if( SPI_IsMisoHigh() )
+		{
+			pInputData[ ulByteOffset ] |= ( 1 << ulReadBitPosition );
+		}
+		else
+		{
+			pInputData[ ulByteOffset ] &= ~( 1 << ulReadBitPosition );
+		}
+	}
+}
+
+int GpioSPITransferData( unsigned char * pOutputData, unsigned char * pInputData, unsigned long ulNumberOfBytesToTransfer, unsigned long ulDelayInMicroseconds )
+{
+	if( ulNumberOfBytesToTransfer == 0 ) 
+	{
+		return 0;
+	}
+
+	SPI_SetCsLow();
+	Micro_Delay( 10 );
+
+	unsigned long i;
+	for( i = 0; i < ( ulNumberOfBytesToTransfer * 8 ); i++ )
+	{
+		Micro_Delay( ulDelayInMicroseconds );
+		SPI_SetSckLow();
+
+		unsigned long ulByteOffset =  (i / 8);
+		unsigned long ulBitPosition = ( 7 - ( i % 8 ) );	// MSB first
+
+		Micro_Delay( ulDelayInMicroseconds );
+		WriteBit(pOutputData, ulByteOffset, ulBitPosition ); // Write out MSB first
+		
+		Micro_Delay( ulDelayInMicroseconds );
+		SPI_SetSckHigh();
+		
+		ReadBit(pInputData, ulByteOffset, ulBitPosition ); // Read in MSB first
+	}
+
+	Micro_Delay( 50 );
+	SPI_SetCsHigh();
+	SPI_SetMosiHigh();
+	Micro_Delay( 50 );
+
+	return 1;
+}
Index: build_tree/bootLoader/src/lib/pxa-lcd.c
diff -u /dev/null build_tree/bootLoader/src/lib/pxa-lcd.c:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/src/lib/pxa-lcd.c	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,425 @@
+/**********************************************************************
+ * pxa-lcd.c
+ *
+ * pxa lcd framework
+ *
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ */
+
+/**********************************************************************
+ * includes
+ */
+#ifdef HAVE_CONFIG_H
+# include <blob/config.h>
+#endif
+
+#include <blob/types.h>
+#include <blob/errno.h>
+#include <blob/util.h>
+#include <blob/command.h>
+#include <blob/serial.h>
+#include <blob/arch.h>
+
+#include <blob/pxa-lcd.h>
+
+extern int GpioSPITransferData( unsigned char * pOutputData, unsigned char * pInputData, unsigned long ulNumberOfBytesToTransfer, unsigned long ulDelayInMicroseconds );
+extern void Micro_Delay(unsigned long ulMicrosecs);
+
+/**********************************************************************
+ * defines
+ */
+#define WEAK_SYM __attribute__ (( weak ))
+
+#define MEM(adr)		(*((u32 *)adr))
+#define SET(reg,bit)	((reg) |= (1<<(bit)))
+#define CLR(reg,bit)	((reg) &= ~(1<<(bit)))
+
+#define LCD_DEBUG 1
+
+#define OUTHEX( val ) SerialOutputString( #val"=0x" ); \
+	SerialOutputHex( val ); \
+	serial_write( '\n' );
+
+#ifdef MINIPRINT
+# define LCD_GRADIENT
+#endif
+
+/**********************************************************************
+ * program globals
+ */
+
+/**********************************************************************
+ * module globals
+ */
+
+u16 *lcd_palette = (u16*)(LCD_PALETTE_DMA_ADR);
+u32 *lcd_vram = (u32*)(LCD_VIDEORAM_START);
+
+/**********************************************************************
+ * Prototypes
+ */
+void lcd_palette_set( int no, int val );
+
+/**********************************************************************/
+/**********************************************************************/
+/**********************************************************************/
+
+/**********************************************************************
+ * Do whatever necessary to power up lcd display
+ */
+typedef struct 
+{
+	unsigned char ucReg;
+	unsigned short usValue;
+	unsigned long ulMsDelayAfter;
+} regWrite;
+
+regWrite dispPowerOn[] =
+{
+	{ 0x07, 0x0000, 0 },
+	{ 0x13, 0x0000, 10 },
+
+	{ 0x11, 0x3004, 0 },
+	{ 0x14, 0x200F, 0 },
+	{ 0x10, 0x1a20, 0 },
+	{ 0x13, 0x0040, 50 },
+
+	{ 0x13, 0x0060, 0 },
+	{ 0x13, 0x0070, 200 },
+
+	{ 0x01, 0x0127, 0 },
+	{ 0x02,	0x0700, 0 },
+	{ 0x03, 0x1030, 0 },
+	{ 0x08, 0x0208, 0 },
+	{ 0x0B, 0x0620, 0 },
+	{ 0x0C, 0x0110, 0 },
+	{ 0x30, 0x0120, 0 },
+	{ 0x31, 0x0127, 0 },
+	{ 0x32, 0x0000, 0 },
+	{ 0x33, 0x0503, 0 },
+	{ 0x34, 0x0727, 0 },
+	{ 0x35, 0x0124, 0 },
+	{ 0x36, 0x0706, 0 },
+	{ 0x37, 0x0701, 0 },
+	{ 0x38, 0x0F00, 0 },
+	{ 0x39, 0x0F00, 0 },
+	{ 0x40, 0x0000, 0 },
+	{ 0x41, 0x0000, 0 },
+	{ 0x42, 0x013f, 0 },
+	{ 0x43, 0x0000, 0 },
+	{ 0x44, 0x013f, 0 },
+	{ 0x45, 0x0000, 0 },
+	{ 0x46, 0xef00, 0 },
+	{ 0x47, 0x013f, 0 },
+	{ 0x48, 0x0000, 0 },
+	{ 0x07, 0x0015, 30 },
+
+	{ 0x07, 0x0017, 00 },
+
+	{ 0x20, 0x0000, 00 },
+	{ 0x21, 0x0000, 00 },
+	{ 0x22, 0x0000, 00 }
+};
+
+int lcd_init(void)
+{
+	SerialOutputString( "LCD: init ..." );
+
+	lcd_power_up();
+//	lcd_backlight_on();
+}
+int WEAK_SYM lcd_power_up( void )
+{
+    unsigned char			wr_buf[3];
+    const unsigned long		ulDELAY_IN_MICROSECONDS = 10;
+
+	// Reset the LCD first
+	//LCD_RST gpio 19
+	GPSR0 = (1 << 19);
+	Micro_Delay(100 * 1000);
+	GPCR0 = (1 << 19);
+	Micro_Delay(20 * 1000);
+	GPSR0 = (1 << 19);
+	Micro_Delay(20 * 1000);
+
+//	if(CAerBoardIo::instance()->GetBoardRevNumber() == 0)
+	{
+		int i;
+		for(i = 0; i < sizeof(dispPowerOn) / sizeof(regWrite); i++)
+		{
+			// send Address
+			wr_buf[0]  = 0x74;  
+			wr_buf[1]  = 0x00;  
+			wr_buf[2]  = dispPowerOn[i].ucReg;
+			GpioSPITransferData( wr_buf, 0, 3, ulDELAY_IN_MICROSECONDS );
+
+			//	send Data
+			wr_buf[0]  = 0x76;  
+			wr_buf[1]  = dispPowerOn[i].usValue >> 8;  
+			wr_buf[2]  = dispPowerOn[i].usValue & 0xFF;
+			GpioSPITransferData( wr_buf, 0, 3, ulDELAY_IN_MICROSECONDS );
+
+			if(dispPowerOn[i].ulMsDelayAfter)
+			{
+				Micro_Delay(dispPowerOn[i].ulMsDelayAfter * 1000);	
+			}
+		}
+	}
+	return 0;
+}
+
+int WEAK_SYM lcd_power_down( void )
+{
+	return 0;
+}
+
+int WEAK_SYM lcd_gpio_setup( void )
+{
+//	GPDR |= 0x3FC;
+//	GAFR |= 0x3FC;
+
+	return 0;
+}
+
+int WEAK_SYM lcd_controller_setup( void )
+{
+#if 0
+	lcd_palette[0] &= 0xcfff;
+	lcd_palette[0] |= 2<<16;	// 8 bpp
+
+	/* Sequence from 11.7.10 */
+	LCCR3 = LCD_LCCR3;
+	LCCR2 = LCD_LCCR2;
+	LCCR1 = LCD_LCCR1;
+	LCCR0 = LCD_LCCR0 & ~LCCR0_LEN;
+	DBAR1 = (u32)LCD_PALETTE_DMA_ADR;
+	DBAR2 = (u32)LCD_VIDEORAM_DMA_ADR;
+#endif
+	return 0;
+}
+
+int WEAK_SYM lcd_controller_enable( void )
+{
+//	LCCR0 |= LCCR0_LEN;
+	return 0;
+}
+
+int WEAK_SYM lcd_controller_disable( void )
+{
+//	LCCR0 &= ~LCCR0_LEN;
+	return 0;
+}
+
+int WEAK_SYM lcd_backlight_on( void )
+{
+//	GPSR0 = (1 << 11);
+	return 0;
+}
+
+int WEAK_SYM lcd_backlight_off( void )
+{
+	return 0;
+}
+
+int WEAK_SYM lcd_palette_setup( void )
+{
+	unsigned int n;
+
+#ifdef LCD_GRADIENT
+	for ( n = 0 ; n < 256 ; n++ ) {
+		lcd_palette_set(n, 0x1000+(n<<4) );
+	}
+#else
+	for ( n = 0 ; n < 128 ; n++ ) {
+		lcd_palette_set(n, 0x1FFF );
+	}
+	for ( n = 128 ; n < 256 ; n++ ) {
+		lcd_palette_set(n, 0x1000 );
+	}
+#endif
+	return 0;
+}
+
+int WEAK_SYM lcd_contrast( int value )
+{
+	return 0;
+}
+
+int WEAK_SYM lcd_brightness( int value )
+{
+	return 0;
+}
+
+int WEAK_SYM lcd_fill (int color)
+{
+  int i = 0;
+
+  if (color>0xFF)return -EINVAL;
+
+  color += (color<<8) + (color<<16) + (color<<24);
+  for(; i<(LCD_COLS*LCD_ROWS/4);i++)
+    lcd_vram[i] = color;
+
+  return 0;
+}
+
+int WEAK_SYM lcd_set_pixel (unsigned int x, unsigned int y, unsigned int color)
+{
+
+#ifdef LCD_REVERSE
+  x = LCD_COLS - 1 - x;
+  y = LCD_ROWS - 1 - y;
+#endif
+
+  if ((color>0xFF)||(y>=LCD_ROWS)||(x>=LCD_COLS))  return -EINVAL;
+
+  switch(x%4)
+  {
+    case 0:
+      lcd_vram[(x>>2)+y*(LCD_COLS>>2)] =
+        (lcd_vram[(x>>2)+((y*LCD_COLS)>>2)]&0xFFFFFF00)|color;
+	  break;
+    case 1:
+      lcd_vram[(x>>2)+y*(LCD_COLS>>2)] =
+        (lcd_vram[(x>>2)+((y*LCD_COLS)>>2)]&0xFFFF00FF)|(color<<8);
+	  break;
+    case 2:
+      lcd_vram[(x>>2)+y*(LCD_COLS>>2)] =
+        (lcd_vram[(x>>2)+((y*LCD_COLS)>>2)]&0xFF00FFFF)|(color<<16);
+	  break;
+    case 3:
+      lcd_vram[(x>>2)+y*(LCD_COLS>>2)] =
+        (lcd_vram[(x>>2)+((y*LCD_COLS)>>2)]&0x00FFFFFF)|(color<<24);
+	  break;
+  }
+
+  return 0;
+}
+
+/**********************************************************************
+ * Statische Funktionen
+ */
+
+
+static int lcd_test( int argc, char *argv[] )
+{
+	int ret = 0;
+	int x,y;
+	int c;
+
+#if LCD_DEBUG
+	OUTHEX( LCD_LCCR0 );
+	OUTHEX( LCD_LCCR1 );
+	OUTHEX( LCD_LCCR2 );
+	OUTHEX( LCD_LCCR3 );
+	OUTHEX( LCD_BPP );
+	OUTHEX( LCD_COLS );
+	OUTHEX( LCD_ROWS );
+	OUTHEX( LCD_PALETTE_ENTRIES );
+	OUTHEX( LCD_PALETTE_SIZE );
+	OUTHEX( LCD_RAM_BASE );
+	OUTHEX( LCD_VIDEORAM_SIZE );
+	OUTHEX( LCD_VIDEORAM_START );
+	OUTHEX( LCD_VIDEORAM_END );
+	OUTHEX( LCD_VIDEORAM_DMA_ADR );
+	OUTHEX( LCD_PALETTE_DMA_ADR );
+#endif
+
+	SerialOutputString( "LCD: power up ..." );
+	ret = lcd_power_up();
+	if ( ret != 0 )		return ret;
+	SerialOutputString( "done\n" );
+
+	SerialOutputString( "LCD: gpio setup ..." );
+	ret = lcd_gpio_setup();
+	if ( ret != 0 )		return ret;
+	SerialOutputString( "done\n" );
+
+	SerialOutputString( "LCD: controller setup ..." );
+	ret = lcd_controller_setup();
+	if ( ret != 0 )		return ret;
+	SerialOutputString( "done\n" );
+
+	SerialOutputString( "LCD: palette setup ..." );
+	ret = lcd_palette_setup();
+	if ( ret != 0 )		return ret;
+	SerialOutputString( "done\n" );
+
+	SerialOutputString( "LCD: controller enable ..." );
+	ret = lcd_controller_enable();
+	if ( ret != 0 )		return ret;
+	SerialOutputString( "done\n" );
+
+	SerialOutputString( "LCD: backlight on ..." );
+	ret = lcd_backlight_on();
+	if ( ret != 0 )		return ret;
+	SerialOutputString( "done\n" );
+
+#ifdef LCD_GRADIENT
+	/* Gradient (bastel-code weil fixe aufloesung) */
+	SerialOutputString( "LCD: Gradient test pattern ..." );
+	lcd_fill(0x00);
+        for ( y=0; y<240; y++ )
+          	for ( x=0; x<320; x++ )
+           		lcd_set_pixel(x,y,(x/20)+((y/15)*16));
+#else
+	/* vertical lines */
+	SerialOutputString( "LCD: vertical lines test pattern ..." );
+	for ( y=0; y<LCD_ROWS; y++ ) {
+		for ( x=0; x<(LCD_COLS>>2); x++ ) {
+			if ( x%2 == 0 ) {
+				lcd_vram[y*(LCD_COLS>>2) + x ] = 0xffffffff;
+			} else {
+				lcd_vram[y*(LCD_COLS>>2) + x ] = 0x00000000;
+			}
+		}
+	}
+#endif
+	SerialOutputString( "done\n" );
+
+	SerialOutputString( "LCD: press any key to proceed\n" );
+	c = serial_read();
+
+	SerialOutputString( "LCD: backlight off ..." );
+	ret = lcd_backlight_off();
+	if ( ret != 0 )		return ret;
+	SerialOutputString( "done\n" );
+
+	SerialOutputString( "LCD: controller disable ..." );
+	ret = lcd_controller_disable();
+	if ( ret != 0 )		return ret;
+	SerialOutputString( "done\n" );
+
+	SerialOutputString( "LCD: power down ..." );
+	ret = lcd_power_down();
+	if ( ret != 0 )		return ret;
+	SerialOutputString( "done\n" );
+
+	return 0;
+}
+
+static char testlcdhelp[] = "lcdtest\nTests lcd display\n";
+__commandlist(lcd_test, "lcdtest", testlcdhelp);
+
+void lcd_palette_set( int no, int val )
+{
+	if ( no < 0 || no > 255 )
+		return;
+
+	lcd_palette[ no ] = val;
+
+	return;
+}
Index: build_tree/bootLoader/src/lib/reboot-pxa.c
diff -u build_tree/bootLoader/src/lib/reboot-pxa.c:1.1.1.1 build_tree/bootLoader/src/lib/reboot-pxa.c:1.1.1.2
--- build_tree/bootLoader/src/lib/reboot-pxa.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/reboot-pxa.c	Fri Nov  9 10:37:08 2007
@@ -30,17 +30,18 @@
 #include <blob/util.h>
 #include <blob/reboot.h>
 #include <blob/serial.h>
-
-
-
+#include <blob/proc/pxa.h>
+#include <blob/arch/pxa-regs.h>
 
 void pxa_reboot(void)
 {
-#warning "FIXME: add real PXA reboot code here! -- Erik"
-	printf("FIXME: add PXA-250 reboot code here!\n");
-	printf("Going into endless loop, just use your reset button...\n");
-	serial_flush_output();
-
+	OWER = OWER_WME;
+	OSSR = OSSR_M3;
+	OSMR3 = OSCR + 368640;  /* ... in 100 ms */
+
+//	asm("mov r0, #0");
+//	asm("mov pc, r0");
+	
 	for(;;);
 }
 
Index: build_tree/bootLoader/src/lib/reboot-s3c2500.c
diff -u build_tree/bootLoader/src/lib/reboot-s3c2500.c:1.1.1.1 build_tree/bootLoader/src/lib/reboot-s3c2500.c:removed
--- build_tree/bootLoader/src/lib/reboot-s3c2500.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/reboot-s3c2500.c	Tue Jan  8 14:21:48 2008
@@ -1,64 +0,0 @@
-/*
- * reboot-s3c2500.c: Reboot s3c2500
- *
- * Copyright (C) 2001 2003  Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
- * Copyright (C) 2003  Russ Dill (Russ.Dill@asu.edu)
- *
- * $Id: reboot-s3c2500.c,v 1.1 2003/09/04 18:07:07 russd Exp $
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- */
-
-#ident "$Id: reboot-s3c2500.c,v 1.1 2003/09/04 18:07:07 russd Exp $"
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-
-#include <blob/arch.h>
-#include <blob/reboot.h>
-
-
-/* Doesn't seem to have a reset, so do it via watchdog */
-void s3c2500_reboot(void)
-{
-	/* Errata for S3C2500X01: WatchDog Timer reset mode operation fail
-	 * Symptom
-	 * When the S3C2500X uses the PLL output clock as the system
-	 * clock, the watchdog timer doesn't operate in the reset mode.
-	 * If you set the reset period to "1s", the real time to drive
-	 * the chip into reset state can not be anticipated.
-	 * Program Guide
-	 * It is recommended that you should not use the watchdog timer
-	 * in the reset mode.
-	 *
-	 * If someone understands this korglish, tell me, because I have
-	 * no clue what they are talking about, or how to work around it.
-	 */
-	int i;
-	typedef void (*func_t)(void);
-	func_t base = 0x0;
-	WDT = (1 << 31) | (1 << 30) | 1;
-	for(i = 0; i < 10000; i++);
-	/* Give up and jump to 0x0000 */
-	base();
-}
-
-
-/* export reboot driver */
-reboot_driver_t s3c2500_reboot_driver = {
-	reboot:	s3c2500_reboot
-};
Index: build_tree/bootLoader/src/lib/reboot-sa11x0.c
diff -u build_tree/bootLoader/src/lib/reboot-sa11x0.c:1.1.1.1 build_tree/bootLoader/src/lib/reboot-sa11x0.c:removed
--- build_tree/bootLoader/src/lib/reboot-sa11x0.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/reboot-sa11x0.c	Tue Jan  8 14:21:48 2008
@@ -1,48 +0,0 @@
-/*
- * reboot-sa11x0.c: Reboot SA11x0 board
- *
- * Copyright (C) 2001 2003  Erik Mouw (J.A.K.Mouw@its.tudelft.nl)
- *
- * $Id: reboot-sa11x0.c,v 1.2 2003/08/06 22:55:41 abz Exp $
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- */
-
-#ident "$Id: reboot-sa11x0.c,v 1.2 2003/08/06 22:55:41 abz Exp $"
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-
-#include <blob/arch.h>
-#include <blob/reboot.h>
-
-
-
-
-void sa11x0_reboot(void)
-{
-	RCSR = 0;
-	RSRR = 1;
-}
-
-
-
-
-/* export reboot driver */
-reboot_driver_t sa11x0_reboot_driver = {
-	reboot:	sa11x0_reboot
-};
Index: build_tree/bootLoader/src/lib/serial-pxa.c
diff -u build_tree/bootLoader/src/lib/serial-pxa.c:1.1.1.1 build_tree/bootLoader/src/lib/serial-pxa.c:1.1.1.2
--- build_tree/bootLoader/src/lib/serial-pxa.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/serial-pxa.c	Fri Nov  9 10:37:08 2007
@@ -29,31 +29,6 @@
 #include <blob/serial.h>
 #include <blob/types.h>
 
-#if defined USE_SERIAL1
-
-# define SerialDATA  FFRBR
-# define SerialFIFO  FFFCR
-# define SerialLCR   FFLCR
-# define SerialMCR   FFMCR
-# define SerialLSR   FFLSR
-# define SerialMSR   FFMSR
-# define SerialIER   FFIER
-
-#else /* defined USE_SERIAL1 */
-
-#if defined USE_SERIAL2
-
-# define SerialDATA  BTRBR
-# define SerialFIFO  BTFCR
-# define SerialLCR   BTLCR
-# define SerialMCR   BTMCR
-# define SerialLSR   BTLSR
-# define SerialIER   BTIER
-# define SerialMSR   BTMSR
-
-#else /* defined USE_SERIAL2 */
-
-#if defined USE_SERIAL3
 
 /* using an Xscale CPU and not having any serial port defined is an
  * error, but because we're using the driver in the library we can't
@@ -68,15 +43,6 @@
 # define SerialIER   STIER
 # define SerialMSR   STMSR
 
-#else
-#error "No serial port defined USE_SERIAL1 .. USE_SERIAL3"
-
-#endif /* defined USE_SERIAL3 */
-
-#endif /* defined USE_SERIAL2 */
-
-#endif /* defined USE_SERIAL1 */
-
 
 /* flush serial input queue. returns 0 on success or negative error
  * number otherwise
@@ -117,15 +83,10 @@
 {
 	u32 divisor;
 
-#ifdef USE_SERIAL1
-	/* enable clock */
-	CKEN |= CKEN6_FFUART;
-#endif
-
-#ifdef USE_SERIAL2
-	/* enable BTUART clock */
-	CKEN |= CKEN7_BTUART;
-#endif
+	/* Use Standard UART */
+
+	/* Aeronix: enable STUART clock */
+	CKEN |= CKEN5_STUART;
 
 	/* get correct divisor */
 	switch(baud) {
Index: build_tree/bootLoader/src/lib/serial-s3c2500.c
diff -u build_tree/bootLoader/src/lib/serial-s3c2500.c:1.1.1.1 build_tree/bootLoader/src/lib/serial-s3c2500.c:removed
--- build_tree/bootLoader/src/lib/serial-s3c2500.c:1.1.1.1	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/serial-s3c2500.c	Tue Jan  8 14:21:48 2008
@@ -1,251 +0,0 @@
-/*
- * serial-s3c2500.c: Samsung s3c2500 serial port driver
- *
- * Copyright (C) 2002  Erik Mouw <J.A.K.Mouw@its.tudelft.nl>
- * Copyright (C) 2003  Russ Dill <Russ.Dill@asu.edu>
- *
- * $Id: serial-s3c2500.c,v 1.1 2003/09/04 18:03:10 russd Exp $
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- */
-
-#ident "$Id: serial-s3c2500.c,v 1.1 2003/09/04 18:03:10 russd Exp $"
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-
-#include <blob/arch.h>
-#include <blob/errno.h>
-#include <blob/arch.h>
-#include <blob/serial.h>
-#include <blob/types.h>
-#include <blob/util.h>
-
-static void s3c2500_serial_idle_queue(void);
-
-
-/* This convaluted ring thingy is necessary because we have a poll
- * based serial driver, with a one byte fifo. Spinning on the transmit
- * fifo makes it really easy to lose incoming characters */
-
-/* somewhere to put stuff while we are spinning on a send */
-#define RING_SIZE 128
-int receive_ring[RING_SIZE]; /* int, not char, so we can store errors */
-int head, tail, error_in_poll;
-static int ring_overflow;
-
-
-/* return -1 on full, 0 otherwise */
-static int ring_push(int c)
-{
-	if (tail == (head + 1) % RING_SIZE) {
-		ring_overflow = 1;
-		return -ESERIAL;
-	}
-
-	/* push it into the ring if not */
-	receive_ring[head] = c;
-	head = (head + 1) % RING_SIZE;
-
-	return 0;
-}
-
-
-/* only call this if head != tail */
-static int ring_pull(void)
-{
-	int rv = receive_ring[tail];
-
-	tail = (tail + 1) % RING_SIZE;
-
-	/* handle the ring overflow */
-	if (tail == (head + 2) % RING_SIZE && ring_overflow) {
-		ring_push(-ESERIAL);
-		ring_overflow = 0;
-	} else {
-		/* see if there is a char to replace this one */
-		s3c2500_serial_idle_queue();
-	}
-
-	return rv;
-}
-
-
-/* check if there is a character available to read. returns 1 if there
- * is a character available, 0 if not, and negative error number on
- * failure */
-static int s3c2500_serial_real_poll(void)
-{
-	u32 volatile tmp = CUSTAT;
-
-	/* check for errors */
-	if (tmp & (CUSTAT_PER | CUSTAT_FER | CUSTAT_OER)) {
-		CUSTAT = CUSTAT_PER | CUSTAT_FER | CUSTAT_OER;
-		if (tmp & CUSTAT_PER) return -ESERIAL;
-		else if (tmp & CUSTAT_FER) return -ESERIAL;
-		else return -ESERIAL;
-	} else if (tmp & CUSTAT_RDV) return 1;
-	
-	return 0;
-}
-
-
-/* First, check the ring, then, check the port */
-static int s3c2500_serial_poll(void)
-{
-	if (head != tail) {
-		if (receive_ring[tail] >= 0) return 1;
-		else return ring_pull();
-	}
-	return s3c2500_serial_real_poll();
-}
-
-
-/* flush serial input queue. returns 0 on success or negative error
- * number otherwise
- */
-static int s3c2500_serial_flush_input(void)
-{
-	volatile u32 tmp;
-
-	/* kill the queue */
-	head = tail;
-	ring_overflow = 0;
-
-	/* keep on reading as long as the receiver is not empty */
-	while(((tmp = CUSTAT) & CUSTAT_RDV) | !(tmp & CUSTAT_RXIDLE)) {
-		if(tmp & (CUSTAT_PER | CUSTAT_FER | CUSTAT_OER)) {
-			CUSTAT = CUSTAT_PER | CUSTAT_FER | CUSTAT_OER;
-			continue;
-		}
-
-		if (tmp & CUSTAT_RDV) tmp = CURXBUF;
-	}
-
-	return 0;
-}
-
-
-/* try to push something into the queue if we are just sitting idle */
-static void s3c2500_serial_idle_queue(void)
-{
-	u32 tmp;
-	switch (tmp = s3c2500_serial_real_poll()) {
-	case 0: /* no character ready */
-		break;
-	case 1:
-		/* read the character */
-		ring_push(CURXBUF & 0xff);
-		break;
-	default:
-		/* clear the error and record it */
-		CUSTAT = CUSTAT_PER | CUSTAT_FER | CUSTAT_OER;
-		error_in_poll = 1;
-		ring_push(tmp);
-	}
-}
-
-
-/* flush output queue. returns 0 on success or negative error number
- * otherwise
- */
-static int s3c2500_serial_flush_output(void)
-{
-	/* wait until the transmitter is no longer busy */
-	while(!(CUSTAT & CUSTAT_TI)) s3c2500_serial_idle_queue();
-
-	return 0;
-}
-
-
-/* initialise serial port at the request baudrate. returns 0 on
- * success, or a negative error number otherwise
- */
-#define DIVISOR (29491200 / 16)
-static int s3c2500_serial_init(serial_baud_t baud)
-{
-	head = tail = ring_overflow = error_in_poll = 0;
-
-	if (baud >= baud_COUNT) return -ERANGE;
-
-	/* Clear any errors */
-	CUSTAT = CUSTAT_BSD | CUSTAT_FER | CUSTAT_PER | CUSTAT_OER | CUSTAT_CCD;
-
-	/* flush it out completely */
-	s3c2500_serial_flush_output();
-	
-	/* Disable interrupts */
-	CUINT = 0;
-	
-	/* Set baud rate */
-	CUBRD = ((DIVISOR / baud_rates[baud] - 1) << 4);
-
-	/* turn the receiver and transmitter on */
-	CUCON  = CUCON_8BITS | CUCON_SCSEL | CUCON_RMODE | CUCON_TMODE;
-
-	return 0;
-}
-
-
-/* read one character from the serial port. return character (between
- * 0 and 255) on success, or negative error number on failure. this
- * function is blocking */
-static int s3c2500_serial_read(void)
-{
-	u32 tmp;
-
-	if (head != tail) return ring_pull();
-
-	for(;;) {
-		switch (tmp = s3c2500_serial_real_poll()) {
-		case 0: break;
-		case 1: return CURXBUF & 0xff;
-		default:
-			CUSTAT = CUSTAT_PER | CUSTAT_FER | CUSTAT_OER;
-			return tmp;
-		}
-	}
-}
-
-
-/* write character to serial port. return 0 on success, or negative
- * error number on failure. this function is blocking
- */
-static int s3c2500_serial_write(int c)
-{
-	/* wait for room in the transmit FIFO */
-	do {
-		s3c2500_serial_idle_queue();
-	} while (!(CUSTAT & CUSTAT_THE));
-
-	CUTXBUF = (u32)(c & 0xff);
-
-	return 0;
-}
-
-
-
-
-/* export serial driver */
-serial_driver_t s3c2500_serial_driver = {
-	init:		s3c2500_serial_init,
-	read:		s3c2500_serial_read,
-	write:		s3c2500_serial_write,
-	poll:		s3c2500_serial_poll,
-	flush_input:	s3c2500_serial_flush_input,
-	flush_output:	s3c2500_serial_flush_output
-};
Index: build_tree/bootLoader/src/lib/serial-sa11x0.c
diff -u build_tree/bootLoader/src/lib/serial-sa11x0.c:1.1.1.2 build_tree/bootLoader/src/lib/serial-sa11x0.c:removed
--- build_tree/bootLoader/src/lib/serial-sa11x0.c:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/src/lib/serial-sa11x0.c	Tue Jan  8 14:21:48 2008
@@ -1,264 +0,0 @@
-/*
- * serial-sa11x0.c: StrongARM SA11x0 serial port driver
- *
- * Copyright (C) 2002  Erik Mouw <J.A.K.Mouw@its.tudelft.nl>
- *
- * $Id: serial-sa11x0.c,v 1.4 2003/08/06 22:55:41 abz Exp $
- *
- * This program is free software; you can redistribute it and/or modify
- * it under the terms of the GNU General Public License as published by
- * the Free Software Foundation; either version 2 of the License, or
- * (at your option) any later version.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- *
- */
-
-#ident "$Id: serial-sa11x0.c,v 1.4 2003/08/06 22:55:41 abz Exp $"
-
-#ifdef HAVE_CONFIG_H
-# include <blob/config.h>
-#endif
-
-#include <blob/arch.h>
-#include <blob/errno.h>
-#include <blob/arch.h>
-#include <blob/serial.h>
-#include <blob/types.h>
-
-
-
-
-#if defined USE_SERIAL1
-
-# define SerialUTSR0 Ser1UTSR0
-# define SerialUTSR1 Ser1UTSR1
-
-# define SerialUTDR Ser1UTDR
-
-# define SerialUTCR0 Ser1UTCR0
-# define SerialUTCR1 Ser1UTCR1
-# define SerialUTCR2 Ser1UTCR2
-# define SerialUTCR3 Ser1UTCR3
-
-#else /* defined USE_SERIAL1 */
-
-#if defined USE_SERIAL2
-
-# define SerialUTSR0 Ser2UTSR0
-# define SerialUTSR1 Ser2UTSR1
-
-# define SerialUTDR Ser2UTDR
-
-# define SerialUTCR0 Ser2UTCR0
-# define SerialUTCR1 Ser2UTCR1
-# define SerialUTCR2 Ser2UTCR2
-# define SerialUTCR3 Ser2UTCR3
-
-#else /* defined USE_SERIAL2 */
-
-#if defined USE_SERIAL3
-
-/* using an SA11x0 CPU and not having any serial port defined is an
- * error, but because we're using the driver in the library we can't
- * bail out over here
- */
-
-# define SerialUTSR0 Ser3UTSR0
-# define SerialUTSR1 Ser3UTSR1
-
-# define SerialUTDR Ser3UTDR
-
-# define SerialUTCR0 Ser3UTCR0
-# define SerialUTCR1 Ser3UTCR1
-# define SerialUTCR2 Ser3UTCR2
-# define SerialUTCR3 Ser3UTCR3
-
-#endif /* defined USE_SERIAL3 */
-
-#endif /* defined USE_SERIAL2 */
-
-#endif /* defined USE_SERIAL1 */
-
-
-
-/* flush serial input queue. returns 0 on success or negative error
- * number otherwise
- */
-static int sa11x0_serial_flush_input(void)
-{
-	volatile u32 tmp;
-
-	/* keep on reading as long as the receiver is not empty */
-	while(SerialUTSR1 & UTSR1_RNE) {
-		if(SerialUTSR1 & (UTSR1_PRE | UTSR1_FRE | UTSR1_ROR))
-			return -ESERIAL;
-
-		tmp = SerialUTDR;
-	}
-
-	return 0;
-}
-
-
-
-
-/* flush output queue. returns 0 on success or negative error number
- * otherwise
- */
-static int sa11x0_serial_flush_output(void)
-{
-	/* wait until the transmitter is no longer busy */
-	while(SerialUTSR1 & UTSR1_TBY) {
-	}
-
-	return 0;
-}
-
-
-
-
-/* initialise serial port at the request baudrate. returns 0 on
- * success, or a negative error number otherwise
- */
-static int sa11x0_serial_init(serial_baud_t baud)
-{
-	u32 divisor;
-
-	/* get correct divisor */
-	switch(baud) {
-	case baud_1200:
-		divisor = 191;
-		break;
-
-	case baud_9600:
-		divisor = 23;
-		break;
-
-	case baud_19200:
-		divisor = 11;
-		break;
-
-	case baud_38400:
-		divisor = 5;
-		break;
-
-	case baud_57600:
-		divisor = 3;
-		break;
-
-	case baud_115200:
-		divisor = 1;
-		break;
-
-	case baud_230400:
-		divisor = 0;
-		break;
-
-	default:
-		return -ERANGE;
-	}
-
-#if defined USE_SERIAL1
-	/* select UART use for serial port 1 or otherwise we won't see
-	 * anything at all */
-	Ser1SDCR0 = SDCR0_UART;
-#endif	
-
-	sa11x0_serial_flush_output();
-
-	/* switch receiver and transmitter off */
-	SerialUTCR3 = 0x00;
-	
-	/* clear sticky bits in control register 3 */
-	SerialUTSR0 = 0xff;
-
-	/* set the port to sensible defaults (no break, no interrupts,
-	 * no parity, 8 databits, 1 stopbit, transmitter and receiver
-	 * enabled)
-	 */
-	SerialUTCR0 = ( UTCR0_1StpBit | UTCR0_8BitData );
-	SerialUTCR1 = 0;
-	SerialUTCR2 = divisor;
-
-	/* turn the receiver and transmitter back on */
-	SerialUTCR3 = ( UTCR3_RXE | UTCR3_TXE );
-
-	return 0;
-}
-
-
-
-
-/* check if there is a character available to read. returns 1 if there
- * is a character available, 0 if not, and negative error number on
- * failure */
-static int sa11x0_serial_poll(void)
-{
-	/* check for errors */
-	if(SerialUTSR1 & (UTSR1_PRE | UTSR1_FRE | UTSR1_ROR))
-		return -ESERIAL;
-
-	if(SerialUTSR1 & UTSR1_RNE)
-		return 1;
-	else
-		return 0;
-}
-
-
-
-
-/* read one character from the serial port. return character (between
- * 0 and 255) on success, or negative error number on failure. this
- * function is blocking */
-static int sa11x0_serial_read(void)
-{
-	int rv;
-
-	for(;;) {
-		rv = sa11x0_serial_poll();
-
-		if(rv < 0)
-			return rv;
-
-		if(rv > 0)
-			return SerialUTDR & 0xff;
-	}
-}
-
-
-
-
-/* write character to serial port. return 0 on success, or negative
- * error number on failure. this function is blocking
- */
-static int sa11x0_serial_write(int c)
-{
-	/* wait for room in the transmit FIFO */
-	while((SerialUTSR0 & UTSR0_TFS) == 0) {
-	}
-
-	SerialUTDR = c & 0xff;
-
-	return 0;
-}
-
-
-
-
-/* export serial driver */
-serial_driver_t sa11x0_serial_driver = {
-	init:		sa11x0_serial_init,
-	read:		sa11x0_serial_read,
-	write:		sa11x0_serial_write,
-	poll:		sa11x0_serial_poll,
-	flush_input:	sa11x0_serial_flush_input,
-	flush_output:	sa11x0_serial_flush_output
-};
Index: build_tree/bootLoader/tools/Makefile.in
diff -u /dev/null build_tree/bootLoader/tools/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/tools/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,330 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# Process this file with automake to produce Makefile.in -*- makefile -*-
+#
+# $Id: Makefile.am,v 1.1.1.1 2001/06/27 19:47:42 erikm Exp $
+# 
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = tools
+DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
+	compile config.guess config.sub depcomp install-sh missing
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+CLEANFILES = *~
+EXTRA_DIST = \
+	rebuild \
+	rebuild-gcc \
+	README
+
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  tools/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  tools/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: all all-am check check-am clean clean-generic distclean \
+	distclean-generic distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic pdf pdf-am ps ps-am uninstall uninstall-am \
+	uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/tools/compile
diff -u /dev/null build_tree/bootLoader/tools/compile:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/tools/compile	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,136 @@
+#! /bin/sh
+# Wrapper for compilers which do not understand `-c -o'.
+
+scriptversion=2003-11-09.00
+
+# Copyright (C) 1999, 2000, 2003 Free Software Foundation, Inc.
+# Written by Tom Tromey <tromey@cygnus.com>.
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2, or (at your option)
+# any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# This file is maintained in Automake, please report
+# bugs to <bug-automake@gnu.org> or send patches to
+# <automake-patches@gnu.org>.
+
+case $1 in
+  '')
+     echo "$0: No command.  Try \`$0 --help' for more information." 1>&2
+     exit 1;
+     ;;
+  -h | --h*)
+    cat <<\EOF
+Usage: compile [--help] [--version] PROGRAM [ARGS]
+
+Wrapper for compilers which do not understand `-c -o'.
+Remove `-o dest.o' from ARGS, run PROGRAM with the remaining
+arguments, and rename the output as expected.
+
+If you are trying to build a whole package this is not the
+right script to run: please start by reading the file `INSTALL'.
+
+Report bugs to <bug-automake@gnu.org>.
+EOF
+    exit 0
+    ;;
+  -v | --v*)
+    echo "compile $scriptversion"
+    exit 0
+    ;;
+esac
+
+
+prog=$1
+shift
+
+ofile=
+cfile=
+args=
+while test $# -gt 0; do
+  case "$1" in
+    -o)
+      # configure might choose to run compile as `compile cc -o foo foo.c'.
+      # So we do something ugly here.
+      ofile=$2
+      shift
+      case "$ofile" in
+	*.o | *.obj)
+	  ;;
+	*)
+	  args="$args -o $ofile"
+	  ofile=
+	  ;;
+      esac
+       ;;
+    *.c)
+      cfile=$1
+      args="$args $1"
+      ;;
+    *)
+      args="$args $1"
+      ;;
+  esac
+  shift
+done
+
+if test -z "$ofile" || test -z "$cfile"; then
+  # If no `-o' option was seen then we might have been invoked from a
+  # pattern rule where we don't need one.  That is ok -- this is a
+  # normal compilation that the losing compiler can handle.  If no
+  # `.c' file was seen then we are probably linking.  That is also
+  # ok.
+  exec "$prog" $args
+fi
+
+# Name of file we expect compiler to create.
+cofile=`echo $cfile | sed -e 's|^.*/||' -e 's/\.c$/.o/'`
+
+# Create the lock directory.
+# Note: use `[/.-]' here to ensure that we don't use the same name
+# that we are using for the .o file.  Also, base the name on the expected
+# object file name, since that is what matters with a parallel build.
+lockdir=`echo $cofile | sed -e 's|[/.-]|_|g'`.d
+while true; do
+  if mkdir $lockdir > /dev/null 2>&1; then
+    break
+  fi
+  sleep 1
+done
+# FIXME: race condition here if user kills between mkdir and trap.
+trap "rmdir $lockdir; exit 1" 1 2 15
+
+# Run the compile.
+"$prog" $args
+status=$?
+
+if test -f "$cofile"; then
+  mv "$cofile" "$ofile"
+fi
+
+rmdir $lockdir
+exit $status
+
+# Local Variables:
+# mode: shell-script
+# sh-indentation: 2
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-end: "$"
+# End:
Index: build_tree/bootLoader/tools/config.guess
diff -u /dev/null build_tree/bootLoader/tools/config.guess:1.1.1.2
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/tools/config.guess	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,1456 @@
+#! /bin/sh
+# Attempt to guess a canonical system name.
+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
+#   2000, 2001, 2002, 2003 Free Software Foundation, Inc.
+
+timestamp='2004-03-03'
+
+# This file is free software; you can redistribute it and/or modify it
+# under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+#
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# Originally written by Per Bothner <per@bothner.com>.
+# Please send patches to <config-patches@gnu.org>.  Submit a context
+# diff and a properly formatted ChangeLog entry.
+#
+# This script attempts to guess a canonical system name similar to
+# config.sub.  If it succeeds, it prints the system name on stdout, and
+# exits with 0.  Otherwise, it exits with 1.
+#
+# The plan is that this can be called by configure scripts if you
+# don't specify an explicit build system type.
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION]
+
+Output the configuration name of the system \`$me' is run on.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.guess ($timestamp)
+
+Originally written by Per Bothner.
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
+Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit 0 ;;
+    --version | -v )
+       echo "$version" ; exit 0 ;;
+    --help | --h* | -h )
+       echo "$usage"; exit 0 ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help" >&2
+       exit 1 ;;
+    * )
+       break ;;
+  esac
+done
+
+if test $# != 0; then
+  echo "$me: too many arguments$help" >&2
+  exit 1
+fi
+
+trap 'exit 1' 1 2 15
+
+# CC_FOR_BUILD -- compiler used by this script. Note that the use of a
+# compiler to aid in system detection is discouraged as it requires
+# temporary files to be created and, as you can see below, it is a
+# headache to deal with in a portable fashion.
+
+# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still
+# use `HOST_CC' if defined, but it is deprecated.
+
+# Portable tmp directory creation inspired by the Autoconf team.
+
+set_cc_for_build='
+trap "exitcode=\$?; (rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
+trap "rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
+: ${TMPDIR=/tmp} ;
+ { tmp=`(umask 077 && mktemp -d -q "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
+ { test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||
+ { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo "Warning: creating insecure temp directory" >&2 ; } ||
+ { echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; } ;
+dummy=$tmp/dummy ;
+tmpfiles="$dummy.c $dummy.o $dummy.rel $dummy" ;
+case $CC_FOR_BUILD,$HOST_CC,$CC in
+ ,,)    echo "int x;" > $dummy.c ;
+	for c in cc gcc c89 c99 ; do
+	  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
+	     CC_FOR_BUILD="$c"; break ;
+	  fi ;
+	done ;
+	if test x"$CC_FOR_BUILD" = x ; then
+	  CC_FOR_BUILD=no_compiler_found ;
+	fi
+	;;
+ ,,*)   CC_FOR_BUILD=$CC ;;
+ ,*,*)  CC_FOR_BUILD=$HOST_CC ;;
+esac ;'
+
+# This is needed to find uname on a Pyramid OSx when run in the BSD universe.
+# (ghazi@noc.rutgers.edu 1994-08-24)
+if (test -f /.attbin/uname) >/dev/null 2>&1 ; then
+	PATH=$PATH:/.attbin ; export PATH
+fi
+
+UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown
+UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
+UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
+UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown
+
+# Note: order is significant - the case branches are not exclusive.
+
+case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
+    *:NetBSD:*:*)
+	# NetBSD (nbsd) targets should (where applicable) match one or
+	# more of the tupples: *-*-netbsdelf*, *-*-netbsdaout*,
+	# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently
+	# switched to ELF, *-*-netbsd* would select the old
+	# object file format.  This provides both forward
+	# compatibility and a consistent mechanism for selecting the
+	# object file format.
+	#
+	# Note: NetBSD doesn't particularly care about the vendor
+	# portion of the name.  We always set it to "unknown".
+	sysctl="sysctl -n hw.machine_arch"
+	UNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \
+	    /usr/sbin/$sysctl 2>/dev/null || echo unknown)`
+	case "${UNAME_MACHINE_ARCH}" in
+	    armeb) machine=armeb-unknown ;;
+	    arm*) machine=arm-unknown ;;
+	    sh3el) machine=shl-unknown ;;
+	    sh3eb) machine=sh-unknown ;;
+	    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;
+	esac
+	# The Operating System including object format, if it has switched
+	# to ELF recently, or will in the future.
+	case "${UNAME_MACHINE_ARCH}" in
+	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
+		eval $set_cc_for_build
+		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
+			| grep __ELF__ >/dev/null
+		then
+		    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).
+		    # Return netbsd for either.  FIX?
+		    os=netbsd
+		else
+		    os=netbsdelf
+		fi
+		;;
+	    *)
+	        os=netbsd
+		;;
+	esac
+	# The OS release
+	# Debian GNU/NetBSD machines have a different userland, and
+	# thus, need a distinct triplet. However, they do not need
+	# kernel version information, so it can be replaced with a
+	# suitable tag, in the style of linux-gnu.
+	case "${UNAME_VERSION}" in
+	    Debian*)
+		release='-gnu'
+		;;
+	    *)
+		release=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
+		;;
+	esac
+	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
+	# contains redundant information, the shorter form:
+	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
+	echo "${machine}-${os}${release}"
+	exit 0 ;;
+    amd64:OpenBSD:*:*)
+	echo x86_64-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    amiga:OpenBSD:*:*)
+	echo m68k-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    arc:OpenBSD:*:*)
+	echo mipsel-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    cats:OpenBSD:*:*)
+	echo arm-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    hp300:OpenBSD:*:*)
+	echo m68k-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    mac68k:OpenBSD:*:*)
+	echo m68k-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    macppc:OpenBSD:*:*)
+	echo powerpc-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    mvme68k:OpenBSD:*:*)
+	echo m68k-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    mvme88k:OpenBSD:*:*)
+	echo m88k-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    mvmeppc:OpenBSD:*:*)
+	echo powerpc-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    pegasos:OpenBSD:*:*)
+	echo powerpc-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    pmax:OpenBSD:*:*)
+	echo mipsel-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    sgi:OpenBSD:*:*)
+	echo mipseb-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    sun3:OpenBSD:*:*)
+	echo m68k-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    wgrisc:OpenBSD:*:*)
+	echo mipsel-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    *:OpenBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-openbsd${UNAME_RELEASE}
+	exit 0 ;;
+    *:ekkoBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}
+	exit 0 ;;
+    macppc:MirBSD:*:*)
+	echo powerppc-unknown-mirbsd${UNAME_RELEASE}
+	exit 0 ;;
+    *:MirBSD:*:*)
+	echo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}
+	exit 0 ;;
+    alpha:OSF1:*:*)
+	case $UNAME_RELEASE in
+	*4.0)
+		UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`
+		;;
+	*5.*)
+	        UNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`
+		;;
+	esac
+	# According to Compaq, /usr/sbin/psrinfo has been available on
+	# OSF/1 and Tru64 systems produced since 1995.  I hope that
+	# covers most systems running today.  This code pipes the CPU
+	# types through head -n 1, so we only detect the type of CPU 0.
+	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
+	case "$ALPHA_CPU_TYPE" in
+	    "EV4 (21064)")
+		UNAME_MACHINE="alpha" ;;
+	    "EV4.5 (21064)")
+		UNAME_MACHINE="alpha" ;;
+	    "LCA4 (21066/21068)")
+		UNAME_MACHINE="alpha" ;;
+	    "EV5 (21164)")
+		UNAME_MACHINE="alphaev5" ;;
+	    "EV5.6 (21164A)")
+		UNAME_MACHINE="alphaev56" ;;
+	    "EV5.6 (21164PC)")
+		UNAME_MACHINE="alphapca56" ;;
+	    "EV5.7 (21164PC)")
+		UNAME_MACHINE="alphapca57" ;;
+	    "EV6 (21264)")
+		UNAME_MACHINE="alphaev6" ;;
+	    "EV6.7 (21264A)")
+		UNAME_MACHINE="alphaev67" ;;
+	    "EV6.8CB (21264C)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.8AL (21264B)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.8CX (21264D)")
+		UNAME_MACHINE="alphaev68" ;;
+	    "EV6.9A (21264/EV69A)")
+		UNAME_MACHINE="alphaev69" ;;
+	    "EV7 (21364)")
+		UNAME_MACHINE="alphaev7" ;;
+	    "EV7.9 (21364A)")
+		UNAME_MACHINE="alphaev79" ;;
+	esac
+	# A Pn.n version is a patched version.
+	# A Vn.n version is a released version.
+	# A Tn.n version is a released field test version.
+	# A Xn.n version is an unreleased experimental baselevel.
+	# 1.2 uses "1.2" for uname -r.
+	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+	exit 0 ;;
+    Alpha*:OpenVMS:*:*)
+	echo alpha-hp-vms
+	exit 0 ;;
+    Alpha\ *:Windows_NT*:*)
+	# How do we know it's Interix rather than the generic POSIX subsystem?
+	# Should we change UNAME_MACHINE based on the output of uname instead
+	# of the specific Alpha model?
+	echo alpha-pc-interix
+	exit 0 ;;
+    21064:Windows_NT:50:3)
+	echo alpha-dec-winnt3.5
+	exit 0 ;;
+    Amiga*:UNIX_System_V:4.0:*)
+	echo m68k-unknown-sysv4
+	exit 0;;
+    *:[Aa]miga[Oo][Ss]:*:*)
+	echo ${UNAME_MACHINE}-unknown-amigaos
+	exit 0 ;;
+    *:[Mm]orph[Oo][Ss]:*:*)
+	echo ${UNAME_MACHINE}-unknown-morphos
+	exit 0 ;;
+    *:OS/390:*:*)
+	echo i370-ibm-openedition
+	exit 0 ;;
+    *:OS400:*:*)
+        echo powerpc-ibm-os400
+	exit 0 ;;
+    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
+	echo arm-acorn-riscix${UNAME_RELEASE}
+	exit 0;;
+    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)
+	echo hppa1.1-hitachi-hiuxmpp
+	exit 0;;
+    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)
+	# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.
+	if test "`(/bin/universe) 2>/dev/null`" = att ; then
+		echo pyramid-pyramid-sysv3
+	else
+		echo pyramid-pyramid-bsd
+	fi
+	exit 0 ;;
+    NILE*:*:*:dcosx)
+	echo pyramid-pyramid-svr4
+	exit 0 ;;
+    DRS?6000:unix:4.0:6*)
+	echo sparc-icl-nx6
+	exit 0 ;;
+    DRS?6000:UNIX_SV:4.2*:7*)
+	case `/usr/bin/uname -p` in
+	    sparc) echo sparc-icl-nx7 && exit 0 ;;
+	esac ;;
+    sun4H:SunOS:5.*:*)
+	echo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit 0 ;;
+    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
+	echo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit 0 ;;
+    i86pc:SunOS:5.*:*)
+	echo i386-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit 0 ;;
+    sun4*:SunOS:6*:*)
+	# According to config.sub, this is the proper way to canonicalize
+	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
+	# it's likely to be more like Solaris than SunOS4.
+	echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit 0 ;;
+    sun4*:SunOS:*:*)
+	case "`/usr/bin/arch -k`" in
+	    Series*|S4*)
+		UNAME_RELEASE=`uname -v`
+		;;
+	esac
+	# Japanese Language versions have a version number like `4.1.3-JL'.
+	echo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`
+	exit 0 ;;
+    sun3*:SunOS:*:*)
+	echo m68k-sun-sunos${UNAME_RELEASE}
+	exit 0 ;;
+    sun*:*:4.2BSD:*)
+	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
+	test "x${UNAME_RELEASE}" = "x" && UNAME_RELEASE=3
+	case "`/bin/arch`" in
+	    sun3)
+		echo m68k-sun-sunos${UNAME_RELEASE}
+		;;
+	    sun4)
+		echo sparc-sun-sunos${UNAME_RELEASE}
+		;;
+	esac
+	exit 0 ;;
+    aushp:SunOS:*:*)
+	echo sparc-auspex-sunos${UNAME_RELEASE}
+	exit 0 ;;
+    # The situation for MiNT is a little confusing.  The machine name
+    # can be virtually everything (everything which is not
+    # "atarist" or "atariste" at least should have a processor
+    # > m68000).  The system name ranges from "MiNT" over "FreeMiNT"
+    # to the lowercase version "mint" (or "freemint").  Finally
+    # the system name "TOS" denotes a system which is actually not
+    # MiNT.  But MiNT is downward compatible to TOS, so this should
+    # be no problem.
+    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
+        echo m68k-atari-mint${UNAME_RELEASE}
+	exit 0 ;;
+    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
+	echo m68k-atari-mint${UNAME_RELEASE}
+        exit 0 ;;
+    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
+        echo m68k-atari-mint${UNAME_RELEASE}
+	exit 0 ;;
+    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
+        echo m68k-milan-mint${UNAME_RELEASE}
+        exit 0 ;;
+    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
+        echo m68k-hades-mint${UNAME_RELEASE}
+        exit 0 ;;
+    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
+        echo m68k-unknown-mint${UNAME_RELEASE}
+        exit 0 ;;
+    m68k:machten:*:*)
+	echo m68k-apple-machten${UNAME_RELEASE}
+	exit 0 ;;
+    powerpc:machten:*:*)
+	echo powerpc-apple-machten${UNAME_RELEASE}
+	exit 0 ;;
+    RISC*:Mach:*:*)
+	echo mips-dec-mach_bsd4.3
+	exit 0 ;;
+    RISC*:ULTRIX:*:*)
+	echo mips-dec-ultrix${UNAME_RELEASE}
+	exit 0 ;;
+    VAX*:ULTRIX*:*:*)
+	echo vax-dec-ultrix${UNAME_RELEASE}
+	exit 0 ;;
+    2020:CLIX:*:* | 2430:CLIX:*:*)
+	echo clipper-intergraph-clix${UNAME_RELEASE}
+	exit 0 ;;
+    mips:*:*:UMIPS | mips:*:*:RISCos)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+#ifdef __cplusplus
+#include <stdio.h>  /* for printf() prototype */
+	int main (int argc, char *argv[]) {
+#else
+	int main (argc, argv) int argc; char *argv[]; {
+#endif
+	#if defined (host_mips) && defined (MIPSEB)
+	#if defined (SYSTYPE_SYSV)
+	  printf ("mips-mips-riscos%ssysv\n", argv[1]); exit (0);
+	#endif
+	#if defined (SYSTYPE_SVR4)
+	  printf ("mips-mips-riscos%ssvr4\n", argv[1]); exit (0);
+	#endif
+	#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)
+	  printf ("mips-mips-riscos%sbsd\n", argv[1]); exit (0);
+	#endif
+	#endif
+	  exit (-1);
+	}
+EOF
+	$CC_FOR_BUILD -o $dummy $dummy.c \
+	  && $dummy `echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` \
+	  && exit 0
+	echo mips-mips-riscos${UNAME_RELEASE}
+	exit 0 ;;
+    Motorola:PowerMAX_OS:*:*)
+	echo powerpc-motorola-powermax
+	exit 0 ;;
+    Motorola:*:4.3:PL8-*)
+	echo powerpc-harris-powermax
+	exit 0 ;;
+    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)
+	echo powerpc-harris-powermax
+	exit 0 ;;
+    Night_Hawk:Power_UNIX:*:*)
+	echo powerpc-harris-powerunix
+	exit 0 ;;
+    m88k:CX/UX:7*:*)
+	echo m88k-harris-cxux7
+	exit 0 ;;
+    m88k:*:4*:R4*)
+	echo m88k-motorola-sysv4
+	exit 0 ;;
+    m88k:*:3*:R3*)
+	echo m88k-motorola-sysv3
+	exit 0 ;;
+    AViiON:dgux:*:*)
+        # DG/UX returns AViiON for all architectures
+        UNAME_PROCESSOR=`/usr/bin/uname -p`
+	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]
+	then
+	    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \
+	       [ ${TARGET_BINARY_INTERFACE}x = x ]
+	    then
+		echo m88k-dg-dgux${UNAME_RELEASE}
+	    else
+		echo m88k-dg-dguxbcs${UNAME_RELEASE}
+	    fi
+	else
+	    echo i586-dg-dgux${UNAME_RELEASE}
+	fi
+ 	exit 0 ;;
+    M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
+	echo m88k-dolphin-sysv3
+	exit 0 ;;
+    M88*:*:R3*:*)
+	# Delta 88k system running SVR3
+	echo m88k-motorola-sysv3
+	exit 0 ;;
+    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)
+	echo m88k-tektronix-sysv3
+	exit 0 ;;
+    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)
+	echo m68k-tektronix-bsd
+	exit 0 ;;
+    *:IRIX*:*:*)
+	echo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
+	exit 0 ;;
+    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
+	echo romp-ibm-aix      # uname -m gives an 8 hex-code CPU id
+	exit 0 ;;              # Note that: echo "'`uname -s`'" gives 'AIX '
+    i*86:AIX:*:*)
+	echo i386-ibm-aix
+	exit 0 ;;
+    ia64:AIX:*:*)
+	if [ -x /usr/bin/oslevel ] ; then
+		IBM_REV=`/usr/bin/oslevel`
+	else
+		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+	fi
+	echo ${UNAME_MACHINE}-ibm-aix${IBM_REV}
+	exit 0 ;;
+    *:AIX:2:3)
+	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
+		eval $set_cc_for_build
+		sed 's/^		//' << EOF >$dummy.c
+		#include <sys/systemcfg.h>
+
+		main()
+			{
+			if (!__power_pc())
+				exit(1);
+			puts("powerpc-ibm-aix3.2.5");
+			exit(0);
+			}
+EOF
+		$CC_FOR_BUILD -o $dummy $dummy.c && $dummy && exit 0
+		echo rs6000-ibm-aix3.2.5
+	elif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then
+		echo rs6000-ibm-aix3.2.4
+	else
+		echo rs6000-ibm-aix3.2
+	fi
+	exit 0 ;;
+    *:AIX:*:[45])
+	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
+	if /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then
+		IBM_ARCH=rs6000
+	else
+		IBM_ARCH=powerpc
+	fi
+	if [ -x /usr/bin/oslevel ] ; then
+		IBM_REV=`/usr/bin/oslevel`
+	else
+		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+	fi
+	echo ${IBM_ARCH}-ibm-aix${IBM_REV}
+	exit 0 ;;
+    *:AIX:*:*)
+	echo rs6000-ibm-aix
+	exit 0 ;;
+    ibmrt:4.4BSD:*|romp-ibm:BSD:*)
+	echo romp-ibm-bsd4.4
+	exit 0 ;;
+    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
+	echo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to
+	exit 0 ;;                           # report: romp-ibm BSD 4.3
+    *:BOSX:*:*)
+	echo rs6000-bull-bosx
+	exit 0 ;;
+    DPX/2?00:B.O.S.:*:*)
+	echo m68k-bull-sysv3
+	exit 0 ;;
+    9000/[34]??:4.3bsd:1.*:*)
+	echo m68k-hp-bsd
+	exit 0 ;;
+    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)
+	echo m68k-hp-bsd4.4
+	exit 0 ;;
+    9000/[34678]??:HP-UX:*:*)
+	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
+	case "${UNAME_MACHINE}" in
+	    9000/31? )            HP_ARCH=m68000 ;;
+	    9000/[34]?? )         HP_ARCH=m68k ;;
+	    9000/[678][0-9][0-9])
+		if [ -x /usr/bin/getconf ]; then
+		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
+                    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
+                    case "${sc_cpu_version}" in
+                      523) HP_ARCH="hppa1.0" ;; # CPU_PA_RISC1_0
+                      528) HP_ARCH="hppa1.1" ;; # CPU_PA_RISC1_1
+                      532)                      # CPU_PA_RISC2_0
+                        case "${sc_kernel_bits}" in
+                          32) HP_ARCH="hppa2.0n" ;;
+                          64) HP_ARCH="hppa2.0w" ;;
+			  '') HP_ARCH="hppa2.0" ;;   # HP-UX 10.20
+                        esac ;;
+                    esac
+		fi
+		if [ "${HP_ARCH}" = "" ]; then
+		    eval $set_cc_for_build
+		    sed 's/^              //' << EOF >$dummy.c
+
+              #define _HPUX_SOURCE
+              #include <stdlib.h>
+              #include <unistd.h>
+
+              int main ()
+              {
+              #if defined(_SC_KERNEL_BITS)
+                  long bits = sysconf(_SC_KERNEL_BITS);
+              #endif
+                  long cpu  = sysconf (_SC_CPU_VERSION);
+
+                  switch (cpu)
+              	{
+              	case CPU_PA_RISC1_0: puts ("hppa1.0"); break;
+              	case CPU_PA_RISC1_1: puts ("hppa1.1"); break;
+              	case CPU_PA_RISC2_0:
+              #if defined(_SC_KERNEL_BITS)
+              	    switch (bits)
+              		{
+              		case 64: puts ("hppa2.0w"); break;
+              		case 32: puts ("hppa2.0n"); break;
+              		default: puts ("hppa2.0"); break;
+              		} break;
+              #else  /* !defined(_SC_KERNEL_BITS) */
+              	    puts ("hppa2.0"); break;
+              #endif
+              	default: puts ("hppa1.0"); break;
+              	}
+                  exit (0);
+              }
+EOF
+		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
+		    test -z "$HP_ARCH" && HP_ARCH=hppa
+		fi ;;
+	esac
+	if [ ${HP_ARCH} = "hppa2.0w" ]
+	then
+	    # avoid double evaluation of $set_cc_for_build
+	    test -n "$CC_FOR_BUILD" || eval $set_cc_for_build
+	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E -) | grep __LP64__ >/dev/null
+	    then
+		HP_ARCH="hppa2.0w"
+	    else
+		HP_ARCH="hppa64"
+	    fi
+	fi
+	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
+	exit 0 ;;
+    ia64:HP-UX:*:*)
+	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
+	echo ia64-hp-hpux${HPUX_REV}
+	exit 0 ;;
+    3050*:HI-UX:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#include <unistd.h>
+	int
+	main ()
+	{
+	  long cpu = sysconf (_SC_CPU_VERSION);
+	  /* The order matters, because CPU_IS_HP_MC68K erroneously returns
+	     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct
+	     results, however.  */
+	  if (CPU_IS_PA_RISC (cpu))
+	    {
+	      switch (cpu)
+		{
+		  case CPU_PA_RISC1_0: puts ("hppa1.0-hitachi-hiuxwe2"); break;
+		  case CPU_PA_RISC1_1: puts ("hppa1.1-hitachi-hiuxwe2"); break;
+		  case CPU_PA_RISC2_0: puts ("hppa2.0-hitachi-hiuxwe2"); break;
+		  default: puts ("hppa-hitachi-hiuxwe2"); break;
+		}
+	    }
+	  else if (CPU_IS_HP_MC68K (cpu))
+	    puts ("m68k-hitachi-hiuxwe2");
+	  else puts ("unknown-hitachi-hiuxwe2");
+	  exit (0);
+	}
+EOF
+	$CC_FOR_BUILD -o $dummy $dummy.c && $dummy && exit 0
+	echo unknown-hitachi-hiuxwe2
+	exit 0 ;;
+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
+	echo hppa1.1-hp-bsd
+	exit 0 ;;
+    9000/8??:4.3bsd:*:*)
+	echo hppa1.0-hp-bsd
+	exit 0 ;;
+    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)
+	echo hppa1.0-hp-mpeix
+	exit 0 ;;
+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )
+	echo hppa1.1-hp-osf
+	exit 0 ;;
+    hp8??:OSF1:*:*)
+	echo hppa1.0-hp-osf
+	exit 0 ;;
+    i*86:OSF1:*:*)
+	if [ -x /usr/sbin/sysversion ] ; then
+	    echo ${UNAME_MACHINE}-unknown-osf1mk
+	else
+	    echo ${UNAME_MACHINE}-unknown-osf1
+	fi
+	exit 0 ;;
+    parisc*:Lites*:*:*)
+	echo hppa1.1-hp-lites
+	exit 0 ;;
+    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)
+	echo c1-convex-bsd
+        exit 0 ;;
+    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)
+	if getsysinfo -f scalar_acc
+	then echo c32-convex-bsd
+	else echo c2-convex-bsd
+	fi
+        exit 0 ;;
+    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)
+	echo c34-convex-bsd
+        exit 0 ;;
+    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)
+	echo c38-convex-bsd
+        exit 0 ;;
+    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)
+	echo c4-convex-bsd
+        exit 0 ;;
+    CRAY*Y-MP:*:*:*)
+	echo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit 0 ;;
+    CRAY*[A-Z]90:*:*:*)
+	echo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \
+	| sed -e 's/CRAY.*\([A-Z]90\)/\1/' \
+	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \
+	      -e 's/\.[^.]*$/.X/'
+	exit 0 ;;
+    CRAY*TS:*:*:*)
+	echo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit 0 ;;
+    CRAY*T3E:*:*:*)
+	echo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit 0 ;;
+    CRAY*SV1:*:*:*)
+	echo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit 0 ;;
+    *:UNICOS/mp:*:*)
+	echo nv1-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	exit 0 ;;
+    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)
+	FUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+        FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
+        FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
+        echo "${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+        exit 0 ;;
+    5000:UNIX_System_V:4.*:*)
+        FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
+        FUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`
+        echo "sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
+	exit 0 ;;
+    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
+	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
+	exit 0 ;;
+    sparc*:BSD/OS:*:*)
+	echo sparc-unknown-bsdi${UNAME_RELEASE}
+	exit 0 ;;
+    *:BSD/OS:*:*)
+	echo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}
+	exit 0 ;;
+    *:FreeBSD:*:*)
+	# Determine whether the default compiler uses glibc.
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#include <features.h>
+	#if __GLIBC__ >= 2
+	LIBC=gnu
+	#else
+	LIBC=
+	#endif
+EOF
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^LIBC=`
+	# GNU/KFreeBSD systems have a "k" prefix to indicate we are using
+	# FreeBSD's kernel, but not the complete OS.
+	case ${LIBC} in gnu) kernel_only='k' ;; esac
+	echo ${UNAME_MACHINE}-unknown-${kernel_only}freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`${LIBC:+-$LIBC}
+	exit 0 ;;
+    i*:CYGWIN*:*)
+	echo ${UNAME_MACHINE}-pc-cygwin
+	exit 0 ;;
+    i*:MINGW*:*)
+	echo ${UNAME_MACHINE}-pc-mingw32
+	exit 0 ;;
+    i*:PW*:*)
+	echo ${UNAME_MACHINE}-pc-pw32
+	exit 0 ;;
+    x86:Interix*:[34]*)
+	echo i586-pc-interix${UNAME_RELEASE}|sed -e 's/\..*//'
+	exit 0 ;;
+    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)
+	echo i${UNAME_MACHINE}-pc-mks
+	exit 0 ;;
+    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)
+	# How do we know it's Interix rather than the generic POSIX subsystem?
+	# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we
+	# UNAME_MACHINE based on the output of uname instead of i386?
+	echo i586-pc-interix
+	exit 0 ;;
+    i*:UWIN*:*)
+	echo ${UNAME_MACHINE}-pc-uwin
+	exit 0 ;;
+    p*:CYGWIN*:*)
+	echo powerpcle-unknown-cygwin
+	exit 0 ;;
+    prep*:SunOS:5.*:*)
+	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	exit 0 ;;
+    *:GNU:*:*)
+	# the GNU system
+	echo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-gnu`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`
+	exit 0 ;;
+    *:GNU/*:*:*)
+	# other systems with GNU libc and userland
+	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-gnu
+	exit 0 ;;
+    i*86:Minix:*:*)
+	echo ${UNAME_MACHINE}-pc-minix
+	exit 0 ;;
+    arm*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit 0 ;;
+    cris:Linux:*:*)
+	echo cris-axis-linux-gnu
+	exit 0 ;;
+    ia64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit 0 ;;
+    m68*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit 0 ;;
+    mips:Linux:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#undef CPU
+	#undef mips
+	#undef mipsel
+	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
+	CPU=mipsel
+	#else
+	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
+	CPU=mips
+	#else
+	CPU=
+	#endif
+	#endif
+EOF
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^CPU=`
+	test x"${CPU}" != x && echo "${CPU}-unknown-linux-gnu" && exit 0
+	;;
+    mips64:Linux:*:*)
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#undef CPU
+	#undef mips64
+	#undef mips64el
+	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
+	CPU=mips64el
+	#else
+	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
+	CPU=mips64
+	#else
+	CPU=
+	#endif
+	#endif
+EOF
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^CPU=`
+	test x"${CPU}" != x && echo "${CPU}-unknown-linux-gnu" && exit 0
+	;;
+    ppc:Linux:*:*)
+	echo powerpc-unknown-linux-gnu
+	exit 0 ;;
+    ppc64:Linux:*:*)
+	echo powerpc64-unknown-linux-gnu
+	exit 0 ;;
+    alpha:Linux:*:*)
+	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /proc/cpuinfo` in
+	  EV5)   UNAME_MACHINE=alphaev5 ;;
+	  EV56)  UNAME_MACHINE=alphaev56 ;;
+	  PCA56) UNAME_MACHINE=alphapca56 ;;
+	  PCA57) UNAME_MACHINE=alphapca56 ;;
+	  EV6)   UNAME_MACHINE=alphaev6 ;;
+	  EV67)  UNAME_MACHINE=alphaev67 ;;
+	  EV68*) UNAME_MACHINE=alphaev68 ;;
+        esac
+	objdump --private-headers /bin/sh | grep ld.so.1 >/dev/null
+	if test "$?" = 0 ; then LIBC="libc1" ; else LIBC="" ; fi
+	echo ${UNAME_MACHINE}-unknown-linux-gnu${LIBC}
+	exit 0 ;;
+    parisc:Linux:*:* | hppa:Linux:*:*)
+	# Look for CPU level
+	case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
+	  PA7*) echo hppa1.1-unknown-linux-gnu ;;
+	  PA8*) echo hppa2.0-unknown-linux-gnu ;;
+	  *)    echo hppa-unknown-linux-gnu ;;
+	esac
+	exit 0 ;;
+    parisc64:Linux:*:* | hppa64:Linux:*:*)
+	echo hppa64-unknown-linux-gnu
+	exit 0 ;;
+    s390:Linux:*:* | s390x:Linux:*:*)
+	echo ${UNAME_MACHINE}-ibm-linux
+	exit 0 ;;
+    sh64*:Linux:*:*)
+    	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit 0 ;;
+    sh*:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit 0 ;;
+    sparc:Linux:*:* | sparc64:Linux:*:*)
+	echo ${UNAME_MACHINE}-unknown-linux-gnu
+	exit 0 ;;
+    x86_64:Linux:*:*)
+	echo x86_64-unknown-linux-gnu
+	exit 0 ;;
+    i*86:Linux:*:*)
+	# The BFD linker knows what the default object file format is, so
+	# first see if it will tell us. cd to the root directory to prevent
+	# problems with other programs or directories called `ld' in the path.
+	# Set LC_ALL=C to ensure ld outputs messages in English.
+	ld_supported_targets=`cd /; LC_ALL=C ld --help 2>&1 \
+			 | sed -ne '/supported targets:/!d
+				    s/[ 	][ 	]*/ /g
+				    s/.*supported targets: *//
+				    s/ .*//
+				    p'`
+        case "$ld_supported_targets" in
+	  elf32-i386)
+		TENTATIVE="${UNAME_MACHINE}-pc-linux-gnu"
+		;;
+	  a.out-i386-linux)
+		echo "${UNAME_MACHINE}-pc-linux-gnuaout"
+		exit 0 ;;
+	  coff-i386)
+		echo "${UNAME_MACHINE}-pc-linux-gnucoff"
+		exit 0 ;;
+	  "")
+		# Either a pre-BFD a.out linker (linux-gnuoldld) or
+		# one that does not give us useful --help.
+		echo "${UNAME_MACHINE}-pc-linux-gnuoldld"
+		exit 0 ;;
+	esac
+	# Determine whether the default compiler is a.out or elf
+	eval $set_cc_for_build
+	sed 's/^	//' << EOF >$dummy.c
+	#include <features.h>
+	#ifdef __ELF__
+	# ifdef __GLIBC__
+	#  if __GLIBC__ >= 2
+	LIBC=gnu
+	#  else
+	LIBC=gnulibc1
+	#  endif
+	# else
+	LIBC=gnulibc1
+	# endif
+	#else
+	#ifdef __INTEL_COMPILER
+	LIBC=gnu
+	#else
+	LIBC=gnuaout
+	#endif
+	#endif
+	#ifdef __dietlibc__
+	LIBC=dietlibc
+	#endif
+EOF
+	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep ^LIBC=`
+	test x"${LIBC}" != x && echo "${UNAME_MACHINE}-pc-linux-${LIBC}" && exit 0
+	test x"${TENTATIVE}" != x && echo "${TENTATIVE}" && exit 0
+	;;
+    i*86:DYNIX/ptx:4*:*)
+	# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.
+	# earlier versions are messed up and put the nodename in both
+	# sysname and nodename.
+	echo i386-sequent-sysv4
+	exit 0 ;;
+    i*86:UNIX_SV:4.2MP:2.*)
+        # Unixware is an offshoot of SVR4, but it has its own version
+        # number series starting with 2...
+        # I am not positive that other SVR4 systems won't match this,
+	# I just have to hope.  -- rms.
+        # Use sysv4.2uw... so that sysv4* matches it.
+	echo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}
+	exit 0 ;;
+    i*86:OS/2:*:*)
+	# If we were able to find `uname', then EMX Unix compatibility
+	# is probably installed.
+	echo ${UNAME_MACHINE}-pc-os2-emx
+	exit 0 ;;
+    i*86:XTS-300:*:STOP)
+	echo ${UNAME_MACHINE}-unknown-stop
+	exit 0 ;;
+    i*86:atheos:*:*)
+	echo ${UNAME_MACHINE}-unknown-atheos
+	exit 0 ;;
+	i*86:syllable:*:*)
+	echo ${UNAME_MACHINE}-pc-syllable
+	exit 0 ;;
+    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.0*:*)
+	echo i386-unknown-lynxos${UNAME_RELEASE}
+	exit 0 ;;
+    i*86:*DOS:*:*)
+	echo ${UNAME_MACHINE}-pc-msdosdjgpp
+	exit 0 ;;
+    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)
+	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
+	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
+		echo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}
+	else
+		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
+	fi
+	exit 0 ;;
+    i*86:*:5:[78]*)
+	case `/bin/uname -X | grep "^Machine"` in
+	    *486*)	     UNAME_MACHINE=i486 ;;
+	    *Pentium)	     UNAME_MACHINE=i586 ;;
+	    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;
+	esac
+	echo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}
+	exit 0 ;;
+    i*86:*:3.2:*)
+	if test -f /usr/options/cb.name; then
+		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
+		echo ${UNAME_MACHINE}-pc-isc$UNAME_REL
+	elif /bin/uname -X 2>/dev/null >/dev/null ; then
+		UNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`
+		(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486
+		(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \
+			&& UNAME_MACHINE=i586
+		(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \
+			&& UNAME_MACHINE=i686
+		echo ${UNAME_MACHINE}-pc-sco$UNAME_REL
+	else
+		echo ${UNAME_MACHINE}-pc-sysv32
+	fi
+	exit 0 ;;
+    pc:*:*:*)
+	# Left here for compatibility:
+        # uname -m prints for DJGPP always 'pc', but it prints nothing about
+        # the processor, so we play safe by assuming i386.
+	echo i386-pc-msdosdjgpp
+        exit 0 ;;
+    Intel:Mach:3*:*)
+	echo i386-pc-mach3
+	exit 0 ;;
+    paragon:*:*:*)
+	echo i860-intel-osf1
+	exit 0 ;;
+    i860:*:4.*:*) # i860-SVR4
+	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
+	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
+	else # Add other i860-SVR4 vendors below as they are discovered.
+	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
+	fi
+	exit 0 ;;
+    mini*:CTIX:SYS*5:*)
+	# "miniframe"
+	echo m68010-convergent-sysv
+	exit 0 ;;
+    mc68k:UNIX:SYSTEM5:3.51m)
+	echo m68k-convergent-sysv
+	exit 0 ;;
+    M680?0:D-NIX:5.3:*)
+	echo m68k-diab-dnix
+	exit 0 ;;
+    M68*:*:R3V[567]*:*)
+	test -r /sysV68 && echo 'm68k-motorola-sysv' && exit 0 ;;
+    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0)
+	OS_REL=''
+	test -r /etc/.relid \
+	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
+	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+	  && echo i486-ncr-sysv4.3${OS_REL} && exit 0
+	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
+	  && echo i586-ncr-sysv4.3${OS_REL} && exit 0 ;;
+    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
+        /bin/uname -p 2>/dev/null | grep 86 >/dev/null \
+          && echo i486-ncr-sysv4 && exit 0 ;;
+    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)
+	echo m68k-unknown-lynxos${UNAME_RELEASE}
+	exit 0 ;;
+    mc68030:UNIX_System_V:4.*:*)
+	echo m68k-atari-sysv4
+	exit 0 ;;
+    TSUNAMI:LynxOS:2.*:*)
+	echo sparc-unknown-lynxos${UNAME_RELEASE}
+	exit 0 ;;
+    rs6000:LynxOS:2.*:*)
+	echo rs6000-unknown-lynxos${UNAME_RELEASE}
+	exit 0 ;;
+    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.0*:*)
+	echo powerpc-unknown-lynxos${UNAME_RELEASE}
+	exit 0 ;;
+    SM[BE]S:UNIX_SV:*:*)
+	echo mips-dde-sysv${UNAME_RELEASE}
+	exit 0 ;;
+    RM*:ReliantUNIX-*:*:*)
+	echo mips-sni-sysv4
+	exit 0 ;;
+    RM*:SINIX-*:*:*)
+	echo mips-sni-sysv4
+	exit 0 ;;
+    *:SINIX-*:*:*)
+	if uname -p 2>/dev/null >/dev/null ; then
+		UNAME_MACHINE=`(uname -p) 2>/dev/null`
+		echo ${UNAME_MACHINE}-sni-sysv4
+	else
+		echo ns32k-sni-sysv
+	fi
+	exit 0 ;;
+    PENTIUM:*:4.0*:*) # Unisys `ClearPath HMP IX 4000' SVR4/MP effort
+                      # says <Richard.M.Bartel@ccMail.Census.GOV>
+        echo i586-unisys-sysv4
+        exit 0 ;;
+    *:UNIX_System_V:4*:FTX*)
+	# From Gerald Hewes <hewes@openmarket.com>.
+	# How about differentiating between stratus architectures? -djm
+	echo hppa1.1-stratus-sysv4
+	exit 0 ;;
+    *:*:*:FTX*)
+	# From seanf@swdc.stratus.com.
+	echo i860-stratus-sysv4
+	exit 0 ;;
+    *:VOS:*:*)
+	# From Paul.Green@stratus.com.
+	echo hppa1.1-stratus-vos
+	exit 0 ;;
+    mc68*:A/UX:*:*)
+	echo m68k-apple-aux${UNAME_RELEASE}
+	exit 0 ;;
+    news*:NEWS-OS:6*:*)
+	echo mips-sony-newsos6
+	exit 0 ;;
+    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
+	if [ -d /usr/nec ]; then
+	        echo mips-nec-sysv${UNAME_RELEASE}
+	else
+	        echo mips-unknown-sysv${UNAME_RELEASE}
+	fi
+        exit 0 ;;
+    BeBox:BeOS:*:*)	# BeOS running on hardware made by Be, PPC only.
+	echo powerpc-be-beos
+	exit 0 ;;
+    BeMac:BeOS:*:*)	# BeOS running on Mac or Mac clone, PPC only.
+	echo powerpc-apple-beos
+	exit 0 ;;
+    BePC:BeOS:*:*)	# BeOS running on Intel PC compatible.
+	echo i586-pc-beos
+	exit 0 ;;
+    SX-4:SUPER-UX:*:*)
+	echo sx4-nec-superux${UNAME_RELEASE}
+	exit 0 ;;
+    SX-5:SUPER-UX:*:*)
+	echo sx5-nec-superux${UNAME_RELEASE}
+	exit 0 ;;
+    SX-6:SUPER-UX:*:*)
+	echo sx6-nec-superux${UNAME_RELEASE}
+	exit 0 ;;
+    Power*:Rhapsody:*:*)
+	echo powerpc-apple-rhapsody${UNAME_RELEASE}
+	exit 0 ;;
+    *:Rhapsody:*:*)
+	echo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}
+	exit 0 ;;
+    *:Darwin:*:*)
+	case `uname -p` in
+	    *86) UNAME_PROCESSOR=i686 ;;
+	    powerpc) UNAME_PROCESSOR=powerpc ;;
+	esac
+	echo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}
+	exit 0 ;;
+    *:procnto*:*:* | *:QNX:[0123456789]*:*)
+	UNAME_PROCESSOR=`uname -p`
+	if test "$UNAME_PROCESSOR" = "x86"; then
+		UNAME_PROCESSOR=i386
+		UNAME_MACHINE=pc
+	fi
+	echo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}
+	exit 0 ;;
+    *:QNX:*:4*)
+	echo i386-pc-qnx
+	exit 0 ;;
+    NSR-?:NONSTOP_KERNEL:*:*)
+	echo nsr-tandem-nsk${UNAME_RELEASE}
+	exit 0 ;;
+    *:NonStop-UX:*:*)
+	echo mips-compaq-nonstopux
+	exit 0 ;;
+    BS2000:POSIX*:*:*)
+	echo bs2000-siemens-sysv
+	exit 0 ;;
+    DS/*:UNIX_System_V:*:*)
+	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
+	exit 0 ;;
+    *:Plan9:*:*)
+	# "uname -m" is not consistent, so use $cputype instead. 386
+	# is converted to i386 for consistency with other x86
+	# operating systems.
+	if test "$cputype" = "386"; then
+	    UNAME_MACHINE=i386
+	else
+	    UNAME_MACHINE="$cputype"
+	fi
+	echo ${UNAME_MACHINE}-unknown-plan9
+	exit 0 ;;
+    *:TOPS-10:*:*)
+	echo pdp10-unknown-tops10
+	exit 0 ;;
+    *:TENEX:*:*)
+	echo pdp10-unknown-tenex
+	exit 0 ;;
+    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)
+	echo pdp10-dec-tops20
+	exit 0 ;;
+    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)
+	echo pdp10-xkl-tops20
+	exit 0 ;;
+    *:TOPS-20:*:*)
+	echo pdp10-unknown-tops20
+	exit 0 ;;
+    *:ITS:*:*)
+	echo pdp10-unknown-its
+	exit 0 ;;
+    SEI:*:*:SEIUX)
+        echo mips-sei-seiux${UNAME_RELEASE}
+	exit 0 ;;
+    *:DragonFly:*:*)
+	echo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
+	exit 0 ;;
+esac
+
+#echo '(No uname command or uname output not recognized.)' 1>&2
+#echo "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" 1>&2
+
+eval $set_cc_for_build
+cat >$dummy.c <<EOF
+#ifdef _SEQUENT_
+# include <sys/types.h>
+# include <sys/utsname.h>
+#endif
+main ()
+{
+#if defined (sony)
+#if defined (MIPSEB)
+  /* BFD wants "bsd" instead of "newsos".  Perhaps BFD should be changed,
+     I don't know....  */
+  printf ("mips-sony-bsd\n"); exit (0);
+#else
+#include <sys/param.h>
+  printf ("m68k-sony-newsos%s\n",
+#ifdef NEWSOS4
+          "4"
+#else
+	  ""
+#endif
+         ); exit (0);
+#endif
+#endif
+
+#if defined (__arm) && defined (__acorn) && defined (__unix)
+  printf ("arm-acorn-riscix"); exit (0);
+#endif
+
+#if defined (hp300) && !defined (hpux)
+  printf ("m68k-hp-bsd\n"); exit (0);
+#endif
+
+#if defined (NeXT)
+#if !defined (__ARCHITECTURE__)
+#define __ARCHITECTURE__ "m68k"
+#endif
+  int version;
+  version=`(hostinfo | sed -n 's/.*NeXT Mach \([0-9]*\).*/\1/p') 2>/dev/null`;
+  if (version < 4)
+    printf ("%s-next-nextstep%d\n", __ARCHITECTURE__, version);
+  else
+    printf ("%s-next-openstep%d\n", __ARCHITECTURE__, version);
+  exit (0);
+#endif
+
+#if defined (MULTIMAX) || defined (n16)
+#if defined (UMAXV)
+  printf ("ns32k-encore-sysv\n"); exit (0);
+#else
+#if defined (CMU)
+  printf ("ns32k-encore-mach\n"); exit (0);
+#else
+  printf ("ns32k-encore-bsd\n"); exit (0);
+#endif
+#endif
+#endif
+
+#if defined (__386BSD__)
+  printf ("i386-pc-bsd\n"); exit (0);
+#endif
+
+#if defined (sequent)
+#if defined (i386)
+  printf ("i386-sequent-dynix\n"); exit (0);
+#endif
+#if defined (ns32000)
+  printf ("ns32k-sequent-dynix\n"); exit (0);
+#endif
+#endif
+
+#if defined (_SEQUENT_)
+    struct utsname un;
+
+    uname(&un);
+
+    if (strncmp(un.version, "V2", 2) == 0) {
+	printf ("i386-sequent-ptx2\n"); exit (0);
+    }
+    if (strncmp(un.version, "V1", 2) == 0) { /* XXX is V1 correct? */
+	printf ("i386-sequent-ptx1\n"); exit (0);
+    }
+    printf ("i386-sequent-ptx\n"); exit (0);
+
+#endif
+
+#if defined (vax)
+# if !defined (ultrix)
+#  include <sys/param.h>
+#  if defined (BSD)
+#   if BSD == 43
+      printf ("vax-dec-bsd4.3\n"); exit (0);
+#   else
+#    if BSD == 199006
+      printf ("vax-dec-bsd4.3reno\n"); exit (0);
+#    else
+      printf ("vax-dec-bsd\n"); exit (0);
+#    endif
+#   endif
+#  else
+    printf ("vax-dec-bsd\n"); exit (0);
+#  endif
+# else
+    printf ("vax-dec-ultrix\n"); exit (0);
+# endif
+#endif
+
+#if defined (alliant) && defined (i860)
+  printf ("i860-alliant-bsd\n"); exit (0);
+#endif
+
+  exit (1);
+}
+EOF
+
+$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && $dummy && exit 0
+
+# Apollos put the system type in the environment.
+
+test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit 0; }
+
+# Convex versions that predate uname can use getsysinfo(1)
+
+if [ -x /usr/convex/getsysinfo ]
+then
+    case `getsysinfo -f cpu_type` in
+    c1*)
+	echo c1-convex-bsd
+	exit 0 ;;
+    c2*)
+	if getsysinfo -f scalar_acc
+	then echo c32-convex-bsd
+	else echo c2-convex-bsd
+	fi
+	exit 0 ;;
+    c34*)
+	echo c34-convex-bsd
+	exit 0 ;;
+    c38*)
+	echo c38-convex-bsd
+	exit 0 ;;
+    c4*)
+	echo c4-convex-bsd
+	exit 0 ;;
+    esac
+fi
+
+cat >&2 <<EOF
+$0: unable to guess system type
+
+This script, last modified $timestamp, has failed to recognize
+the operating system you are using. It is advised that you
+download the most up to date version of the config scripts from
+
+    ftp://ftp.gnu.org/pub/gnu/config/
+
+If the version you run ($0) is already up to date, please
+send the following data and any information you think might be
+pertinent to <config-patches@gnu.org> in order to provide the needed
+information to handle your system.
+
+config.guess timestamp = $timestamp
+
+uname -m = `(uname -m) 2>/dev/null || echo unknown`
+uname -r = `(uname -r) 2>/dev/null || echo unknown`
+uname -s = `(uname -s) 2>/dev/null || echo unknown`
+uname -v = `(uname -v) 2>/dev/null || echo unknown`
+
+/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`
+/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`
+
+hostinfo               = `(hostinfo) 2>/dev/null`
+/bin/universe          = `(/bin/universe) 2>/dev/null`
+/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`
+/bin/arch              = `(/bin/arch) 2>/dev/null`
+/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
+/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`
+
+UNAME_MACHINE = ${UNAME_MACHINE}
+UNAME_RELEASE = ${UNAME_RELEASE}
+UNAME_SYSTEM  = ${UNAME_SYSTEM}
+UNAME_VERSION = ${UNAME_VERSION}
+EOF
+
+exit 1
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
Index: build_tree/bootLoader/tools/config.sub
diff -u /dev/null build_tree/bootLoader/tools/config.sub:1.1.1.2
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/tools/config.sub	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,1549 @@
+#! /bin/sh
+# Configuration validation subroutine script.
+#   Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
+#   2000, 2001, 2002, 2003 Free Software Foundation, Inc.
+
+timestamp='2004-02-23'
+
+# This file is (in principle) common to ALL GNU software.
+# The presence of a machine in this file suggests that SOME GNU software
+# can handle that machine.  It does not imply ALL GNU software can.
+#
+# This file is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330,
+# Boston, MA 02111-1307, USA.
+
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# Please send patches to <config-patches@gnu.org>.  Submit a context
+# diff and a properly formatted ChangeLog entry.
+#
+# Configuration subroutine to validate and canonicalize a configuration type.
+# Supply the specified configuration type as an argument.
+# If it is invalid, we print an error message on stderr and exit with code 1.
+# Otherwise, we print the canonical config type on stdout and succeed.
+
+# This file is supposed to be the same for all GNU packages
+# and recognize all the CPU types, system types and aliases
+# that are meaningful with *any* GNU software.
+# Each package is responsible for reporting which valid configurations
+# it does not support.  The user should be able to distinguish
+# a failure to support a valid configuration from a meaningless
+# configuration.
+
+# The goal of this file is to map all the various variations of a given
+# machine specification into a single specification in the form:
+#	CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM
+# or in some cases, the newer four-part form:
+#	CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM
+# It is wrong to echo any other type of specification.
+
+me=`echo "$0" | sed -e 's,.*/,,'`
+
+usage="\
+Usage: $0 [OPTION] CPU-MFR-OPSYS
+       $0 [OPTION] ALIAS
+
+Canonicalize a configuration name.
+
+Operation modes:
+  -h, --help         print this help, then exit
+  -t, --time-stamp   print date of last modification, then exit
+  -v, --version      print version number, then exit
+
+Report bugs and patches to <config-patches@gnu.org>."
+
+version="\
+GNU config.sub ($timestamp)
+
+Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
+Free Software Foundation, Inc.
+
+This is free software; see the source for copying conditions.  There is NO
+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
+
+help="
+Try \`$me --help' for more information."
+
+# Parse command line
+while test $# -gt 0 ; do
+  case $1 in
+    --time-stamp | --time* | -t )
+       echo "$timestamp" ; exit 0 ;;
+    --version | -v )
+       echo "$version" ; exit 0 ;;
+    --help | --h* | -h )
+       echo "$usage"; exit 0 ;;
+    -- )     # Stop option processing
+       shift; break ;;
+    - )	# Use stdin as input.
+       break ;;
+    -* )
+       echo "$me: invalid option $1$help"
+       exit 1 ;;
+
+    *local*)
+       # First pass through any local machine types.
+       echo $1
+       exit 0;;
+
+    * )
+       break ;;
+  esac
+done
+
+case $# in
+ 0) echo "$me: missing argument$help" >&2
+    exit 1;;
+ 1) ;;
+ *) echo "$me: too many arguments$help" >&2
+    exit 1;;
+esac
+
+# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
+# Here we must recognize all the valid KERNEL-OS combinations.
+maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
+case $maybe_os in
+  nto-qnx* | linux-gnu* | linux-dietlibc | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | \
+  kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* | storm-chaos* | os2-emx* | rtmk-nova*)
+    os=-$maybe_os
+    basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
+    ;;
+  *)
+    basic_machine=`echo $1 | sed 's/-[^-]*$//'`
+    if [ $basic_machine != $1 ]
+    then os=`echo $1 | sed 's/.*-/-/'`
+    else os=; fi
+    ;;
+esac
+
+### Let's recognize common machines as not being operating systems so
+### that things like config.sub decstation-3100 work.  We also
+### recognize some manufacturers as not being operating systems, so we
+### can provide default operating systems below.
+case $os in
+	-sun*os*)
+		# Prevent following clause from handling this invalid input.
+		;;
+	-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \
+	-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \
+	-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \
+	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
+	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
+	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
+	-apple | -axis)
+		os=
+		basic_machine=$1
+		;;
+	-sim | -cisco | -oki | -wec | -winbond)
+		os=
+		basic_machine=$1
+		;;
+	-scout)
+		;;
+	-wrs)
+		os=-vxworks
+		basic_machine=$1
+		;;
+	-chorusos*)
+		os=-chorusos
+		basic_machine=$1
+		;;
+ 	-chorusrdb)
+ 		os=-chorusrdb
+		basic_machine=$1
+ 		;;
+	-hiux*)
+		os=-hiuxwe2
+		;;
+	-sco5)
+		os=-sco3.2v5
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco4)
+		os=-sco3.2v4
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco3.2.[4-9]*)
+		os=`echo $os | sed -e 's/sco3.2./sco3.2v/'`
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco3.2v[4-9]*)
+		# Don't forget version if it is 3.2v4 or newer.
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-sco*)
+		os=-sco3.2v2
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-udk*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-isc)
+		os=-isc2.2
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-clix*)
+		basic_machine=clipper-intergraph
+		;;
+	-isc*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
+		;;
+	-lynx*)
+		os=-lynxos
+		;;
+	-ptx*)
+		basic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`
+		;;
+	-windowsnt*)
+		os=`echo $os | sed -e 's/windowsnt/winnt/'`
+		;;
+	-psos*)
+		os=-psos
+		;;
+	-mint | -mint[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
+esac
+
+# Decode aliases for certain CPU-COMPANY combinations.
+case $basic_machine in
+	# Recognize the basic CPU types without company name.
+	# Some are omitted here because they have special meanings below.
+	1750a | 580 \
+	| a29k \
+	| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \
+	| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \
+	| am33_2.0 \
+	| arc | arm | arm[bl]e | arme[lb] | armv[2345] | armv[345][lb] | avr \
+	| c4x | clipper \
+	| d10v | d30v | dlx | dsp16xx \
+	| fr30 | frv \
+	| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
+	| i370 | i860 | i960 | ia64 \
+	| ip2k | iq2000 \
+	| m32r | m68000 | m68k | m88k | mcore \
+	| mips | mipsbe | mipseb | mipsel | mipsle \
+	| mips16 \
+	| mips64 | mips64el \
+	| mips64vr | mips64vrel \
+	| mips64orion | mips64orionel \
+	| mips64vr4100 | mips64vr4100el \
+	| mips64vr4300 | mips64vr4300el \
+	| mips64vr5000 | mips64vr5000el \
+	| mipsisa32 | mipsisa32el \
+	| mipsisa32r2 | mipsisa32r2el \
+	| mipsisa64 | mipsisa64el \
+	| mipsisa64r2 | mipsisa64r2el \
+	| mipsisa64sb1 | mipsisa64sb1el \
+	| mipsisa64sr71k | mipsisa64sr71kel \
+	| mipstx39 | mipstx39el \
+	| mn10200 | mn10300 \
+	| msp430 \
+	| ns16k | ns32k \
+	| openrisc | or32 \
+	| pdp10 | pdp11 | pj | pjl \
+	| powerpc | powerpc64 | powerpc64le | powerpcle | ppcbe \
+	| pyramid \
+	| sh | sh[1234] | sh[23]e | sh[34]eb | shbe | shle | sh[1234]le | sh3ele \
+	| sh64 | sh64le \
+	| sparc | sparc64 | sparc86x | sparclet | sparclite | sparcv9 | sparcv9b \
+	| strongarm \
+	| tahoe | thumb | tic4x | tic80 | tron \
+	| v850 | v850e \
+	| we32k \
+	| x86 | xscale | xstormy16 | xtensa \
+	| z8k)
+		basic_machine=$basic_machine-unknown
+		;;
+	m6811 | m68hc11 | m6812 | m68hc12)
+		# Motorola 68HC11/12.
+		basic_machine=$basic_machine-unknown
+		os=-none
+		;;
+	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)
+		;;
+
+	# We use `pc' rather than `unknown'
+	# because (1) that's what they normally are, and
+	# (2) the word "unknown" tends to confuse beginning users.
+	i*86 | x86_64)
+	  basic_machine=$basic_machine-pc
+	  ;;
+	# Object if more than one company name word.
+	*-*-*)
+		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
+		exit 1
+		;;
+	# Recognize the basic CPU types with company name.
+	580-* \
+	| a29k-* \
+	| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \
+	| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \
+	| alphapca5[67]-* | alpha64pca5[67]-* | arc-* \
+	| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \
+	| avr-* \
+	| bs2000-* \
+	| c[123]* | c30-* | [cjt]90-* | c4x-* | c54x-* | c55x-* | c6x-* \
+	| clipper-* | cydra-* \
+	| d10v-* | d30v-* | dlx-* \
+	| elxsi-* \
+	| f30[01]-* | f700-* | fr30-* | frv-* | fx80-* \
+	| h8300-* | h8500-* \
+	| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \
+	| i*86-* | i860-* | i960-* | ia64-* \
+	| ip2k-* | iq2000-* \
+	| m32r-* \
+	| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \
+	| m88110-* | m88k-* | mcore-* \
+	| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \
+	| mips16-* \
+	| mips64-* | mips64el-* \
+	| mips64vr-* | mips64vrel-* \
+	| mips64orion-* | mips64orionel-* \
+	| mips64vr4100-* | mips64vr4100el-* \
+	| mips64vr4300-* | mips64vr4300el-* \
+	| mips64vr5000-* | mips64vr5000el-* \
+	| mipsisa32-* | mipsisa32el-* \
+	| mipsisa32r2-* | mipsisa32r2el-* \
+	| mipsisa64-* | mipsisa64el-* \
+	| mipsisa64r2-* | mipsisa64r2el-* \
+	| mipsisa64sb1-* | mipsisa64sb1el-* \
+	| mipsisa64sr71k-* | mipsisa64sr71kel-* \
+	| mipstx39-* | mipstx39el-* \
+	| msp430-* \
+	| none-* | np1-* | nv1-* | ns16k-* | ns32k-* \
+	| orion-* \
+	| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \
+	| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* | ppcbe-* \
+	| pyramid-* \
+	| romp-* | rs6000-* \
+	| sh-* | sh[1234]-* | sh[23]e-* | sh[34]eb-* | shbe-* \
+	| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \
+	| sparc-* | sparc64-* | sparc86x-* | sparclet-* | sparclite-* \
+	| sparcv9-* | sparcv9b-* | strongarm-* | sv1-* | sx?-* \
+	| tahoe-* | thumb-* \
+	| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \
+	| tron-* \
+	| v850-* | v850e-* | vax-* \
+	| we32k-* \
+	| x86-* | x86_64-* | xps100-* | xscale-* | xstormy16-* \
+	| xtensa-* \
+	| ymp-* \
+	| z8k-*)
+		;;
+	# Recognize the various machine names and aliases which stand
+	# for a CPU type and a company and sometimes even an OS.
+	386bsd)
+		basic_machine=i386-unknown
+		os=-bsd
+		;;
+	3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)
+		basic_machine=m68000-att
+		;;
+	3b*)
+		basic_machine=we32k-att
+		;;
+	a29khif)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+    	abacus)
+		basic_machine=abacus-unknown
+		;;
+	adobe68k)
+		basic_machine=m68010-adobe
+		os=-scout
+		;;
+	alliant | fx80)
+		basic_machine=fx80-alliant
+		;;
+	altos | altos3068)
+		basic_machine=m68k-altos
+		;;
+	am29k)
+		basic_machine=a29k-none
+		os=-bsd
+		;;
+	amd64)
+		basic_machine=x86_64-pc
+		;;
+	amd64-*)
+		basic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	amdahl)
+		basic_machine=580-amdahl
+		os=-sysv
+		;;
+	amiga | amiga-*)
+		basic_machine=m68k-unknown
+		;;
+	amigaos | amigados)
+		basic_machine=m68k-unknown
+		os=-amigaos
+		;;
+	amigaunix | amix)
+		basic_machine=m68k-unknown
+		os=-sysv4
+		;;
+	apollo68)
+		basic_machine=m68k-apollo
+		os=-sysv
+		;;
+	apollo68bsd)
+		basic_machine=m68k-apollo
+		os=-bsd
+		;;
+	aux)
+		basic_machine=m68k-apple
+		os=-aux
+		;;
+	balance)
+		basic_machine=ns32k-sequent
+		os=-dynix
+		;;
+	c90)
+		basic_machine=c90-cray
+		os=-unicos
+		;;
+	convex-c1)
+		basic_machine=c1-convex
+		os=-bsd
+		;;
+	convex-c2)
+		basic_machine=c2-convex
+		os=-bsd
+		;;
+	convex-c32)
+		basic_machine=c32-convex
+		os=-bsd
+		;;
+	convex-c34)
+		basic_machine=c34-convex
+		os=-bsd
+		;;
+	convex-c38)
+		basic_machine=c38-convex
+		os=-bsd
+		;;
+	cray | j90)
+		basic_machine=j90-cray
+		os=-unicos
+		;;
+	cr16c)
+		basic_machine=cr16c-unknown
+		os=-elf
+		;;
+	crds | unos)
+		basic_machine=m68k-crds
+		;;
+	cris | cris-* | etrax*)
+		basic_machine=cris-axis
+		;;
+	crx)
+		basic_machine=crx-unknown
+		os=-elf
+		;;
+	da30 | da30-*)
+		basic_machine=m68k-da30
+		;;
+	decstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)
+		basic_machine=mips-dec
+		;;
+	decsystem10* | dec10*)
+		basic_machine=pdp10-dec
+		os=-tops10
+		;;
+	decsystem20* | dec20*)
+		basic_machine=pdp10-dec
+		os=-tops20
+		;;
+	delta | 3300 | motorola-3300 | motorola-delta \
+	      | 3300-motorola | delta-motorola)
+		basic_machine=m68k-motorola
+		;;
+	delta88)
+		basic_machine=m88k-motorola
+		os=-sysv3
+		;;
+	dpx20 | dpx20-*)
+		basic_machine=rs6000-bull
+		os=-bosx
+		;;
+	dpx2* | dpx2*-bull)
+		basic_machine=m68k-bull
+		os=-sysv3
+		;;
+	ebmon29k)
+		basic_machine=a29k-amd
+		os=-ebmon
+		;;
+	elxsi)
+		basic_machine=elxsi-elxsi
+		os=-bsd
+		;;
+	encore | umax | mmax)
+		basic_machine=ns32k-encore
+		;;
+	es1800 | OSE68k | ose68k | ose | OSE)
+		basic_machine=m68k-ericsson
+		os=-ose
+		;;
+	fx2800)
+		basic_machine=i860-alliant
+		;;
+	genix)
+		basic_machine=ns32k-ns
+		;;
+	gmicro)
+		basic_machine=tron-gmicro
+		os=-sysv
+		;;
+	go32)
+		basic_machine=i386-pc
+		os=-go32
+		;;
+	h3050r* | hiux*)
+		basic_machine=hppa1.1-hitachi
+		os=-hiuxwe2
+		;;
+	h8300hms)
+		basic_machine=h8300-hitachi
+		os=-hms
+		;;
+	h8300xray)
+		basic_machine=h8300-hitachi
+		os=-xray
+		;;
+	h8500hms)
+		basic_machine=h8500-hitachi
+		os=-hms
+		;;
+	harris)
+		basic_machine=m88k-harris
+		os=-sysv3
+		;;
+	hp300-*)
+		basic_machine=m68k-hp
+		;;
+	hp300bsd)
+		basic_machine=m68k-hp
+		os=-bsd
+		;;
+	hp300hpux)
+		basic_machine=m68k-hp
+		os=-hpux
+		;;
+	hp3k9[0-9][0-9] | hp9[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k2[0-9][0-9] | hp9k31[0-9])
+		basic_machine=m68000-hp
+		;;
+	hp9k3[2-9][0-9])
+		basic_machine=m68k-hp
+		;;
+	hp9k6[0-9][0-9] | hp6[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hp9k7[0-79][0-9] | hp7[0-79][0-9])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k78[0-9] | hp78[0-9])
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)
+		# FIXME: really hppa2.0-hp
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][13679] | hp8[0-9][13679])
+		basic_machine=hppa1.1-hp
+		;;
+	hp9k8[0-9][0-9] | hp8[0-9][0-9])
+		basic_machine=hppa1.0-hp
+		;;
+	hppa-next)
+		os=-nextstep3
+		;;
+	hppaosf)
+		basic_machine=hppa1.1-hp
+		os=-osf
+		;;
+	hppro)
+		basic_machine=hppa1.1-hp
+		os=-proelf
+		;;
+	i370-ibm* | ibm*)
+		basic_machine=i370-ibm
+		;;
+# I'm not sure what "Sysv32" means.  Should this be sysv3.2?
+	i*86v32)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv32
+		;;
+	i*86v4*)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv4
+		;;
+	i*86v)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-sysv
+		;;
+	i*86sol2)
+		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
+		os=-solaris2
+		;;
+	i386mach)
+		basic_machine=i386-mach
+		os=-mach
+		;;
+	i386-vsta | vsta)
+		basic_machine=i386-unknown
+		os=-vsta
+		;;
+	iris | iris4d)
+		basic_machine=mips-sgi
+		case $os in
+		    -irix*)
+			;;
+		    *)
+			os=-irix4
+			;;
+		esac
+		;;
+	isi68 | isi)
+		basic_machine=m68k-isi
+		os=-sysv
+		;;
+	m88k-omron*)
+		basic_machine=m88k-omron
+		;;
+	magnum | m3230)
+		basic_machine=mips-mips
+		os=-sysv
+		;;
+	merlin)
+		basic_machine=ns32k-utek
+		os=-sysv
+		;;
+	mingw32)
+		basic_machine=i386-pc
+		os=-mingw32
+		;;
+	miniframe)
+		basic_machine=m68000-convergent
+		;;
+	*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)
+		basic_machine=m68k-atari
+		os=-mint
+		;;
+	mips3*-*)
+		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`
+		;;
+	mips3*)
+		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown
+		;;
+	mmix*)
+		basic_machine=mmix-knuth
+		os=-mmixware
+		;;
+	monitor)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	morphos)
+		basic_machine=powerpc-unknown
+		os=-morphos
+		;;
+	msdos)
+		basic_machine=i386-pc
+		os=-msdos
+		;;
+	mvs)
+		basic_machine=i370-ibm
+		os=-mvs
+		;;
+	ncr3000)
+		basic_machine=i486-ncr
+		os=-sysv4
+		;;
+	netbsd386)
+		basic_machine=i386-unknown
+		os=-netbsd
+		;;
+	netwinder)
+		basic_machine=armv4l-rebel
+		os=-linux
+		;;
+	news | news700 | news800 | news900)
+		basic_machine=m68k-sony
+		os=-newsos
+		;;
+	news1000)
+		basic_machine=m68030-sony
+		os=-newsos
+		;;
+	news-3600 | risc-news)
+		basic_machine=mips-sony
+		os=-newsos
+		;;
+	necv70)
+		basic_machine=v70-nec
+		os=-sysv
+		;;
+	next | m*-next )
+		basic_machine=m68k-next
+		case $os in
+		    -nextstep* )
+			;;
+		    -ns2*)
+		      os=-nextstep2
+			;;
+		    *)
+		      os=-nextstep3
+			;;
+		esac
+		;;
+	nh3000)
+		basic_machine=m68k-harris
+		os=-cxux
+		;;
+	nh[45]000)
+		basic_machine=m88k-harris
+		os=-cxux
+		;;
+	nindy960)
+		basic_machine=i960-intel
+		os=-nindy
+		;;
+	mon960)
+		basic_machine=i960-intel
+		os=-mon960
+		;;
+	nonstopux)
+		basic_machine=mips-compaq
+		os=-nonstopux
+		;;
+	np1)
+		basic_machine=np1-gould
+		;;
+	nv1)
+		basic_machine=nv1-cray
+		os=-unicosmp
+		;;
+	nsr-tandem)
+		basic_machine=nsr-tandem
+		;;
+	op50n-* | op60c-*)
+		basic_machine=hppa1.1-oki
+		os=-proelf
+		;;
+	or32 | or32-*)
+		basic_machine=or32-unknown
+		os=-coff
+		;;
+	os400)
+		basic_machine=powerpc-ibm
+		os=-os400
+		;;
+	OSE68000 | ose68000)
+		basic_machine=m68000-ericsson
+		os=-ose
+		;;
+	os68k)
+		basic_machine=m68k-none
+		os=-os68k
+		;;
+	pa-hitachi)
+		basic_machine=hppa1.1-hitachi
+		os=-hiuxwe2
+		;;
+	paragon)
+		basic_machine=i860-intel
+		os=-osf
+		;;
+	pbd)
+		basic_machine=sparc-tti
+		;;
+	pbb)
+		basic_machine=m68k-tti
+		;;
+	pc532 | pc532-*)
+		basic_machine=ns32k-pc532
+		;;
+	pentium | p5 | k5 | k6 | nexgen | viac3)
+		basic_machine=i586-pc
+		;;
+	pentiumpro | p6 | 6x86 | athlon | athlon_*)
+		basic_machine=i686-pc
+		;;
+	pentiumii | pentium2 | pentiumiii | pentium3)
+		basic_machine=i686-pc
+		;;
+	pentium4)
+		basic_machine=i786-pc
+		;;
+	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
+		basic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumpro-* | p6-* | 6x86-* | athlon-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
+		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pentium4-*)
+		basic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	pn)
+		basic_machine=pn-gould
+		;;
+	power)	basic_machine=power-ibm
+		;;
+	ppc)	basic_machine=powerpc-unknown
+		;;
+	ppc-*)	basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppcle | powerpclittle | ppc-le | powerpc-little)
+		basic_machine=powerpcle-unknown
+		;;
+	ppcle-* | powerpclittle-*)
+		basic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64)	basic_machine=powerpc64-unknown
+		;;
+	ppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ppc64le | powerpc64little | ppc64-le | powerpc64-little)
+		basic_machine=powerpc64le-unknown
+		;;
+	ppc64le-* | powerpc64little-*)
+		basic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`
+		;;
+	ps2)
+		basic_machine=i386-ibm
+		;;
+	pw32)
+		basic_machine=i586-unknown
+		os=-pw32
+		;;
+	rom68k)
+		basic_machine=m68k-rom68k
+		os=-coff
+		;;
+	rm[46]00)
+		basic_machine=mips-siemens
+		;;
+	rtpc | rtpc-*)
+		basic_machine=romp-ibm
+		;;
+	s390 | s390-*)
+		basic_machine=s390-ibm
+		;;
+	s390x | s390x-*)
+		basic_machine=s390x-ibm
+		;;
+	sa29200)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	sb1)
+		basic_machine=mipsisa64sb1-unknown
+		;;
+	sb1el)
+		basic_machine=mipsisa64sb1el-unknown
+		;;
+	sei)
+		basic_machine=mips-sei
+		os=-seiux
+		;;
+	sequent)
+		basic_machine=i386-sequent
+		;;
+	sh)
+		basic_machine=sh-hitachi
+		os=-hms
+		;;
+	sh64)
+		basic_machine=sh64-unknown
+		;;
+	sparclite-wrs | simso-wrs)
+		basic_machine=sparclite-wrs
+		os=-vxworks
+		;;
+	sps7)
+		basic_machine=m68k-bull
+		os=-sysv2
+		;;
+	spur)
+		basic_machine=spur-unknown
+		;;
+	st2000)
+		basic_machine=m68k-tandem
+		;;
+	stratus)
+		basic_machine=i860-stratus
+		os=-sysv4
+		;;
+	sun2)
+		basic_machine=m68000-sun
+		;;
+	sun2os3)
+		basic_machine=m68000-sun
+		os=-sunos3
+		;;
+	sun2os4)
+		basic_machine=m68000-sun
+		os=-sunos4
+		;;
+	sun3os3)
+		basic_machine=m68k-sun
+		os=-sunos3
+		;;
+	sun3os4)
+		basic_machine=m68k-sun
+		os=-sunos4
+		;;
+	sun4os3)
+		basic_machine=sparc-sun
+		os=-sunos3
+		;;
+	sun4os4)
+		basic_machine=sparc-sun
+		os=-sunos4
+		;;
+	sun4sol2)
+		basic_machine=sparc-sun
+		os=-solaris2
+		;;
+	sun3 | sun3-*)
+		basic_machine=m68k-sun
+		;;
+	sun4)
+		basic_machine=sparc-sun
+		;;
+	sun386 | sun386i | roadrunner)
+		basic_machine=i386-sun
+		;;
+	sv1)
+		basic_machine=sv1-cray
+		os=-unicos
+		;;
+	symmetry)
+		basic_machine=i386-sequent
+		os=-dynix
+		;;
+	t3e)
+		basic_machine=alphaev5-cray
+		os=-unicos
+		;;
+	t90)
+		basic_machine=t90-cray
+		os=-unicos
+		;;
+	tic54x | c54x*)
+		basic_machine=tic54x-unknown
+		os=-coff
+		;;
+	tic55x | c55x*)
+		basic_machine=tic55x-unknown
+		os=-coff
+		;;
+	tic6x | c6x*)
+		basic_machine=tic6x-unknown
+		os=-coff
+		;;
+	tx39)
+		basic_machine=mipstx39-unknown
+		;;
+	tx39el)
+		basic_machine=mipstx39el-unknown
+		;;
+	toad1)
+		basic_machine=pdp10-xkl
+		os=-tops20
+		;;
+	tower | tower-32)
+		basic_machine=m68k-ncr
+		;;
+	tpf)
+		basic_machine=s390x-ibm
+		os=-tpf
+		;;
+	udi29k)
+		basic_machine=a29k-amd
+		os=-udi
+		;;
+	ultra3)
+		basic_machine=a29k-nyu
+		os=-sym1
+		;;
+	v810 | necv810)
+		basic_machine=v810-nec
+		os=-none
+		;;
+	vaxv)
+		basic_machine=vax-dec
+		os=-sysv
+		;;
+	vms)
+		basic_machine=vax-dec
+		os=-vms
+		;;
+	vpp*|vx|vx-*)
+		basic_machine=f301-fujitsu
+		;;
+	vxworks960)
+		basic_machine=i960-wrs
+		os=-vxworks
+		;;
+	vxworks68)
+		basic_machine=m68k-wrs
+		os=-vxworks
+		;;
+	vxworks29k)
+		basic_machine=a29k-wrs
+		os=-vxworks
+		;;
+	w65*)
+		basic_machine=w65-wdc
+		os=-none
+		;;
+	w89k-*)
+		basic_machine=hppa1.1-winbond
+		os=-proelf
+		;;
+	xps | xps100)
+		basic_machine=xps100-honeywell
+		;;
+	ymp)
+		basic_machine=ymp-cray
+		os=-unicos
+		;;
+	z8k-*-coff)
+		basic_machine=z8k-unknown
+		os=-sim
+		;;
+	none)
+		basic_machine=none-none
+		os=-none
+		;;
+
+# Here we handle the default manufacturer of certain CPU types.  It is in
+# some cases the only manufacturer, in others, it is the most popular.
+	w89k)
+		basic_machine=hppa1.1-winbond
+		;;
+	op50n)
+		basic_machine=hppa1.1-oki
+		;;
+	op60c)
+		basic_machine=hppa1.1-oki
+		;;
+	romp)
+		basic_machine=romp-ibm
+		;;
+	rs6000)
+		basic_machine=rs6000-ibm
+		;;
+	vax)
+		basic_machine=vax-dec
+		;;
+	pdp10)
+		# there are many clones, so DEC is not a safe bet
+		basic_machine=pdp10-unknown
+		;;
+	pdp11)
+		basic_machine=pdp11-dec
+		;;
+	we32k)
+		basic_machine=we32k-att
+		;;
+	sh3 | sh4 | sh[34]eb | sh[1234]le | sh[23]ele)
+		basic_machine=sh-unknown
+		;;
+	sh64)
+		basic_machine=sh64-unknown
+		;;
+	sparc | sparcv9 | sparcv9b)
+		basic_machine=sparc-sun
+		;;
+	cydra)
+		basic_machine=cydra-cydrome
+		;;
+	orion)
+		basic_machine=orion-highlevel
+		;;
+	orion105)
+		basic_machine=clipper-highlevel
+		;;
+	mac | mpw | mac-mpw)
+		basic_machine=m68k-apple
+		;;
+	pmac | pmac-mpw)
+		basic_machine=powerpc-apple
+		;;
+	*-unknown)
+		# Make sure to match an already-canonicalized machine name.
+		;;
+	*)
+		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
+		exit 1
+		;;
+esac
+
+# Here we canonicalize certain aliases for manufacturers.
+case $basic_machine in
+	*-digital*)
+		basic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`
+		;;
+	*-commodore*)
+		basic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`
+		;;
+	*)
+		;;
+esac
+
+# Decode manufacturer-specific aliases for certain operating systems.
+
+if [ x"$os" != x"" ]
+then
+case $os in
+        # First match some system type aliases
+        # that might get confused with valid system types.
+	# -solaris* is a basic system type, with this one exception.
+	-solaris1 | -solaris1.*)
+		os=`echo $os | sed -e 's|solaris1|sunos4|'`
+		;;
+	-solaris)
+		os=-solaris2
+		;;
+	-svr4*)
+		os=-sysv4
+		;;
+	-unixware*)
+		os=-sysv4.2uw
+		;;
+	-gnu/linux*)
+		os=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`
+		;;
+	# First accept the basic system types.
+	# The portable systems comes first.
+	# Each alternative MUST END IN A *, to match a version number.
+	# -sysv* is not here because it comes later, after sysvr4.
+	-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \
+	      | -*vms* | -sco* | -esix* | -isc* | -aix* | -sunos | -sunos[34]*\
+	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -solaris* | -sym* \
+	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
+	      | -aos* \
+	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
+	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
+	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* | -openbsd* \
+	      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \
+	      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
+	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
+	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
+	      | -chorusos* | -chorusrdb* \
+	      | -cygwin* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
+	      | -mingw32* | -linux-gnu* | -linux-uclibc* | -uxpv* | -beos* | -mpeix* | -udk* \
+	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
+	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
+	      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \
+	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
+	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
+	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly*)
+	# Remember, each alternative MUST END IN *, to match a version number.
+		;;
+	-qnx*)
+		case $basic_machine in
+		    x86-* | i*86-*)
+			;;
+		    *)
+			os=-nto$os
+			;;
+		esac
+		;;
+	-nto-qnx*)
+		;;
+	-nto*)
+		os=`echo $os | sed -e 's|nto|nto-qnx|'`
+		;;
+	-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \
+	      | -windows* | -osx | -abug | -netware* | -os9* | -beos* \
+	      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)
+		;;
+	-mac*)
+		os=`echo $os | sed -e 's|mac|macos|'`
+		;;
+	-linux-dietlibc)
+		os=-linux-dietlibc
+		;;
+	-linux*)
+		os=`echo $os | sed -e 's|linux|linux-gnu|'`
+		;;
+	-sunos5*)
+		os=`echo $os | sed -e 's|sunos5|solaris2|'`
+		;;
+	-sunos6*)
+		os=`echo $os | sed -e 's|sunos6|solaris3|'`
+		;;
+	-opened*)
+		os=-openedition
+		;;
+        -os400*)
+		os=-os400
+		;;
+	-wince*)
+		os=-wince
+		;;
+	-osfrose*)
+		os=-osfrose
+		;;
+	-osf*)
+		os=-osf
+		;;
+	-utek*)
+		os=-bsd
+		;;
+	-dynix*)
+		os=-bsd
+		;;
+	-acis*)
+		os=-aos
+		;;
+	-atheos*)
+		os=-atheos
+		;;
+	-syllable*)
+		os=-syllable
+		;;
+	-386bsd)
+		os=-bsd
+		;;
+	-ctix* | -uts*)
+		os=-sysv
+		;;
+	-nova*)
+		os=-rtmk-nova
+		;;
+	-ns2 )
+		os=-nextstep2
+		;;
+	-nsk*)
+		os=-nsk
+		;;
+	# Preserve the version number of sinix5.
+	-sinix5.*)
+		os=`echo $os | sed -e 's|sinix|sysv|'`
+		;;
+	-sinix*)
+		os=-sysv4
+		;;
+        -tpf*)
+		os=-tpf
+		;;
+	-triton*)
+		os=-sysv3
+		;;
+	-oss*)
+		os=-sysv3
+		;;
+	-svr4)
+		os=-sysv4
+		;;
+	-svr3)
+		os=-sysv3
+		;;
+	-sysvr4)
+		os=-sysv4
+		;;
+	# This must come after -sysvr4.
+	-sysv*)
+		;;
+	-ose*)
+		os=-ose
+		;;
+	-es1800*)
+		os=-ose
+		;;
+	-xenix)
+		os=-xenix
+		;;
+	-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+		os=-mint
+		;;
+	-aros*)
+		os=-aros
+		;;
+	-kaos*)
+		os=-kaos
+		;;
+	-none)
+		;;
+	*)
+		# Get rid of the `-' at the beginning of $os.
+		os=`echo $os | sed 's/[^-]*-//'`
+		echo Invalid configuration \`$1\': system \`$os\' not recognized 1>&2
+		exit 1
+		;;
+esac
+else
+
+# Here we handle the default operating systems that come with various machines.
+# The value should be what the vendor currently ships out the door with their
+# machine or put another way, the most popular os provided with the machine.
+
+# Note that if you're going to try to match "-MANUFACTURER" here (say,
+# "-sun"), then you have to tell the case statement up towards the top
+# that MANUFACTURER isn't an operating system.  Otherwise, code above
+# will signal an error saying that MANUFACTURER isn't an operating
+# system, and we'll never get to this point.
+
+case $basic_machine in
+	*-acorn)
+		os=-riscix1.2
+		;;
+	arm*-rebel)
+		os=-linux
+		;;
+	arm*-semi)
+		os=-aout
+		;;
+    c4x-* | tic4x-*)
+        os=-coff
+        ;;
+	# This must come before the *-dec entry.
+	pdp10-*)
+		os=-tops20
+		;;
+	pdp11-*)
+		os=-none
+		;;
+	*-dec | vax-*)
+		os=-ultrix4.2
+		;;
+	m68*-apollo)
+		os=-domain
+		;;
+	i386-sun)
+		os=-sunos4.0.2
+		;;
+	m68000-sun)
+		os=-sunos3
+		# This also exists in the configure program, but was not the
+		# default.
+		# os=-sunos4
+		;;
+	m68*-cisco)
+		os=-aout
+		;;
+	mips*-cisco)
+		os=-elf
+		;;
+	mips*-*)
+		os=-elf
+		;;
+	or32-*)
+		os=-coff
+		;;
+	*-tti)	# must be before sparc entry or we get the wrong os.
+		os=-sysv3
+		;;
+	sparc-* | *-sun)
+		os=-sunos4.1.1
+		;;
+	*-be)
+		os=-beos
+		;;
+	*-ibm)
+		os=-aix
+		;;
+	*-wec)
+		os=-proelf
+		;;
+	*-winbond)
+		os=-proelf
+		;;
+	*-oki)
+		os=-proelf
+		;;
+	*-hp)
+		os=-hpux
+		;;
+	*-hitachi)
+		os=-hiux
+		;;
+	i860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)
+		os=-sysv
+		;;
+	*-cbm)
+		os=-amigaos
+		;;
+	*-dg)
+		os=-dgux
+		;;
+	*-dolphin)
+		os=-sysv3
+		;;
+	m68k-ccur)
+		os=-rtu
+		;;
+	m88k-omron*)
+		os=-luna
+		;;
+	*-next )
+		os=-nextstep
+		;;
+	*-sequent)
+		os=-ptx
+		;;
+	*-crds)
+		os=-unos
+		;;
+	*-ns)
+		os=-genix
+		;;
+	i370-*)
+		os=-mvs
+		;;
+	*-next)
+		os=-nextstep3
+		;;
+	*-gould)
+		os=-sysv
+		;;
+	*-highlevel)
+		os=-bsd
+		;;
+	*-encore)
+		os=-bsd
+		;;
+	*-sgi)
+		os=-irix
+		;;
+	*-siemens)
+		os=-sysv4
+		;;
+	*-masscomp)
+		os=-rtu
+		;;
+	f30[01]-fujitsu | f700-fujitsu)
+		os=-uxpv
+		;;
+	*-rom68k)
+		os=-coff
+		;;
+	*-*bug)
+		os=-coff
+		;;
+	*-apple)
+		os=-macos
+		;;
+	*-atari*)
+		os=-mint
+		;;
+	*)
+		os=-none
+		;;
+esac
+fi
+
+# Here we handle the case where we know the os, and the CPU type, but not the
+# manufacturer.  We pick the logical manufacturer.
+vendor=unknown
+case $basic_machine in
+	*-unknown)
+		case $os in
+			-riscix*)
+				vendor=acorn
+				;;
+			-sunos*)
+				vendor=sun
+				;;
+			-aix*)
+				vendor=ibm
+				;;
+			-beos*)
+				vendor=be
+				;;
+			-hpux*)
+				vendor=hp
+				;;
+			-mpeix*)
+				vendor=hp
+				;;
+			-hiux*)
+				vendor=hitachi
+				;;
+			-unos*)
+				vendor=crds
+				;;
+			-dgux*)
+				vendor=dg
+				;;
+			-luna*)
+				vendor=omron
+				;;
+			-genix*)
+				vendor=ns
+				;;
+			-mvs* | -opened*)
+				vendor=ibm
+				;;
+			-os400*)
+				vendor=ibm
+				;;
+			-ptx*)
+				vendor=sequent
+				;;
+			-tpf*)
+				vendor=ibm
+				;;
+			-vxsim* | -vxworks* | -windiss*)
+				vendor=wrs
+				;;
+			-aux*)
+				vendor=apple
+				;;
+			-hms*)
+				vendor=hitachi
+				;;
+			-mpw* | -macos*)
+				vendor=apple
+				;;
+			-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+				vendor=atari
+				;;
+			-vos*)
+				vendor=stratus
+				;;
+		esac
+		basic_machine=`echo $basic_machine | sed "s/unknown/$vendor/"`
+		;;
+esac
+
+echo $basic_machine$os
+exit 0
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "timestamp='"
+# time-stamp-format: "%:y-%02m-%02d"
+# time-stamp-end: "'"
+# End:
Index: build_tree/bootLoader/tools/depcomp
diff -u /dev/null build_tree/bootLoader/tools/depcomp:1.1.1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/tools/depcomp	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,520 @@
+#! /bin/sh
+# depcomp - compile a program generating dependencies as side-effects
+
+scriptversion=2003-11-08.23
+
+# Copyright (C) 1999, 2000, 2003 Free Software Foundation, Inc.
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2, or (at your option)
+# any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+# 02111-1307, USA.
+
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+# Originally written by Alexandre Oliva <oliva@dcc.unicamp.br>.
+
+case $1 in
+  '')
+     echo "$0: No command.  Try \`$0 --help' for more information." 1>&2
+     exit 1;
+     ;;
+  -h | --h*)
+    cat <<\EOF
+Usage: depcomp [--help] [--version] PROGRAM [ARGS]
+
+Run PROGRAMS ARGS to compile a file, generating dependencies
+as side-effects.
+
+Environment variables:
+  depmode     Dependency tracking mode.
+  source      Source file read by `PROGRAMS ARGS'.
+  object      Object file output by `PROGRAMS ARGS'.
+  depfile     Dependency file to output.
+  tmpdepfile  Temporary file to use when outputing dependencies.
+  libtool     Whether libtool is used (yes/no).
+
+Report bugs to <bug-automake@gnu.org>.
+EOF
+    exit 0
+    ;;
+  -v | --v*)
+    echo "depcomp $scriptversion"
+    exit 0
+    ;;
+esac
+
+if test -z "$depmode" || test -z "$source" || test -z "$object"; then
+  echo "depcomp: Variables source, object and depmode must be set" 1>&2
+  exit 1
+fi
+# `libtool' can also be set to `yes' or `no'.
+
+if test -z "$depfile"; then
+   base=`echo "$object" | sed -e 's,^.*/,,' -e 's,\.\([^.]*\)$,.P\1,'`
+   dir=`echo "$object" | sed 's,/.*$,/,'`
+   if test "$dir" = "$object"; then
+      dir=
+   fi
+   # FIXME: should be _deps on DOS.
+   depfile="$dir.deps/$base"
+fi
+
+tmpdepfile=${tmpdepfile-`echo "$depfile" | sed 's/\.\([^.]*\)$/.T\1/'`}
+
+rm -f "$tmpdepfile"
+
+# Some modes work just like other modes, but use different flags.  We
+# parameterize here, but still list the modes in the big case below,
+# to make depend.m4 easier to write.  Note that we *cannot* use a case
+# here, because this file can only contain one case statement.
+if test "$depmode" = hp; then
+  # HP compiler uses -M and no extra arg.
+  gccflag=-M
+  depmode=gcc
+fi
+
+if test "$depmode" = dashXmstdout; then
+   # This is just like dashmstdout with a different argument.
+   dashmflag=-xM
+   depmode=dashmstdout
+fi
+
+case "$depmode" in
+gcc3)
+## gcc 3 implements dependency tracking that does exactly what
+## we want.  Yay!  Note: for some reason libtool 1.4 doesn't like
+## it if -MD -MP comes after the -MF stuff.  Hmm.
+  "$@" -MT "$object" -MD -MP -MF "$tmpdepfile"
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  mv "$tmpdepfile" "$depfile"
+  ;;
+
+gcc)
+## There are various ways to get dependency output from gcc.  Here's
+## why we pick this rather obscure method:
+## - Don't want to use -MD because we'd like the dependencies to end
+##   up in a subdir.  Having to rename by hand is ugly.
+##   (We might end up doing this anyway to support other compilers.)
+## - The DEPENDENCIES_OUTPUT environment variable makes gcc act like
+##   -MM, not -M (despite what the docs say).
+## - Using -M directly means running the compiler twice (even worse
+##   than renaming).
+  if test -z "$gccflag"; then
+    gccflag=-MD,
+  fi
+  "$@" -Wp,"$gccflag$tmpdepfile"
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  rm -f "$depfile"
+  echo "$object : \\" > "$depfile"
+  alpha=ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
+## The second -e expression handles DOS-style file names with drive letters.
+  sed -e 's/^[^:]*: / /' \
+      -e 's/^['$alpha']:\/[^:]*: / /' < "$tmpdepfile" >> "$depfile"
+## This next piece of magic avoids the `deleted header file' problem.
+## The problem is that when a header file which appears in a .P file
+## is deleted, the dependency causes make to die (because there is
+## typically no way to rebuild the header).  We avoid this by adding
+## dummy dependencies for each header file.  Too bad gcc doesn't do
+## this for us directly.
+  tr ' ' '
+' < "$tmpdepfile" |
+## Some versions of gcc put a space before the `:'.  On the theory
+## that the space means something, we add a space to the output as
+## well.
+## Some versions of the HPUX 10.20 sed can't process this invocation
+## correctly.  Breaking it into two sed invocations is a workaround.
+    sed -e 's/^\\$//' -e '/^$/d' -e '/:$/d' | sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+hp)
+  # This case exists only to let depend.m4 do its work.  It works by
+  # looking at the text of this script.  This case will never be run,
+  # since it is checked for above.
+  exit 1
+  ;;
+
+sgi)
+  if test "$libtool" = yes; then
+    "$@" "-Wp,-MDupdate,$tmpdepfile"
+  else
+    "$@" -MDupdate "$tmpdepfile"
+  fi
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  rm -f "$depfile"
+
+  if test -f "$tmpdepfile"; then  # yes, the sourcefile depend on other files
+    echo "$object : \\" > "$depfile"
+
+    # Clip off the initial element (the dependent).  Don't try to be
+    # clever and replace this with sed code, as IRIX sed won't handle
+    # lines with more than a fixed number of characters (4096 in
+    # IRIX 6.2 sed, 8192 in IRIX 6.5).  We also remove comment lines;
+    # the IRIX cc adds comments like `#:fec' to the end of the
+    # dependency line.
+    tr ' ' '
+' < "$tmpdepfile" \
+    | sed -e 's/^.*\.o://' -e 's/#.*$//' -e '/^$/ d' | \
+    tr '
+' ' ' >> $depfile
+    echo >> $depfile
+
+    # The second pass generates a dummy entry for each header file.
+    tr ' ' '
+' < "$tmpdepfile" \
+   | sed -e 's/^.*\.o://' -e 's/#.*$//' -e '/^$/ d' -e 's/$/:/' \
+   >> $depfile
+  else
+    # The sourcefile does not contain any dependencies, so just
+    # store a dummy comment line, to avoid errors with the Makefile
+    # "include basename.Plo" scheme.
+    echo "#dummy" > "$depfile"
+  fi
+  rm -f "$tmpdepfile"
+  ;;
+
+aix)
+  # The C for AIX Compiler uses -M and outputs the dependencies
+  # in a .u file.  In older versions, this file always lives in the
+  # current directory.  Also, the AIX compiler puts `$object:' at the
+  # start of each line; $object doesn't have directory information.
+  # Version 6 uses the directory in both cases.
+  stripped=`echo "$object" | sed 's/\(.*\)\..*$/\1/'`
+  tmpdepfile="$stripped.u"
+  if test "$libtool" = yes; then
+    "$@" -Wc,-M
+  else
+    "$@" -M
+  fi
+  stat=$?
+
+  if test -f "$tmpdepfile"; then :
+  else
+    stripped=`echo "$stripped" | sed 's,^.*/,,'`
+    tmpdepfile="$stripped.u"
+  fi
+
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+
+  if test -f "$tmpdepfile"; then
+    outname="$stripped.o"
+    # Each line is of the form `foo.o: dependent.h'.
+    # Do two passes, one to just change these to
+    # `$object: dependent.h' and one to simply `dependent.h:'.
+    sed -e "s,^$outname:,$object :," < "$tmpdepfile" > "$depfile"
+    sed -e "s,^$outname: \(.*\)$,\1:," < "$tmpdepfile" >> "$depfile"
+  else
+    # The sourcefile does not contain any dependencies, so just
+    # store a dummy comment line, to avoid errors with the Makefile
+    # "include basename.Plo" scheme.
+    echo "#dummy" > "$depfile"
+  fi
+  rm -f "$tmpdepfile"
+  ;;
+
+icc)
+  # Intel's C compiler understands `-MD -MF file'.  However on
+  #    icc -MD -MF foo.d -c -o sub/foo.o sub/foo.c
+  # ICC 7.0 will fill foo.d with something like
+  #    foo.o: sub/foo.c
+  #    foo.o: sub/foo.h
+  # which is wrong.  We want:
+  #    sub/foo.o: sub/foo.c
+  #    sub/foo.o: sub/foo.h
+  #    sub/foo.c:
+  #    sub/foo.h:
+  # ICC 7.1 will output
+  #    foo.o: sub/foo.c sub/foo.h
+  # and will wrap long lines using \ :
+  #    foo.o: sub/foo.c ... \
+  #     sub/foo.h ... \
+  #     ...
+
+  "$@" -MD -MF "$tmpdepfile"
+  stat=$?
+  if test $stat -eq 0; then :
+  else
+    rm -f "$tmpdepfile"
+    exit $stat
+  fi
+  rm -f "$depfile"
+  # Each line is of the form `foo.o: dependent.h',
+  # or `foo.o: dep1.h dep2.h \', or ` dep3.h dep4.h \'.
+  # Do two passes, one to just change these to
+  # `$object: dependent.h' and one to simply `dependent.h:'.
+  sed "s,^[^:]*:,$object :," < "$tmpdepfile" > "$depfile"
+  # Some versions of the HPUX 10.20 sed can't process this invocation
+  # correctly.  Breaking it into two sed invocations is a workaround.
+  sed 's,^[^:]*: \(.*\)$,\1,;s/^\\$//;/^$/d;/:$/d' < "$tmpdepfile" |
+    sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+tru64)
+   # The Tru64 compiler uses -MD to generate dependencies as a side
+   # effect.  `cc -MD -o foo.o ...' puts the dependencies into `foo.o.d'.
+   # At least on Alpha/Redhat 6.1, Compaq CCC V6.2-504 seems to put
+   # dependencies in `foo.d' instead, so we check for that too.
+   # Subdirectories are respected.
+   dir=`echo "$object" | sed -e 's|/[^/]*$|/|'`
+   test "x$dir" = "x$object" && dir=
+   base=`echo "$object" | sed -e 's|^.*/||' -e 's/\.o$//' -e 's/\.lo$//'`
+
+   if test "$libtool" = yes; then
+      tmpdepfile1="$dir.libs/$base.lo.d"
+      tmpdepfile2="$dir.libs/$base.d"
+      "$@" -Wc,-MD
+   else
+      tmpdepfile1="$dir$base.o.d"
+      tmpdepfile2="$dir$base.d"
+      "$@" -MD
+   fi
+
+   stat=$?
+   if test $stat -eq 0; then :
+   else
+      rm -f "$tmpdepfile1" "$tmpdepfile2"
+      exit $stat
+   fi
+
+   if test -f "$tmpdepfile1"; then
+      tmpdepfile="$tmpdepfile1"
+   else
+      tmpdepfile="$tmpdepfile2"
+   fi
+   if test -f "$tmpdepfile"; then
+      sed -e "s,^.*\.[a-z]*:,$object:," < "$tmpdepfile" > "$depfile"
+      # That's a tab and a space in the [].
+      sed -e 's,^.*\.[a-z]*:[	 ]*,,' -e 's,$,:,' < "$tmpdepfile" >> "$depfile"
+   else
+      echo "#dummy" > "$depfile"
+   fi
+   rm -f "$tmpdepfile"
+   ;;
+
+#nosideeffect)
+  # This comment above is used by automake to tell side-effect
+  # dependency tracking mechanisms from slower ones.
+
+dashmstdout)
+  # Important note: in order to support this mode, a compiler *must*
+  # always write the preprocessed file to stdout, regardless of -o.
+  "$@" || exit $?
+
+  # Remove the call to Libtool.
+  if test "$libtool" = yes; then
+    while test $1 != '--mode=compile'; do
+      shift
+    done
+    shift
+  fi
+
+  # Remove `-o $object'.
+  IFS=" "
+  for arg
+  do
+    case $arg in
+    -o)
+      shift
+      ;;
+    $object)
+      shift
+      ;;
+    *)
+      set fnord "$@" "$arg"
+      shift # fnord
+      shift # $arg
+      ;;
+    esac
+  done
+
+  test -z "$dashmflag" && dashmflag=-M
+  # Require at least two characters before searching for `:'
+  # in the target name.  This is to cope with DOS-style filenames:
+  # a dependency such as `c:/foo/bar' could be seen as target `c' otherwise.
+  "$@" $dashmflag |
+    sed 's:^[  ]*[^: ][^:][^:]*\:[    ]*:'"$object"'\: :' > "$tmpdepfile"
+  rm -f "$depfile"
+  cat < "$tmpdepfile" > "$depfile"
+  tr ' ' '
+' < "$tmpdepfile" | \
+## Some versions of the HPUX 10.20 sed can't process this invocation
+## correctly.  Breaking it into two sed invocations is a workaround.
+    sed -e 's/^\\$//' -e '/^$/d' -e '/:$/d' | sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+dashXmstdout)
+  # This case only exists to satisfy depend.m4.  It is never actually
+  # run, as this mode is specially recognized in the preamble.
+  exit 1
+  ;;
+
+makedepend)
+  "$@" || exit $?
+  # Remove any Libtool call
+  if test "$libtool" = yes; then
+    while test $1 != '--mode=compile'; do
+      shift
+    done
+    shift
+  fi
+  # X makedepend
+  shift
+  cleared=no
+  for arg in "$@"; do
+    case $cleared in
+    no)
+      set ""; shift
+      cleared=yes ;;
+    esac
+    case "$arg" in
+    -D*|-I*)
+      set fnord "$@" "$arg"; shift ;;
+    # Strip any option that makedepend may not understand.  Remove
+    # the object too, otherwise makedepend will parse it as a source file.
+    -*|$object)
+      ;;
+    *)
+      set fnord "$@" "$arg"; shift ;;
+    esac
+  done
+  obj_suffix="`echo $object | sed 's/^.*\././'`"
+  touch "$tmpdepfile"
+  ${MAKEDEPEND-makedepend} -o"$obj_suffix" -f"$tmpdepfile" "$@"
+  rm -f "$depfile"
+  cat < "$tmpdepfile" > "$depfile"
+  sed '1,2d' "$tmpdepfile" | tr ' ' '
+' | \
+## Some versions of the HPUX 10.20 sed can't process this invocation
+## correctly.  Breaking it into two sed invocations is a workaround.
+    sed -e 's/^\\$//' -e '/^$/d' -e '/:$/d' | sed -e 's/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile" "$tmpdepfile".bak
+  ;;
+
+cpp)
+  # Important note: in order to support this mode, a compiler *must*
+  # always write the preprocessed file to stdout.
+  "$@" || exit $?
+
+  # Remove the call to Libtool.
+  if test "$libtool" = yes; then
+    while test $1 != '--mode=compile'; do
+      shift
+    done
+    shift
+  fi
+
+  # Remove `-o $object'.
+  IFS=" "
+  for arg
+  do
+    case $arg in
+    -o)
+      shift
+      ;;
+    $object)
+      shift
+      ;;
+    *)
+      set fnord "$@" "$arg"
+      shift # fnord
+      shift # $arg
+      ;;
+    esac
+  done
+
+  "$@" -E |
+    sed -n '/^# [0-9][0-9]* "\([^"]*\)".*/ s:: \1 \\:p' |
+    sed '$ s: \\$::' > "$tmpdepfile"
+  rm -f "$depfile"
+  echo "$object : \\" > "$depfile"
+  cat < "$tmpdepfile" >> "$depfile"
+  sed < "$tmpdepfile" '/^$/d;s/^ //;s/ \\$//;s/$/ :/' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+msvisualcpp)
+  # Important note: in order to support this mode, a compiler *must*
+  # always write the preprocessed file to stdout, regardless of -o,
+  # because we must use -o when running libtool.
+  "$@" || exit $?
+  IFS=" "
+  for arg
+  do
+    case "$arg" in
+    "-Gm"|"/Gm"|"-Gi"|"/Gi"|"-ZI"|"/ZI")
+	set fnord "$@"
+	shift
+	shift
+	;;
+    *)
+	set fnord "$@" "$arg"
+	shift
+	shift
+	;;
+    esac
+  done
+  "$@" -E |
+  sed -n '/^#line [0-9][0-9]* "\([^"]*\)"/ s::echo "`cygpath -u \\"\1\\"`":p' | sort | uniq > "$tmpdepfile"
+  rm -f "$depfile"
+  echo "$object : \\" > "$depfile"
+  . "$tmpdepfile" | sed 's% %\\ %g' | sed -n '/^\(.*\)$/ s::	\1 \\:p' >> "$depfile"
+  echo "	" >> "$depfile"
+  . "$tmpdepfile" | sed 's% %\\ %g' | sed -n '/^\(.*\)$/ s::\1\::p' >> "$depfile"
+  rm -f "$tmpdepfile"
+  ;;
+
+none)
+  exec "$@"
+  ;;
+
+*)
+  echo "Unknown depmode $depmode" 1>&2
+  exit 1
+  ;;
+esac
+
+exit 0
+
+# Local Variables:
+# mode: shell-script
+# sh-indentation: 2
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-end: "$"
+# End:
Index: build_tree/bootLoader/tools/install-sh
diff -u /dev/null build_tree/bootLoader/tools/install-sh:1.1.1.2
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/tools/install-sh	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,316 @@
+#!/bin/sh
+# install - install a program, script, or datafile
+
+scriptversion=2004-02-15.20
+
+# This originates from X11R5 (mit/util/scripts/install.sh), which was
+# later released in X11R6 (xc/config/util/install.sh) with the
+# following copyright and license.
+#
+# Copyright (C) 1994 X Consortium
+#
+# Permission is hereby granted, free of charge, to any person obtaining a copy
+# of this software and associated documentation files (the "Software"), to
+# deal in the Software without restriction, including without limitation the
+# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
+# sell copies of the Software, and to permit persons to whom the Software is
+# furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included in
+# all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
+# X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
+# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-
+# TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
+#
+# Except as contained in this notice, the name of the X Consortium shall not
+# be used in advertising or otherwise to promote the sale, use or other deal-
+# ings in this Software without prior written authorization from the X Consor-
+# tium.
+#
+#
+# FSF changes to this file are in the public domain.
+#
+# Calling this script install-sh is preferred over install.sh, to prevent
+# `make' implicit rules from creating a file called install from it
+# when there is no Makefile.
+#
+# This script is compatible with the BSD install script, but was written
+# from scratch.  It can only install one file at a time, a restriction
+# shared with many OS's install programs.
+
+# set DOITPROG to echo to test this script
+
+# Don't use :- since 4.3BSD and earlier shells don't like it.
+doit="${DOITPROG-}"
+
+# put in absolute paths if you don't have them in your path; or use env. vars.
+
+mvprog="${MVPROG-mv}"
+cpprog="${CPPROG-cp}"
+chmodprog="${CHMODPROG-chmod}"
+chownprog="${CHOWNPROG-chown}"
+chgrpprog="${CHGRPPROG-chgrp}"
+stripprog="${STRIPPROG-strip}"
+rmprog="${RMPROG-rm}"
+mkdirprog="${MKDIRPROG-mkdir}"
+
+transformbasename=
+transform_arg=
+instcmd="$mvprog"
+chmodcmd="$chmodprog 0755"
+chowncmd=
+chgrpcmd=
+stripcmd=
+rmcmd="$rmprog -f"
+mvcmd="$mvprog"
+src=
+dst=
+dir_arg=
+
+usage="Usage: $0 [OPTION]... SRCFILE DSTFILE
+   or: $0 [OPTION]... SRCFILES... DIRECTORY
+   or: $0 -d DIRECTORIES...
+
+In the first form, install SRCFILE to DSTFILE, removing SRCFILE by default.
+In the second, create the directory path DIR.
+
+Options:
+-b=TRANSFORMBASENAME
+-c         copy source (using $cpprog) instead of moving (using $mvprog).
+-d         create directories instead of installing files.
+-g GROUP   $chgrp installed files to GROUP.
+-m MODE    $chmod installed files to MODE.
+-o USER    $chown installed files to USER.
+-s         strip installed files (using $stripprog).
+-t=TRANSFORM
+--help     display this help and exit.
+--version  display version info and exit.
+
+Environment variables override the default commands:
+  CHGRPPROG CHMODPROG CHOWNPROG CPPROG MKDIRPROG MVPROG RMPROG STRIPPROG
+"
+
+while test -n "$1"; do
+  case $1 in
+    -b=*) transformbasename=`echo $1 | sed 's/-b=//'`
+        shift
+        continue;;
+
+    -c) instcmd=$cpprog
+        shift
+        continue;;
+
+    -d) dir_arg=true
+        shift
+        continue;;
+
+    -g) chgrpcmd="$chgrpprog $2"
+        shift
+        shift
+        continue;;
+
+    --help) echo "$usage"; exit 0;;
+
+    -m) chmodcmd="$chmodprog $2"
+        shift
+        shift
+        continue;;
+
+    -o) chowncmd="$chownprog $2"
+        shift
+        shift
+        continue;;
+
+    -s) stripcmd=$stripprog
+        shift
+        continue;;
+
+    -t=*) transformarg=`echo $1 | sed 's/-t=//'`
+        shift
+        continue;;
+
+    --version) echo "$0 $scriptversion"; exit 0;;
+
+    *)  # When -d is used, all remaining arguments are directories to create.
+	test -n "$dir_arg" && break
+        # Otherwise, the last argument is the destination.  Remove it from $@.
+	for arg
+	do
+          if test -n "$dstarg"; then
+	    # $@ is not empty: it contains at least $arg.
+	    set fnord "$@" "$dstarg"
+	    shift # fnord
+	  fi
+	  shift # arg
+	  dstarg=$arg
+	done
+	break;;
+  esac
+done
+
+if test -z "$1"; then
+  if test -z "$dir_arg"; then
+    echo "$0: no input file specified." >&2
+    exit 1
+  fi
+  # It's OK to call `install-sh -d' without argument.
+  # This can happen when creating conditional directories.
+  exit 0
+fi
+
+for src
+do
+  # Protect names starting with `-'.
+  case $src in
+    -*) src=./$src ;;
+  esac
+
+  if test -n "$dir_arg"; then
+    dst=$src
+    src=
+
+    if test -d "$dst"; then
+      instcmd=:
+      chmodcmd=
+    else
+      instcmd=$mkdirprog
+    fi
+  else
+    # Waiting for this to be detected by the "$instcmd $src $dsttmp" command
+    # might cause directories to be created, which would be especially bad
+    # if $src (and thus $dsttmp) contains '*'.
+    if test ! -f "$src" && test ! -d "$src"; then
+      echo "$0: $src does not exist." >&2
+      exit 1
+    fi
+
+    if test -z "$dstarg"; then
+      echo "$0: no destination specified." >&2
+      exit 1
+    fi
+
+    dst=$dstarg
+    # Protect names starting with `-'.
+    case $dst in
+      -*) dst=./$dst ;;
+    esac
+
+    # If destination is a directory, append the input filename; won't work
+    # if double slashes aren't ignored.
+    if test -d "$dst"; then
+      dst=$dst/`basename "$src"`
+    fi
+  fi
+
+  # This sed command emulates the dirname command.
+  dstdir=`echo "$dst" | sed -e 's,[^/]*$,,;s,/$,,;s,^$,.,'`
+
+  # Make sure that the destination directory exists.
+
+  # Skip lots of stat calls in the usual case.
+  if test ! -d "$dstdir"; then
+    defaultIFS='
+	 '
+    IFS="${IFS-$defaultIFS}"
+
+    oIFS=$IFS
+    # Some sh's can't handle IFS=/ for some reason.
+    IFS='%'
+    set - `echo "$dstdir" | sed -e 's@/@%@g' -e 's@^%@/@'`
+    IFS=$oIFS
+
+    pathcomp=
+
+    while test $# -ne 0 ; do
+      pathcomp=$pathcomp$1
+      shift
+      if test ! -d "$pathcomp"; then
+        $mkdirprog "$pathcomp" || lasterr=$?
+	# mkdir can fail with a `File exist' error in case several
+	# install-sh are creating the directory concurrently.  This
+	# is OK.
+	test ! -d "$pathcomp" && { (exit ${lasterr-1}); exit; }
+      fi
+      pathcomp=$pathcomp/
+    done
+  fi
+
+  if test -n "$dir_arg"; then
+    $doit $instcmd "$dst" \
+      && { test -z "$chowncmd" || $doit $chowncmd "$dst"; } \
+      && { test -z "$chgrpcmd" || $doit $chgrpcmd "$dst"; } \
+      && { test -z "$stripcmd" || $doit $stripcmd "$dst"; } \
+      && { test -z "$chmodcmd" || $doit $chmodcmd "$dst"; }
+
+  else
+    # If we're going to rename the final executable, determine the name now.
+    if test -z "$transformarg"; then
+      dstfile=`basename "$dst"`
+    else
+      dstfile=`basename "$dst" $transformbasename \
+               | sed $transformarg`$transformbasename
+    fi
+
+    # don't allow the sed command to completely eliminate the filename.
+    test -z "$dstfile" && dstfile=`basename "$dst"`
+
+    # Make a couple of temp file names in the proper directory.
+    dsttmp=$dstdir/_inst.$$_
+    rmtmp=$dstdir/_rm.$$_
+
+    # Trap to clean up those temp files at exit.
+    trap 'status=$?; rm -f "$dsttmp" "$rmtmp" && exit $status' 0
+    trap '(exit $?); exit' 1 2 13 15
+
+    # Move or copy the file name to the temp name
+    $doit $instcmd "$src" "$dsttmp" &&
+
+    # and set any options; do chmod last to preserve setuid bits.
+    #
+    # If any of these fail, we abort the whole thing.  If we want to
+    # ignore errors from any of these, just make sure not to ignore
+    # errors from the above "$doit $instcmd $src $dsttmp" command.
+    #
+    { test -z "$chowncmd" || $doit $chowncmd "$dsttmp"; } \
+      && { test -z "$chgrpcmd" || $doit $chgrpcmd "$dsttmp"; } \
+      && { test -z "$stripcmd" || $doit $stripcmd "$dsttmp"; } \
+      && { test -z "$chmodcmd" || $doit $chmodcmd "$dsttmp"; } &&
+
+    # Now remove or move aside any old file at destination location.  We
+    # try this two ways since rm can't unlink itself on some systems and
+    # the destination file might be busy for other reasons.  In this case,
+    # the final cleanup might fail but the new file should still install
+    # successfully.
+    {
+      if test -f "$dstdir/$dstfile"; then
+        $doit $rmcmd -f "$dstdir/$dstfile" 2>/dev/null \
+        || $doit $mvcmd -f "$dstdir/$dstfile" "$rmtmp" 2>/dev/null \
+        || {
+	  echo "$0: cannot unlink or rename $dstdir/$dstfile" >&2
+	  (exit 1); exit
+        }
+      else
+        :
+      fi
+    } &&
+
+    # Now rename the file to the real destination.
+    $doit $mvcmd "$dsttmp" "$dstdir/$dstfile"
+  fi || { (exit 1); exit; }
+done
+
+# The final little trick to "correctly" pass the exit status to the exit trap.
+{
+  (exit 0); exit
+}
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-end: "$"
+# End:
Index: build_tree/bootLoader/tools/missing
diff -u /dev/null build_tree/bootLoader/tools/missing:1.1.1.2
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/tools/missing	Fri Nov  9 10:37:08 2007
@@ -0,0 +1,360 @@
+#! /bin/sh
+# Common stub for a few missing GNU programs while installing.
+
+scriptversion=2003-09-02.23
+
+# Copyright (C) 1996, 1997, 1999, 2000, 2002, 2003 
+#   Free Software Foundation, Inc.
+# Originally by Fran,cois Pinard <pinard@iro.umontreal.ca>, 1996.
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2, or (at your option)
+# any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+# 02111-1307, USA.
+
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program that contains a
+# configuration script generated by Autoconf, you may include it under
+# the same distribution terms that you use for the rest of that program.
+
+if test $# -eq 0; then
+  echo 1>&2 "Try \`$0 --help' for more information"
+  exit 1
+fi
+
+run=:
+
+# In the cases where this matters, `missing' is being run in the
+# srcdir already.
+if test -f configure.ac; then
+  configure_ac=configure.ac
+else
+  configure_ac=configure.in
+fi
+
+msg="missing on your system"
+
+case "$1" in
+--run)
+  # Try to run requested program, and just exit if it succeeds.
+  run=
+  shift
+  "$@" && exit 0
+  # Exit code 63 means version mismatch.  This often happens
+  # when the user try to use an ancient version of a tool on
+  # a file that requires a minimum version.  In this case we
+  # we should proceed has if the program had been absent, or
+  # if --run hadn't been passed.
+  if test $? = 63; then
+    run=:
+    msg="probably too old"
+  fi
+  ;;
+esac
+
+# If it does not exist, or fails to run (possibly an outdated version),
+# try to emulate it.
+case "$1" in
+
+  -h|--h|--he|--hel|--help)
+    echo "\
+$0 [OPTION]... PROGRAM [ARGUMENT]...
+
+Handle \`PROGRAM [ARGUMENT]...' for when PROGRAM is missing, or return an
+error status if there is no known handling for PROGRAM.
+
+Options:
+  -h, --help      display this help and exit
+  -v, --version   output version information and exit
+  --run           try to run the given command, and emulate it if it fails
+
+Supported PROGRAM values:
+  aclocal      touch file \`aclocal.m4'
+  autoconf     touch file \`configure'
+  autoheader   touch file \`config.h.in'
+  automake     touch all \`Makefile.in' files
+  bison        create \`y.tab.[ch]', if possible, from existing .[ch]
+  flex         create \`lex.yy.c', if possible, from existing .c
+  help2man     touch the output file
+  lex          create \`lex.yy.c', if possible, from existing .c
+  makeinfo     touch the output file
+  tar          try tar, gnutar, gtar, then tar without non-portable flags
+  yacc         create \`y.tab.[ch]', if possible, from existing .[ch]
+
+Send bug reports to <bug-automake@gnu.org>."
+    ;;
+
+  -v|--v|--ve|--ver|--vers|--versi|--versio|--version)
+    echo "missing $scriptversion (GNU Automake)"
+    ;;
+
+  -*)
+    echo 1>&2 "$0: Unknown \`$1' option"
+    echo 1>&2 "Try \`$0 --help' for more information"
+    exit 1
+    ;;
+
+  aclocal*)
+    if test -z "$run" && ($1 --version) > /dev/null 2>&1; then
+       # We have it, but it failed.
+       exit 1
+    fi
+
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`acinclude.m4' or \`${configure_ac}'.  You might want
+         to install the \`Automake' and \`Perl' packages.  Grab them from
+         any GNU archive site."
+    touch aclocal.m4
+    ;;
+
+  autoconf)
+    if test -z "$run" && ($1 --version) > /dev/null 2>&1; then
+       # We have it, but it failed.
+       exit 1
+    fi
+
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`${configure_ac}'.  You might want to install the
+         \`Autoconf' and \`GNU m4' packages.  Grab them from any GNU
+         archive site."
+    touch configure
+    ;;
+
+  autoheader)
+    if test -z "$run" && ($1 --version) > /dev/null 2>&1; then
+       # We have it, but it failed.
+       exit 1
+    fi
+
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`acconfig.h' or \`${configure_ac}'.  You might want
+         to install the \`Autoconf' and \`GNU m4' packages.  Grab them
+         from any GNU archive site."
+    files=`sed -n 's/^[ ]*A[CM]_CONFIG_HEADER(\([^)]*\)).*/\1/p' ${configure_ac}`
+    test -z "$files" && files="config.h"
+    touch_files=
+    for f in $files; do
+      case "$f" in
+      *:*) touch_files="$touch_files "`echo "$f" |
+				       sed -e 's/^[^:]*://' -e 's/:.*//'`;;
+      *) touch_files="$touch_files $f.in";;
+      esac
+    done
+    touch $touch_files
+    ;;
+
+  automake*)
+    if test -z "$run" && ($1 --version) > /dev/null 2>&1; then
+       # We have it, but it failed.
+       exit 1
+    fi
+
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified \`Makefile.am', \`acinclude.m4' or \`${configure_ac}'.
+         You might want to install the \`Automake' and \`Perl' packages.
+         Grab them from any GNU archive site."
+    find . -type f -name Makefile.am -print |
+	   sed 's/\.am$/.in/' |
+	   while read f; do touch "$f"; done
+    ;;
+
+  autom4te)
+    if test -z "$run" && ($1 --version) > /dev/null 2>&1; then
+       # We have it, but it failed.
+       exit 1
+    fi
+
+    echo 1>&2 "\
+WARNING: \`$1' is needed, but is $msg.
+         You might have modified some files without having the
+         proper tools for further handling them.
+         You can get \`$1' as part of \`Autoconf' from any GNU
+         archive site."
+
+    file=`echo "$*" | sed -n 's/.*--output[ =]*\([^ ]*\).*/\1/p'`
+    test -z "$file" && file=`echo "$*" | sed -n 's/.*-o[ ]*\([^ ]*\).*/\1/p'`
+    if test -f "$file"; then
+	touch $file
+    else
+	test -z "$file" || exec >$file
+	echo "#! /bin/sh"
+	echo "# Created by GNU Automake missing as a replacement of"
+	echo "#  $ $@"
+	echo "exit 0"
+	chmod +x $file
+	exit 1
+    fi
+    ;;
+
+  bison|yacc)
+    echo 1>&2 "\
+WARNING: \`$1' $msg.  You should only need it if
+         you modified a \`.y' file.  You may need the \`Bison' package
+         in order for those modifications to take effect.  You can get
+         \`Bison' from any GNU archive site."
+    rm -f y.tab.c y.tab.h
+    if [ $# -ne 1 ]; then
+        eval LASTARG="\${$#}"
+	case "$LASTARG" in
+	*.y)
+	    SRCFILE=`echo "$LASTARG" | sed 's/y$/c/'`
+	    if [ -f "$SRCFILE" ]; then
+	         cp "$SRCFILE" y.tab.c
+	    fi
+	    SRCFILE=`echo "$LASTARG" | sed 's/y$/h/'`
+	    if [ -f "$SRCFILE" ]; then
+	         cp "$SRCFILE" y.tab.h
+	    fi
+	  ;;
+	esac
+    fi
+    if [ ! -f y.tab.h ]; then
+	echo >y.tab.h
+    fi
+    if [ ! -f y.tab.c ]; then
+	echo 'main() { return 0; }' >y.tab.c
+    fi
+    ;;
+
+  lex|flex)
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified a \`.l' file.  You may need the \`Flex' package
+         in order for those modifications to take effect.  You can get
+         \`Flex' from any GNU archive site."
+    rm -f lex.yy.c
+    if [ $# -ne 1 ]; then
+        eval LASTARG="\${$#}"
+	case "$LASTARG" in
+	*.l)
+	    SRCFILE=`echo "$LASTARG" | sed 's/l$/c/'`
+	    if [ -f "$SRCFILE" ]; then
+	         cp "$SRCFILE" lex.yy.c
+	    fi
+	  ;;
+	esac
+    fi
+    if [ ! -f lex.yy.c ]; then
+	echo 'main() { return 0; }' >lex.yy.c
+    fi
+    ;;
+
+  help2man)
+    if test -z "$run" && ($1 --version) > /dev/null 2>&1; then
+       # We have it, but it failed.
+       exit 1
+    fi
+
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+	 you modified a dependency of a manual page.  You may need the
+	 \`Help2man' package in order for those modifications to take
+	 effect.  You can get \`Help2man' from any GNU archive site."
+
+    file=`echo "$*" | sed -n 's/.*-o \([^ ]*\).*/\1/p'`
+    if test -z "$file"; then
+	file=`echo "$*" | sed -n 's/.*--output=\([^ ]*\).*/\1/p'`
+    fi
+    if [ -f "$file" ]; then
+	touch $file
+    else
+	test -z "$file" || exec >$file
+	echo ".ab help2man is required to generate this page"
+	exit 1
+    fi
+    ;;
+
+  makeinfo)
+    if test -z "$run" && (makeinfo --version) > /dev/null 2>&1; then
+       # We have makeinfo, but it failed.
+       exit 1
+    fi
+
+    echo 1>&2 "\
+WARNING: \`$1' is $msg.  You should only need it if
+         you modified a \`.texi' or \`.texinfo' file, or any other file
+         indirectly affecting the aspect of the manual.  The spurious
+         call might also be the consequence of using a buggy \`make' (AIX,
+         DU, IRIX).  You might want to install the \`Texinfo' package or
+         the \`GNU make' package.  Grab either from any GNU archive site."
+    file=`echo "$*" | sed -n 's/.*-o \([^ ]*\).*/\1/p'`
+    if test -z "$file"; then
+      file=`echo "$*" | sed 's/.* \([^ ]*\) *$/\1/'`
+      file=`sed -n '/^@setfilename/ { s/.* \([^ ]*\) *$/\1/; p; q; }' $file`
+    fi
+    touch $file
+    ;;
+
+  tar)
+    shift
+    if test -n "$run"; then
+      echo 1>&2 "ERROR: \`tar' requires --run"
+      exit 1
+    fi
+
+    # We have already tried tar in the generic part.
+    # Look for gnutar/gtar before invocation to avoid ugly error
+    # messages.
+    if (gnutar --version > /dev/null 2>&1); then
+       gnutar "$@" && exit 0
+    fi
+    if (gtar --version > /dev/null 2>&1); then
+       gtar "$@" && exit 0
+    fi
+    firstarg="$1"
+    if shift; then
+	case "$firstarg" in
+	*o*)
+	    firstarg=`echo "$firstarg" | sed s/o//`
+	    tar "$firstarg" "$@" && exit 0
+	    ;;
+	esac
+	case "$firstarg" in
+	*h*)
+	    firstarg=`echo "$firstarg" | sed s/h//`
+	    tar "$firstarg" "$@" && exit 0
+	    ;;
+	esac
+    fi
+
+    echo 1>&2 "\
+WARNING: I can't seem to be able to run \`tar' with the given arguments.
+         You may want to install GNU tar or Free paxutils, or check the
+         command line arguments."
+    exit 1
+    ;;
+
+  *)
+    echo 1>&2 "\
+WARNING: \`$1' is needed, and is $msg.
+         You might have modified some files without having the
+         proper tools for further handling them.  Check the \`README' file,
+         it often tells you about the needed prerequisites for installing
+         this package.  You may also peek at any GNU archive site, in case
+         some other package would contain this missing \`$1' program."
+    exit 1
+    ;;
+esac
+
+exit 0
+
+# Local variables:
+# eval: (add-hook 'write-file-hooks 'time-stamp)
+# time-stamp-start: "scriptversion="
+# time-stamp-format: "%:y-%02m-%02d.%02H"
+# time-stamp-end: "$"
+# End:
Index: build_tree/bootLoader/utils/Makefile.am
diff -u build_tree/bootLoader/utils/Makefile.am:1.1.1.2 build_tree/bootLoader/utils/Makefile.am:1.1.1.3
--- build_tree/bootLoader/utils/Makefile.am:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/utils/Makefile.am	Fri Nov  9 10:37:08 2007
@@ -5,8 +5,7 @@
 
 SUBDIRS		= \
 	build \
-	mkparamblock \
-	test
+	mkparamblock
 
 
 CLEANFILES	= *~
Index: build_tree/bootLoader/utils/Makefile.in
diff -u /dev/null build_tree/bootLoader/utils/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/utils/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,470 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# Process this file with automake to produce Makefile.in -*- makefile -*-
+#
+# $Id: Makefile.am,v 1.7 2002/05/25 17:09:57 erikm Exp $
+# 
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = utils
+DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
+	html-recursive info-recursive install-data-recursive \
+	install-exec-recursive install-info-recursive \
+	install-recursive installcheck-recursive installdirs-recursive \
+	pdf-recursive ps-recursive uninstall-info-recursive \
+	uninstall-recursive
+ETAGS = etags
+CTAGS = ctags
+DIST_SUBDIRS = $(SUBDIRS)
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+SUBDIRS = \
+	build \
+	mkparamblock \
+
+CLEANFILES = *~
+EXTRA_DIST = \
+	README \
+	upload.sh
+
+all: all-recursive
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  utils/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  utils/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+
+# This directory's subdirectories are mostly independent; you can cd
+# into them and run `make' without going through this Makefile.
+# To change the values of `make' variables: instead of editing Makefiles,
+# (1) if the variable is set in `config.status', edit `config.status'
+#     (which will cause the Makefiles to be regenerated when you run `make');
+# (2) otherwise, pass the desired values on the `make' command line.
+$(RECURSIVE_TARGETS):
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	target=`echo $@ | sed s/-recursive//`; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    dot_seen=yes; \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done; \
+	if test "$$dot_seen" = "no"; then \
+	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
+	fi; test -z "$$fail"
+
+mostlyclean-recursive clean-recursive distclean-recursive \
+maintainer-clean-recursive:
+	@set fnord $$MAKEFLAGS; amf=$$2; \
+	dot_seen=no; \
+	case "$@" in \
+	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
+	  *) list='$(SUBDIRS)' ;; \
+	esac; \
+	rev=''; for subdir in $$list; do \
+	  if test "$$subdir" = "."; then :; else \
+	    rev="$$subdir $$rev"; \
+	  fi; \
+	done; \
+	rev="$$rev ."; \
+	target=`echo $@ | sed s/-recursive//`; \
+	for subdir in $$rev; do \
+	  echo "Making $$target in $$subdir"; \
+	  if test "$$subdir" = "."; then \
+	    local_target="$$target-am"; \
+	  else \
+	    local_target="$$target"; \
+	  fi; \
+	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
+	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
+	done && test -z "$$fail"
+tags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
+	done
+ctags-recursive:
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
+	done
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	if (etags --etags-include --version) >/dev/null 2>&1; then \
+	  include_option=--etags-include; \
+	else \
+	  include_option=--include; \
+	fi; \
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -f $$subdir/TAGS && \
+	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
+	  fi; \
+	done; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+	list='$(SUBDIRS)'; for subdir in $$list; do \
+	  if test "$$subdir" = .; then :; else \
+	    test -d "$(distdir)/$$subdir" \
+	    || mkdir "$(distdir)/$$subdir" \
+	    || exit 1; \
+	    (cd $$subdir && \
+	      $(MAKE) $(AM_MAKEFLAGS) \
+	        top_distdir="../$(top_distdir)" \
+	        distdir="../$(distdir)/$$subdir" \
+	        distdir) \
+	      || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-recursive
+all-am: Makefile
+installdirs: installdirs-recursive
+installdirs-am:
+install: install-recursive
+install-exec: install-exec-recursive
+install-data: install-data-recursive
+uninstall: uninstall-recursive
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-recursive
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-recursive
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-recursive
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic distclean-tags
+
+dvi: dvi-recursive
+
+dvi-am:
+
+html: html-recursive
+
+info: info-recursive
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-recursive
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-recursive
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-recursive
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-recursive
+
+pdf-am:
+
+ps: ps-recursive
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+uninstall-info: uninstall-info-recursive
+
+.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
+	clean clean-generic clean-recursive ctags ctags-recursive \
+	distclean distclean-generic distclean-recursive distclean-tags \
+	distdir dvi dvi-am html html-am info info-am install \
+	install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	installdirs-am maintainer-clean maintainer-clean-generic \
+	maintainer-clean-recursive mostlyclean mostlyclean-generic \
+	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
+	uninstall uninstall-am uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/utils/build/Makefile.in
diff -u /dev/null build_tree/bootLoader/utils/build/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/utils/build/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,329 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# Process this file with automake to produce Makefile.in -*- makefile -*-
+#
+# $Id: Makefile.am,v 1.2 2001/08/29 21:08:51 erikm Exp $
+# 
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+subdir = utils/build
+DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+SOURCES =
+DIST_SOURCES =
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = @CC@
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+CLEANFILES = *~
+EXTRA_DIST = \
+	README \
+	build_Makefile \
+	build_all
+
+all: all-am
+
+.SUFFIXES:
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  utils/build/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  utils/build/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+uninstall-info-am:
+tags: TAGS
+TAGS:
+
+ctags: CTAGS
+CTAGS:
+
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile
+installdirs:
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -f Makefile
+distclean-am: clean-am distclean-generic
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am:
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-info-am
+
+.PHONY: all all-am check check-am clean clean-generic distclean \
+	distclean-generic distdir dvi dvi-am html html-am info info-am \
+	install install-am install-data install-data-am install-exec \
+	install-exec-am install-info install-info-am install-man \
+	install-strip installcheck installcheck-am installdirs \
+	maintainer-clean maintainer-clean-generic mostlyclean \
+	mostlyclean-generic pdf pdf-am ps ps-am uninstall uninstall-am \
+	uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/utils/mkparamblock/Makefile.in
diff -u /dev/null build_tree/bootLoader/utils/mkparamblock/Makefile.in:1.2
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/utils/mkparamblock/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,469 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+#
+# $Id: Makefile.am,v 1.6 2003/09/01 20:13:10 russd Exp $
+#
+
+SOURCES = $(mkparamblock_SOURCES)
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+VPATH = @srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+bin_PROGRAMS = mkparamblock$(EXEEXT)
+subdir = utils/mkparamblock
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+am__installdirs = "$(DESTDIR)$(bindir)"
+binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
+PROGRAMS = $(bin_PROGRAMS)
+am_mkparamblock_OBJECTS = mkparamblock-mkparamblock.$(OBJEXT)
+mkparamblock_OBJECTS = $(am_mkparamblock_OBJECTS)
+mkparamblock_LDADD = $(LDADD)
+depcomp = $(SHELL) $(top_srcdir)/tools/depcomp
+am__depfiles_maybe = depfiles
+@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/mkparamblock-mkparamblock.Po
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
+SOURCES = $(mkparamblock_SOURCES)
+DIST_SOURCES = $(mkparamblock_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = gcc
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+DEFAULT_INCLUDES = 
+mkparamblock_SOURCES = \
+	mkparamblock.c
+
+mkparamblock_CFLAGS = -g -O2 -Wall \
+	-DHAVE_CONFIG_H -DUSER_SPACE_TEST -DUSE_BLOB_TOGETHER_WITH_LIBC \
+	-I${top_builddir}/include \
+	-I${top_srcdir}/include \
+	-I@LINUX_INCLUDE@
+
+mkparamblock_LDFLAGS = 
+CLEANFILES = ${srcdir}/*~
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  utils/mkparamblock/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  utils/mkparamblock/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+install-binPROGRAMS: $(bin_PROGRAMS)
+	@$(NORMAL_INSTALL)
+	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
+	@list='$(bin_PROGRAMS)'; for p in $$list; do \
+	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
+	  if test -f $$p \
+	  ; then \
+	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
+	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
+	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
+	  else :; fi; \
+	done
+
+uninstall-binPROGRAMS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(bin_PROGRAMS)'; for p in $$list; do \
+	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
+	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
+	done
+
+clean-binPROGRAMS:
+	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
+mkparamblock$(EXEEXT): $(mkparamblock_OBJECTS) $(mkparamblock_DEPENDENCIES) 
+	@rm -f mkparamblock$(EXEEXT)
+	$(LINK) $(mkparamblock_LDFLAGS) $(mkparamblock_OBJECTS) $(mkparamblock_LDADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mkparamblock-mkparamblock.Po@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+
+mkparamblock-mkparamblock.o: mkparamblock.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mkparamblock_CFLAGS) $(CFLAGS) -MT mkparamblock-mkparamblock.o -MD -MP -MF "$(DEPDIR)/mkparamblock-mkparamblock.Tpo" -c -o mkparamblock-mkparamblock.o `test -f 'mkparamblock.c' || echo '$(srcdir)/'`mkparamblock.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mkparamblock-mkparamblock.Tpo" "$(DEPDIR)/mkparamblock-mkparamblock.Po"; else rm -f "$(DEPDIR)/mkparamblock-mkparamblock.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mkparamblock.c' object='mkparamblock-mkparamblock.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mkparamblock-mkparamblock.Po' tmpdepfile='$(DEPDIR)/mkparamblock-mkparamblock.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mkparamblock_CFLAGS) $(CFLAGS) -c -o mkparamblock-mkparamblock.o `test -f 'mkparamblock.c' || echo '$(srcdir)/'`mkparamblock.c
+
+mkparamblock-mkparamblock.obj: mkparamblock.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mkparamblock_CFLAGS) $(CFLAGS) -MT mkparamblock-mkparamblock.obj -MD -MP -MF "$(DEPDIR)/mkparamblock-mkparamblock.Tpo" -c -o mkparamblock-mkparamblock.obj `if test -f 'mkparamblock.c'; then $(CYGPATH_W) 'mkparamblock.c'; else $(CYGPATH_W) '$(srcdir)/mkparamblock.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/mkparamblock-mkparamblock.Tpo" "$(DEPDIR)/mkparamblock-mkparamblock.Po"; else rm -f "$(DEPDIR)/mkparamblock-mkparamblock.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='mkparamblock.c' object='mkparamblock-mkparamblock.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/mkparamblock-mkparamblock.Po' tmpdepfile='$(DEPDIR)/mkparamblock-mkparamblock.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mkparamblock_CFLAGS) $(CFLAGS) -c -o mkparamblock-mkparamblock.obj `if test -f 'mkparamblock.c'; then $(CYGPATH_W) 'mkparamblock.c'; else $(CYGPATH_W) '$(srcdir)/mkparamblock.c'; fi`
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(PROGRAMS)
+installdirs:
+	for dir in "$(DESTDIR)$(bindir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-binPROGRAMS clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am: install-binPROGRAMS
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-binPROGRAMS uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
+	clean-generic ctags distclean distclean-compile \
+	distclean-generic distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-binPROGRAMS \
+	install-data install-data-am install-exec install-exec-am \
+	install-info install-info-am install-man install-strip \
+	installcheck installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
+	uninstall-am uninstall-binPROGRAMS uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
Index: build_tree/bootLoader/utils/mkparamblock/mkparamblock.c
diff -u build_tree/bootLoader/utils/mkparamblock/mkparamblock.c:1.1.1.2 build_tree/bootLoader/utils/mkparamblock/mkparamblock.c:1.1.1.3
--- build_tree/bootLoader/utils/mkparamblock/mkparamblock.c:1.1.1.2	Fri Nov  9 09:44:05 2007
+++ build_tree/bootLoader/utils/mkparamblock/mkparamblock.c	Fri Nov  9 10:37:08 2007
@@ -180,7 +180,7 @@
 	tag.hdr.conf = 0;
 
 	/* FIXME: default is not always 9600 */
-	tag.u.core.terminal = baud_9600;
+	tag.u.core.terminal = baud_115200;
 	
 	fwrite(&tag, ptag_size(ptag_core), 4, fp);
 }
Index: build_tree/bootLoader/utils/test/Makefile.in
diff -u /dev/null build_tree/bootLoader/utils/test/Makefile.in:1.1
--- /dev/null	Tue Jan  8 14:21:48 2008
+++ build_tree/bootLoader/utils/test/Makefile.in	Mon Nov 12 16:25:56 2007
@@ -0,0 +1,755 @@
+# Makefile.in generated by automake 1.8.3 from Makefile.am.
+# @configure_input@
+
+# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
+# 2003, 2004  Free Software Foundation, Inc.
+# This Makefile.in is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+@SET_MAKE@
+
+# -*- makefile -*-
+#
+# $Id: Makefile.am,v 1.10 2003/09/01 20:13:10 russd Exp $
+#
+# This is a special Makefile because it plays with a CC and CFLAGS
+# to compile with the native C compiler (which we assume is gcc).
+# The manipulation of the VPATH is needed to be able to compile
+# sources from other directories. -- Erik
+#
+
+SOURCES = $(load_kernel_test_SOURCES)
+
+srcdir = @srcdir@
+top_srcdir = @top_srcdir@
+pkgdatadir = $(datadir)/@PACKAGE@
+pkglibdir = $(libdir)/@PACKAGE@
+pkgincludedir = $(includedir)/@PACKAGE@
+top_builddir = ../..
+am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
+INSTALL = @INSTALL@
+install_sh_DATA = $(install_sh) -c -m 644
+install_sh_PROGRAM = $(install_sh) -c
+install_sh_SCRIPT = $(install_sh) -c
+INSTALL_HEADER = $(INSTALL_DATA)
+transform = $(program_transform_name)
+NORMAL_INSTALL = :
+PRE_INSTALL = :
+POST_INSTALL = :
+NORMAL_UNINSTALL = :
+PRE_UNINSTALL = :
+POST_UNINSTALL = :
+host_triplet = @host@
+bin_PROGRAMS = load_kernel_test$(EXEEXT)
+subdir = utils/test
+DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
+ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
+am__aclocal_m4_deps = $(top_srcdir)/configure.in
+am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
+	$(ACLOCAL_M4)
+mkinstalldirs = $(mkdir_p)
+CONFIG_HEADER = $(top_builddir)/include/blob/config.h
+CONFIG_CLEAN_FILES =
+am__installdirs = "$(DESTDIR)$(bindir)"
+binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
+PROGRAMS = $(bin_PROGRAMS)
+am_load_kernel_test_OBJECTS =  \
+	load_kernel_test-load_kernel_test.$(OBJEXT) \
+	load_kernel_test-load_kernel.$(OBJEXT) \
+	load_kernel_test-md5.$(OBJEXT) \
+	load_kernel_test-md5support.$(OBJEXT) \
+	load_kernel_test-mini_inflate.$(OBJEXT) \
+	load_kernel_test-error.$(OBJEXT) \
+	load_kernel_test-flash.$(OBJEXT) \
+	load_kernel_test-partition.$(OBJEXT) \
+	load_kernel_test-util.$(OBJEXT) \
+	load_kernel_test-jffs2.$(OBJEXT) \
+	load_kernel_test-compr_rtime.$(OBJEXT) \
+	load_kernel_test-compr_rubin.$(OBJEXT) \
+	load_kernel_test-cramfs.$(OBJEXT) \
+	load_kernel_test-zImage.$(OBJEXT) \
+	load_kernel_test-crc32.$(OBJEXT)
+load_kernel_test_OBJECTS = $(am_load_kernel_test_OBJECTS)
+load_kernel_test_LDADD = $(LDADD)
+depcomp = $(SHELL) $(top_srcdir)/tools/depcomp
+am__depfiles_maybe = depfiles
+@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/load_kernel_test-compr_rtime.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-compr_rubin.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-cramfs.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-crc32.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-error.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-flash.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-jffs2.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-load_kernel.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-load_kernel_test.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-md5.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-md5support.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-mini_inflate.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-partition.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-util.Po \
+@AMDEP_TRUE@	./$(DEPDIR)/load_kernel_test-zImage.Po
+COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
+	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
+CCLD = $(CC)
+LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
+SOURCES = $(load_kernel_test_SOURCES)
+DIST_SOURCES = $(load_kernel_test_SOURCES)
+ETAGS = etags
+CTAGS = ctags
+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
+VPATH = $(top_srcdir)/utils/test:$(top_srcdir)/src/blob:$(top_srcdir)/src/lib
+ACLOCAL = @ACLOCAL@
+ALL_COMMANDS = @ALL_COMMANDS@
+AMDEP_FALSE = @AMDEP_FALSE@
+AMDEP_TRUE = @AMDEP_TRUE@
+AMTAR = @AMTAR@
+AR = @AR@
+AUTOCONF = @AUTOCONF@
+AUTOHEADER = @AUTOHEADER@
+AUTOMAKE = @AUTOMAKE@
+AWK = @AWK@
+BLOB_CF_OBJS = @BLOB_CF_OBJS@
+BLOB_CHKMEM_OBJS = @BLOB_CHKMEM_OBJS@
+BLOB_CLOCK_OBJS = @BLOB_CLOCK_OBJS@
+BLOB_COMMANDS = @BLOB_COMMANDS@
+BLOB_CRAMFS_OBJS = @BLOB_CRAMFS_OBJS@
+BLOB_FLASH_OBJS = @BLOB_FLASH_OBJS@
+BLOB_GIO_OBJS = @BLOB_GIO_OBJS@
+BLOB_IDE_OBJS = @BLOB_IDE_OBJS@
+BLOB_JFFS2_OBJS = @BLOB_JFFS2_OBJS@
+BLOB_LED_DRIVER_OBJS = @BLOB_LED_DRIVER_OBJS@
+BLOB_LED_STARTCODE = @BLOB_LED_STARTCODE@
+BLOB_MEMSETUP_OBJS = @BLOB_MEMSETUP_OBJS@
+BLOB_NETWORK_DRIVER_OBJS = @BLOB_NETWORK_DRIVER_OBJS@
+BLOB_NETWORK_OBJS = @BLOB_NETWORK_OBJS@
+BLOB_PCMCIA_OBJS = @BLOB_PCMCIA_OBJS@
+BLOB_PLATFORM_OBJS = @BLOB_PLATFORM_OBJS@
+BLOB_REBOOT_DRIVER_OBJS = @BLOB_REBOOT_DRIVER_OBJS@
+BLOB_SERIAL_DRIVER_OBJS = @BLOB_SERIAL_DRIVER_OBJS@
+BLOB_STARTCODE_OBJS = @BLOB_STARTCODE_OBJS@
+BLOB_TARGET = @BLOB_TARGET@
+BLOB_TIMER_DRIVER_OBJS = @BLOB_TIMER_DRIVER_OBJS@
+BLOB_USBSERIAL_OBJS = @BLOB_USBSERIAL_OBJS@
+BLOB_UUCODEC_OBJS = @BLOB_UUCODEC_OBJS@
+BLOB_XMODEM_OBJS = @BLOB_XMODEM_OBJS@
+BLOB_ZIMAGE_OBJS = @BLOB_ZIMAGE_OBJS@
+CC = gcc
+CCAS = @CCAS@
+CCASFLAGS = @CCASFLAGS@
+CCDEPMODE = @CCDEPMODE@
+CFLAGS = @CFLAGS@
+CPPFLAGS = @CPPFLAGS@
+CYGPATH_W = @CYGPATH_W@
+DEFS = @DEFS@
+DEPDIR = @DEPDIR@
+DIAG_LCD_OBJS = @DIAG_LCD_OBJS@
+DIAG_PLATFORM_OBJS = @DIAG_PLATFORM_OBJS@
+ECHO_C = @ECHO_C@
+ECHO_N = @ECHO_N@
+ECHO_T = @ECHO_T@
+EXEEXT = @EXEEXT@
+INSTALL_DATA = @INSTALL_DATA@
+INSTALL_PROGRAM = @INSTALL_PROGRAM@
+INSTALL_SCRIPT = @INSTALL_SCRIPT@
+INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
+LD = @LD@
+LDFLAGS = @LDFLAGS@
+LIBOBJS = @LIBOBJS@
+LIBS = @LIBS@
+LINUX_INCLUDE = @LINUX_INCLUDE@
+LN_S = @LN_S@
+LTLIBOBJS = @LTLIBOBJS@
+MAINT = @MAINT@
+MAINTAINER_MODE_FALSE = @MAINTAINER_MODE_FALSE@
+MAINTAINER_MODE_TRUE = @MAINTAINER_MODE_TRUE@
+MAKEINFO = @MAKEINFO@
+OBJCOPY = @OBJCOPY@
+OBJEXT = @OBJEXT@
+OCFLAGS = @OCFLAGS@
+PACKAGE = @PACKAGE@
+PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
+PACKAGE_NAME = @PACKAGE_NAME@
+PACKAGE_STRING = @PACKAGE_STRING@
+PACKAGE_TARNAME = @PACKAGE_TARNAME@
+PACKAGE_VERSION = @PACKAGE_VERSION@
+PATH_SEPARATOR = @PATH_SEPARATOR@
+RANLIB = @RANLIB@
+SET_MAKE = @SET_MAKE@
+SHELL = @SHELL@
+STRIP = @STRIP@
+VERSION = @VERSION@
+ac_ct_CC = @ac_ct_CC@
+ac_ct_RANLIB = @ac_ct_RANLIB@
+ac_ct_STRIP = @ac_ct_STRIP@
+am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
+am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
+am__include = @am__include@
+am__leading_dot = @am__leading_dot@
+am__quote = @am__quote@
+bindir = @bindir@
+build = @build@
+build_alias = @build_alias@
+build_cpu = @build_cpu@
+build_os = @build_os@
+build_vendor = @build_vendor@
+datadir = @datadir@
+exec_prefix = @exec_prefix@
+host = @host@
+host_alias = @host_alias@
+host_cpu = @host_cpu@
+host_os = @host_os@
+host_vendor = @host_vendor@
+includedir = @includedir@
+infodir = @infodir@
+install_sh = @install_sh@
+libdir = @libdir@
+libexecdir = @libexecdir@
+localstatedir = @localstatedir@
+mandir = @mandir@
+mkdir_p = @mkdir_p@
+oldincludedir = @oldincludedir@
+prefix = @prefix@
+program_transform_name = @program_transform_name@
+sbindir = @sbindir@
+sharedstatedir = @sharedstatedir@
+sysconfdir = @sysconfdir@
+target_alias = @target_alias@
+DEFAULT_INCLUDES = 
+load_kernel_test_SOURCES = \
+	load_kernel_test.c \
+	${top_srcdir}/src/blob/load_kernel.c \
+	${top_srcdir}/src/lib/md5.c \
+	${top_srcdir}/src/lib/md5support.c \
+	${top_srcdir}/src/lib/mini_inflate.c \
+	${top_srcdir}/src/lib/error.c \
+	${top_srcdir}/src/blob/flash.c \
+	${top_srcdir}/src/blob/partition.c \
+	${top_srcdir}/src/lib/util.c \
+	${top_srcdir}/src/blob/jffs2.c \
+	${top_srcdir}/src/blob/compr_rtime.c \
+	${top_srcdir}/src/blob/compr_rubin.c \
+	${top_srcdir}/src/blob/cramfs.c \
+	${top_srcdir}/src/blob/zImage.c \
+	${top_srcdir}/src/lib/crc32.c
+
+load_kernel_test_CFLAGS = -g -O2 -Wall \
+	-DHAVE_CONFIG_H -DUSER_SPACE_TEST -DUSE_BLOB_TOGETHER_WITH_LIBC \
+	-I${top_builddir}/include \
+	-I${top_srcdir}/include \
+	-I@LINUX_INCLUDE@
+
+load_kernel_test_LDFLAGS = 
+CLEANFILES = ${srcdir}/*~
+all: all-am
+
+.SUFFIXES:
+.SUFFIXES: .c .o .obj
+$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
+	@for dep in $?; do \
+	  case '$(am__configure_deps)' in \
+	    *$$dep*) \
+	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
+		&& exit 0; \
+	      exit 1;; \
+	  esac; \
+	done; \
+	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  utils/test/Makefile'; \
+	cd $(top_srcdir) && \
+	  $(AUTOMAKE) --gnu  utils/test/Makefile
+.PRECIOUS: Makefile
+Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
+	@case '$?' in \
+	  *config.status*) \
+	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
+	  *) \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	esac;
+
+$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+
+$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
+	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
+install-binPROGRAMS: $(bin_PROGRAMS)
+	@$(NORMAL_INSTALL)
+	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
+	@list='$(bin_PROGRAMS)'; for p in $$list; do \
+	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
+	  if test -f $$p \
+	  ; then \
+	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
+	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
+	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
+	  else :; fi; \
+	done
+
+uninstall-binPROGRAMS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(bin_PROGRAMS)'; for p in $$list; do \
+	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
+	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
+	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
+	done
+
+clean-binPROGRAMS:
+	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
+load_kernel_test$(EXEEXT): $(load_kernel_test_OBJECTS) $(load_kernel_test_DEPENDENCIES) 
+	@rm -f load_kernel_test$(EXEEXT)
+	$(LINK) $(load_kernel_test_LDFLAGS) $(load_kernel_test_OBJECTS) $(load_kernel_test_LDADD) $(LIBS)
+
+mostlyclean-compile:
+	-rm -f *.$(OBJEXT)
+
+distclean-compile:
+	-rm -f *.tab.c
+
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-compr_rtime.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-compr_rubin.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-cramfs.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-crc32.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-error.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-flash.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-jffs2.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-load_kernel.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-load_kernel_test.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-md5.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-md5support.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-mini_inflate.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-partition.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-util.Po@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/load_kernel_test-zImage.Po@am__quote@
+
+.c.o:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c $<
+
+.c.obj:
+@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`
+
+load_kernel_test-load_kernel_test.o: load_kernel_test.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-load_kernel_test.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-load_kernel_test.Tpo" -c -o load_kernel_test-load_kernel_test.o `test -f 'load_kernel_test.c' || echo '$(srcdir)/'`load_kernel_test.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-load_kernel_test.Tpo" "$(DEPDIR)/load_kernel_test-load_kernel_test.Po"; else rm -f "$(DEPDIR)/load_kernel_test-load_kernel_test.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='load_kernel_test.c' object='load_kernel_test-load_kernel_test.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-load_kernel_test.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-load_kernel_test.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-load_kernel_test.o `test -f 'load_kernel_test.c' || echo '$(srcdir)/'`load_kernel_test.c
+
+load_kernel_test-load_kernel_test.obj: load_kernel_test.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-load_kernel_test.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-load_kernel_test.Tpo" -c -o load_kernel_test-load_kernel_test.obj `if test -f 'load_kernel_test.c'; then $(CYGPATH_W) 'load_kernel_test.c'; else $(CYGPATH_W) '$(srcdir)/load_kernel_test.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-load_kernel_test.Tpo" "$(DEPDIR)/load_kernel_test-load_kernel_test.Po"; else rm -f "$(DEPDIR)/load_kernel_test-load_kernel_test.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='load_kernel_test.c' object='load_kernel_test-load_kernel_test.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-load_kernel_test.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-load_kernel_test.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-load_kernel_test.obj `if test -f 'load_kernel_test.c'; then $(CYGPATH_W) 'load_kernel_test.c'; else $(CYGPATH_W) '$(srcdir)/load_kernel_test.c'; fi`
+
+load_kernel_test-load_kernel.o: ${top_srcdir}/src/blob/load_kernel.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-load_kernel.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-load_kernel.Tpo" -c -o load_kernel_test-load_kernel.o `test -f '${top_srcdir}/src/blob/load_kernel.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/load_kernel.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-load_kernel.Tpo" "$(DEPDIR)/load_kernel_test-load_kernel.Po"; else rm -f "$(DEPDIR)/load_kernel_test-load_kernel.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/load_kernel.c' object='load_kernel_test-load_kernel.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-load_kernel.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-load_kernel.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-load_kernel.o `test -f '${top_srcdir}/src/blob/load_kernel.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/load_kernel.c
+
+load_kernel_test-load_kernel.obj: ${top_srcdir}/src/blob/load_kernel.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-load_kernel.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-load_kernel.Tpo" -c -o load_kernel_test-load_kernel.obj `if test -f '${top_srcdir}/src/blob/load_kernel.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/load_kernel.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/load_kernel.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-load_kernel.Tpo" "$(DEPDIR)/load_kernel_test-load_kernel.Po"; else rm -f "$(DEPDIR)/load_kernel_test-load_kernel.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/load_kernel.c' object='load_kernel_test-load_kernel.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-load_kernel.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-load_kernel.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-load_kernel.obj `if test -f '${top_srcdir}/src/blob/load_kernel.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/load_kernel.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/load_kernel.c'; fi`
+
+load_kernel_test-md5.o: ${top_srcdir}/src/lib/md5.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-md5.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-md5.Tpo" -c -o load_kernel_test-md5.o `test -f '${top_srcdir}/src/lib/md5.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/md5.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-md5.Tpo" "$(DEPDIR)/load_kernel_test-md5.Po"; else rm -f "$(DEPDIR)/load_kernel_test-md5.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/md5.c' object='load_kernel_test-md5.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-md5.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-md5.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-md5.o `test -f '${top_srcdir}/src/lib/md5.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/md5.c
+
+load_kernel_test-md5.obj: ${top_srcdir}/src/lib/md5.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-md5.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-md5.Tpo" -c -o load_kernel_test-md5.obj `if test -f '${top_srcdir}/src/lib/md5.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/md5.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/md5.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-md5.Tpo" "$(DEPDIR)/load_kernel_test-md5.Po"; else rm -f "$(DEPDIR)/load_kernel_test-md5.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/md5.c' object='load_kernel_test-md5.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-md5.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-md5.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-md5.obj `if test -f '${top_srcdir}/src/lib/md5.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/md5.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/md5.c'; fi`
+
+load_kernel_test-md5support.o: ${top_srcdir}/src/lib/md5support.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-md5support.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-md5support.Tpo" -c -o load_kernel_test-md5support.o `test -f '${top_srcdir}/src/lib/md5support.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/md5support.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-md5support.Tpo" "$(DEPDIR)/load_kernel_test-md5support.Po"; else rm -f "$(DEPDIR)/load_kernel_test-md5support.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/md5support.c' object='load_kernel_test-md5support.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-md5support.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-md5support.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-md5support.o `test -f '${top_srcdir}/src/lib/md5support.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/md5support.c
+
+load_kernel_test-md5support.obj: ${top_srcdir}/src/lib/md5support.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-md5support.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-md5support.Tpo" -c -o load_kernel_test-md5support.obj `if test -f '${top_srcdir}/src/lib/md5support.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/md5support.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/md5support.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-md5support.Tpo" "$(DEPDIR)/load_kernel_test-md5support.Po"; else rm -f "$(DEPDIR)/load_kernel_test-md5support.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/md5support.c' object='load_kernel_test-md5support.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-md5support.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-md5support.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-md5support.obj `if test -f '${top_srcdir}/src/lib/md5support.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/md5support.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/md5support.c'; fi`
+
+load_kernel_test-mini_inflate.o: ${top_srcdir}/src/lib/mini_inflate.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-mini_inflate.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-mini_inflate.Tpo" -c -o load_kernel_test-mini_inflate.o `test -f '${top_srcdir}/src/lib/mini_inflate.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/mini_inflate.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-mini_inflate.Tpo" "$(DEPDIR)/load_kernel_test-mini_inflate.Po"; else rm -f "$(DEPDIR)/load_kernel_test-mini_inflate.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/mini_inflate.c' object='load_kernel_test-mini_inflate.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-mini_inflate.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-mini_inflate.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-mini_inflate.o `test -f '${top_srcdir}/src/lib/mini_inflate.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/mini_inflate.c
+
+load_kernel_test-mini_inflate.obj: ${top_srcdir}/src/lib/mini_inflate.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-mini_inflate.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-mini_inflate.Tpo" -c -o load_kernel_test-mini_inflate.obj `if test -f '${top_srcdir}/src/lib/mini_inflate.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/mini_inflate.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/mini_inflate.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-mini_inflate.Tpo" "$(DEPDIR)/load_kernel_test-mini_inflate.Po"; else rm -f "$(DEPDIR)/load_kernel_test-mini_inflate.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/mini_inflate.c' object='load_kernel_test-mini_inflate.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-mini_inflate.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-mini_inflate.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-mini_inflate.obj `if test -f '${top_srcdir}/src/lib/mini_inflate.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/mini_inflate.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/mini_inflate.c'; fi`
+
+load_kernel_test-error.o: ${top_srcdir}/src/lib/error.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-error.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-error.Tpo" -c -o load_kernel_test-error.o `test -f '${top_srcdir}/src/lib/error.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/error.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-error.Tpo" "$(DEPDIR)/load_kernel_test-error.Po"; else rm -f "$(DEPDIR)/load_kernel_test-error.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/error.c' object='load_kernel_test-error.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-error.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-error.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-error.o `test -f '${top_srcdir}/src/lib/error.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/error.c
+
+load_kernel_test-error.obj: ${top_srcdir}/src/lib/error.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-error.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-error.Tpo" -c -o load_kernel_test-error.obj `if test -f '${top_srcdir}/src/lib/error.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/error.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/error.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-error.Tpo" "$(DEPDIR)/load_kernel_test-error.Po"; else rm -f "$(DEPDIR)/load_kernel_test-error.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/error.c' object='load_kernel_test-error.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-error.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-error.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-error.obj `if test -f '${top_srcdir}/src/lib/error.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/error.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/error.c'; fi`
+
+load_kernel_test-flash.o: ${top_srcdir}/src/blob/flash.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-flash.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-flash.Tpo" -c -o load_kernel_test-flash.o `test -f '${top_srcdir}/src/blob/flash.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/flash.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-flash.Tpo" "$(DEPDIR)/load_kernel_test-flash.Po"; else rm -f "$(DEPDIR)/load_kernel_test-flash.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/flash.c' object='load_kernel_test-flash.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-flash.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-flash.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-flash.o `test -f '${top_srcdir}/src/blob/flash.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/flash.c
+
+load_kernel_test-flash.obj: ${top_srcdir}/src/blob/flash.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-flash.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-flash.Tpo" -c -o load_kernel_test-flash.obj `if test -f '${top_srcdir}/src/blob/flash.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/flash.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/flash.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-flash.Tpo" "$(DEPDIR)/load_kernel_test-flash.Po"; else rm -f "$(DEPDIR)/load_kernel_test-flash.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/flash.c' object='load_kernel_test-flash.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-flash.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-flash.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-flash.obj `if test -f '${top_srcdir}/src/blob/flash.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/flash.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/flash.c'; fi`
+
+load_kernel_test-partition.o: ${top_srcdir}/src/blob/partition.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-partition.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-partition.Tpo" -c -o load_kernel_test-partition.o `test -f '${top_srcdir}/src/blob/partition.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/partition.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-partition.Tpo" "$(DEPDIR)/load_kernel_test-partition.Po"; else rm -f "$(DEPDIR)/load_kernel_test-partition.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/partition.c' object='load_kernel_test-partition.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-partition.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-partition.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-partition.o `test -f '${top_srcdir}/src/blob/partition.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/partition.c
+
+load_kernel_test-partition.obj: ${top_srcdir}/src/blob/partition.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-partition.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-partition.Tpo" -c -o load_kernel_test-partition.obj `if test -f '${top_srcdir}/src/blob/partition.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/partition.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/partition.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-partition.Tpo" "$(DEPDIR)/load_kernel_test-partition.Po"; else rm -f "$(DEPDIR)/load_kernel_test-partition.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/partition.c' object='load_kernel_test-partition.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-partition.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-partition.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-partition.obj `if test -f '${top_srcdir}/src/blob/partition.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/partition.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/partition.c'; fi`
+
+load_kernel_test-util.o: ${top_srcdir}/src/lib/util.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-util.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-util.Tpo" -c -o load_kernel_test-util.o `test -f '${top_srcdir}/src/lib/util.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/util.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-util.Tpo" "$(DEPDIR)/load_kernel_test-util.Po"; else rm -f "$(DEPDIR)/load_kernel_test-util.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/util.c' object='load_kernel_test-util.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-util.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-util.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-util.o `test -f '${top_srcdir}/src/lib/util.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/util.c
+
+load_kernel_test-util.obj: ${top_srcdir}/src/lib/util.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-util.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-util.Tpo" -c -o load_kernel_test-util.obj `if test -f '${top_srcdir}/src/lib/util.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/util.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/util.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-util.Tpo" "$(DEPDIR)/load_kernel_test-util.Po"; else rm -f "$(DEPDIR)/load_kernel_test-util.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/util.c' object='load_kernel_test-util.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-util.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-util.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-util.obj `if test -f '${top_srcdir}/src/lib/util.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/util.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/util.c'; fi`
+
+load_kernel_test-jffs2.o: ${top_srcdir}/src/blob/jffs2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-jffs2.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-jffs2.Tpo" -c -o load_kernel_test-jffs2.o `test -f '${top_srcdir}/src/blob/jffs2.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/jffs2.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-jffs2.Tpo" "$(DEPDIR)/load_kernel_test-jffs2.Po"; else rm -f "$(DEPDIR)/load_kernel_test-jffs2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/jffs2.c' object='load_kernel_test-jffs2.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-jffs2.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-jffs2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-jffs2.o `test -f '${top_srcdir}/src/blob/jffs2.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/jffs2.c
+
+load_kernel_test-jffs2.obj: ${top_srcdir}/src/blob/jffs2.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-jffs2.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-jffs2.Tpo" -c -o load_kernel_test-jffs2.obj `if test -f '${top_srcdir}/src/blob/jffs2.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/jffs2.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/jffs2.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-jffs2.Tpo" "$(DEPDIR)/load_kernel_test-jffs2.Po"; else rm -f "$(DEPDIR)/load_kernel_test-jffs2.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/jffs2.c' object='load_kernel_test-jffs2.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-jffs2.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-jffs2.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-jffs2.obj `if test -f '${top_srcdir}/src/blob/jffs2.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/jffs2.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/jffs2.c'; fi`
+
+load_kernel_test-compr_rtime.o: ${top_srcdir}/src/blob/compr_rtime.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-compr_rtime.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-compr_rtime.Tpo" -c -o load_kernel_test-compr_rtime.o `test -f '${top_srcdir}/src/blob/compr_rtime.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/compr_rtime.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-compr_rtime.Tpo" "$(DEPDIR)/load_kernel_test-compr_rtime.Po"; else rm -f "$(DEPDIR)/load_kernel_test-compr_rtime.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/compr_rtime.c' object='load_kernel_test-compr_rtime.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-compr_rtime.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-compr_rtime.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-compr_rtime.o `test -f '${top_srcdir}/src/blob/compr_rtime.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/compr_rtime.c
+
+load_kernel_test-compr_rtime.obj: ${top_srcdir}/src/blob/compr_rtime.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-compr_rtime.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-compr_rtime.Tpo" -c -o load_kernel_test-compr_rtime.obj `if test -f '${top_srcdir}/src/blob/compr_rtime.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/compr_rtime.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/compr_rtime.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-compr_rtime.Tpo" "$(DEPDIR)/load_kernel_test-compr_rtime.Po"; else rm -f "$(DEPDIR)/load_kernel_test-compr_rtime.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/compr_rtime.c' object='load_kernel_test-compr_rtime.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-compr_rtime.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-compr_rtime.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-compr_rtime.obj `if test -f '${top_srcdir}/src/blob/compr_rtime.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/compr_rtime.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/compr_rtime.c'; fi`
+
+load_kernel_test-compr_rubin.o: ${top_srcdir}/src/blob/compr_rubin.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-compr_rubin.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-compr_rubin.Tpo" -c -o load_kernel_test-compr_rubin.o `test -f '${top_srcdir}/src/blob/compr_rubin.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/compr_rubin.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-compr_rubin.Tpo" "$(DEPDIR)/load_kernel_test-compr_rubin.Po"; else rm -f "$(DEPDIR)/load_kernel_test-compr_rubin.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/compr_rubin.c' object='load_kernel_test-compr_rubin.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-compr_rubin.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-compr_rubin.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-compr_rubin.o `test -f '${top_srcdir}/src/blob/compr_rubin.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/compr_rubin.c
+
+load_kernel_test-compr_rubin.obj: ${top_srcdir}/src/blob/compr_rubin.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-compr_rubin.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-compr_rubin.Tpo" -c -o load_kernel_test-compr_rubin.obj `if test -f '${top_srcdir}/src/blob/compr_rubin.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/compr_rubin.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/compr_rubin.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-compr_rubin.Tpo" "$(DEPDIR)/load_kernel_test-compr_rubin.Po"; else rm -f "$(DEPDIR)/load_kernel_test-compr_rubin.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/compr_rubin.c' object='load_kernel_test-compr_rubin.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-compr_rubin.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-compr_rubin.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-compr_rubin.obj `if test -f '${top_srcdir}/src/blob/compr_rubin.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/compr_rubin.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/compr_rubin.c'; fi`
+
+load_kernel_test-cramfs.o: ${top_srcdir}/src/blob/cramfs.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-cramfs.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-cramfs.Tpo" -c -o load_kernel_test-cramfs.o `test -f '${top_srcdir}/src/blob/cramfs.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/cramfs.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-cramfs.Tpo" "$(DEPDIR)/load_kernel_test-cramfs.Po"; else rm -f "$(DEPDIR)/load_kernel_test-cramfs.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/cramfs.c' object='load_kernel_test-cramfs.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-cramfs.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-cramfs.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-cramfs.o `test -f '${top_srcdir}/src/blob/cramfs.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/cramfs.c
+
+load_kernel_test-cramfs.obj: ${top_srcdir}/src/blob/cramfs.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-cramfs.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-cramfs.Tpo" -c -o load_kernel_test-cramfs.obj `if test -f '${top_srcdir}/src/blob/cramfs.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/cramfs.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/cramfs.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-cramfs.Tpo" "$(DEPDIR)/load_kernel_test-cramfs.Po"; else rm -f "$(DEPDIR)/load_kernel_test-cramfs.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/cramfs.c' object='load_kernel_test-cramfs.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-cramfs.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-cramfs.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-cramfs.obj `if test -f '${top_srcdir}/src/blob/cramfs.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/cramfs.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/cramfs.c'; fi`
+
+load_kernel_test-zImage.o: ${top_srcdir}/src/blob/zImage.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-zImage.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-zImage.Tpo" -c -o load_kernel_test-zImage.o `test -f '${top_srcdir}/src/blob/zImage.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/zImage.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-zImage.Tpo" "$(DEPDIR)/load_kernel_test-zImage.Po"; else rm -f "$(DEPDIR)/load_kernel_test-zImage.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/zImage.c' object='load_kernel_test-zImage.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-zImage.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-zImage.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-zImage.o `test -f '${top_srcdir}/src/blob/zImage.c' || echo '$(srcdir)/'`${top_srcdir}/src/blob/zImage.c
+
+load_kernel_test-zImage.obj: ${top_srcdir}/src/blob/zImage.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-zImage.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-zImage.Tpo" -c -o load_kernel_test-zImage.obj `if test -f '${top_srcdir}/src/blob/zImage.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/zImage.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/zImage.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-zImage.Tpo" "$(DEPDIR)/load_kernel_test-zImage.Po"; else rm -f "$(DEPDIR)/load_kernel_test-zImage.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/blob/zImage.c' object='load_kernel_test-zImage.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-zImage.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-zImage.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-zImage.obj `if test -f '${top_srcdir}/src/blob/zImage.c'; then $(CYGPATH_W) '${top_srcdir}/src/blob/zImage.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/blob/zImage.c'; fi`
+
+load_kernel_test-crc32.o: ${top_srcdir}/src/lib/crc32.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-crc32.o -MD -MP -MF "$(DEPDIR)/load_kernel_test-crc32.Tpo" -c -o load_kernel_test-crc32.o `test -f '${top_srcdir}/src/lib/crc32.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/crc32.c; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-crc32.Tpo" "$(DEPDIR)/load_kernel_test-crc32.Po"; else rm -f "$(DEPDIR)/load_kernel_test-crc32.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/crc32.c' object='load_kernel_test-crc32.o' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-crc32.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-crc32.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-crc32.o `test -f '${top_srcdir}/src/lib/crc32.c' || echo '$(srcdir)/'`${top_srcdir}/src/lib/crc32.c
+
+load_kernel_test-crc32.obj: ${top_srcdir}/src/lib/crc32.c
+@am__fastdepCC_TRUE@	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -MT load_kernel_test-crc32.obj -MD -MP -MF "$(DEPDIR)/load_kernel_test-crc32.Tpo" -c -o load_kernel_test-crc32.obj `if test -f '${top_srcdir}/src/lib/crc32.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/crc32.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/crc32.c'; fi`; \
+@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/load_kernel_test-crc32.Tpo" "$(DEPDIR)/load_kernel_test-crc32.Po"; else rm -f "$(DEPDIR)/load_kernel_test-crc32.Tpo"; exit 1; fi
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='${top_srcdir}/src/lib/crc32.c' object='load_kernel_test-crc32.obj' libtool=no @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	depfile='$(DEPDIR)/load_kernel_test-crc32.Po' tmpdepfile='$(DEPDIR)/load_kernel_test-crc32.TPo' @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(load_kernel_test_CFLAGS) $(CFLAGS) -c -o load_kernel_test-crc32.obj `if test -f '${top_srcdir}/src/lib/crc32.c'; then $(CYGPATH_W) '${top_srcdir}/src/lib/crc32.c'; else $(CYGPATH_W) '$(srcdir)/${top_srcdir}/src/lib/crc32.c'; fi`
+uninstall-info-am:
+
+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
+	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	mkid -fID $$unique
+tags: TAGS
+
+TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(ETAGS_ARGS)$$tags$$unique" \
+	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
+	     $$tags $$unique
+ctags: CTAGS
+CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
+		$(TAGS_FILES) $(LISP)
+	tags=; \
+	here=`pwd`; \
+	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
+	unique=`for i in $$list; do \
+	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
+	  done | \
+	  $(AWK) '    { files[$$0] = 1; } \
+	       END { for (i in files) print i; }'`; \
+	test -z "$(CTAGS_ARGS)$$tags$$unique" \
+	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
+	     $$tags $$unique
+
+GTAGS:
+	here=`$(am__cd) $(top_builddir) && pwd` \
+	  && cd $(top_srcdir) \
+	  && gtags -i $(GTAGS_ARGS) $$here
+
+distclean-tags:
+	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
+
+distdir: $(DISTFILES)
+	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
+	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
+	list='$(DISTFILES)'; for file in $$list; do \
+	  case $$file in \
+	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
+	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
+	  esac; \
+	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
+	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
+	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
+	    dir="/$$dir"; \
+	    $(mkdir_p) "$(distdir)$$dir"; \
+	  else \
+	    dir=''; \
+	  fi; \
+	  if test -d $$d/$$file; then \
+	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
+	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
+	    fi; \
+	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
+	  else \
+	    test -f $(distdir)/$$file \
+	    || cp -p $$d/$$file $(distdir)/$$file \
+	    || exit 1; \
+	  fi; \
+	done
+check-am: all-am
+check: check-am
+all-am: Makefile $(PROGRAMS)
+installdirs:
+	for dir in "$(DESTDIR)$(bindir)"; do \
+	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
+	done
+install: install-am
+install-exec: install-exec-am
+install-data: install-data-am
+uninstall: uninstall-am
+
+install-am: all-am
+	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
+
+installcheck: installcheck-am
+install-strip:
+	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
+	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
+	  `test -z '$(STRIP)' || \
+	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
+mostlyclean-generic:
+
+clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
+
+distclean-generic:
+	-rm -f $(CONFIG_CLEAN_FILES)
+
+maintainer-clean-generic:
+	@echo "This command is intended for maintainers to use"
+	@echo "it deletes files that may require special tools to rebuild."
+clean: clean-am
+
+clean-am: clean-binPROGRAMS clean-generic mostlyclean-am
+
+distclean: distclean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+distclean-am: clean-am distclean-compile distclean-generic \
+	distclean-tags
+
+dvi: dvi-am
+
+dvi-am:
+
+html: html-am
+
+info: info-am
+
+info-am:
+
+install-data-am:
+
+install-exec-am: install-binPROGRAMS
+
+install-info: install-info-am
+
+install-man:
+
+installcheck-am:
+
+maintainer-clean: maintainer-clean-am
+	-rm -rf ./$(DEPDIR)
+	-rm -f Makefile
+maintainer-clean-am: distclean-am maintainer-clean-generic
+
+mostlyclean: mostlyclean-am
+
+mostlyclean-am: mostlyclean-compile mostlyclean-generic
+
+pdf: pdf-am
+
+pdf-am:
+
+ps: ps-am
+
+ps-am:
+
+uninstall-am: uninstall-binPROGRAMS uninstall-info-am
+
+.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
+	clean-generic ctags distclean distclean-compile \
+	distclean-generic distclean-tags distdir dvi dvi-am html \
+	html-am info info-am install install-am install-binPROGRAMS \
+	install-data install-data-am install-exec install-exec-am \
+	install-info install-info-am install-man install-strip \
+	installcheck installcheck-am installdirs maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
+	uninstall-am uninstall-binPROGRAMS uninstall-info-am
+
+# Tell versions [3.59,3.63) of GNU make to not export all variables.
+# Otherwise a system limit (for SysV at least) may be exceeded.
+.NOEXPORT:
